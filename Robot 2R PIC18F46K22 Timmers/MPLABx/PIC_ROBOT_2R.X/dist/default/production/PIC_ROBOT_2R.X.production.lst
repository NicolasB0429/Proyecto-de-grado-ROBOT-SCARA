

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Fri Oct 07 14:45:36 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og9 
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=2
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=3
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=3
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1
    56                           	psect	text42,global,reloc=2,class=CODE,delta=1
    57                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    58                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    59                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    60                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    61                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    62  0000                     
    63                           ; Version 2.36
    64                           ; Generated 28/01/2022 GMT
    65                           ; 
    66                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    67                           ; All rights reserved.
    68                           ; 
    69                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    70                           ; 
    71                           ; Redistribution and use in source and binary forms, with or without modification, are
    72                           ; permitted provided that the following conditions are met:
    73                           ; 
    74                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    75                           ;        conditions and the following disclaimer.
    76                           ; 
    77                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    78                           ;        of conditions and the following disclaimer in the documentation and/or other
    79                           ;        materials provided with the distribution. Publication is not required when
    80                           ;        this file is used in an embedded application.
    81                           ; 
    82                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    83                           ;        software without specific prior written permission.
    84                           ; 
    85                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    86                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    87                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    88                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    89                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    90                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    91                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    92                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    93                           ; 
    94                           ; 
    95                           ; Code-generator required, PIC18F46K22 Definitions
    96                           ; 
    97                           ; SFR Addresses
    98  0000                     
    99                           	psect	idataCOMRAM
   100  0034D8                     __pidataCOMRAM:
   101                           	callstack 0
   102                           
   103                           ;initializer for _flag
   104  0034D8  0001               	dw	1
   105                           
   106                           	psect	smallconst
   107  001000                     __psmallconst:
   108                           	callstack 0
   109  001000  00                 	db	0
   110  001001                     __powers_:
   111                           	callstack 0
   112  001001  00                 	db	0
   113  001002  80                 	db	128
   114  001003  3F                 	db	63
   115  001004  00                 	db	0
   116  001005  20                 	db	32
   117  001006  41                 	db	65
   118  001007  00                 	db	0
   119  001008  C8                 	db	200
   120  001009  42                 	db	66
   121  00100A  00                 	db	0
   122  00100B  7A                 	db	122
   123  00100C  44                 	db	68
   124  00100D  40                 	db	64
   125  00100E  1C                 	db	28
   126  00100F  46                 	db	70
   127  001010  50                 	db	80
   128  001011  C3                 	db	195
   129  001012  47                 	db	71
   130  001013  24                 	db	36
   131  001014  74                 	db	116
   132  001015  49                 	db	73
   133  001016  97                 	db	151
   134  001017  18                 	db	24
   135  001018  4B                 	db	75
   136  001019  BC                 	db	188
   137  00101A  BE                 	db	190
   138  00101B  4C                 	db	76
   139  00101C  6B                 	db	107
   140  00101D  6E                 	db	110
   141  00101E  4E                 	db	78
   142  00101F  03                 	db	3
   143  001020  15                 	db	21
   144  001021  50                 	db	80
   145  001022  79                 	db	121
   146  001023  AD                 	db	173
   147  001024  60                 	db	96
   148  001025  F3                 	db	243
   149  001026  49                 	db	73
   150  001027  71                 	db	113
   151  001028                     __end_of__powers_:
   152                           	callstack 0
   153  001028                     __npowers_:
   154                           	callstack 0
   155  001028  00                 	db	0
   156  001029  80                 	db	128
   157  00102A  3F                 	db	63
   158  00102B  CD                 	db	205
   159  00102C  CC                 	db	204
   160  00102D  3D                 	db	61
   161  00102E  D7                 	db	215
   162  00102F  23                 	db	35
   163  001030  3C                 	db	60
   164  001031  12                 	db	18
   165  001032  83                 	db	131
   166  001033  3A                 	db	58
   167  001034  B7                 	db	183
   168  001035  D1                 	db	209
   169  001036  38                 	db	56
   170  001037  C6                 	db	198
   171  001038  27                 	db	39
   172  001039  37                 	db	55
   173  00103A  38                 	db	56
   174  00103B  86                 	db	134
   175  00103C  35                 	db	53
   176  00103D  C0                 	db	192
   177  00103E  D6                 	db	214
   178  00103F  33                 	db	51
   179  001040  CC                 	db	204
   180  001041  2B                 	db	43
   181  001042  32                 	db	50
   182  001043  70                 	db	112
   183  001044  89                 	db	137
   184  001045  30                 	db	48
   185  001046  E7                 	db	231
   186  001047  DB                 	db	219
   187  001048  2E                 	db	46
   188  001049  E5                 	db	229
   189  00104A  3C                 	db	60
   190  00104B  1E                 	db	30
   191  00104C  42                 	db	66
   192  00104D  A2                 	db	162
   193  00104E  0D                 	db	13
   194  00104F                     __end_of__npowers_:
   195                           	callstack 0
   196  00104F                     _dpowers:
   197                           	callstack 0
   198  00104F  0001               	dw	1
   199  001051  0000               	dw	0
   200  001053  000A               	dw	10
   201  001055  0000               	dw	0
   202  001057  0064               	dw	100
   203  001059  0000               	dw	0
   204  00105B  03E8               	dw	1000
   205  00105D  0000               	dw	0
   206  00105F  2710               	dw	10000
   207  001061  0000               	dw	0
   208  001063  86A0               	dw	34464
   209  001065  0001               	dw	1
   210  001067  4240               	dw	16960
   211  001069  000F               	dw	15
   212  00106B  9680               	dw	38528
   213  00106D  0098               	dw	152
   214  00106F  E100               	dw	57600
   215  001071  05F5               	dw	1525
   216  001073  CA00               	dw	51712
   217  001075  3B9A               	dw	15258
   218  001077                     __end_of_dpowers:
   219                           	callstack 0
   220  0000                     _LATDbits	set	3980
   221  0000                     _LATEbits	set	3981
   222  0000                     _TMR3ON	set	32136
   223  0000                     _TMR1ON	set	32360
   224  0000                     _LATD7	set	31847
   225  0000                     _LATD6	set	31846
   226  0000                     _TMR1IF	set	31984
   227  0000                     _TMR1IE	set	31976
   228  0000                     _PEIE	set	32662
   229  0000                     _ANSELC	set	3898
   230  0000                     _ANSELD	set	3899
   231  0000                     _OSCCON	set	4051
   232  0000                     _GIE	set	32663
   233  0000                     _LATD	set	3980
   234  0000                     _TRISD	set	3989
   235  0000                     _ANSELE	set	3900
   236  0000                     _RCSTA1	set	4011
   237  0000                     _SPBRG1	set	4015
   238  0000                     _TRISE	set	3990
   239  0000                     _RC1IE	set	31981
   240  0000                     _TRISCbits	set	3988
   241  0000                     _LATE	set	3981
   242  0000                     _T3CON	set	4017
   243  0000                     _T1CON	set	4045
   244  0000                     _RCREG1	set	4014
   245  0000                     _TXSTA1	set	4012
   246  0000                     _TMR3IE	set	32001
   247  0000                     _RC1IF	set	31989
   248  0000                     _TMR3IF	set	32009
   249  0000                     _TMR1	set	4046
   250  0000                     _TMR3	set	4018
   251  001077                     STR_1:
   252  001077  53                 	db	83	;'S'
   253  001078  65                 	db	101	;'e'
   254  001079  72                 	db	114	;'r'
   255  00107A  76                 	db	118	;'v'
   256  00107B  6F                 	db	111	;'o'
   257  00107C  20                 	db	32
   258  00107D  31                 	db	49	;'1'
   259  00107E  3A                 	db	58	;':'
   260  00107F  25                 	db	37
   261  001080  2E                 	db	46
   262  001081  32                 	db	50	;'2'
   263  001082  66                 	db	102	;'f'
   264  001083  00                 	db	0
   265  001084                     STR_2:
   266  001084  53                 	db	83	;'S'
   267  001085  65                 	db	101	;'e'
   268  001086  72                 	db	114	;'r'
   269  001087  76                 	db	118	;'v'
   270  001088  6F                 	db	111	;'o'
   271  001089  20                 	db	32
   272  00108A  32                 	db	50	;'2'
   273  00108B  3A                 	db	58	;':'
   274  00108C  25                 	db	37
   275  00108D  2E                 	db	46
   276  00108E  32                 	db	50	;'2'
   277  00108F  66                 	db	102	;'f'
   278  001090  00                 	db	0
   279  001091  00                 	db	0	; dummy byte at the end
   280  0000                     
   281                           ; #config settings
   282                           
   283                           	psect	cinit
   284  00332A                     __pcinit:
   285                           	callstack 0
   286  00332A                     start_initialization:
   287                           	callstack 0
   288  00332A                     __initialization:
   289                           	callstack 0
   290                           
   291                           ; Initialize objects allocated to COMRAM (2 bytes)
   292                           ; load TBLPTR registers with __pidataCOMRAM
   293  00332A  0ED8               	movlw	low __pidataCOMRAM
   294  00332C  6EF6               	movwf	tblptrl,c
   295  00332E  0E34               	movlw	high __pidataCOMRAM
   296  003330  6EF7               	movwf	tblptrh,c
   297  003332  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   298  003334  6EF8               	movwf	tblptru,c
   299  003336  0009               	tblrd		*+	;fetch initializer
   300  003338  CFF5 F05D          	movff	tablat,__pdataCOMRAM
   301  00333C  0009               	tblrd		*+	;fetch initializer
   302  00333E  CFF5 F05E          	movff	tablat,__pdataCOMRAM+1
   303                           
   304                           ; Clear objects allocated to BANK0 (54 bytes)
   305  003342  EE00  F0AB         	lfsr	0,__pbssBANK0
   306  003346  0E36               	movlw	54
   307  003348                     clear_0:
   308  003348  6AEE               	clrf	postinc0,c
   309  00334A  06E8               	decf	wreg,f,c
   310  00334C  E1FD               	bnz	clear_0
   311                           
   312                           ; Clear objects allocated to COMRAM (4 bytes)
   313  00334E  6A5C               	clrf	(__pbssCOMRAM+3)& (0+255),c
   314  003350  6A5B               	clrf	(__pbssCOMRAM+2)& (0+255),c
   315  003352  6A5A               	clrf	(__pbssCOMRAM+1)& (0+255),c
   316  003354  6A59               	clrf	__pbssCOMRAM& (0+255),c
   317  003356                     end_of_initialization:
   318                           	callstack 0
   319  003356                     __end_of__initialization:
   320                           	callstack 0
   321  003356  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   322  003358  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   323  00335A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   324  00335C  6EF8               	movwf	tblptru,c
   325  00335E  0100               	movlb	0
   326  003360  EF69  F01A         	goto	_main	;jump to C main() function
   327                           
   328                           	psect	bssCOMRAM
   329  000059                     __pbssCOMRAM:
   330                           	callstack 0
   331  000059                     _a:
   332                           	callstack 0
   333  000059                     	ds	3
   334  00005C                     _servo:
   335                           	callstack 0
   336  00005C                     	ds	1
   337                           
   338                           	psect	dataCOMRAM
   339  00005D                     __pdataCOMRAM:
   340                           	callstack 0
   341  00005D                     _flag:
   342                           	callstack 0
   343  00005D                     	ds	2
   344                           
   345                           	psect	bssBANK0
   346  0000AB                     __pbssBANK0:
   347                           	callstack 0
   348  0000AB                     _c:
   349                           	callstack 0
   350  0000AB                     	ds	3
   351  0000AE                     _b:
   352                           	callstack 0
   353  0000AE                     	ds	3
   354  0000B1                     _time_low:
   355                           	callstack 0
   356  0000B1                     	ds	3
   357  0000B4                     _time_high:
   358                           	callstack 0
   359  0000B4                     	ds	3
   360  0000B7                     _degrees2:
   361                           	callstack 0
   362  0000B7                     	ds	3
   363  0000BA                     _degrees1:
   364                           	callstack 0
   365  0000BA                     	ds	3
   366  0000BD                     _confir1:
   367                           	callstack 0
   368  0000BD                     	ds	2
   369  0000BF                     _confir:
   370                           	callstack 0
   371  0000BF                     	ds	2
   372  0000C1                     _incremento:
   373                           	callstack 0
   374  0000C1                     	ds	2
   375  0000C3                     _i:
   376                           	callstack 0
   377  0000C3                     	ds	2
   378  0000C5                     _tl2:
   379                           	callstack 0
   380  0000C5                     	ds	2
   381  0000C7                     _th2:
   382                           	callstack 0
   383  0000C7                     	ds	2
   384  0000C9                     _tl1:
   385                           	callstack 0
   386  0000C9                     	ds	2
   387  0000CB                     _th1:
   388                           	callstack 0
   389  0000CB                     	ds	2
   390  0000CD                     _text:
   391                           	callstack 0
   392  0000CD                     	ds	20
   393                           
   394                           	psect	cstackBANK1
   395  000100                     __pcstackBANK1:
   396                           	callstack 0
   397  000100                     ??___fttol:
   398                           
   399                           ; 1 bytes @ 0x0
   400  000100                     	ds	5
   401  000105                     ___fttol@sign1:
   402                           	callstack 0
   403                           
   404                           ; 1 bytes @ 0x5
   405  000105                     	ds	1
   406  000106                     ___fttol@lval:
   407                           	callstack 0
   408                           
   409                           ; 4 bytes @ 0x6
   410  000106                     	ds	4
   411  00010A                     ___fttol@exp1:
   412                           	callstack 0
   413                           
   414                           ; 1 bytes @ 0xA
   415  00010A                     	ds	1
   416  00010B                     deg2time1@degrees1:
   417                           	callstack 0
   418  00010B                     deg2time2@degrees2:
   419                           	callstack 0
   420                           
   421                           ; 3 bytes @ 0xB
   422  00010B                     	ds	3
   423  00010E                     _deg2time1$954:
   424                           	callstack 0
   425  00010E                     _deg2time2$955:
   426                           	callstack 0
   427                           
   428                           ; 3 bytes @ 0xE
   429  00010E                     	ds	3
   430                           
   431                           	psect	cstackBANK0
   432  000060                     __pcstackBANK0:
   433                           	callstack 0
   434  000060                     _sprintf$1036:
   435                           	callstack 0
   436                           
   437                           ; 3 bytes @ 0x0
   438  000060                     	ds	3
   439  000063                     sprintf@ap:
   440                           	callstack 0
   441                           
   442                           ; 1 bytes @ 0x3
   443  000063                     	ds	1
   444  000064                     sprintf@flag:
   445                           	callstack 0
   446                           
   447                           ; 2 bytes @ 0x4
   448  000064                     	ds	2
   449  000066                     sprintf@val:
   450                           	callstack 0
   451                           
   452                           ; 4 bytes @ 0x6
   453  000066                     	ds	4
   454  00006A                     sprintf@eexp:
   455                           	callstack 0
   456                           
   457                           ; 2 bytes @ 0xA
   458  00006A                     	ds	2
   459  00006C                     sprintf@tmpval:
   460                           	callstack 0
   461                           
   462                           ; 4 bytes @ 0xC
   463  00006C                     	ds	4
   464  000070                     sprintf@prec:
   465                           	callstack 0
   466                           
   467                           ; 2 bytes @ 0x10
   468  000070                     	ds	2
   469  000072                     sprintf@fval:
   470                           	callstack 0
   471                           
   472                           ; 3 bytes @ 0x12
   473  000072                     	ds	3
   474  000075                     sprintf@c:
   475                           	callstack 0
   476                           
   477                           ; 1 bytes @ 0x15
   478  000075                     	ds	1
   479  000076                     ??_TMR1_ISR:
   480                           
   481                           ; 1 bytes @ 0x16
   482  000076                     	ds	8
   483  00007E                     ??_LCD:
   484  00007E                     ?___ftpack:
   485                           	callstack 0
   486  00007E                     ___ftpack@arg:
   487                           	callstack 0
   488                           
   489                           ; 3 bytes @ 0x1E
   490  00007E                     	ds	1
   491  00007F                     LCD@data:
   492                           	callstack 0
   493                           
   494                           ; 1 bytes @ 0x1F
   495  00007F                     	ds	1
   496  000080                     SettingsLCD@word:
   497                           	callstack 0
   498                           
   499                           ; 1 bytes @ 0x20
   500  000080                     	ds	1
   501  000081                     ___ftpack@exp:
   502                           	callstack 0
   503                           
   504                           ; 1 bytes @ 0x21
   505  000081                     	ds	1
   506  000082                     ___ftpack@sign:
   507                           	callstack 0
   508                           
   509                           ; 1 bytes @ 0x22
   510  000082                     	ds	1
   511  000083                     ??___ftpack:
   512                           
   513                           ; 1 bytes @ 0x23
   514  000083                     	ds	3
   515  000086                     ?___ftdiv:
   516                           	callstack 0
   517  000086                     ?___ftmul:
   518                           	callstack 0
   519  000086                     ___ftdiv@f1:
   520                           	callstack 0
   521  000086                     ___ftmul@f1:
   522                           	callstack 0
   523                           
   524                           ; 3 bytes @ 0x26
   525  000086                     	ds	3
   526  000089                     ___ftdiv@f2:
   527                           	callstack 0
   528  000089                     ___ftmul@f2:
   529                           	callstack 0
   530                           
   531                           ; 3 bytes @ 0x29
   532  000089                     	ds	3
   533  00008C                     ??___ftdiv:
   534  00008C                     ??___ftmul:
   535                           
   536                           ; 1 bytes @ 0x2C
   537  00008C                     	ds	3
   538  00008F                     ___ftdiv@cntr:
   539                           	callstack 0
   540  00008F                     ___ftmul@exp:
   541                           	callstack 0
   542                           
   543                           ; 1 bytes @ 0x2F
   544  00008F                     	ds	1
   545  000090                     ___ftdiv@f3:
   546                           	callstack 0
   547  000090                     ___ftmul@f3_as_product:
   548                           	callstack 0
   549                           
   550                           ; 3 bytes @ 0x30
   551  000090                     	ds	3
   552  000093                     ___ftdiv@exp:
   553                           	callstack 0
   554  000093                     ___ftmul@cntr:
   555                           	callstack 0
   556                           
   557                           ; 1 bytes @ 0x33
   558  000093                     	ds	1
   559  000094                     ___ftdiv@sign:
   560                           	callstack 0
   561  000094                     ___ftmul@sign:
   562                           	callstack 0
   563                           
   564                           ; 1 bytes @ 0x34
   565  000094                     	ds	1
   566  000095                     ?___ftadd:
   567                           	callstack 0
   568  000095                     ___ftadd@f1:
   569                           	callstack 0
   570                           
   571                           ; 3 bytes @ 0x35
   572  000095                     	ds	3
   573  000098                     ___ftadd@f2:
   574                           	callstack 0
   575                           
   576                           ; 3 bytes @ 0x38
   577  000098                     	ds	3
   578  00009B                     ??___ftadd:
   579                           
   580                           ; 1 bytes @ 0x3B
   581  00009B                     	ds	3
   582  00009E                     ___ftadd@sign:
   583                           	callstack 0
   584                           
   585                           ; 1 bytes @ 0x3E
   586  00009E                     	ds	1
   587  00009F                     ___ftadd@exp2:
   588                           	callstack 0
   589                           
   590                           ; 1 bytes @ 0x3F
   591  00009F                     	ds	1
   592  0000A0                     ___ftadd@exp1:
   593                           	callstack 0
   594                           
   595                           ; 1 bytes @ 0x40
   596  0000A0                     	ds	1
   597  0000A1                     ?___ftsub:
   598                           	callstack 0
   599  0000A1                     ___ftsub@f1:
   600                           	callstack 0
   601                           
   602                           ; 3 bytes @ 0x41
   603  0000A1                     	ds	3
   604  0000A4                     ___ftsub@f2:
   605                           	callstack 0
   606                           
   607                           ; 3 bytes @ 0x44
   608  0000A4                     	ds	3
   609  0000A7                     ?___fttol:
   610                           	callstack 0
   611  0000A7                     ___fttol@f1:
   612                           	callstack 0
   613                           
   614                           ; 3 bytes @ 0x47
   615  0000A7                     	ds	4
   616  0000AB                     
   617                           ; 1 bytes @ 0x4B
   618                           
   619                           	psect	cstackCOMRAM
   620  000001                     __pcstackCOMRAM:
   621                           	callstack 0
   622  000001                     ??_isdigit:
   623  000001                     ??i2_LCD:
   624  000001                     ?_strlen:
   625                           	callstack 0
   626  000001                     ?___wmul:
   627                           	callstack 0
   628  000001                     ?___awmod:
   629                           	callstack 0
   630  000001                     ?___ftneg:
   631                           	callstack 0
   632  000001                     ?i2___ftpack:
   633                           	callstack 0
   634  000001                     ?__tdiv_to_l_:
   635                           	callstack 0
   636  000001                     ?__div_to_l_:
   637                           	callstack 0
   638  000001                     ?___lldiv:
   639                           	callstack 0
   640  000001                     ?___llmod:
   641                           	callstack 0
   642  000001                     ___lbmod@divisor:
   643                           	callstack 0
   644  000001                     strlen@s:
   645                           	callstack 0
   646  000001                     ___wmul@multiplier:
   647                           	callstack 0
   648  000001                     ___awmod@dividend:
   649                           	callstack 0
   650  000001                     __div_to_l_@f1:
   651                           	callstack 0
   652  000001                     __tdiv_to_l_@f1:
   653                           	callstack 0
   654  000001                     ___ftge@ff1:
   655                           	callstack 0
   656  000001                     ___ftneg@f1:
   657                           	callstack 0
   658  000001                     i2___ftpack@arg:
   659                           	callstack 0
   660  000001                     ___lldiv@dividend:
   661                           	callstack 0
   662  000001                     ___llmod@dividend:
   663                           	callstack 0
   664                           
   665                           ; 4 bytes @ 0x0
   666  000001                     	ds	1
   667  000002                     ___lbmod@dividend:
   668                           	callstack 0
   669  000002                     _isdigit$767:
   670                           	callstack 0
   671  000002                     i2LCD@data:
   672                           	callstack 0
   673                           
   674                           ; 1 bytes @ 0x1
   675  000002                     	ds	1
   676  000003                     WriteLCD@word:
   677                           	callstack 0
   678  000003                     ___lbmod@counter:
   679                           	callstack 0
   680  000003                     isdigit@c:
   681                           	callstack 0
   682  000003                     strlen@cp:
   683                           	callstack 0
   684  000003                     i2SettingsLCD@word:
   685                           	callstack 0
   686  000003                     ___wmul@multiplicand:
   687                           	callstack 0
   688  000003                     ___awmod@divisor:
   689                           	callstack 0
   690                           
   691                           ; 2 bytes @ 0x2
   692  000003                     	ds	1
   693  000004                     ??_DataLCD:
   694  000004                     ___lbmod@rem:
   695                           	callstack 0
   696  000004                     i2___ftpack@exp:
   697                           	callstack 0
   698  000004                     __div_to_l_@f2:
   699                           	callstack 0
   700  000004                     __tdiv_to_l_@f2:
   701                           	callstack 0
   702  000004                     ___ftge@ff2:
   703                           	callstack 0
   704                           
   705                           ; 3 bytes @ 0x3
   706  000004                     	ds	1
   707  000005                     ___awmod@counter:
   708                           	callstack 0
   709  000005                     ___lbdiv@divisor:
   710                           	callstack 0
   711  000005                     i2___ftpack@sign:
   712                           	callstack 0
   713  000005                     ___wmul@product:
   714                           	callstack 0
   715  000005                     ___lldiv@divisor:
   716                           	callstack 0
   717  000005                     ___llmod@divisor:
   718                           	callstack 0
   719                           
   720                           ; 4 bytes @ 0x4
   721  000005                     	ds	1
   722  000006                     ??i2___ftpack:
   723  000006                     ___awmod@sign:
   724                           	callstack 0
   725  000006                     ___lbdiv@dividend:
   726                           	callstack 0
   727                           
   728                           ; 1 bytes @ 0x5
   729  000006                     	ds	1
   730  000007                     ??__tdiv_to_l_:
   731  000007                     ??___ftge:
   732  000007                     ?___awdiv:
   733                           	callstack 0
   734  000007                     ___lbdiv@counter:
   735                           	callstack 0
   736  000007                     ___awdiv@dividend:
   737                           	callstack 0
   738  000007                     __div_to_l_@quot:
   739                           	callstack 0
   740                           
   741                           ; 4 bytes @ 0x6
   742  000007                     	ds	1
   743  000008                     ___lbdiv@quotient:
   744                           	callstack 0
   745                           
   746                           ; 1 bytes @ 0x7
   747  000008                     	ds	1
   748  000009                     ?___awtoft:
   749                           	callstack 0
   750  000009                     ?___lltoft:
   751                           	callstack 0
   752  000009                     ?i2___ftdiv:
   753                           	callstack 0
   754  000009                     ___llmod@counter:
   755                           	callstack 0
   756  000009                     ___awdiv@divisor:
   757                           	callstack 0
   758  000009                     ___awtoft@c:
   759                           	callstack 0
   760  000009                     i2___ftdiv@f1:
   761                           	callstack 0
   762  000009                     ___lldiv@quotient:
   763                           	callstack 0
   764  000009                     ___lltoft@c:
   765                           	callstack 0
   766                           
   767                           ; 4 bytes @ 0x8
   768  000009                     	ds	1
   769  00000A                     __tdiv_to_l_@quot:
   770                           	callstack 0
   771                           
   772                           ; 4 bytes @ 0x9
   773  00000A                     	ds	1
   774  00000B                     ___awdiv@counter:
   775                           	callstack 0
   776  00000B                     __div_to_l_@cntr:
   777                           	callstack 0
   778                           
   779                           ; 1 bytes @ 0xA
   780  00000B                     	ds	1
   781  00000C                     ___awdiv@sign:
   782                           	callstack 0
   783  00000C                     ___awtoft@sign:
   784                           	callstack 0
   785  00000C                     __div_to_l_@exp1:
   786                           	callstack 0
   787  00000C                     i2___ftdiv@f2:
   788                           	callstack 0
   789                           
   790                           ; 3 bytes @ 0xB
   791  00000C                     	ds	1
   792  00000D                     ??___lltoft:
   793  00000D                     ___lldiv@counter:
   794                           	callstack 0
   795  00000D                     ___awdiv@quotient:
   796                           	callstack 0
   797                           
   798                           ; 2 bytes @ 0xC
   799  00000D                     	ds	1
   800  00000E                     __tdiv_to_l_@cntr:
   801                           	callstack 0
   802                           
   803                           ; 1 bytes @ 0xD
   804  00000E                     	ds	1
   805  00000F                     ??i2___ftdiv:
   806  00000F                     ?i2___ftmul:
   807                           	callstack 0
   808  00000F                     __tdiv_to_l_@exp1:
   809                           	callstack 0
   810  00000F                     i2___ftmul@f1:
   811                           	callstack 0
   812                           
   813                           ; 3 bytes @ 0xE
   814  00000F                     	ds	2
   815  000011                     ___lltoft@exp:
   816                           	callstack 0
   817                           
   818                           ; 1 bytes @ 0x10
   819  000011                     	ds	1
   820  000012                     i2___ftdiv@cntr:
   821                           	callstack 0
   822  000012                     i2___ftmul@f2:
   823                           	callstack 0
   824                           
   825                           ; 3 bytes @ 0x11
   826  000012                     	ds	1
   827  000013                     i2___ftdiv@f3:
   828                           	callstack 0
   829                           
   830                           ; 3 bytes @ 0x12
   831  000013                     	ds	2
   832  000015                     ??i2___ftmul:
   833                           
   834                           ; 1 bytes @ 0x14
   835  000015                     	ds	1
   836  000016                     i2___ftdiv@exp:
   837                           	callstack 0
   838                           
   839                           ; 1 bytes @ 0x15
   840  000016                     	ds	1
   841  000017                     i2___ftdiv@sign:
   842                           	callstack 0
   843                           
   844                           ; 1 bytes @ 0x16
   845  000017                     	ds	1
   846  000018                     i2___ftmul@exp:
   847                           	callstack 0
   848                           
   849                           ; 1 bytes @ 0x17
   850  000018                     	ds	1
   851  000019                     i2___ftmul@f3_as_product:
   852                           	callstack 0
   853                           
   854                           ; 3 bytes @ 0x18
   855  000019                     	ds	3
   856  00001C                     i2___ftmul@cntr:
   857                           	callstack 0
   858                           
   859                           ; 1 bytes @ 0x1B
   860  00001C                     	ds	1
   861  00001D                     i2___ftmul@sign:
   862                           	callstack 0
   863                           
   864                           ; 1 bytes @ 0x1C
   865  00001D                     	ds	1
   866  00001E                     ?_fround:
   867                           	callstack 0
   868  00001E                     ?_scale:
   869                           	callstack 0
   870                           
   871                           ; 3 bytes @ 0x1D
   872  00001E                     	ds	3
   873  000021                     ??_fround:
   874  000021                     ??_scale:
   875                           
   876                           ; 1 bytes @ 0x20
   877  000021                     	ds	4
   878  000025                     _fround$1034:
   879                           	callstack 0
   880  000025                     _scale$1035:
   881                           	callstack 0
   882                           
   883                           ; 3 bytes @ 0x24
   884  000025                     	ds	3
   885  000028                     scale@scl:
   886                           	callstack 0
   887  000028                     _fround$1033:
   888                           	callstack 0
   889                           
   890                           ; 3 bytes @ 0x27
   891  000028                     	ds	3
   892  00002B                     fround@prec:
   893                           	callstack 0
   894                           
   895                           ; 1 bytes @ 0x2A
   896  00002B                     	ds	1
   897  00002C                     ?i2___ftadd:
   898                           	callstack 0
   899  00002C                     i2___ftadd@f1:
   900                           	callstack 0
   901                           
   902                           ; 3 bytes @ 0x2B
   903  00002C                     	ds	3
   904  00002F                     i2___ftadd@f2:
   905                           	callstack 0
   906                           
   907                           ; 3 bytes @ 0x2E
   908  00002F                     	ds	3
   909  000032                     ??i2___ftadd:
   910                           
   911                           ; 1 bytes @ 0x31
   912  000032                     	ds	3
   913  000035                     i2___ftadd@sign:
   914                           	callstack 0
   915                           
   916                           ; 1 bytes @ 0x34
   917  000035                     	ds	1
   918  000036                     i2___ftadd@exp2:
   919                           	callstack 0
   920                           
   921                           ; 1 bytes @ 0x35
   922  000036                     	ds	1
   923  000037                     i2___ftadd@exp1:
   924                           	callstack 0
   925                           
   926                           ; 1 bytes @ 0x36
   927  000037                     	ds	1
   928  000038                     ?i2___ftsub:
   929                           	callstack 0
   930  000038                     i2___ftsub@f1:
   931                           	callstack 0
   932                           
   933                           ; 3 bytes @ 0x37
   934  000038                     	ds	3
   935  00003B                     i2___ftsub@f2:
   936                           	callstack 0
   937                           
   938                           ; 3 bytes @ 0x3A
   939  00003B                     	ds	3
   940  00003E                     ?i2___fttol:
   941                           	callstack 0
   942  00003E                     i2___fttol@f1:
   943                           	callstack 0
   944                           
   945                           ; 3 bytes @ 0x3D
   946  00003E                     	ds	4
   947  000042                     ??i2___fttol:
   948                           
   949                           ; 1 bytes @ 0x41
   950  000042                     	ds	5
   951  000047                     i2___fttol@sign1:
   952                           	callstack 0
   953                           
   954                           ; 1 bytes @ 0x46
   955  000047                     	ds	1
   956  000048                     i2___fttol@lval:
   957                           	callstack 0
   958                           
   959                           ; 4 bytes @ 0x47
   960  000048                     	ds	4
   961  00004C                     i2___fttol@exp1:
   962                           	callstack 0
   963                           
   964                           ; 1 bytes @ 0x4B
   965  00004C                     	ds	1
   966  00004D                     ?_sprintf:
   967                           	callstack 0
   968  00004D                     sprintf@sp:
   969                           	callstack 0
   970  00004D                     i2deg2time1@degrees1:
   971                           	callstack 0
   972  00004D                     i2deg2time2@degrees2:
   973                           	callstack 0
   974                           
   975                           ; 3 bytes @ 0x4C
   976  00004D                     	ds	1
   977  00004E                     sprintf@f:
   978                           	callstack 0
   979                           
   980                           ; 1 bytes @ 0x4D
   981  00004E                     	ds	2
   982  000050                     i2_deg2time1$1037:
   983                           	callstack 0
   984  000050                     i2_deg2time2$1038:
   985                           	callstack 0
   986                           
   987                           ; 3 bytes @ 0x4F
   988  000050                     	ds	2
   989  000052                     ??_sprintf:
   990                           
   991                           ; 1 bytes @ 0x51
   992  000052                     	ds	6
   993  000058                     TMR1_ISR@d:
   994                           	callstack 0
   995                           
   996                           ; 1 bytes @ 0x57
   997  000058                     	ds	1
   998                           
   999 ;;
  1000 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1001 ;;
  1002 ;; *************** function _main *****************
  1003 ;; Defined at:
  1004 ;;		line 54 in file "PIC_ROBOT_2R.c"
  1005 ;; Parameters:    Size  Location     Type
  1006 ;;		None
  1007 ;; Auto vars:     Size  Location     Type
  1008 ;;		None
  1009 ;; Return value:  Size  Location     Type
  1010 ;;                  1    wreg      void 
  1011 ;; Registers used:
  1012 ;;		wreg, status,2, status,0, cstack
  1013 ;; Tracked objects:
  1014 ;;		On entry : 0/0
  1015 ;;		On exit  : 0/0
  1016 ;;		Unchanged: 0/0
  1017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1018 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1019 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1020 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1021 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1022 ;;Total ram usage:        0 bytes
  1023 ;; Hardware stack levels required when called: 10
  1024 ;; This function calls:
  1025 ;;		_settings
  1026 ;; This function is called by:
  1027 ;;		Startup code after reset
  1028 ;; This function uses a non-reentrant model
  1029 ;;
  1030                           
  1031                           	psect	text0
  1032  0034D2                     __ptext0:
  1033                           	callstack 0
  1034  0034D2                     _main:
  1035                           	callstack 21
  1036                           
  1037                           ;PIC_ROBOT_2R.c: 55: settings();
  1038                           
  1039                           ;incstack = 0
  1040  0034D2  EC38  F017         	call	_settings	;wreg free
  1041  0034D6                     l121:
  1042  0034D6  D7FF               	goto	l121
  1043  0034D8                     __end_of_main:
  1044                           	callstack 0
  1045                           
  1046 ;; *************** function _settings *****************
  1047 ;; Defined at:
  1048 ;;		line 62 in file "PIC_ROBOT_2R.c"
  1049 ;; Parameters:    Size  Location     Type
  1050 ;;		None
  1051 ;; Auto vars:     Size  Location     Type
  1052 ;;		None
  1053 ;; Return value:  Size  Location     Type
  1054 ;;                  1    wreg      void 
  1055 ;; Registers used:
  1056 ;;		wreg, status,2, status,0, cstack
  1057 ;; Tracked objects:
  1058 ;;		On entry : 0/0
  1059 ;;		On exit  : 3E/0
  1060 ;;		Unchanged: 0/0
  1061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1062 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1063 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1064 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1065 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1066 ;;Total ram usage:        0 bytes
  1067 ;; Hardware stack levels used: 1
  1068 ;; Hardware stack levels required when called: 9
  1069 ;; This function calls:
  1070 ;;		_SettingsLCD
  1071 ;;		_deg2time1
  1072 ;;		_deg2time2
  1073 ;; This function is called by:
  1074 ;;		_main
  1075 ;; This function uses a non-reentrant model
  1076 ;;
  1077                           
  1078                           	psect	text1
  1079  002E70                     __ptext1:
  1080                           	callstack 0
  1081  002E70                     _settings:
  1082                           	callstack 21
  1083                           
  1084                           ;PIC_ROBOT_2R.c: 63: OSCCON = 0x72;
  1085                           
  1086                           ;incstack = 0
  1087  002E70  0E72               	movlw	114
  1088  002E72  6ED3               	movwf	211,c	;volatile
  1089                           
  1090                           ;PIC_ROBOT_2R.c: 64: ANSELD = 0x00;
  1091  002E74  0E00               	movlw	0
  1092  002E76  010F               	movlb	15	; () banked
  1093  002E78  6F3B               	movwf	59,b	;volatile
  1094                           
  1095                           ;PIC_ROBOT_2R.c: 65: ANSELE = 0x00;
  1096  002E7A  0E00               	movlw	0
  1097  002E7C  6F3C               	movwf	60,b	;volatile
  1098                           
  1099                           ;PIC_ROBOT_2R.c: 66: ANSELC = 0x00;
  1100  002E7E  0E00               	movlw	0
  1101  002E80  6F3A               	movwf	58,b	;volatile
  1102                           
  1103                           ;PIC_ROBOT_2R.c: 68: TRISD = 0;
  1104  002E82  0E00               	movlw	0
  1105  002E84  6E95               	movwf	149,c	;volatile
  1106                           
  1107                           ;PIC_ROBOT_2R.c: 69: TRISE = 0;
  1108  002E86  0E00               	movlw	0
  1109  002E88  6E96               	movwf	150,c	;volatile
  1110                           
  1111                           ;PIC_ROBOT_2R.c: 70: LATD = 0;
  1112  002E8A  0E00               	movlw	0
  1113  002E8C  6E8C               	movwf	140,c	;volatile
  1114                           
  1115                           ;PIC_ROBOT_2R.c: 71: LATE = 0;
  1116  002E8E  0E00               	movlw	0
  1117  002E90  6E8D               	movwf	141,c	;volatile
  1118                           
  1119                           ; BSR set to: 15
  1120                           ;PIC_ROBOT_2R.c: 73: SettingsLCD(0x02);
  1121  002E92  0E02               	movlw	2
  1122  002E94  EC45  F01A         	call	_SettingsLCD
  1123                           
  1124                           ;PIC_ROBOT_2R.c: 74: SettingsLCD(0x06);
  1125  002E98  0E06               	movlw	6
  1126  002E9A  EC45  F01A         	call	_SettingsLCD
  1127                           
  1128                           ;PIC_ROBOT_2R.c: 75: SettingsLCD(0x0F);
  1129  002E9E  0E0F               	movlw	15
  1130  002EA0  EC45  F01A         	call	_SettingsLCD
  1131                           
  1132                           ;PIC_ROBOT_2R.c: 76: SettingsLCD(0x28);
  1133  002EA4  0E28               	movlw	40
  1134  002EA6  EC45  F01A         	call	_SettingsLCD
  1135                           
  1136                           ;PIC_ROBOT_2R.c: 77: SettingsLCD(0x01);
  1137  002EAA  0E01               	movlw	1
  1138  002EAC  EC45  F01A         	call	_SettingsLCD
  1139                           
  1140                           ;PIC_ROBOT_2R.c: 80: TRISCbits.TRISC6 = 0;
  1141  002EB0  9C94               	bcf	148,6,c	;volatile
  1142                           
  1143                           ;PIC_ROBOT_2R.c: 81: TRISCbits.TRISC7 = 1;
  1144  002EB2  8E94               	bsf	148,7,c	;volatile
  1145                           
  1146                           ;PIC_ROBOT_2R.c: 82: SPBRG1 = 0x19;
  1147  002EB4  0E19               	movlw	25
  1148  002EB6  6EAF               	movwf	175,c	;volatile
  1149                           
  1150                           ;PIC_ROBOT_2R.c: 83: RCSTA1 = 0x90;
  1151  002EB8  0E90               	movlw	144
  1152  002EBA  6EAB               	movwf	171,c	;volatile
  1153                           
  1154                           ;PIC_ROBOT_2R.c: 84: TXSTA1 = 0x20;
  1155  002EBC  0E20               	movlw	32
  1156  002EBE  6EAC               	movwf	172,c	;volatile
  1157                           
  1158                           ;PIC_ROBOT_2R.c: 87: GIE = 1;
  1159  002EC0  8EF2               	bsf	4082,7,c	;volatile
  1160                           
  1161                           ;PIC_ROBOT_2R.c: 88: PEIE = 1;
  1162  002EC2  8CF2               	bsf	4082,6,c	;volatile
  1163                           
  1164                           ;PIC_ROBOT_2R.c: 90: RC1IE = 1;
  1165  002EC4  8A9D               	bsf	3997,5,c	;volatile
  1166                           
  1167                           ;PIC_ROBOT_2R.c: 91: RC1IF = 0;
  1168  002EC6  9A9E               	bcf	3998,5,c	;volatile
  1169                           
  1170                           ;PIC_ROBOT_2R.c: 94: TMR1IE = 1;
  1171  002EC8  809D               	bsf	3997,0,c	;volatile
  1172                           
  1173                           ;PIC_ROBOT_2R.c: 95: TMR1IF = 0;
  1174  002ECA  909E               	bcf	3998,0,c	;volatile
  1175                           
  1176                           ;PIC_ROBOT_2R.c: 97: TMR3IE = 1;
  1177  002ECC  82A0               	bsf	4000,1,c	;volatile
  1178                           
  1179                           ;PIC_ROBOT_2R.c: 98: TMR3IF = 0;
  1180  002ECE  92A1               	bcf	4001,1,c	;volatile
  1181                           
  1182                           ;PIC_ROBOT_2R.c: 101: T1CON = 0x12;
  1183  002ED0  0E12               	movlw	18
  1184  002ED2  6ECD               	movwf	205,c	;volatile
  1185                           
  1186                           ;PIC_ROBOT_2R.c: 102: T3CON = 0x12;
  1187  002ED4  0E12               	movlw	18
  1188  002ED6  6EB1               	movwf	177,c	;volatile
  1189                           
  1190                           ;PIC_ROBOT_2R.c: 103: deg2time1(0.0);
  1191  002ED8  0E00               	movlw	0
  1192  002EDA  0101               	movlb	1	; () banked
  1193  002EDC  6F0B               	movwf	deg2time1@degrees1& (0+255),b
  1194  002EDE  0E00               	movlw	0
  1195  002EE0  6F0C               	movwf	(deg2time1@degrees1+1)& (0+255),b
  1196  002EE2  0E00               	movlw	0
  1197  002EE4  6F0D               	movwf	(deg2time1@degrees1+2)& (0+255),b
  1198  002EE6  ECB1  F010         	call	_deg2time1	;wreg free
  1199                           
  1200                           ;PIC_ROBOT_2R.c: 104: TMR1 = 0;
  1201  002EEA  0E00               	movlw	0
  1202  002EEC  6ECF               	movwf	207,c	;volatile
  1203  002EEE  0E00               	movlw	0
  1204  002EF0  6ECE               	movwf	206,c	;volatile
  1205                           
  1206                           ;PIC_ROBOT_2R.c: 105: deg2time2(0.0);
  1207  002EF2  0E00               	movlw	0
  1208  002EF4  0101               	movlb	1	; () banked
  1209  002EF6  6F0B               	movwf	deg2time2@degrees2& (0+255),b
  1210  002EF8  0E00               	movlw	0
  1211  002EFA  6F0C               	movwf	(deg2time2@degrees2+1)& (0+255),b
  1212  002EFC  0E00               	movlw	0
  1213  002EFE  6F0D               	movwf	(deg2time2@degrees2+2)& (0+255),b
  1214  002F00  EC14  F010         	call	_deg2time2	;wreg free
  1215                           
  1216                           ;PIC_ROBOT_2R.c: 106: TMR3 = 0;
  1217  002F04  0E00               	movlw	0
  1218  002F06  6EB3               	movwf	179,c	;volatile
  1219  002F08  0E00               	movlw	0
  1220  002F0A  6EB2               	movwf	178,c	;volatile
  1221                           
  1222                           ;PIC_ROBOT_2R.c: 107: LATD6 = 1;
  1223  002F0C  8C8C               	bsf	3980,6,c	;volatile
  1224                           
  1225                           ;PIC_ROBOT_2R.c: 108: LATD7 = 1;
  1226  002F0E  8E8C               	bsf	3980,7,c	;volatile
  1227                           
  1228                           ;PIC_ROBOT_2R.c: 109: TMR1ON = 1;
  1229  002F10  80CD               	bsf	4045,0,c	;volatile
  1230                           
  1231                           ;PIC_ROBOT_2R.c: 110: TMR3ON = 1;
  1232  002F12  80B1               	bsf	4017,0,c	;volatile
  1233  002F14  0012               	return		;funcret
  1234  002F16                     __end_of_settings:
  1235                           	callstack 0
  1236                           
  1237 ;; *************** function _deg2time2 *****************
  1238 ;; Defined at:
  1239 ;;		line 224 in file "PIC_ROBOT_2R.c"
  1240 ;; Parameters:    Size  Location     Type
  1241 ;;  degrees2        3   11[BANK1 ] float 
  1242 ;; Auto vars:     Size  Location     Type
  1243 ;;		None
  1244 ;; Return value:  Size  Location     Type
  1245 ;;                  1    wreg      void 
  1246 ;; Registers used:
  1247 ;;		wreg, status,2, status,0, cstack
  1248 ;; Tracked objects:
  1249 ;;		On entry : 3F/1
  1250 ;;		On exit  : 3E/0
  1251 ;;		Unchanged: 0/0
  1252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1253 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1254 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1255 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1256 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1257 ;;Total ram usage:        6 bytes
  1258 ;; Hardware stack levels used: 1
  1259 ;; Hardware stack levels required when called: 8
  1260 ;; This function calls:
  1261 ;;		___ftadd
  1262 ;;		___ftdiv
  1263 ;;		___ftmul
  1264 ;;		___ftsub
  1265 ;;		___fttol
  1266 ;; This function is called by:
  1267 ;;		_settings
  1268 ;; This function uses a non-reentrant model
  1269 ;;
  1270                           
  1271                           	psect	text2
  1272  002028                     __ptext2:
  1273                           	callstack 0
  1274  002028                     _deg2time2:
  1275                           	callstack 21
  1276                           
  1277                           ; BSR set to: 1
  1278                           ;PIC_ROBOT_2R.c: 226: time_high = (((degrees2 * (1.9 / 180.0)) + 0.6))*0.001;
  1279                           
  1280                           ;incstack = 0
  1281  002028  0E9A               	movlw	154
  1282  00202A  0100               	movlb	0	; () banked
  1283  00202C  6F98               	movwf	___ftadd@f2& (0+255),b
  1284  00202E  0E19               	movlw	25
  1285  002030  6F99               	movwf	(___ftadd@f2+1)& (0+255),b
  1286  002032  0E3F               	movlw	63
  1287  002034  6F9A               	movwf	(___ftadd@f2+2)& (0+255),b
  1288  002036  0EF1               	movlw	241
  1289  002038  6F89               	movwf	___ftmul@f2& (0+255),b
  1290  00203A  0E2C               	movlw	44
  1291  00203C  6F8A               	movwf	(___ftmul@f2+1)& (0+255),b
  1292  00203E  0E3C               	movlw	60
  1293  002040  6F8B               	movwf	(___ftmul@f2+2)& (0+255),b
  1294  002042  C10B  F086         	movff	deg2time2@degrees2,___ftmul@f1
  1295  002046  C10C  F087         	movff	deg2time2@degrees2+1,___ftmul@f1+1
  1296  00204A  C10D  F088         	movff	deg2time2@degrees2+2,___ftmul@f1+2
  1297  00204E  EC03  F013         	call	___ftmul	;wreg free
  1298  002052  C086  F095         	movff	?___ftmul,___ftadd@f1
  1299  002056  C087  F096         	movff	?___ftmul+1,___ftadd@f1+1
  1300  00205A  C088  F097         	movff	?___ftmul+2,___ftadd@f1+2
  1301  00205E  EC6C  F00E         	call	___ftadd	;wreg free
  1302  002062  C095  F10E         	movff	?___ftadd,_deg2time2$955
  1303  002066  C096  F10F         	movff	?___ftadd+1,_deg2time2$955+1
  1304  00206A  C097  F110         	movff	?___ftadd+2,_deg2time2$955+2
  1305                           
  1306                           ;PIC_ROBOT_2R.c: 226: time_high = (((degrees2 * (1.9 / 180.0)) + 0.6))*0.001;
  1307  00206E  C10E  F086         	movff	_deg2time2$955,___ftmul@f1
  1308  002072  C10F  F087         	movff	_deg2time2$955+1,___ftmul@f1+1
  1309  002076  C110  F088         	movff	_deg2time2$955+2,___ftmul@f1+2
  1310  00207A  0E12               	movlw	18
  1311  00207C  6F89               	movwf	___ftmul@f2& (0+255),b
  1312  00207E  0E83               	movlw	131
  1313  002080  6F8A               	movwf	(___ftmul@f2+1)& (0+255),b
  1314  002082  0E3A               	movlw	58
  1315  002084  6F8B               	movwf	(___ftmul@f2+2)& (0+255),b
  1316  002086  EC03  F013         	call	___ftmul	;wreg free
  1317  00208A  C086  F0B4         	movff	?___ftmul,_time_high
  1318  00208E  C087  F0B5         	movff	?___ftmul+1,_time_high+1
  1319  002092  C088  F0B6         	movff	?___ftmul+2,_time_high+2
  1320                           
  1321                           ;PIC_ROBOT_2R.c: 227: th2 = 65535.0 - (time_high / (0.00000025 * 2.0));
  1322  002096  0E38               	movlw	56
  1323  002098  6F89               	movwf	___ftdiv@f2& (0+255),b
  1324  00209A  0E06               	movlw	6
  1325  00209C  6F8A               	movwf	(___ftdiv@f2+1)& (0+255),b
  1326  00209E  0E35               	movlw	53
  1327  0020A0  6F8B               	movwf	(___ftdiv@f2+2)& (0+255),b
  1328  0020A2  C0B4  F086         	movff	_time_high,___ftdiv@f1
  1329  0020A6  C0B5  F087         	movff	_time_high+1,___ftdiv@f1+1
  1330  0020AA  C0B6  F088         	movff	_time_high+2,___ftdiv@f1+2
  1331  0020AE  ECE5  F014         	call	___ftdiv	;wreg free
  1332  0020B2  C086  F0A4         	movff	?___ftdiv,___ftsub@f2
  1333  0020B6  C087  F0A5         	movff	?___ftdiv+1,___ftsub@f2+1
  1334  0020BA  C088  F0A6         	movff	?___ftdiv+2,___ftsub@f2+2
  1335  0020BE  0EFF               	movlw	255
  1336  0020C0  6FA1               	movwf	___ftsub@f1& (0+255),b
  1337  0020C2  0E7F               	movlw	127
  1338  0020C4  6FA2               	movwf	(___ftsub@f1+1)& (0+255),b
  1339  0020C6  0E47               	movlw	71
  1340  0020C8  6FA3               	movwf	(___ftsub@f1+2)& (0+255),b
  1341  0020CA  EC55  F019         	call	___ftsub	;wreg free
  1342  0020CE  C0A1  F0A7         	movff	?___ftsub,___fttol@f1
  1343  0020D2  C0A2  F0A8         	movff	?___ftsub+1,___fttol@f1+1
  1344  0020D6  C0A3  F0A9         	movff	?___ftsub+2,___fttol@f1+2
  1345  0020DA  EC71  F014         	call	___fttol	;wreg free
  1346  0020DE  C0A7  F0C7         	movff	?___fttol,_th2
  1347  0020E2  C0A8  F0C8         	movff	?___fttol+1,_th2+1
  1348                           
  1349                           ;PIC_ROBOT_2R.c: 228: time_low = 0.02 - time_high;
  1350  0020E6  0ED7               	movlw	215
  1351  0020E8  0100               	movlb	0	; () banked
  1352  0020EA  6FA1               	movwf	___ftsub@f1& (0+255),b
  1353  0020EC  0EA3               	movlw	163
  1354  0020EE  6FA2               	movwf	(___ftsub@f1+1)& (0+255),b
  1355  0020F0  0E3C               	movlw	60
  1356  0020F2  6FA3               	movwf	(___ftsub@f1+2)& (0+255),b
  1357  0020F4  C0B4  F0A4         	movff	_time_high,___ftsub@f2
  1358  0020F8  C0B5  F0A5         	movff	_time_high+1,___ftsub@f2+1
  1359  0020FC  C0B6  F0A6         	movff	_time_high+2,___ftsub@f2+2
  1360  002100  EC55  F019         	call	___ftsub	;wreg free
  1361  002104  C0A1  F0B1         	movff	?___ftsub,_time_low
  1362  002108  C0A2  F0B2         	movff	?___ftsub+1,_time_low+1
  1363  00210C  C0A3  F0B3         	movff	?___ftsub+2,_time_low+2
  1364                           
  1365                           ;PIC_ROBOT_2R.c: 229: tl2 = 65535.0 - (time_low / (0.00000025 * 2.0));
  1366  002110  0E38               	movlw	56
  1367  002112  6F89               	movwf	___ftdiv@f2& (0+255),b
  1368  002114  0E06               	movlw	6
  1369  002116  6F8A               	movwf	(___ftdiv@f2+1)& (0+255),b
  1370  002118  0E35               	movlw	53
  1371  00211A  6F8B               	movwf	(___ftdiv@f2+2)& (0+255),b
  1372  00211C  C0B1  F086         	movff	_time_low,___ftdiv@f1
  1373  002120  C0B2  F087         	movff	_time_low+1,___ftdiv@f1+1
  1374  002124  C0B3  F088         	movff	_time_low+2,___ftdiv@f1+2
  1375  002128  ECE5  F014         	call	___ftdiv	;wreg free
  1376  00212C  C086  F0A4         	movff	?___ftdiv,___ftsub@f2
  1377  002130  C087  F0A5         	movff	?___ftdiv+1,___ftsub@f2+1
  1378  002134  C088  F0A6         	movff	?___ftdiv+2,___ftsub@f2+2
  1379  002138  0EFF               	movlw	255
  1380  00213A  6FA1               	movwf	___ftsub@f1& (0+255),b
  1381  00213C  0E7F               	movlw	127
  1382  00213E  6FA2               	movwf	(___ftsub@f1+1)& (0+255),b
  1383  002140  0E47               	movlw	71
  1384  002142  6FA3               	movwf	(___ftsub@f1+2)& (0+255),b
  1385  002144  EC55  F019         	call	___ftsub	;wreg free
  1386  002148  C0A1  F0A7         	movff	?___ftsub,___fttol@f1
  1387  00214C  C0A2  F0A8         	movff	?___ftsub+1,___fttol@f1+1
  1388  002150  C0A3  F0A9         	movff	?___ftsub+2,___fttol@f1+2
  1389  002154  EC71  F014         	call	___fttol	;wreg free
  1390  002158  C0A7  F0C5         	movff	?___fttol,_tl2
  1391  00215C  C0A8  F0C6         	movff	?___fttol+1,_tl2+1
  1392  002160  0012               	return		;funcret
  1393  002162                     __end_of_deg2time2:
  1394                           	callstack 0
  1395                           
  1396 ;; *************** function _deg2time1 *****************
  1397 ;; Defined at:
  1398 ;;		line 214 in file "PIC_ROBOT_2R.c"
  1399 ;; Parameters:    Size  Location     Type
  1400 ;;  degrees1        3   11[BANK1 ] float 
  1401 ;; Auto vars:     Size  Location     Type
  1402 ;;		None
  1403 ;; Return value:  Size  Location     Type
  1404 ;;                  1    wreg      void 
  1405 ;; Registers used:
  1406 ;;		wreg, status,2, status,0, cstack
  1407 ;; Tracked objects:
  1408 ;;		On entry : 3F/1
  1409 ;;		On exit  : 3E/0
  1410 ;;		Unchanged: 0/0
  1411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1412 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1413 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1414 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1415 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1416 ;;Total ram usage:        6 bytes
  1417 ;; Hardware stack levels used: 1
  1418 ;; Hardware stack levels required when called: 8
  1419 ;; This function calls:
  1420 ;;		___ftadd
  1421 ;;		___ftdiv
  1422 ;;		___ftmul
  1423 ;;		___ftsub
  1424 ;;		___fttol
  1425 ;; This function is called by:
  1426 ;;		_settings
  1427 ;; This function uses a non-reentrant model
  1428 ;;
  1429                           
  1430                           	psect	text3
  1431  002162                     __ptext3:
  1432                           	callstack 0
  1433  002162                     _deg2time1:
  1434                           	callstack 21
  1435                           
  1436                           ; BSR set to: 1
  1437                           ;PIC_ROBOT_2R.c: 216: time_high = (((degrees1 * (1.9 / 180.0)) + 0.6))*0.001;
  1438                           
  1439                           ;incstack = 0
  1440  002162  0E9A               	movlw	154
  1441  002164  0100               	movlb	0	; () banked
  1442  002166  6F98               	movwf	___ftadd@f2& (0+255),b
  1443  002168  0E19               	movlw	25
  1444  00216A  6F99               	movwf	(___ftadd@f2+1)& (0+255),b
  1445  00216C  0E3F               	movlw	63
  1446  00216E  6F9A               	movwf	(___ftadd@f2+2)& (0+255),b
  1447  002170  0EF1               	movlw	241
  1448  002172  6F89               	movwf	___ftmul@f2& (0+255),b
  1449  002174  0E2C               	movlw	44
  1450  002176  6F8A               	movwf	(___ftmul@f2+1)& (0+255),b
  1451  002178  0E3C               	movlw	60
  1452  00217A  6F8B               	movwf	(___ftmul@f2+2)& (0+255),b
  1453  00217C  C10B  F086         	movff	deg2time1@degrees1,___ftmul@f1
  1454  002180  C10C  F087         	movff	deg2time1@degrees1+1,___ftmul@f1+1
  1455  002184  C10D  F088         	movff	deg2time1@degrees1+2,___ftmul@f1+2
  1456  002188  EC03  F013         	call	___ftmul	;wreg free
  1457  00218C  C086  F095         	movff	?___ftmul,___ftadd@f1
  1458  002190  C087  F096         	movff	?___ftmul+1,___ftadd@f1+1
  1459  002194  C088  F097         	movff	?___ftmul+2,___ftadd@f1+2
  1460  002198  EC6C  F00E         	call	___ftadd	;wreg free
  1461  00219C  C095  F10E         	movff	?___ftadd,_deg2time1$954
  1462  0021A0  C096  F10F         	movff	?___ftadd+1,_deg2time1$954+1
  1463  0021A4  C097  F110         	movff	?___ftadd+2,_deg2time1$954+2
  1464                           
  1465                           ;PIC_ROBOT_2R.c: 216: time_high = (((degrees1 * (1.9 / 180.0)) + 0.6))*0.001;
  1466  0021A8  C10E  F086         	movff	_deg2time1$954,___ftmul@f1
  1467  0021AC  C10F  F087         	movff	_deg2time1$954+1,___ftmul@f1+1
  1468  0021B0  C110  F088         	movff	_deg2time1$954+2,___ftmul@f1+2
  1469  0021B4  0E12               	movlw	18
  1470  0021B6  6F89               	movwf	___ftmul@f2& (0+255),b
  1471  0021B8  0E83               	movlw	131
  1472  0021BA  6F8A               	movwf	(___ftmul@f2+1)& (0+255),b
  1473  0021BC  0E3A               	movlw	58
  1474  0021BE  6F8B               	movwf	(___ftmul@f2+2)& (0+255),b
  1475  0021C0  EC03  F013         	call	___ftmul	;wreg free
  1476  0021C4  C086  F0B4         	movff	?___ftmul,_time_high
  1477  0021C8  C087  F0B5         	movff	?___ftmul+1,_time_high+1
  1478  0021CC  C088  F0B6         	movff	?___ftmul+2,_time_high+2
  1479                           
  1480                           ;PIC_ROBOT_2R.c: 217: th1 = 65535.0 - (time_high / (0.00000025 * 2.0));
  1481  0021D0  0E38               	movlw	56
  1482  0021D2  6F89               	movwf	___ftdiv@f2& (0+255),b
  1483  0021D4  0E06               	movlw	6
  1484  0021D6  6F8A               	movwf	(___ftdiv@f2+1)& (0+255),b
  1485  0021D8  0E35               	movlw	53
  1486  0021DA  6F8B               	movwf	(___ftdiv@f2+2)& (0+255),b
  1487  0021DC  C0B4  F086         	movff	_time_high,___ftdiv@f1
  1488  0021E0  C0B5  F087         	movff	_time_high+1,___ftdiv@f1+1
  1489  0021E4  C0B6  F088         	movff	_time_high+2,___ftdiv@f1+2
  1490  0021E8  ECE5  F014         	call	___ftdiv	;wreg free
  1491  0021EC  C086  F0A4         	movff	?___ftdiv,___ftsub@f2
  1492  0021F0  C087  F0A5         	movff	?___ftdiv+1,___ftsub@f2+1
  1493  0021F4  C088  F0A6         	movff	?___ftdiv+2,___ftsub@f2+2
  1494  0021F8  0EFF               	movlw	255
  1495  0021FA  6FA1               	movwf	___ftsub@f1& (0+255),b
  1496  0021FC  0E7F               	movlw	127
  1497  0021FE  6FA2               	movwf	(___ftsub@f1+1)& (0+255),b
  1498  002200  0E47               	movlw	71
  1499  002202  6FA3               	movwf	(___ftsub@f1+2)& (0+255),b
  1500  002204  EC55  F019         	call	___ftsub	;wreg free
  1501  002208  C0A1  F0A7         	movff	?___ftsub,___fttol@f1
  1502  00220C  C0A2  F0A8         	movff	?___ftsub+1,___fttol@f1+1
  1503  002210  C0A3  F0A9         	movff	?___ftsub+2,___fttol@f1+2
  1504  002214  EC71  F014         	call	___fttol	;wreg free
  1505  002218  C0A7  F0CB         	movff	?___fttol,_th1
  1506  00221C  C0A8  F0CC         	movff	?___fttol+1,_th1+1
  1507                           
  1508                           ;PIC_ROBOT_2R.c: 218: time_low = 0.02 - time_high;
  1509  002220  0ED7               	movlw	215
  1510  002222  0100               	movlb	0	; () banked
  1511  002224  6FA1               	movwf	___ftsub@f1& (0+255),b
  1512  002226  0EA3               	movlw	163
  1513  002228  6FA2               	movwf	(___ftsub@f1+1)& (0+255),b
  1514  00222A  0E3C               	movlw	60
  1515  00222C  6FA3               	movwf	(___ftsub@f1+2)& (0+255),b
  1516  00222E  C0B4  F0A4         	movff	_time_high,___ftsub@f2
  1517  002232  C0B5  F0A5         	movff	_time_high+1,___ftsub@f2+1
  1518  002236  C0B6  F0A6         	movff	_time_high+2,___ftsub@f2+2
  1519  00223A  EC55  F019         	call	___ftsub	;wreg free
  1520  00223E  C0A1  F0B1         	movff	?___ftsub,_time_low
  1521  002242  C0A2  F0B2         	movff	?___ftsub+1,_time_low+1
  1522  002246  C0A3  F0B3         	movff	?___ftsub+2,_time_low+2
  1523                           
  1524                           ;PIC_ROBOT_2R.c: 219: tl1 = 65535.0 - (time_low / (0.00000025 * 2.0));
  1525  00224A  0E38               	movlw	56
  1526  00224C  6F89               	movwf	___ftdiv@f2& (0+255),b
  1527  00224E  0E06               	movlw	6
  1528  002250  6F8A               	movwf	(___ftdiv@f2+1)& (0+255),b
  1529  002252  0E35               	movlw	53
  1530  002254  6F8B               	movwf	(___ftdiv@f2+2)& (0+255),b
  1531  002256  C0B1  F086         	movff	_time_low,___ftdiv@f1
  1532  00225A  C0B2  F087         	movff	_time_low+1,___ftdiv@f1+1
  1533  00225E  C0B3  F088         	movff	_time_low+2,___ftdiv@f1+2
  1534  002262  ECE5  F014         	call	___ftdiv	;wreg free
  1535  002266  C086  F0A4         	movff	?___ftdiv,___ftsub@f2
  1536  00226A  C087  F0A5         	movff	?___ftdiv+1,___ftsub@f2+1
  1537  00226E  C088  F0A6         	movff	?___ftdiv+2,___ftsub@f2+2
  1538  002272  0EFF               	movlw	255
  1539  002274  6FA1               	movwf	___ftsub@f1& (0+255),b
  1540  002276  0E7F               	movlw	127
  1541  002278  6FA2               	movwf	(___ftsub@f1+1)& (0+255),b
  1542  00227A  0E47               	movlw	71
  1543  00227C  6FA3               	movwf	(___ftsub@f1+2)& (0+255),b
  1544  00227E  EC55  F019         	call	___ftsub	;wreg free
  1545  002282  C0A1  F0A7         	movff	?___ftsub,___fttol@f1
  1546  002286  C0A2  F0A8         	movff	?___ftsub+1,___fttol@f1+1
  1547  00228A  C0A3  F0A9         	movff	?___ftsub+2,___fttol@f1+2
  1548  00228E  EC71  F014         	call	___fttol	;wreg free
  1549  002292  C0A7  F0C9         	movff	?___fttol,_tl1
  1550  002296  C0A8  F0CA         	movff	?___fttol+1,_tl1+1
  1551  00229A  0012               	return		;funcret
  1552  00229C                     __end_of_deg2time1:
  1553                           	callstack 0
  1554                           
  1555 ;; *************** function ___fttol *****************
  1556 ;; Defined at:
  1557 ;;		line 44 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\fttol.c"
  1558 ;; Parameters:    Size  Location     Type
  1559 ;;  f1              3   71[BANK0 ] float 
  1560 ;; Auto vars:     Size  Location     Type
  1561 ;;  lval            4    6[BANK1 ] unsigned long 
  1562 ;;  exp1            1   10[BANK1 ] unsigned char 
  1563 ;;  sign1           1    5[BANK1 ] unsigned char 
  1564 ;; Return value:  Size  Location     Type
  1565 ;;                  4   71[BANK0 ] long 
  1566 ;; Registers used:
  1567 ;;		wreg, status,2, status,0
  1568 ;; Tracked objects:
  1569 ;;		On entry : 3F/0
  1570 ;;		On exit  : 3E/0
  1571 ;;		Unchanged: 0/0
  1572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1573 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1574 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1575 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1576 ;;      Totals:         0       4      11       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1577 ;;Total ram usage:       15 bytes
  1578 ;; Hardware stack levels used: 1
  1579 ;; Hardware stack levels required when called: 5
  1580 ;; This function calls:
  1581 ;;		Nothing
  1582 ;; This function is called by:
  1583 ;;		_deg2time1
  1584 ;;		_deg2time2
  1585 ;; This function uses a non-reentrant model
  1586 ;;
  1587                           
  1588                           	psect	text4
  1589  0028E2                     __ptext4:
  1590                           	callstack 0
  1591  0028E2                     ___fttol:
  1592                           	callstack 23
  1593                           
  1594                           ; BSR set to: 0
  1595                           
  1596                           ;incstack = 0
  1597  0028E2  C0A9  F100         	movff	___fttol@f1+2,??___fttol
  1598  0028E6  0101               	movlb	1	; () banked
  1599  0028E8  6B01               	clrf	(??___fttol+1)& (0+255),b
  1600  0028EA  6B02               	clrf	(??___fttol+2)& (0+255),b
  1601  0028EC  0100               	movlb	0	; () banked
  1602  0028EE  35A8               	rlcf	(___fttol@f1+1)& (0+255),w,b
  1603  0028F0  0101               	movlb	1	; () banked
  1604  0028F2  3700               	rlcf	??___fttol& (0+255),f,b
  1605  0028F4  E301               	bnc	u4721
  1606  0028F6  8101               	bsf	(??___fttol+1)& (0+255),0,b
  1607  0028F8                     u4721:
  1608  0028F8  5100               	movf	??___fttol& (0+255),w,b
  1609  0028FA  6F0A               	movwf	___fttol@exp1& (0+255),b
  1610  0028FC  510A               	movf	___fttol@exp1& (0+255),w,b
  1611  0028FE  A4D8               	btfss	status,2,c
  1612  002900  D00A               	goto	l4021
  1613  002902                     u4730:
  1614                           
  1615                           ; BSR set to: 1
  1616  002902  0E00               	movlw	0
  1617  002904  0100               	movlb	0	; () banked
  1618  002906  6FA7               	movwf	?___fttol& (0+255),b
  1619  002908  0E00               	movlw	0
  1620  00290A  6FA8               	movwf	(?___fttol+1)& (0+255),b
  1621  00290C  0E00               	movlw	0
  1622  00290E  6FA9               	movwf	(?___fttol+2)& (0+255),b
  1623  002910  0E00               	movlw	0
  1624  002912  6FAA               	movwf	(?___fttol+3)& (0+255),b
  1625  002914  0012               	return	
  1626  002916                     l4021:
  1627                           
  1628                           ; BSR set to: 1
  1629  002916  0E17               	movlw	23
  1630  002918  6F00               	movwf	??___fttol& (0+255),b
  1631  00291A  C0A7  F101         	movff	___fttol@f1,??___fttol+1
  1632  00291E  C0A8  F102         	movff	___fttol@f1+1,??___fttol+2
  1633  002922  C0A9  F103         	movff	___fttol@f1+2,??___fttol+3
  1634  002926  2900               	incf	??___fttol& (0+255),w,b
  1635  002928  6F04               	movwf	(??___fttol+4)& (0+255),b
  1636  00292A  D004               	goto	u4740
  1637  00292C                     u4745:
  1638  00292C  90D8               	bcf	status,0,c
  1639  00292E  3303               	rrcf	(??___fttol+3)& (0+255),f,b
  1640  002930  3302               	rrcf	(??___fttol+2)& (0+255),f,b
  1641  002932  3301               	rrcf	(??___fttol+1)& (0+255),f,b
  1642  002934                     u4740:
  1643  002934  2F04               	decfsz	(??___fttol+4)& (0+255),f,b
  1644  002936  D7FA               	goto	u4745
  1645  002938  0101               	movlb	1	; () banked
  1646  00293A  5101               	movf	(??___fttol+1)& (0+255),w,b
  1647  00293C  6F05               	movwf	___fttol@sign1& (0+255),b
  1648                           
  1649                           ; BSR set to: 1
  1650  00293E  0100               	movlb	0	; () banked
  1651  002940  8FA8               	bsf	(___fttol@f1+1)& (0+255),7,b
  1652                           
  1653                           ; BSR set to: 0
  1654  002942  0EFF               	movlw	255
  1655  002944  17A7               	andwf	___fttol@f1& (0+255),f,b
  1656  002946  0EFF               	movlw	255
  1657  002948  17A8               	andwf	(___fttol@f1+1)& (0+255),f,b
  1658  00294A  0E00               	movlw	0
  1659  00294C  17A9               	andwf	(___fttol@f1+2)& (0+255),f,b
  1660                           
  1661                           ; BSR set to: 0
  1662  00294E  51A7               	movf	___fttol@f1& (0+255),w,b
  1663  002950  0101               	movlb	1	; () banked
  1664  002952  6F06               	movwf	___fttol@lval& (0+255),b
  1665  002954  0100               	movlb	0	; () banked
  1666  002956  51A8               	movf	(___fttol@f1+1)& (0+255),w,b
  1667  002958  0101               	movlb	1	; () banked
  1668  00295A  6F07               	movwf	(___fttol@lval+1)& (0+255),b
  1669  00295C  0100               	movlb	0	; () banked
  1670  00295E  51A9               	movf	(___fttol@f1+2)& (0+255),w,b
  1671  002960  0101               	movlb	1	; () banked
  1672  002962  6F08               	movwf	(___fttol@lval+2)& (0+255),b
  1673  002964  6B09               	clrf	(___fttol@lval+3)& (0+255),b
  1674                           
  1675                           ; BSR set to: 1
  1676  002966  0E8E               	movlw	142
  1677  002968  5F0A               	subwf	___fttol@exp1& (0+255),f,b
  1678                           
  1679                           ; BSR set to: 1
  1680  00296A  AF0A               	btfss	___fttol@exp1& (0+255),7,b
  1681  00296C  D00D               	goto	l4043
  1682                           
  1683                           ; BSR set to: 1
  1684  00296E  510A               	movf	___fttol@exp1& (0+255),w,b
  1685  002970  0A80               	xorlw	128
  1686  002972  0F8F               	addlw	143
  1687  002974  A0D8               	btfss	status,0,c
  1688  002976  D7C5               	goto	u4730
  1689  002978                     l4039:
  1690                           
  1691                           ; BSR set to: 1
  1692  002978  90D8               	bcf	status,0,c
  1693  00297A  3309               	rrcf	(___fttol@lval+3)& (0+255),f,b
  1694  00297C  3308               	rrcf	(___fttol@lval+2)& (0+255),f,b
  1695  00297E  3307               	rrcf	(___fttol@lval+1)& (0+255),f,b
  1696  002980  3306               	rrcf	___fttol@lval& (0+255),f,b
  1697                           
  1698                           ; BSR set to: 1
  1699  002982  3F0A               	incfsz	___fttol@exp1& (0+255),f,b
  1700  002984  D7F9               	goto	l4039
  1701  002986  D00D               	goto	u4780
  1702  002988                     l4043:
  1703                           
  1704                           ; BSR set to: 1
  1705  002988  0E17               	movlw	23
  1706  00298A  650A               	cpfsgt	___fttol@exp1& (0+255),b
  1707  00298C  D007               	goto	l4051
  1708  00298E  D7B9               	goto	u4730
  1709  002990                     l4049:
  1710                           
  1711                           ; BSR set to: 1
  1712  002990  90D8               	bcf	status,0,c
  1713  002992  3706               	rlcf	___fttol@lval& (0+255),f,b
  1714  002994  3707               	rlcf	(___fttol@lval+1)& (0+255),f,b
  1715  002996  3708               	rlcf	(___fttol@lval+2)& (0+255),f,b
  1716  002998  3709               	rlcf	(___fttol@lval+3)& (0+255),f,b
  1717  00299A  070A               	decf	___fttol@exp1& (0+255),f,b
  1718  00299C                     l4051:
  1719                           
  1720                           ; BSR set to: 1
  1721  00299C  510A               	movf	___fttol@exp1& (0+255),w,b
  1722  00299E  A4D8               	btfss	status,2,c
  1723  0029A0  D7F7               	goto	l4049
  1724  0029A2                     u4780:
  1725                           
  1726                           ; BSR set to: 1
  1727  0029A2  5105               	movf	___fttol@sign1& (0+255),w,b
  1728  0029A4  B4D8               	btfsc	status,2,c
  1729  0029A6  D008               	goto	l4057
  1730                           
  1731                           ; BSR set to: 1
  1732  0029A8  1F09               	comf	(___fttol@lval+3)& (0+255),f,b
  1733  0029AA  1F08               	comf	(___fttol@lval+2)& (0+255),f,b
  1734  0029AC  1F07               	comf	(___fttol@lval+1)& (0+255),f,b
  1735  0029AE  6D06               	negf	___fttol@lval& (0+255),b
  1736  0029B0  0E00               	movlw	0
  1737  0029B2  2307               	addwfc	(___fttol@lval+1)& (0+255),f,b
  1738  0029B4  2308               	addwfc	(___fttol@lval+2)& (0+255),f,b
  1739  0029B6  2309               	addwfc	(___fttol@lval+3)& (0+255),f,b
  1740  0029B8                     l4057:
  1741                           
  1742                           ; BSR set to: 1
  1743  0029B8  C106  F0A7         	movff	___fttol@lval,?___fttol
  1744  0029BC  C107  F0A8         	movff	___fttol@lval+1,?___fttol+1
  1745  0029C0  C108  F0A9         	movff	___fttol@lval+2,?___fttol+2
  1746  0029C4  C109  F0AA         	movff	___fttol@lval+3,?___fttol+3
  1747  0029C8  0012               	return		;funcret
  1748  0029CA                     __end_of___fttol:
  1749                           	callstack 0
  1750                           
  1751 ;; *************** function ___ftsub *****************
  1752 ;; Defined at:
  1753 ;;		line 19 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\ftsub.c"
  1754 ;; Parameters:    Size  Location     Type
  1755 ;;  f1              3   65[BANK0 ] float 
  1756 ;;  f2              3   68[BANK0 ] float 
  1757 ;; Auto vars:     Size  Location     Type
  1758 ;;		None
  1759 ;; Return value:  Size  Location     Type
  1760 ;;                  3   65[BANK0 ] float 
  1761 ;; Registers used:
  1762 ;;		wreg, status,2, status,0, cstack
  1763 ;; Tracked objects:
  1764 ;;		On entry : 3F/0
  1765 ;;		On exit  : 3F/0
  1766 ;;		Unchanged: 0/0
  1767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1768 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1769 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1770 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1771 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1772 ;;Total ram usage:        6 bytes
  1773 ;; Hardware stack levels used: 1
  1774 ;; Hardware stack levels required when called: 7
  1775 ;; This function calls:
  1776 ;;		___ftadd
  1777 ;; This function is called by:
  1778 ;;		_deg2time1
  1779 ;;		_deg2time2
  1780 ;; This function uses a non-reentrant model
  1781 ;;
  1782                           
  1783                           	psect	text5
  1784  0032AA                     __ptext5:
  1785                           	callstack 0
  1786  0032AA                     ___ftsub:
  1787                           	callstack 21
  1788                           
  1789                           ; BSR set to: 0
  1790                           
  1791                           ;incstack = 0
  1792  0032AA  51A4               	movf	___ftsub@f2& (0+255),w,b
  1793  0032AC  11A5               	iorwf	(___ftsub@f2+1)& (0+255),w,b
  1794  0032AE  11A6               	iorwf	(___ftsub@f2+2)& (0+255),w,b
  1795  0032B0  B4D8               	btfsc	status,2,c
  1796  0032B2  D006               	goto	l4011
  1797                           
  1798                           ; BSR set to: 0
  1799  0032B4  0E00               	movlw	0
  1800  0032B6  1BA4               	xorwf	___ftsub@f2& (0+255),f,b
  1801  0032B8  0E00               	movlw	0
  1802  0032BA  1BA5               	xorwf	(___ftsub@f2+1)& (0+255),f,b
  1803  0032BC  0E80               	movlw	128
  1804  0032BE  1BA6               	xorwf	(___ftsub@f2+2)& (0+255),f,b
  1805  0032C0                     l4011:
  1806                           
  1807                           ; BSR set to: 0
  1808  0032C0  C0A1  F095         	movff	___ftsub@f1,___ftadd@f1
  1809  0032C4  C0A2  F096         	movff	___ftsub@f1+1,___ftadd@f1+1
  1810  0032C8  C0A3  F097         	movff	___ftsub@f1+2,___ftadd@f1+2
  1811  0032CC  C0A4  F098         	movff	___ftsub@f2,___ftadd@f2
  1812  0032D0  C0A5  F099         	movff	___ftsub@f2+1,___ftadd@f2+1
  1813  0032D4  C0A6  F09A         	movff	___ftsub@f2+2,___ftadd@f2+2
  1814  0032D8  EC6C  F00E         	call	___ftadd	;wreg free
  1815  0032DC  C095  F0A1         	movff	?___ftadd,?___ftsub
  1816  0032E0  C096  F0A2         	movff	?___ftadd+1,?___ftsub+1
  1817  0032E4  C097  F0A3         	movff	?___ftadd+2,?___ftsub+2
  1818                           
  1819                           ; BSR set to: 0
  1820  0032E8  0012               	return		;funcret
  1821  0032EA                     __end_of___ftsub:
  1822                           	callstack 0
  1823                           
  1824 ;; *************** function ___ftadd *****************
  1825 ;; Defined at:
  1826 ;;		line 86 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\ftadd.c"
  1827 ;; Parameters:    Size  Location     Type
  1828 ;;  f1              3   53[BANK0 ] float 
  1829 ;;  f2              3   56[BANK0 ] float 
  1830 ;; Auto vars:     Size  Location     Type
  1831 ;;  exp1            1   64[BANK0 ] unsigned char 
  1832 ;;  exp2            1   63[BANK0 ] unsigned char 
  1833 ;;  sign            1   62[BANK0 ] unsigned char 
  1834 ;; Return value:  Size  Location     Type
  1835 ;;                  3   53[BANK0 ] float 
  1836 ;; Registers used:
  1837 ;;		wreg, status,2, status,0, cstack
  1838 ;; Tracked objects:
  1839 ;;		On entry : 3F/0
  1840 ;;		On exit  : 3F/0
  1841 ;;		Unchanged: 0/0
  1842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1843 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1844 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1845 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1846 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1847 ;;Total ram usage:       12 bytes
  1848 ;; Hardware stack levels used: 1
  1849 ;; Hardware stack levels required when called: 6
  1850 ;; This function calls:
  1851 ;;		___ftpack
  1852 ;; This function is called by:
  1853 ;;		_deg2time1
  1854 ;;		_deg2time2
  1855 ;;		___ftsub
  1856 ;; This function uses a non-reentrant model
  1857 ;;
  1858                           
  1859                           	psect	text6
  1860  001CD8                     __ptext6:
  1861                           	callstack 0
  1862  001CD8                     ___ftadd:
  1863                           	callstack 21
  1864                           
  1865                           ; BSR set to: 0
  1866                           
  1867                           ; BSR set to: 0
  1868                           ;incstack = 0
  1869  001CD8  C097  F09B         	movff	___ftadd@f1+2,??___ftadd
  1870  001CDC  6B9C               	clrf	(??___ftadd+1)& (0+255),b
  1871  001CDE  6B9D               	clrf	(??___ftadd+2)& (0+255),b
  1872  001CE0  3596               	rlcf	(___ftadd@f1+1)& (0+255),w,b
  1873  001CE2  379B               	rlcf	??___ftadd& (0+255),f,b
  1874  001CE4  E301               	bnc	u4391
  1875  001CE6  819C               	bsf	(??___ftadd+1)& (0+255),0,b
  1876  001CE8                     u4391:
  1877  001CE8  519B               	movf	??___ftadd& (0+255),w,b
  1878  001CEA  6FA0               	movwf	___ftadd@exp1& (0+255),b
  1879  001CEC  C09A  F09B         	movff	___ftadd@f2+2,??___ftadd
  1880  001CF0  6B9C               	clrf	(??___ftadd+1)& (0+255),b
  1881  001CF2  6B9D               	clrf	(??___ftadd+2)& (0+255),b
  1882  001CF4  3599               	rlcf	(___ftadd@f2+1)& (0+255),w,b
  1883  001CF6  379B               	rlcf	??___ftadd& (0+255),f,b
  1884  001CF8  E301               	bnc	u4401
  1885  001CFA  819C               	bsf	(??___ftadd+1)& (0+255),0,b
  1886  001CFC                     u4401:
  1887  001CFC  519B               	movf	??___ftadd& (0+255),w,b
  1888  001CFE  6F9F               	movwf	___ftadd@exp2& (0+255),b
  1889                           
  1890                           ; BSR set to: 0
  1891  001D00  51A0               	movf	___ftadd@exp1& (0+255),w,b
  1892  001D02  B4D8               	btfsc	status,2,c
  1893  001D04  D00A               	goto	u4430
  1894                           
  1895                           ; BSR set to: 0
  1896  001D06  519F               	movf	___ftadd@exp2& (0+255),w,b
  1897  001D08  5DA0               	subwf	___ftadd@exp1& (0+255),w,b
  1898  001D0A  B0D8               	btfsc	status,0,c
  1899  001D0C  D00D               	goto	l3851
  1900                           
  1901                           ; BSR set to: 0
  1902  001D0E  51A0               	movf	___ftadd@exp1& (0+255),w,b
  1903  001D10  5D9F               	subwf	___ftadd@exp2& (0+255),w,b
  1904  001D12  6F9B               	movwf	??___ftadd& (0+255),b
  1905  001D14  0E18               	movlw	24
  1906  001D16  659B               	cpfsgt	??___ftadd& (0+255),b
  1907  001D18  D007               	goto	l3851
  1908  001D1A                     u4430:
  1909                           
  1910                           ; BSR set to: 0
  1911  001D1A  C098  F095         	movff	___ftadd@f2,?___ftadd
  1912  001D1E  C099  F096         	movff	___ftadd@f2+1,?___ftadd+1
  1913  001D22  C09A  F097         	movff	___ftadd@f2+2,?___ftadd+2
  1914  001D26  0012               	return	
  1915  001D28                     l3851:
  1916                           
  1917                           ; BSR set to: 0
  1918  001D28  519F               	movf	___ftadd@exp2& (0+255),w,b
  1919  001D2A  B4D8               	btfsc	status,2,c
  1920  001D2C  D00A               	goto	u4460
  1921                           
  1922                           ; BSR set to: 0
  1923  001D2E  51A0               	movf	___ftadd@exp1& (0+255),w,b
  1924  001D30  5D9F               	subwf	___ftadd@exp2& (0+255),w,b
  1925  001D32  B0D8               	btfsc	status,0,c
  1926  001D34  D00D               	goto	l3857
  1927                           
  1928                           ; BSR set to: 0
  1929  001D36  519F               	movf	___ftadd@exp2& (0+255),w,b
  1930  001D38  5DA0               	subwf	___ftadd@exp1& (0+255),w,b
  1931  001D3A  6F9B               	movwf	??___ftadd& (0+255),b
  1932  001D3C  0E18               	movlw	24
  1933  001D3E  659B               	cpfsgt	??___ftadd& (0+255),b
  1934  001D40  D007               	goto	l3857
  1935  001D42                     u4460:
  1936                           
  1937                           ; BSR set to: 0
  1938  001D42  C095  F095         	movff	___ftadd@f1,?___ftadd
  1939  001D46  C096  F096         	movff	___ftadd@f1+1,?___ftadd+1
  1940  001D4A  C097  F097         	movff	___ftadd@f1+2,?___ftadd+2
  1941  001D4E  0012               	return	
  1942  001D50                     l3857:
  1943                           
  1944                           ; BSR set to: 0
  1945  001D50  0E06               	movlw	6
  1946  001D52  6F9E               	movwf	___ftadd@sign& (0+255),b
  1947                           
  1948                           ; BSR set to: 0
  1949  001D54  BF97               	btfsc	(___ftadd@f1+2)& (0+255),7,b
  1950                           
  1951                           ; BSR set to: 0
  1952  001D56  8F9E               	bsf	___ftadd@sign& (0+255),7,b
  1953                           
  1954                           ; BSR set to: 0
  1955  001D58  BF9A               	btfsc	(___ftadd@f2+2)& (0+255),7,b
  1956                           
  1957                           ; BSR set to: 0
  1958  001D5A  8D9E               	bsf	___ftadd@sign& (0+255),6,b
  1959                           
  1960                           ; BSR set to: 0
  1961  001D5C  8F96               	bsf	(___ftadd@f1+1)& (0+255),7,b
  1962                           
  1963                           ; BSR set to: 0
  1964  001D5E  0EFF               	movlw	255
  1965  001D60  1795               	andwf	___ftadd@f1& (0+255),f,b
  1966  001D62  0EFF               	movlw	255
  1967  001D64  1796               	andwf	(___ftadd@f1+1)& (0+255),f,b
  1968  001D66  0E00               	movlw	0
  1969  001D68  1797               	andwf	(___ftadd@f1+2)& (0+255),f,b
  1970  001D6A  8F99               	bsf	(___ftadd@f2+1)& (0+255),7,b
  1971                           
  1972                           ; BSR set to: 0
  1973  001D6C  0EFF               	movlw	255
  1974  001D6E  1798               	andwf	___ftadd@f2& (0+255),f,b
  1975  001D70  0EFF               	movlw	255
  1976  001D72  1799               	andwf	(___ftadd@f2+1)& (0+255),f,b
  1977  001D74  0E00               	movlw	0
  1978  001D76  179A               	andwf	(___ftadd@f2+2)& (0+255),f,b
  1979                           
  1980                           ; BSR set to: 0
  1981  001D78  519F               	movf	___ftadd@exp2& (0+255),w,b
  1982  001D7A  5DA0               	subwf	___ftadd@exp1& (0+255),w,b
  1983  001D7C  B0D8               	btfsc	status,0,c
  1984  001D7E  D01B               	goto	l3883
  1985  001D80                     u4490:
  1986                           
  1987                           ; BSR set to: 0
  1988  001D80  90D8               	bcf	status,0,c
  1989  001D82  3798               	rlcf	___ftadd@f2& (0+255),f,b
  1990  001D84  3799               	rlcf	(___ftadd@f2+1)& (0+255),f,b
  1991  001D86  379A               	rlcf	(___ftadd@f2+2)& (0+255),f,b
  1992  001D88  079F               	decf	___ftadd@exp2& (0+255),f,b
  1993                           
  1994                           ; BSR set to: 0
  1995  001D8A  51A0               	movf	___ftadd@exp1& (0+255),w,b
  1996  001D8C  199F               	xorwf	___ftadd@exp2& (0+255),w,b
  1997  001D8E  B4D8               	btfsc	status,2,c
  1998  001D90  D00D               	goto	l3881
  1999                           
  2000                           ; BSR set to: 0
  2001  001D92  079E               	decf	___ftadd@sign& (0+255),f,b
  2002  001D94  C09E  F09B         	movff	___ftadd@sign,??___ftadd
  2003  001D98  0E07               	movlw	7
  2004  001D9A  179B               	andwf	??___ftadd& (0+255),f,b
  2005  001D9C  B4D8               	btfsc	status,2,c
  2006  001D9E  D006               	goto	l3881
  2007  001DA0  D7EF               	goto	u4490
  2008  001DA2                     l3879:
  2009                           
  2010                           ; BSR set to: 0
  2011  001DA2  90D8               	bcf	status,0,c
  2012  001DA4  3397               	rrcf	(___ftadd@f1+2)& (0+255),f,b
  2013  001DA6  3396               	rrcf	(___ftadd@f1+1)& (0+255),f,b
  2014  001DA8  3395               	rrcf	___ftadd@f1& (0+255),f,b
  2015  001DAA  2BA0               	incf	___ftadd@exp1& (0+255),f,b
  2016  001DAC                     l3881:
  2017                           
  2018                           ; BSR set to: 0
  2019  001DAC  519F               	movf	___ftadd@exp2& (0+255),w,b
  2020  001DAE  19A0               	xorwf	___ftadd@exp1& (0+255),w,b
  2021  001DB0  B4D8               	btfsc	status,2,c
  2022  001DB2  D01F               	goto	u4560
  2023  001DB4  D7F6               	goto	l3879
  2024  001DB6                     l3883:
  2025                           
  2026                           ; BSR set to: 0
  2027  001DB6  51A0               	movf	___ftadd@exp1& (0+255),w,b
  2028  001DB8  5D9F               	subwf	___ftadd@exp2& (0+255),w,b
  2029  001DBA  B0D8               	btfsc	status,0,c
  2030  001DBC  D01A               	goto	u4560
  2031  001DBE                     u4530:
  2032                           
  2033                           ; BSR set to: 0
  2034  001DBE  90D8               	bcf	status,0,c
  2035  001DC0  3795               	rlcf	___ftadd@f1& (0+255),f,b
  2036  001DC2  3796               	rlcf	(___ftadd@f1+1)& (0+255),f,b
  2037  001DC4  3797               	rlcf	(___ftadd@f1+2)& (0+255),f,b
  2038  001DC6  07A0               	decf	___ftadd@exp1& (0+255),f,b
  2039                           
  2040                           ; BSR set to: 0
  2041  001DC8  51A0               	movf	___ftadd@exp1& (0+255),w,b
  2042  001DCA  199F               	xorwf	___ftadd@exp2& (0+255),w,b
  2043  001DCC  B4D8               	btfsc	status,2,c
  2044  001DCE  D00D               	goto	l3893
  2045                           
  2046                           ; BSR set to: 0
  2047  001DD0  079E               	decf	___ftadd@sign& (0+255),f,b
  2048  001DD2  C09E  F09B         	movff	___ftadd@sign,??___ftadd
  2049  001DD6  0E07               	movlw	7
  2050  001DD8  179B               	andwf	??___ftadd& (0+255),f,b
  2051  001DDA  B4D8               	btfsc	status,2,c
  2052  001DDC  D006               	goto	l3893
  2053  001DDE  D7EF               	goto	u4530
  2054  001DE0                     l3891:
  2055                           
  2056                           ; BSR set to: 0
  2057  001DE0  90D8               	bcf	status,0,c
  2058  001DE2  339A               	rrcf	(___ftadd@f2+2)& (0+255),f,b
  2059  001DE4  3399               	rrcf	(___ftadd@f2+1)& (0+255),f,b
  2060  001DE6  3398               	rrcf	___ftadd@f2& (0+255),f,b
  2061  001DE8  2B9F               	incf	___ftadd@exp2& (0+255),f,b
  2062  001DEA                     l3893:
  2063                           
  2064                           ; BSR set to: 0
  2065  001DEA  519F               	movf	___ftadd@exp2& (0+255),w,b
  2066  001DEC  19A0               	xorwf	___ftadd@exp1& (0+255),w,b
  2067  001DEE  A4D8               	btfss	status,2,c
  2068  001DF0  D7F7               	goto	l3891
  2069  001DF2                     u4560:
  2070                           
  2071                           ; BSR set to: 0
  2072  001DF2  AF9E               	btfss	___ftadd@sign& (0+255),7,b
  2073  001DF4  D00C               	goto	l636
  2074                           
  2075                           ; BSR set to: 0
  2076  001DF6  0EFF               	movlw	255
  2077  001DF8  1B95               	xorwf	___ftadd@f1& (0+255),f,b
  2078  001DFA  0EFF               	movlw	255
  2079  001DFC  1B96               	xorwf	(___ftadd@f1+1)& (0+255),f,b
  2080  001DFE  0EFF               	movlw	255
  2081  001E00  1B97               	xorwf	(___ftadd@f1+2)& (0+255),f,b
  2082  001E02  0E01               	movlw	1
  2083  001E04  2795               	addwf	___ftadd@f1& (0+255),f,b
  2084  001E06  0E00               	movlw	0
  2085  001E08  2396               	addwfc	(___ftadd@f1+1)& (0+255),f,b
  2086  001E0A  0E00               	movlw	0
  2087  001E0C  2397               	addwfc	(___ftadd@f1+2)& (0+255),f,b
  2088  001E0E                     l636:
  2089                           
  2090                           ; BSR set to: 0
  2091  001E0E  AD9E               	btfss	___ftadd@sign& (0+255),6,b
  2092  001E10  D00C               	goto	l3899
  2093                           
  2094                           ; BSR set to: 0
  2095  001E12  0EFF               	movlw	255
  2096  001E14  1B98               	xorwf	___ftadd@f2& (0+255),f,b
  2097  001E16  0EFF               	movlw	255
  2098  001E18  1B99               	xorwf	(___ftadd@f2+1)& (0+255),f,b
  2099  001E1A  0EFF               	movlw	255
  2100  001E1C  1B9A               	xorwf	(___ftadd@f2+2)& (0+255),f,b
  2101  001E1E  0E01               	movlw	1
  2102  001E20  2798               	addwf	___ftadd@f2& (0+255),f,b
  2103  001E22  0E00               	movlw	0
  2104  001E24  2399               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  2105  001E26  0E00               	movlw	0
  2106  001E28  239A               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  2107  001E2A                     l3899:
  2108                           
  2109                           ; BSR set to: 0
  2110  001E2A  0E00               	movlw	0
  2111  001E2C  6F9E               	movwf	___ftadd@sign& (0+255),b
  2112                           
  2113                           ; BSR set to: 0
  2114  001E2E  5195               	movf	___ftadd@f1& (0+255),w,b
  2115  001E30  2798               	addwf	___ftadd@f2& (0+255),f,b
  2116  001E32  5196               	movf	(___ftadd@f1+1)& (0+255),w,b
  2117  001E34  2399               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  2118  001E36  5197               	movf	(___ftadd@f1+2)& (0+255),w,b
  2119  001E38  239A               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  2120                           
  2121                           ; BSR set to: 0
  2122  001E3A  AF9A               	btfss	(___ftadd@f2+2)& (0+255),7,b
  2123  001E3C  D00E               	goto	l3909
  2124                           
  2125                           ; BSR set to: 0
  2126  001E3E  0EFF               	movlw	255
  2127  001E40  1B98               	xorwf	___ftadd@f2& (0+255),f,b
  2128  001E42  0EFF               	movlw	255
  2129  001E44  1B99               	xorwf	(___ftadd@f2+1)& (0+255),f,b
  2130  001E46  0EFF               	movlw	255
  2131  001E48  1B9A               	xorwf	(___ftadd@f2+2)& (0+255),f,b
  2132  001E4A  0E01               	movlw	1
  2133  001E4C  2798               	addwf	___ftadd@f2& (0+255),f,b
  2134  001E4E  0E00               	movlw	0
  2135  001E50  2399               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  2136  001E52  0E00               	movlw	0
  2137  001E54  239A               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  2138                           
  2139                           ; BSR set to: 0
  2140  001E56  0E01               	movlw	1
  2141  001E58  6F9E               	movwf	___ftadd@sign& (0+255),b
  2142  001E5A                     l3909:
  2143                           
  2144                           ; BSR set to: 0
  2145  001E5A  C098  F07E         	movff	___ftadd@f2,___ftpack@arg
  2146  001E5E  C099  F07F         	movff	___ftadd@f2+1,___ftpack@arg+1
  2147  001E62  C09A  F080         	movff	___ftadd@f2+2,___ftpack@arg+2
  2148  001E66  C0A0  F081         	movff	___ftadd@exp1,___ftpack@exp
  2149  001E6A  C09E  F082         	movff	___ftadd@sign,___ftpack@sign
  2150  001E6E  EC34  F016         	call	___ftpack	;wreg free
  2151  001E72  C07E  F095         	movff	?___ftpack,?___ftadd
  2152  001E76  C07F  F096         	movff	?___ftpack+1,?___ftadd+1
  2153  001E7A  C080  F097         	movff	?___ftpack+2,?___ftadd+2
  2154                           
  2155                           ; BSR set to: 0
  2156  001E7E  0012               	return		;funcret
  2157  001E80                     __end_of___ftadd:
  2158                           	callstack 0
  2159                           
  2160 ;; *************** function ___ftmul *****************
  2161 ;; Defined at:
  2162 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\ftmul.c"
  2163 ;; Parameters:    Size  Location     Type
  2164 ;;  f1              3   38[BANK0 ] float 
  2165 ;;  f2              3   41[BANK0 ] float 
  2166 ;; Auto vars:     Size  Location     Type
  2167 ;;  f3_as_produc    3   48[BANK0 ] unsigned um
  2168 ;;  sign            1   52[BANK0 ] unsigned char 
  2169 ;;  cntr            1   51[BANK0 ] unsigned char 
  2170 ;;  exp             1   47[BANK0 ] unsigned char 
  2171 ;; Return value:  Size  Location     Type
  2172 ;;                  3   38[BANK0 ] float 
  2173 ;; Registers used:
  2174 ;;		wreg, status,2, status,0, cstack
  2175 ;; Tracked objects:
  2176 ;;		On entry : 3F/0
  2177 ;;		On exit  : 3F/0
  2178 ;;		Unchanged: 0/0
  2179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2180 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2181 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2182 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2183 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2184 ;;Total ram usage:       15 bytes
  2185 ;; Hardware stack levels used: 1
  2186 ;; Hardware stack levels required when called: 6
  2187 ;; This function calls:
  2188 ;;		___ftpack
  2189 ;; This function is called by:
  2190 ;;		_deg2time1
  2191 ;;		_deg2time2
  2192 ;; This function uses a non-reentrant model
  2193 ;;
  2194                           
  2195                           	psect	text7
  2196  002606                     __ptext7:
  2197                           	callstack 0
  2198  002606                     ___ftmul:
  2199                           	callstack 22
  2200                           
  2201                           ; BSR set to: 0
  2202                           
  2203                           ; BSR set to: 0
  2204                           ;incstack = 0
  2205  002606  C088  F08C         	movff	___ftmul@f1+2,??___ftmul
  2206  00260A  6B8D               	clrf	(??___ftmul+1)& (0+255),b
  2207  00260C  6B8E               	clrf	(??___ftmul+2)& (0+255),b
  2208  00260E  3587               	rlcf	(___ftmul@f1+1)& (0+255),w,b
  2209  002610  378C               	rlcf	??___ftmul& (0+255),f,b
  2210  002612  E301               	bnc	u4651
  2211  002614  818D               	bsf	(??___ftmul+1)& (0+255),0,b
  2212  002616                     u4651:
  2213  002616  518C               	movf	??___ftmul& (0+255),w,b
  2214  002618  6F8F               	movwf	___ftmul@exp& (0+255),b
  2215  00261A  518F               	movf	___ftmul@exp& (0+255),w,b
  2216  00261C  A4D8               	btfss	status,2,c
  2217  00261E  D007               	goto	l3965
  2218                           
  2219                           ; BSR set to: 0
  2220  002620  0E00               	movlw	0
  2221  002622  6F86               	movwf	?___ftmul& (0+255),b
  2222  002624  0E00               	movlw	0
  2223  002626  6F87               	movwf	(?___ftmul+1)& (0+255),b
  2224  002628  0E00               	movlw	0
  2225  00262A  6F88               	movwf	(?___ftmul+2)& (0+255),b
  2226  00262C  0012               	return	
  2227  00262E                     l3965:
  2228                           
  2229                           ; BSR set to: 0
  2230  00262E  C08B  F08C         	movff	___ftmul@f2+2,??___ftmul
  2231  002632  6B8D               	clrf	(??___ftmul+1)& (0+255),b
  2232  002634  6B8E               	clrf	(??___ftmul+2)& (0+255),b
  2233  002636  358A               	rlcf	(___ftmul@f2+1)& (0+255),w,b
  2234  002638  378C               	rlcf	??___ftmul& (0+255),f,b
  2235  00263A  E301               	bnc	u4671
  2236  00263C  818D               	bsf	(??___ftmul+1)& (0+255),0,b
  2237  00263E                     u4671:
  2238  00263E  518C               	movf	??___ftmul& (0+255),w,b
  2239  002640  6F94               	movwf	___ftmul@sign& (0+255),b
  2240  002642  5194               	movf	___ftmul@sign& (0+255),w,b
  2241  002644  A4D8               	btfss	status,2,c
  2242  002646  D007               	goto	l3971
  2243                           
  2244                           ; BSR set to: 0
  2245  002648  0E00               	movlw	0
  2246  00264A  6F86               	movwf	?___ftmul& (0+255),b
  2247  00264C  0E00               	movlw	0
  2248  00264E  6F87               	movwf	(?___ftmul+1)& (0+255),b
  2249  002650  0E00               	movlw	0
  2250  002652  6F88               	movwf	(?___ftmul+2)& (0+255),b
  2251  002654  0012               	return	
  2252  002656                     l3971:
  2253                           
  2254                           ; BSR set to: 0
  2255  002656  5194               	movf	___ftmul@sign& (0+255),w,b
  2256  002658  0F7B               	addlw	123
  2257  00265A  278F               	addwf	___ftmul@exp& (0+255),f,b
  2258                           
  2259                           ; BSR set to: 0
  2260  00265C  C088  F094         	movff	___ftmul@f1+2,___ftmul@sign
  2261  002660  518B               	movf	(___ftmul@f2+2)& (0+255),w,b
  2262  002662  1B94               	xorwf	___ftmul@sign& (0+255),f,b
  2263  002664  0E80               	movlw	128
  2264  002666  1794               	andwf	___ftmul@sign& (0+255),f,b
  2265                           
  2266                           ; BSR set to: 0
  2267  002668  8F87               	bsf	(___ftmul@f1+1)& (0+255),7,b
  2268                           
  2269                           ; BSR set to: 0
  2270  00266A  8F8A               	bsf	(___ftmul@f2+1)& (0+255),7,b
  2271                           
  2272                           ; BSR set to: 0
  2273  00266C  0EFF               	movlw	255
  2274  00266E  1789               	andwf	___ftmul@f2& (0+255),f,b
  2275  002670  0EFF               	movlw	255
  2276  002672  178A               	andwf	(___ftmul@f2+1)& (0+255),f,b
  2277  002674  0E00               	movlw	0
  2278  002676  178B               	andwf	(___ftmul@f2+2)& (0+255),f,b
  2279                           
  2280                           ; BSR set to: 0
  2281  002678  0E00               	movlw	0
  2282  00267A  6F90               	movwf	___ftmul@f3_as_product& (0+255),b
  2283  00267C  0E00               	movlw	0
  2284  00267E  6F91               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
  2285  002680  0E00               	movlw	0
  2286  002682  6F92               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
  2287                           
  2288                           ; BSR set to: 0
  2289  002684  0E07               	movlw	7
  2290  002686  6F93               	movwf	___ftmul@cntr& (0+255),b
  2291  002688                     l3985:
  2292                           
  2293                           ; BSR set to: 0
  2294  002688  A186               	btfss	___ftmul@f1& (0+255),0,b
  2295  00268A  D006               	goto	l3989
  2296                           
  2297                           ; BSR set to: 0
  2298  00268C  5189               	movf	___ftmul@f2& (0+255),w,b
  2299  00268E  2790               	addwf	___ftmul@f3_as_product& (0+255),f,b
  2300  002690  518A               	movf	(___ftmul@f2+1)& (0+255),w,b
  2301  002692  2391               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  2302  002694  518B               	movf	(___ftmul@f2+2)& (0+255),w,b
  2303  002696  2392               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  2304  002698                     l3989:
  2305                           
  2306                           ; BSR set to: 0
  2307  002698  90D8               	bcf	status,0,c
  2308  00269A  3388               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  2309  00269C  3387               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  2310  00269E  3386               	rrcf	___ftmul@f1& (0+255),f,b
  2311  0026A0  90D8               	bcf	status,0,c
  2312  0026A2  3789               	rlcf	___ftmul@f2& (0+255),f,b
  2313  0026A4  378A               	rlcf	(___ftmul@f2+1)& (0+255),f,b
  2314  0026A6  378B               	rlcf	(___ftmul@f2+2)& (0+255),f,b
  2315                           
  2316                           ; BSR set to: 0
  2317  0026A8  2F93               	decfsz	___ftmul@cntr& (0+255),f,b
  2318  0026AA  D7EE               	goto	l3985
  2319                           
  2320                           ; BSR set to: 0
  2321  0026AC  0E09               	movlw	9
  2322  0026AE  6F93               	movwf	___ftmul@cntr& (0+255),b
  2323  0026B0                     l3995:
  2324                           
  2325                           ; BSR set to: 0
  2326  0026B0  A186               	btfss	___ftmul@f1& (0+255),0,b
  2327  0026B2  D006               	goto	l3999
  2328                           
  2329                           ; BSR set to: 0
  2330  0026B4  5189               	movf	___ftmul@f2& (0+255),w,b
  2331  0026B6  2790               	addwf	___ftmul@f3_as_product& (0+255),f,b
  2332  0026B8  518A               	movf	(___ftmul@f2+1)& (0+255),w,b
  2333  0026BA  2391               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  2334  0026BC  518B               	movf	(___ftmul@f2+2)& (0+255),w,b
  2335  0026BE  2392               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  2336  0026C0                     l3999:
  2337                           
  2338                           ; BSR set to: 0
  2339  0026C0  90D8               	bcf	status,0,c
  2340  0026C2  3388               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  2341  0026C4  3387               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  2342  0026C6  3386               	rrcf	___ftmul@f1& (0+255),f,b
  2343  0026C8  90D8               	bcf	status,0,c
  2344  0026CA  3392               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
  2345  0026CC  3391               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
  2346  0026CE  3390               	rrcf	___ftmul@f3_as_product& (0+255),f,b
  2347                           
  2348                           ; BSR set to: 0
  2349  0026D0  2F93               	decfsz	___ftmul@cntr& (0+255),f,b
  2350  0026D2  D7EE               	goto	l3995
  2351                           
  2352                           ; BSR set to: 0
  2353  0026D4  C090  F07E         	movff	___ftmul@f3_as_product,___ftpack@arg
  2354  0026D8  C091  F07F         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  2355  0026DC  C092  F080         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  2356  0026E0  C08F  F081         	movff	___ftmul@exp,___ftpack@exp
  2357  0026E4  C094  F082         	movff	___ftmul@sign,___ftpack@sign
  2358  0026E8  EC34  F016         	call	___ftpack	;wreg free
  2359  0026EC  C07E  F086         	movff	?___ftpack,?___ftmul
  2360  0026F0  C07F  F087         	movff	?___ftpack+1,?___ftmul+1
  2361  0026F4  C080  F088         	movff	?___ftpack+2,?___ftmul+2
  2362                           
  2363                           ; BSR set to: 0
  2364  0026F8  0012               	return		;funcret
  2365  0026FA                     __end_of___ftmul:
  2366                           	callstack 0
  2367                           
  2368 ;; *************** function ___ftdiv *****************
  2369 ;; Defined at:
  2370 ;;		line 54 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\ftdiv.c"
  2371 ;; Parameters:    Size  Location     Type
  2372 ;;  f1              3   38[BANK0 ] float 
  2373 ;;  f2              3   41[BANK0 ] float 
  2374 ;; Auto vars:     Size  Location     Type
  2375 ;;  f3              3   48[BANK0 ] float 
  2376 ;;  sign            1   52[BANK0 ] unsigned char 
  2377 ;;  exp             1   51[BANK0 ] unsigned char 
  2378 ;;  cntr            1   47[BANK0 ] unsigned char 
  2379 ;; Return value:  Size  Location     Type
  2380 ;;                  3   38[BANK0 ] float 
  2381 ;; Registers used:
  2382 ;;		wreg, status,2, status,0, cstack
  2383 ;; Tracked objects:
  2384 ;;		On entry : 3F/0
  2385 ;;		On exit  : 3F/0
  2386 ;;		Unchanged: 0/0
  2387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2388 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2389 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2390 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2391 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2392 ;;Total ram usage:       15 bytes
  2393 ;; Hardware stack levels used: 1
  2394 ;; Hardware stack levels required when called: 6
  2395 ;; This function calls:
  2396 ;;		___ftpack
  2397 ;; This function is called by:
  2398 ;;		_deg2time1
  2399 ;;		_deg2time2
  2400 ;; This function uses a non-reentrant model
  2401 ;;
  2402                           
  2403                           	psect	text8
  2404  0029CA                     __ptext8:
  2405                           	callstack 0
  2406  0029CA                     ___ftdiv:
  2407                           	callstack 22
  2408                           
  2409                           ; BSR set to: 0
  2410                           
  2411                           ; BSR set to: 0
  2412                           ;incstack = 0
  2413  0029CA  C088  F08C         	movff	___ftdiv@f1+2,??___ftdiv
  2414  0029CE  6B8D               	clrf	(??___ftdiv+1)& (0+255),b
  2415  0029D0  6B8E               	clrf	(??___ftdiv+2)& (0+255),b
  2416  0029D2  3587               	rlcf	(___ftdiv@f1+1)& (0+255),w,b
  2417  0029D4  378C               	rlcf	??___ftdiv& (0+255),f,b
  2418  0029D6  E301               	bnc	u4601
  2419  0029D8  818D               	bsf	(??___ftdiv+1)& (0+255),0,b
  2420  0029DA                     u4601:
  2421  0029DA  518C               	movf	??___ftdiv& (0+255),w,b
  2422  0029DC  6F93               	movwf	___ftdiv@exp& (0+255),b
  2423  0029DE  5193               	movf	___ftdiv@exp& (0+255),w,b
  2424  0029E0  A4D8               	btfss	status,2,c
  2425  0029E2  D007               	goto	l3919
  2426                           
  2427                           ; BSR set to: 0
  2428  0029E4  0E00               	movlw	0
  2429  0029E6  6F86               	movwf	?___ftdiv& (0+255),b
  2430  0029E8  0E00               	movlw	0
  2431  0029EA  6F87               	movwf	(?___ftdiv+1)& (0+255),b
  2432  0029EC  0E00               	movlw	0
  2433  0029EE  6F88               	movwf	(?___ftdiv+2)& (0+255),b
  2434  0029F0  0012               	return	
  2435  0029F2                     l3919:
  2436                           
  2437                           ; BSR set to: 0
  2438  0029F2  C08B  F08C         	movff	___ftdiv@f2+2,??___ftdiv
  2439  0029F6  6B8D               	clrf	(??___ftdiv+1)& (0+255),b
  2440  0029F8  6B8E               	clrf	(??___ftdiv+2)& (0+255),b
  2441  0029FA  358A               	rlcf	(___ftdiv@f2+1)& (0+255),w,b
  2442  0029FC  378C               	rlcf	??___ftdiv& (0+255),f,b
  2443  0029FE  E301               	bnc	u4621
  2444  002A00  818D               	bsf	(??___ftdiv+1)& (0+255),0,b
  2445  002A02                     u4621:
  2446  002A02  518C               	movf	??___ftdiv& (0+255),w,b
  2447  002A04  6F94               	movwf	___ftdiv@sign& (0+255),b
  2448  002A06  5194               	movf	___ftdiv@sign& (0+255),w,b
  2449  002A08  A4D8               	btfss	status,2,c
  2450  002A0A  D007               	goto	l3925
  2451                           
  2452                           ; BSR set to: 0
  2453  002A0C  0E00               	movlw	0
  2454  002A0E  6F86               	movwf	?___ftdiv& (0+255),b
  2455  002A10  0E00               	movlw	0
  2456  002A12  6F87               	movwf	(?___ftdiv+1)& (0+255),b
  2457  002A14  0E00               	movlw	0
  2458  002A16  6F88               	movwf	(?___ftdiv+2)& (0+255),b
  2459  002A18  0012               	return	
  2460  002A1A                     l3925:
  2461                           
  2462                           ; BSR set to: 0
  2463  002A1A  0E00               	movlw	0
  2464  002A1C  6F90               	movwf	___ftdiv@f3& (0+255),b
  2465  002A1E  0E00               	movlw	0
  2466  002A20  6F91               	movwf	(___ftdiv@f3+1)& (0+255),b
  2467  002A22  0E00               	movlw	0
  2468  002A24  6F92               	movwf	(___ftdiv@f3+2)& (0+255),b
  2469                           
  2470                           ; BSR set to: 0
  2471  002A26  5194               	movf	___ftdiv@sign& (0+255),w,b
  2472  002A28  0F89               	addlw	137
  2473  002A2A  5F93               	subwf	___ftdiv@exp& (0+255),f,b
  2474                           
  2475                           ; BSR set to: 0
  2476  002A2C  C088  F094         	movff	___ftdiv@f1+2,___ftdiv@sign
  2477                           
  2478                           ; BSR set to: 0
  2479  002A30  518B               	movf	(___ftdiv@f2+2)& (0+255),w,b
  2480  002A32  1B94               	xorwf	___ftdiv@sign& (0+255),f,b
  2481                           
  2482                           ; BSR set to: 0
  2483  002A34  0E80               	movlw	128
  2484  002A36  1794               	andwf	___ftdiv@sign& (0+255),f,b
  2485                           
  2486                           ; BSR set to: 0
  2487  002A38  8F87               	bsf	(___ftdiv@f1+1)& (0+255),7,b
  2488                           
  2489                           ; BSR set to: 0
  2490  002A3A  0EFF               	movlw	255
  2491  002A3C  1786               	andwf	___ftdiv@f1& (0+255),f,b
  2492  002A3E  0EFF               	movlw	255
  2493  002A40  1787               	andwf	(___ftdiv@f1+1)& (0+255),f,b
  2494  002A42  0E00               	movlw	0
  2495  002A44  1788               	andwf	(___ftdiv@f1+2)& (0+255),f,b
  2496                           
  2497                           ; BSR set to: 0
  2498  002A46  8F8A               	bsf	(___ftdiv@f2+1)& (0+255),7,b
  2499                           
  2500                           ; BSR set to: 0
  2501  002A48  0EFF               	movlw	255
  2502  002A4A  1789               	andwf	___ftdiv@f2& (0+255),f,b
  2503  002A4C  0EFF               	movlw	255
  2504  002A4E  178A               	andwf	(___ftdiv@f2+1)& (0+255),f,b
  2505  002A50  0E00               	movlw	0
  2506  002A52  178B               	andwf	(___ftdiv@f2+2)& (0+255),f,b
  2507                           
  2508                           ; BSR set to: 0
  2509  002A54  0E18               	movlw	24
  2510  002A56  6F8F               	movwf	___ftdiv@cntr& (0+255),b
  2511  002A58                     l3945:
  2512                           
  2513                           ; BSR set to: 0
  2514  002A58  90D8               	bcf	status,0,c
  2515  002A5A  3790               	rlcf	___ftdiv@f3& (0+255),f,b
  2516  002A5C  3791               	rlcf	(___ftdiv@f3+1)& (0+255),f,b
  2517  002A5E  3792               	rlcf	(___ftdiv@f3+2)& (0+255),f,b
  2518                           
  2519                           ; BSR set to: 0
  2520  002A60  5189               	movf	___ftdiv@f2& (0+255),w,b
  2521  002A62  5D86               	subwf	___ftdiv@f1& (0+255),w,b
  2522  002A64  518A               	movf	(___ftdiv@f2+1)& (0+255),w,b
  2523  002A66  5987               	subwfb	(___ftdiv@f1+1)& (0+255),w,b
  2524  002A68  518B               	movf	(___ftdiv@f2+2)& (0+255),w,b
  2525  002A6A  5988               	subwfb	(___ftdiv@f1+2)& (0+255),w,b
  2526  002A6C  A0D8               	btfss	status,0,c
  2527  002A6E  D007               	goto	l647
  2528                           
  2529                           ; BSR set to: 0
  2530  002A70  5189               	movf	___ftdiv@f2& (0+255),w,b
  2531  002A72  5F86               	subwf	___ftdiv@f1& (0+255),f,b
  2532  002A74  518A               	movf	(___ftdiv@f2+1)& (0+255),w,b
  2533  002A76  5B87               	subwfb	(___ftdiv@f1+1)& (0+255),f,b
  2534  002A78  518B               	movf	(___ftdiv@f2+2)& (0+255),w,b
  2535  002A7A  5B88               	subwfb	(___ftdiv@f1+2)& (0+255),f,b
  2536                           
  2537                           ; BSR set to: 0
  2538  002A7C  8190               	bsf	___ftdiv@f3& (0+255),0,b
  2539  002A7E                     l647:
  2540                           
  2541                           ; BSR set to: 0
  2542  002A7E  90D8               	bcf	status,0,c
  2543  002A80  3786               	rlcf	___ftdiv@f1& (0+255),f,b
  2544  002A82  3787               	rlcf	(___ftdiv@f1+1)& (0+255),f,b
  2545  002A84  3788               	rlcf	(___ftdiv@f1+2)& (0+255),f,b
  2546                           
  2547                           ; BSR set to: 0
  2548  002A86  2F8F               	decfsz	___ftdiv@cntr& (0+255),f,b
  2549  002A88  D7E7               	goto	l3945
  2550                           
  2551                           ; BSR set to: 0
  2552  002A8A  C090  F07E         	movff	___ftdiv@f3,___ftpack@arg
  2553  002A8E  C091  F07F         	movff	___ftdiv@f3+1,___ftpack@arg+1
  2554  002A92  C092  F080         	movff	___ftdiv@f3+2,___ftpack@arg+2
  2555  002A96  C093  F081         	movff	___ftdiv@exp,___ftpack@exp
  2556  002A9A  C094  F082         	movff	___ftdiv@sign,___ftpack@sign
  2557  002A9E  EC34  F016         	call	___ftpack	;wreg free
  2558  002AA2  C07E  F086         	movff	?___ftpack,?___ftdiv
  2559  002AA6  C07F  F087         	movff	?___ftpack+1,?___ftdiv+1
  2560  002AAA  C080  F088         	movff	?___ftpack+2,?___ftdiv+2
  2561                           
  2562                           ; BSR set to: 0
  2563  002AAE  0012               	return		;funcret
  2564  002AB0                     __end_of___ftdiv:
  2565                           	callstack 0
  2566                           
  2567 ;; *************** function ___ftpack *****************
  2568 ;; Defined at:
  2569 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\float.c"
  2570 ;; Parameters:    Size  Location     Type
  2571 ;;  arg             3   30[BANK0 ] unsigned um
  2572 ;;  exp             1   33[BANK0 ] unsigned char 
  2573 ;;  sign            1   34[BANK0 ] unsigned char 
  2574 ;; Auto vars:     Size  Location     Type
  2575 ;;		None
  2576 ;; Return value:  Size  Location     Type
  2577 ;;                  3   30[BANK0 ] float 
  2578 ;; Registers used:
  2579 ;;		wreg, status,2, status,0
  2580 ;; Tracked objects:
  2581 ;;		On entry : 3F/0
  2582 ;;		On exit  : 3F/0
  2583 ;;		Unchanged: 0/0
  2584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2585 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2586 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2587 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2588 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2589 ;;Total ram usage:        8 bytes
  2590 ;; Hardware stack levels used: 1
  2591 ;; Hardware stack levels required when called: 5
  2592 ;; This function calls:
  2593 ;;		Nothing
  2594 ;; This function is called by:
  2595 ;;		___ftadd
  2596 ;;		___ftdiv
  2597 ;;		___ftmul
  2598 ;; This function uses a non-reentrant model
  2599 ;;
  2600                           
  2601                           	psect	text9
  2602  002C68                     __ptext9:
  2603                           	callstack 0
  2604  002C68                     ___ftpack:
  2605                           	callstack 21
  2606                           
  2607                           ; BSR set to: 0
  2608                           
  2609                           ; BSR set to: 0
  2610                           ;incstack = 0
  2611  002C68  5181               	movf	___ftpack@exp& (0+255),w,b
  2612  002C6A  B4D8               	btfsc	status,2,c
  2613  002C6C  D005               	goto	u4320
  2614                           
  2615                           ; BSR set to: 0
  2616  002C6E  517E               	movf	___ftpack@arg& (0+255),w,b
  2617  002C70  117F               	iorwf	(___ftpack@arg+1)& (0+255),w,b
  2618  002C72  1180               	iorwf	(___ftpack@arg+2)& (0+255),w,b
  2619  002C74  A4D8               	btfss	status,2,c
  2620  002C76  D00C               	goto	l3817
  2621  002C78                     u4320:
  2622                           
  2623                           ; BSR set to: 0
  2624  002C78  0E00               	movlw	0
  2625  002C7A  6F7E               	movwf	?___ftpack& (0+255),b
  2626  002C7C  0E00               	movlw	0
  2627  002C7E  6F7F               	movwf	(?___ftpack+1)& (0+255),b
  2628  002C80  0E00               	movlw	0
  2629  002C82  6F80               	movwf	(?___ftpack+2)& (0+255),b
  2630  002C84  0012               	return	
  2631  002C86                     l3815:
  2632                           
  2633                           ; BSR set to: 0
  2634  002C86  2B81               	incf	___ftpack@exp& (0+255),f,b
  2635  002C88  90D8               	bcf	status,0,c
  2636  002C8A  3380               	rrcf	(___ftpack@arg+2)& (0+255),f,b
  2637  002C8C  337F               	rrcf	(___ftpack@arg+1)& (0+255),f,b
  2638  002C8E  337E               	rrcf	___ftpack@arg& (0+255),f,b
  2639  002C90                     l3817:
  2640                           
  2641                           ; BSR set to: 0
  2642  002C90  0E00               	movlw	0
  2643  002C92  157E               	andwf	___ftpack@arg& (0+255),w,b
  2644  002C94  6F83               	movwf	??___ftpack& (0+255),b
  2645  002C96  0E00               	movlw	0
  2646  002C98  157F               	andwf	(___ftpack@arg+1)& (0+255),w,b
  2647  002C9A  6F84               	movwf	(??___ftpack+1)& (0+255),b
  2648  002C9C  0EFE               	movlw	254
  2649  002C9E  1580               	andwf	(___ftpack@arg+2)& (0+255),w,b
  2650  002CA0  6F85               	movwf	(??___ftpack+2)& (0+255),b
  2651  002CA2  5183               	movf	??___ftpack& (0+255),w,b
  2652  002CA4  1184               	iorwf	(??___ftpack+1)& (0+255),w,b
  2653  002CA6  1185               	iorwf	(??___ftpack+2)& (0+255),w,b
  2654  002CA8  B4D8               	btfsc	status,2,c
  2655  002CAA  D00C               	goto	l3823
  2656  002CAC  D7EC               	goto	l3815
  2657  002CAE                     l3819:
  2658                           
  2659                           ; BSR set to: 0
  2660  002CAE  2B81               	incf	___ftpack@exp& (0+255),f,b
  2661                           
  2662                           ; BSR set to: 0
  2663  002CB0  0E01               	movlw	1
  2664  002CB2  277E               	addwf	___ftpack@arg& (0+255),f,b
  2665  002CB4  0E00               	movlw	0
  2666  002CB6  237F               	addwfc	(___ftpack@arg+1)& (0+255),f,b
  2667  002CB8  0E00               	movlw	0
  2668  002CBA  2380               	addwfc	(___ftpack@arg+2)& (0+255),f,b
  2669  002CBC  90D8               	bcf	status,0,c
  2670  002CBE  3380               	rrcf	(___ftpack@arg+2)& (0+255),f,b
  2671  002CC0  337F               	rrcf	(___ftpack@arg+1)& (0+255),f,b
  2672  002CC2  337E               	rrcf	___ftpack@arg& (0+255),f,b
  2673  002CC4                     l3823:
  2674                           
  2675                           ; BSR set to: 0
  2676  002CC4  0E00               	movlw	0
  2677  002CC6  157E               	andwf	___ftpack@arg& (0+255),w,b
  2678  002CC8  6F83               	movwf	??___ftpack& (0+255),b
  2679  002CCA  0E00               	movlw	0
  2680  002CCC  157F               	andwf	(___ftpack@arg+1)& (0+255),w,b
  2681  002CCE  6F84               	movwf	(??___ftpack+1)& (0+255),b
  2682  002CD0  0EFF               	movlw	255
  2683  002CD2  1580               	andwf	(___ftpack@arg+2)& (0+255),w,b
  2684  002CD4  6F85               	movwf	(??___ftpack+2)& (0+255),b
  2685  002CD6  5183               	movf	??___ftpack& (0+255),w,b
  2686  002CD8  1184               	iorwf	(??___ftpack+1)& (0+255),w,b
  2687  002CDA  1185               	iorwf	(??___ftpack+2)& (0+255),w,b
  2688  002CDC  B4D8               	btfsc	status,2,c
  2689  002CDE  D006               	goto	l3827
  2690  002CE0  D7E6               	goto	l3819
  2691  002CE2                     l3825:
  2692                           
  2693                           ; BSR set to: 0
  2694  002CE2  0781               	decf	___ftpack@exp& (0+255),f,b
  2695  002CE4  90D8               	bcf	status,0,c
  2696  002CE6  377E               	rlcf	___ftpack@arg& (0+255),f,b
  2697  002CE8  377F               	rlcf	(___ftpack@arg+1)& (0+255),f,b
  2698  002CEA  3780               	rlcf	(___ftpack@arg+2)& (0+255),f,b
  2699  002CEC                     l3827:
  2700                           
  2701                           ; BSR set to: 0
  2702  002CEC  BF7F               	btfsc	(___ftpack@arg+1)& (0+255),7,b
  2703  002CEE  D003               	goto	u4360
  2704                           
  2705                           ; BSR set to: 0
  2706  002CF0  0E02               	movlw	2
  2707  002CF2  6181               	cpfslt	___ftpack@exp& (0+255),b
  2708  002CF4  D7F6               	goto	l3825
  2709  002CF6                     u4360:
  2710                           
  2711                           ; BSR set to: 0
  2712  002CF6  A181               	btfss	___ftpack@exp& (0+255),0,b
  2713                           
  2714                           ; BSR set to: 0
  2715  002CF8  9F7F               	bcf	(___ftpack@arg+1)& (0+255),7,b
  2716                           
  2717                           ; BSR set to: 0
  2718  002CFA  90D8               	bcf	status,0,c
  2719  002CFC  3381               	rrcf	___ftpack@exp& (0+255),f,b
  2720  002CFE  5181               	movf	___ftpack@exp& (0+255),w,b
  2721  002D00  1380               	iorwf	(___ftpack@arg+2)& (0+255),f,b
  2722                           
  2723                           ; BSR set to: 0
  2724  002D02  5182               	movf	___ftpack@sign& (0+255),w,b
  2725  002D04  A4D8               	btfss	status,2,c
  2726                           
  2727                           ; BSR set to: 0
  2728  002D06  8F80               	bsf	(___ftpack@arg+2)& (0+255),7,b
  2729                           
  2730                           ; BSR set to: 0
  2731  002D08  C07E  F07E         	movff	___ftpack@arg,?___ftpack
  2732  002D0C  C07F  F07F         	movff	___ftpack@arg+1,?___ftpack+1
  2733  002D10  C080  F080         	movff	___ftpack@arg+2,?___ftpack+2
  2734                           
  2735                           ; BSR set to: 0
  2736  002D14  0012               	return		;funcret
  2737  002D16                     __end_of___ftpack:
  2738                           	callstack 0
  2739                           
  2740 ;; *************** function _SettingsLCD *****************
  2741 ;; Defined at:
  2742 ;;		line 233 in file "PIC_ROBOT_2R.c"
  2743 ;; Parameters:    Size  Location     Type
  2744 ;;  word            1    wreg     unsigned char 
  2745 ;; Auto vars:     Size  Location     Type
  2746 ;;  word            1   32[BANK0 ] unsigned char 
  2747 ;; Return value:  Size  Location     Type
  2748 ;;                  1    wreg      void 
  2749 ;; Registers used:
  2750 ;;		wreg, status,2, status,0, cstack
  2751 ;; Tracked objects:
  2752 ;;		On entry : 0/F
  2753 ;;		On exit  : 0/0
  2754 ;;		Unchanged: 0/0
  2755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2756 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2757 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2758 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2759 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2760 ;;Total ram usage:        1 bytes
  2761 ;; Hardware stack levels used: 1
  2762 ;; Hardware stack levels required when called: 6
  2763 ;; This function calls:
  2764 ;;		_LCD
  2765 ;; This function is called by:
  2766 ;;		_settings
  2767 ;; This function uses a non-reentrant model
  2768 ;;
  2769                           
  2770                           	psect	text10
  2771  00348A                     __ptext10:
  2772                           	callstack 0
  2773  00348A                     _SettingsLCD:
  2774                           	callstack 23
  2775                           
  2776                           ; BSR set to: 0
  2777                           ;incstack = 0
  2778                           ;SettingsLCD@word stored from wreg
  2779  00348A  0100               	movlb	0	; () banked
  2780  00348C  6F80               	movwf	SettingsLCD@word& (0+255),b
  2781                           
  2782                           ;PIC_ROBOT_2R.c: 234: LATEbits.LATE1 = 0;
  2783  00348E  928D               	bcf	141,1,c	;volatile
  2784                           
  2785                           ;PIC_ROBOT_2R.c: 235: LCD(word >> 4);
  2786  003490  0100               	movlb	0	; () banked
  2787  003492  3980               	swapf	SettingsLCD@word& (0+255),w,b
  2788  003494  0B0F               	andlw	15
  2789  003496  ECE2  F016         	call	_LCD
  2790                           
  2791                           ;PIC_ROBOT_2R.c: 236: LCD(word & 0x0F);
  2792  00349A  0100               	movlb	0	; () banked
  2793  00349C  5180               	movf	SettingsLCD@word& (0+255),w,b
  2794  00349E  0B0F               	andlw	15
  2795  0034A0  ECE2  F016         	call	_LCD
  2796  0034A4  0012               	return		;funcret
  2797  0034A6                     __end_of_SettingsLCD:
  2798                           	callstack 0
  2799                           
  2800 ;; *************** function _LCD *****************
  2801 ;; Defined at:
  2802 ;;		line 245 in file "PIC_ROBOT_2R.c"
  2803 ;; Parameters:    Size  Location     Type
  2804 ;;  data            1    wreg     unsigned char 
  2805 ;; Auto vars:     Size  Location     Type
  2806 ;;  data            1   31[BANK0 ] unsigned char 
  2807 ;; Return value:  Size  Location     Type
  2808 ;;                  1    wreg      void 
  2809 ;; Registers used:
  2810 ;;		wreg, status,2, status,0, cstack
  2811 ;; Tracked objects:
  2812 ;;		On entry : 3F/0
  2813 ;;		On exit  : 0/0
  2814 ;;		Unchanged: 0/0
  2815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2816 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2817 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2818 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2819 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2820 ;;Total ram usage:        2 bytes
  2821 ;; Hardware stack levels used: 1
  2822 ;; Hardware stack levels required when called: 5
  2823 ;; This function calls:
  2824 ;;		Nothing
  2825 ;; This function is called by:
  2826 ;;		_SettingsLCD
  2827 ;; This function uses a non-reentrant model
  2828 ;;
  2829                           
  2830                           	psect	text11
  2831  002DC4                     __ptext11:
  2832                           	callstack 0
  2833  002DC4                     _LCD:
  2834                           	callstack 23
  2835                           
  2836                           ;incstack = 0
  2837                           ;LCD@data stored from wreg
  2838  002DC4  6F7F               	movwf	LCD@data& (0+255),b
  2839                           
  2840                           ;PIC_ROBOT_2R.c: 246: LATEbits.LATE0 = 1;
  2841  002DC6  808D               	bsf	141,0,c	;volatile
  2842                           
  2843                           ;PIC_ROBOT_2R.c: 247: _delay((unsigned long)((10)*(16000000/4000000.0)));
  2844  002DC8  0E0D               	movlw	13
  2845  002DCA                     u4807:
  2846  002DCA  2EE8               	decfsz	wreg,f,c
  2847  002DCC  D7FE               	bra	u4807
  2848  002DCE  F000               	nop	
  2849                           
  2850                           ;PIC_ROBOT_2R.c: 248: LATDbits.LATD0 = (data & 0x01);
  2851  002DD0  C07F  F07E         	movff	LCD@data,??_LCD
  2852  002DD4  0E01               	movlw	1
  2853  002DD6  0100               	movlb	0	; () banked
  2854  002DD8  177E               	andwf	??_LCD& (0+255),f,b
  2855  002DDA  508C               	movf	140,w,c	;volatile
  2856  002DDC  197E               	xorwf	??_LCD& (0+255),w,b
  2857  002DDE  0BFE               	andlw	-2
  2858  002DE0  197E               	xorwf	??_LCD& (0+255),w,b
  2859  002DE2  6E8C               	movwf	140,c	;volatile
  2860                           
  2861                           ; BSR set to: 0
  2862                           ;PIC_ROBOT_2R.c: 249: _delay((unsigned long)((10)*(16000000/4000000.0)));
  2863  002DE4  0E0D               	movlw	13
  2864  002DE6                     u4817:
  2865  002DE6  2EE8               	decfsz	wreg,f,c
  2866  002DE8  D7FE               	bra	u4817
  2867  002DEA  F000               	nop	
  2868                           
  2869                           ;PIC_ROBOT_2R.c: 250: LATDbits.LATD1 = (data & 0x02) >> 1;
  2870  002DEC  C07F  F07E         	movff	LCD@data,??_LCD
  2871  002DF0  0100               	movlb	0	; () banked
  2872  002DF2  90D8               	bcf	status,0,c
  2873  002DF4  337E               	rrcf	??_LCD& (0+255),f,b
  2874  002DF6  0E01               	movlw	1
  2875  002DF8  177E               	andwf	??_LCD& (0+255),f,b
  2876  002DFA  477E               	rlncf	??_LCD& (0+255),f,b
  2877  002DFC  508C               	movf	140,w,c	;volatile
  2878  002DFE  197E               	xorwf	??_LCD& (0+255),w,b
  2879  002E00  0BFD               	andlw	-3
  2880  002E02  197E               	xorwf	??_LCD& (0+255),w,b
  2881  002E04  6E8C               	movwf	140,c	;volatile
  2882                           
  2883                           ; BSR set to: 0
  2884                           ;PIC_ROBOT_2R.c: 251: _delay((unsigned long)((10)*(16000000/4000000.0)));
  2885  002E06  0E0D               	movlw	13
  2886  002E08                     u4827:
  2887  002E08  2EE8               	decfsz	wreg,f,c
  2888  002E0A  D7FE               	bra	u4827
  2889  002E0C  F000               	nop	
  2890                           
  2891                           ;PIC_ROBOT_2R.c: 252: LATDbits.LATD2 = (data & 0x04) >> 2;
  2892  002E0E  C07F  F07E         	movff	LCD@data,??_LCD
  2893  002E12  0100               	movlb	0	; () banked
  2894  002E14  90D8               	bcf	status,0,c
  2895  002E16  337E               	rrcf	??_LCD& (0+255),f,b
  2896  002E18  90D8               	bcf	status,0,c
  2897  002E1A  337E               	rrcf	??_LCD& (0+255),f,b
  2898  002E1C  0E01               	movlw	1
  2899  002E1E  177E               	andwf	??_LCD& (0+255),f,b
  2900  002E20  477E               	rlncf	??_LCD& (0+255),f,b
  2901  002E22  477E               	rlncf	??_LCD& (0+255),f,b
  2902  002E24  508C               	movf	140,w,c	;volatile
  2903  002E26  197E               	xorwf	??_LCD& (0+255),w,b
  2904  002E28  0BFB               	andlw	-5
  2905  002E2A  197E               	xorwf	??_LCD& (0+255),w,b
  2906  002E2C  6E8C               	movwf	140,c	;volatile
  2907                           
  2908                           ; BSR set to: 0
  2909                           ;PIC_ROBOT_2R.c: 253: _delay((unsigned long)((10)*(16000000/4000000.0)));
  2910  002E2E  0E0D               	movlw	13
  2911  002E30                     u4837:
  2912  002E30  2EE8               	decfsz	wreg,f,c
  2913  002E32  D7FE               	bra	u4837
  2914  002E34  F000               	nop	
  2915                           
  2916                           ;PIC_ROBOT_2R.c: 254: LATDbits.LATD3 = (data & 0x08) >> 3;
  2917  002E36  C07F  F07E         	movff	LCD@data,??_LCD
  2918  002E3A  0100               	movlb	0	; () banked
  2919  002E3C  90D8               	bcf	status,0,c
  2920  002E3E  337E               	rrcf	??_LCD& (0+255),f,b
  2921  002E40  90D8               	bcf	status,0,c
  2922  002E42  337E               	rrcf	??_LCD& (0+255),f,b
  2923  002E44  90D8               	bcf	status,0,c
  2924  002E46  337E               	rrcf	??_LCD& (0+255),f,b
  2925  002E48  0E01               	movlw	1
  2926  002E4A  177E               	andwf	??_LCD& (0+255),f,b
  2927  002E4C  477E               	rlncf	??_LCD& (0+255),f,b
  2928  002E4E  477E               	rlncf	??_LCD& (0+255),f,b
  2929  002E50  477E               	rlncf	??_LCD& (0+255),f,b
  2930  002E52  508C               	movf	140,w,c	;volatile
  2931  002E54  197E               	xorwf	??_LCD& (0+255),w,b
  2932  002E56  0BF7               	andlw	-9
  2933  002E58  197E               	xorwf	??_LCD& (0+255),w,b
  2934  002E5A  6E8C               	movwf	140,c	;volatile
  2935                           
  2936                           ; BSR set to: 0
  2937                           ;PIC_ROBOT_2R.c: 255: _delay((unsigned long)((10)*(16000000/4000000.0)));
  2938  002E5C  0E0D               	movlw	13
  2939  002E5E                     u4847:
  2940  002E5E  2EE8               	decfsz	wreg,f,c
  2941  002E60  D7FE               	bra	u4847
  2942  002E62  F000               	nop	
  2943                           
  2944                           ;PIC_ROBOT_2R.c: 256: LATEbits.LATE0 = 0;
  2945  002E64  908D               	bcf	141,0,c	;volatile
  2946                           
  2947                           ;PIC_ROBOT_2R.c: 257: _delay((unsigned long)((10)*(16000000/4000000.0)));
  2948  002E66  0E0D               	movlw	13
  2949  002E68                     u4857:
  2950  002E68  2EE8               	decfsz	wreg,f,c
  2951  002E6A  D7FE               	bra	u4857
  2952  002E6C  F000               	nop	
  2953  002E6E  0012               	return		;funcret
  2954  002E70                     __end_of_LCD:
  2955                           	callstack 0
  2956                           
  2957 ;; *************** function _TMR1_ISR *****************
  2958 ;; Defined at:
  2959 ;;		line 113 in file "PIC_ROBOT_2R.c"
  2960 ;; Parameters:    Size  Location     Type
  2961 ;;		None
  2962 ;; Auto vars:     Size  Location     Type
  2963 ;;  d               1   87[COMRAM] unsigned char 
  2964 ;; Return value:  Size  Location     Type
  2965 ;;                  1    wreg      void 
  2966 ;; Registers used:
  2967 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2968 ;; Tracked objects:
  2969 ;;		On entry : 0/0
  2970 ;;		On exit  : 0/0
  2971 ;;		Unchanged: 0/0
  2972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2973 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2974 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2975 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2976 ;;      Totals:         1       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2977 ;;Total ram usage:        9 bytes
  2978 ;; Hardware stack levels used: 1
  2979 ;; Hardware stack levels required when called: 4
  2980 ;; This function calls:
  2981 ;;		_DataLCD
  2982 ;;		___awtoft
  2983 ;;		_sprintf
  2984 ;;		i2_SettingsLCD
  2985 ;;		i2___ftadd
  2986 ;;		i2___ftmul
  2987 ;;		i2_deg2time1
  2988 ;;		i2_deg2time2
  2989 ;; This function is called by:
  2990 ;;		Interrupt level 2
  2991 ;; This function uses a non-reentrant model
  2992 ;;
  2993                           
  2994                           	psect	intcode
  2995  000008                     __pintcode:
  2996                           	callstack 0
  2997  000008                     _TMR1_ISR:
  2998                           	callstack 21
  2999                           
  3000                           ;incstack = 0
  3001  000008  825F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  3002  00000A  CFD9 F076          	movff	fsr2l,??_TMR1_ISR
  3003  00000E  CFDA F077          	movff	fsr2h,??_TMR1_ISR+1
  3004  000012  CFF3 F078          	movff	prodl,??_TMR1_ISR+2
  3005  000016  CFF4 F079          	movff	prodh,??_TMR1_ISR+3
  3006  00001A  CFF6 F07A          	movff	tblptrl,??_TMR1_ISR+4
  3007  00001E  CFF7 F07B          	movff	tblptrh,??_TMR1_ISR+5
  3008  000022  CFF8 F07C          	movff	tblptru,??_TMR1_ISR+6
  3009  000026  CFF5 F07D          	movff	tablat,??_TMR1_ISR+7
  3010                           
  3011                           ;PIC_ROBOT_2R.c: 114: unsigned char d;;PIC_ROBOT_2R.c: 116: if (TMR1IF) {
  3012  00002A  A09E               	btfss	3998,0,c	;volatile
  3013  00002C  D015               	goto	i2l132
  3014                           
  3015                           ;PIC_ROBOT_2R.c: 117: if (confir == 1){
  3016  00002E  0100               	movlb	0	; () banked
  3017  000030  05BF               	decf	_confir& (0+255),w,b
  3018  000032  11C0               	iorwf	(_confir+1)& (0+255),w,b
  3019  000034  A4D8               	btfss	status,2,c
  3020  000036  D010               	goto	i2l132
  3021                           
  3022                           ; BSR set to: 0
  3023                           ;PIC_ROBOT_2R.c: 118: if (LATD6 == 1) {
  3024  000038  AC8C               	btfss	3980,6,c	;volatile
  3025  00003A  D006               	goto	i2l134
  3026                           
  3027                           ; BSR set to: 0
  3028                           ;PIC_ROBOT_2R.c: 119: TMR1 = th1;
  3029  00003C  C0CB  FFCE         	movff	_th1,4046	;volatile
  3030  000040  C0CC  FFCF         	movff	_th1+1,4047	;volatile
  3031                           
  3032                           ;PIC_ROBOT_2R.c: 120: LATD6 = 0;
  3033  000044  9C8C               	bcf	3980,6,c	;volatile
  3034                           
  3035                           ;PIC_ROBOT_2R.c: 122: } else if (LATD6 == 0) {
  3036  000046  D007               	goto	i2l135
  3037  000048                     i2l134:
  3038                           
  3039                           ; BSR set to: 0
  3040  000048  BC8C               	btfsc	3980,6,c	;volatile
  3041  00004A  D005               	goto	i2l135
  3042                           
  3043                           ; BSR set to: 0
  3044                           ;PIC_ROBOT_2R.c: 123: TMR1 = tl1;
  3045  00004C  C0C9  FFCE         	movff	_tl1,4046	;volatile
  3046  000050  C0CA  FFCF         	movff	_tl1+1,4047	;volatile
  3047                           
  3048                           ;PIC_ROBOT_2R.c: 124: LATD6 = 1;
  3049  000054  8C8C               	bsf	3980,6,c	;volatile
  3050  000056                     i2l135:
  3051                           
  3052                           ; BSR set to: 0
  3053                           ;PIC_ROBOT_2R.c: 125: };PIC_ROBOT_2R.c: 126: TMR1IF = 0;
  3054  000056  909E               	bcf	3998,0,c	;volatile
  3055  000058                     i2l132:
  3056                           
  3057                           ;PIC_ROBOT_2R.c: 127: };PIC_ROBOT_2R.c: 128: };PIC_ROBOT_2R.c: 130: if (TMR3IF) {
  3058  000058  A2A1               	btfss	4001,1,c	;volatile
  3059  00005A  D015               	goto	i2l137
  3060                           
  3061                           ;PIC_ROBOT_2R.c: 131: if (confir == 1){
  3062  00005C  0100               	movlb	0	; () banked
  3063  00005E  05BF               	decf	_confir& (0+255),w,b
  3064  000060  11C0               	iorwf	(_confir+1)& (0+255),w,b
  3065  000062  A4D8               	btfss	status,2,c
  3066  000064  D010               	goto	i2l137
  3067                           
  3068                           ; BSR set to: 0
  3069                           ;PIC_ROBOT_2R.c: 132: if (LATD7 == 1) {
  3070  000066  AE8C               	btfss	3980,7,c	;volatile
  3071  000068  D006               	goto	i2l139
  3072                           
  3073                           ; BSR set to: 0
  3074                           ;PIC_ROBOT_2R.c: 133: TMR3 = th2;
  3075  00006A  C0C7  FFB2         	movff	_th2,4018	;volatile
  3076  00006E  C0C8  FFB3         	movff	_th2+1,4019	;volatile
  3077                           
  3078                           ;PIC_ROBOT_2R.c: 134: LATD7 = 0;
  3079  000072  9E8C               	bcf	3980,7,c	;volatile
  3080                           
  3081                           ;PIC_ROBOT_2R.c: 136: } else if (LATD7 == 0) {
  3082  000074  D007               	goto	i2l140
  3083  000076                     i2l139:
  3084                           
  3085                           ; BSR set to: 0
  3086  000076  BE8C               	btfsc	3980,7,c	;volatile
  3087  000078  D005               	goto	i2l140
  3088                           
  3089                           ; BSR set to: 0
  3090                           ;PIC_ROBOT_2R.c: 137: TMR3 = tl2;
  3091  00007A  C0C5  FFB2         	movff	_tl2,4018	;volatile
  3092  00007E  C0C6  FFB3         	movff	_tl2+1,4019	;volatile
  3093                           
  3094                           ;PIC_ROBOT_2R.c: 138: LATD7 = 1;
  3095  000082  8E8C               	bsf	3980,7,c	;volatile
  3096  000084                     i2l140:
  3097                           
  3098                           ; BSR set to: 0
  3099                           ;PIC_ROBOT_2R.c: 139: };PIC_ROBOT_2R.c: 140: TMR3IF = 0;
  3100  000084  92A1               	bcf	4001,1,c	;volatile
  3101  000086                     i2l137:
  3102                           
  3103                           ;PIC_ROBOT_2R.c: 141: };PIC_ROBOT_2R.c: 142: };PIC_ROBOT_2R.c: 144: if (RC1IF) {
  3104  000086  AA9E               	btfss	3998,5,c	;volatile
  3105  000088  D14F               	goto	i2l166
  3106                           
  3107                           ;PIC_ROBOT_2R.c: 145: d = RCREG1;
  3108  00008A  CFAE F058          	movff	4014,TMR1_ISR@d	;volatile
  3109                           
  3110                           ;PIC_ROBOT_2R.c: 147: if (d == 'A' || d == 'B'){
  3111  00008E  0E41               	movlw	65
  3112  000090  1858               	xorwf	TMR1_ISR@d^0,w,c
  3113  000092  B4D8               	btfsc	status,2,c
  3114  000094  D004               	goto	i2u411_40
  3115  000096  0E42               	movlw	66
  3116  000098  1858               	xorwf	TMR1_ISR@d^0,w,c
  3117  00009A  A4D8               	btfss	status,2,c
  3118  00009C  D007               	goto	i2l3735
  3119  00009E                     i2u411_40:
  3120                           
  3121                           ;PIC_ROBOT_2R.c: 148: servo = d;
  3122  00009E  C058  F05C         	movff	TMR1_ISR@d,_servo
  3123                           
  3124                           ;PIC_ROBOT_2R.c: 149: confir = 0;
  3125  0000A2  0E00               	movlw	0
  3126  0000A4  0100               	movlb	0	; () banked
  3127  0000A6  6FC0               	movwf	(_confir+1)& (0+255),b
  3128  0000A8  0E00               	movlw	0
  3129  0000AA  D13D               	goto	L1
  3130  0000AC                     i2l3735:
  3131                           
  3132                           ;PIC_ROBOT_2R.c: 152: else if (d == '0' || d == '1' || d == '2' || d == '3' || d == '4' 
      +                          || d == '5' || d == '6' || d == '7' || d == '8' || d == '9') {
  3133  0000AC  0E30               	movlw	48
  3134  0000AE  1858               	xorwf	TMR1_ISR@d^0,w,c
  3135  0000B0  B4D8               	btfsc	status,2,c
  3136  0000B2  D024               	goto	i2u421_40
  3137  0000B4  0E31               	movlw	49
  3138  0000B6  1858               	xorwf	TMR1_ISR@d^0,w,c
  3139  0000B8  B4D8               	btfsc	status,2,c
  3140  0000BA  D020               	goto	i2u421_40
  3141  0000BC  0E32               	movlw	50
  3142  0000BE  1858               	xorwf	TMR1_ISR@d^0,w,c
  3143  0000C0  B4D8               	btfsc	status,2,c
  3144  0000C2  D01C               	goto	i2u421_40
  3145  0000C4  0E33               	movlw	51
  3146  0000C6  1858               	xorwf	TMR1_ISR@d^0,w,c
  3147  0000C8  B4D8               	btfsc	status,2,c
  3148  0000CA  D018               	goto	i2u421_40
  3149  0000CC  0E34               	movlw	52
  3150  0000CE  1858               	xorwf	TMR1_ISR@d^0,w,c
  3151  0000D0  B4D8               	btfsc	status,2,c
  3152  0000D2  D014               	goto	i2u421_40
  3153  0000D4  0E35               	movlw	53
  3154  0000D6  1858               	xorwf	TMR1_ISR@d^0,w,c
  3155  0000D8  B4D8               	btfsc	status,2,c
  3156  0000DA  D010               	goto	i2u421_40
  3157  0000DC  0E36               	movlw	54
  3158  0000DE  1858               	xorwf	TMR1_ISR@d^0,w,c
  3159  0000E0  B4D8               	btfsc	status,2,c
  3160  0000E2  D00C               	goto	i2u421_40
  3161  0000E4  0E37               	movlw	55
  3162  0000E6  1858               	xorwf	TMR1_ISR@d^0,w,c
  3163  0000E8  B4D8               	btfsc	status,2,c
  3164  0000EA  D008               	goto	i2u421_40
  3165  0000EC  0E38               	movlw	56
  3166  0000EE  1858               	xorwf	TMR1_ISR@d^0,w,c
  3167  0000F0  B4D8               	btfsc	status,2,c
  3168  0000F2  D004               	goto	i2u421_40
  3169  0000F4  0E39               	movlw	57
  3170  0000F6  1858               	xorwf	TMR1_ISR@d^0,w,c
  3171  0000F8  A4D8               	btfss	status,2,c
  3172  0000FA  D0AC               	goto	i2l3777
  3173  0000FC                     i2u421_40:
  3174                           
  3175                           ;PIC_ROBOT_2R.c: 153: if (flag == 1) {
  3176  0000FC  045D               	decf	_flag^0,w,c
  3177  0000FE  105E               	iorwf	(_flag+1)^0,w,c
  3178  000100  A4D8               	btfss	status,2,c
  3179  000102  D012               	goto	i2l3761
  3180                           
  3181                           ;PIC_ROBOT_2R.c: 154: a = d - 48;
  3182  000104  0ED0               	movlw	208
  3183  000106  2458               	addwf	TMR1_ISR@d^0,w,c
  3184  000108  6E09               	movwf	___awtoft@c^0,c
  3185  00010A  6A0A               	clrf	(___awtoft@c+1)^0,c
  3186  00010C  0EFF               	movlw	255
  3187  00010E  220A               	addwfc	(___awtoft@c+1)^0,f,c
  3188  000110  ECCF  F019         	call	___awtoft	;wreg free
  3189  000114  C009  F059         	movff	?___awtoft,_a
  3190  000118  C00A  F05A         	movff	?___awtoft+1,_a+1
  3191  00011C  C00B  F05B         	movff	?___awtoft+2,_a+2
  3192                           
  3193                           ;PIC_ROBOT_2R.c: 155: flag = 2;
  3194  000120  0E00               	movlw	0
  3195  000122  6E5E               	movwf	(_flag+1)^0,c
  3196  000124  0E02               	movlw	2
  3197  000126  D09D               	goto	L4
  3198  000128                     i2l3761:
  3199                           
  3200                           ;PIC_ROBOT_2R.c: 157: else if(flag == 2){
  3201  000128  0E02               	movlw	2
  3202  00012A  185D               	xorwf	_flag^0,w,c
  3203  00012C  105E               	iorwf	(_flag+1)^0,w,c
  3204  00012E  A4D8               	btfss	status,2,c
  3205  000130  D02B               	goto	i2l3765
  3206                           
  3207                           ;PIC_ROBOT_2R.c: 158: a = (a * 10) + (d - 48);
  3208  000132  0E00               	movlw	0
  3209  000134  6E12               	movwf	i2___ftmul@f2^0,c
  3210  000136  0E20               	movlw	32
  3211  000138  6E13               	movwf	(i2___ftmul@f2+1)^0,c
  3212  00013A  0E41               	movlw	65
  3213  00013C  6E14               	movwf	(i2___ftmul@f2+2)^0,c
  3214  00013E  C059  F00F         	movff	_a,i2___ftmul@f1
  3215  000142  C05A  F010         	movff	_a+1,i2___ftmul@f1+1
  3216  000146  C05B  F011         	movff	_a+2,i2___ftmul@f1+2
  3217  00014A  EC7D  F013         	call	i2___ftmul	;wreg free
  3218  00014E  C00F  F02C         	movff	?i2___ftmul,i2___ftadd@f1
  3219  000152  C010  F02D         	movff	?i2___ftmul+1,i2___ftadd@f1+1
  3220  000156  C011  F02E         	movff	?i2___ftmul+2,i2___ftadd@f1+2
  3221  00015A  0ED0               	movlw	208
  3222  00015C  2458               	addwf	TMR1_ISR@d^0,w,c
  3223  00015E  6E09               	movwf	___awtoft@c^0,c
  3224  000160  6A0A               	clrf	(___awtoft@c+1)^0,c
  3225  000162  0EFF               	movlw	255
  3226  000164  220A               	addwfc	(___awtoft@c+1)^0,f,c
  3227  000166  ECCF  F019         	call	___awtoft	;wreg free
  3228  00016A  C009  F02F         	movff	?___awtoft,i2___ftadd@f2
  3229  00016E  C00A  F030         	movff	?___awtoft+1,i2___ftadd@f2+1
  3230  000172  C00B  F031         	movff	?___awtoft+2,i2___ftadd@f2+2
  3231  000176  EC40  F00F         	call	i2___ftadd	;wreg free
  3232  00017A  C02C  F059         	movff	?i2___ftadd,_a
  3233  00017E  C02D  F05A         	movff	?i2___ftadd+1,_a+1
  3234  000182  C02E  F05B         	movff	?i2___ftadd+2,_a+2
  3235                           
  3236                           ;PIC_ROBOT_2R.c: 159: }
  3237  000186  D0D0               	goto	i2l166
  3238  000188                     i2l3765:
  3239                           
  3240                           ;PIC_ROBOT_2R.c: 161: else if(flag == 3){
  3241  000188  0E03               	movlw	3
  3242  00018A  185D               	xorwf	_flag^0,w,c
  3243  00018C  105E               	iorwf	(_flag+1)^0,w,c
  3244  00018E  A4D8               	btfss	status,2,c
  3245  000190  D02E               	goto	i2l3771
  3246                           
  3247                           ;PIC_ROBOT_2R.c: 162: a = a + (d-48)*0.1;
  3248  000192  0ECD               	movlw	205
  3249  000194  6E12               	movwf	i2___ftmul@f2^0,c
  3250  000196  0ECC               	movlw	204
  3251  000198  6E13               	movwf	(i2___ftmul@f2+1)^0,c
  3252  00019A  0E3D               	movlw	61
  3253  00019C  6E14               	movwf	(i2___ftmul@f2+2)^0,c
  3254  00019E  0ED0               	movlw	208
  3255  0001A0  2458               	addwf	TMR1_ISR@d^0,w,c
  3256  0001A2  6E09               	movwf	___awtoft@c^0,c
  3257  0001A4  6A0A               	clrf	(___awtoft@c+1)^0,c
  3258  0001A6  0EFF               	movlw	255
  3259  0001A8  220A               	addwfc	(___awtoft@c+1)^0,f,c
  3260  0001AA  ECCF  F019         	call	___awtoft	;wreg free
  3261  0001AE  C009  F00F         	movff	?___awtoft,i2___ftmul@f1
  3262  0001B2  C00A  F010         	movff	?___awtoft+1,i2___ftmul@f1+1
  3263  0001B6  C00B  F011         	movff	?___awtoft+2,i2___ftmul@f1+2
  3264  0001BA  EC7D  F013         	call	i2___ftmul	;wreg free
  3265  0001BE  C00F  F02C         	movff	?i2___ftmul,i2___ftadd@f1
  3266  0001C2  C010  F02D         	movff	?i2___ftmul+1,i2___ftadd@f1+1
  3267  0001C6  C011  F02E         	movff	?i2___ftmul+2,i2___ftadd@f1+2
  3268  0001CA  C059  F02F         	movff	_a,i2___ftadd@f2
  3269  0001CE  C05A  F030         	movff	_a+1,i2___ftadd@f2+1
  3270  0001D2  C05B  F031         	movff	_a+2,i2___ftadd@f2+2
  3271  0001D6  EC40  F00F         	call	i2___ftadd	;wreg free
  3272  0001DA  C02C  F059         	movff	?i2___ftadd,_a
  3273  0001DE  C02D  F05A         	movff	?i2___ftadd+1,_a+1
  3274  0001E2  C02E  F05B         	movff	?i2___ftadd+2,_a+2
  3275                           
  3276                           ;PIC_ROBOT_2R.c: 163: flag = 4;
  3277  0001E6  0E00               	movlw	0
  3278  0001E8  6E5E               	movwf	(_flag+1)^0,c
  3279  0001EA  0E04               	movlw	4
  3280  0001EC  D03A               	goto	L4
  3281  0001EE                     i2l3771:
  3282                           
  3283                           ;PIC_ROBOT_2R.c: 165: else if(flag == 4){
  3284  0001EE  0E04               	movlw	4
  3285  0001F0  185D               	xorwf	_flag^0,w,c
  3286  0001F2  105E               	iorwf	(_flag+1)^0,w,c
  3287  0001F4  A4D8               	btfss	status,2,c
  3288  0001F6  D098               	goto	i2l166
  3289                           
  3290                           ;PIC_ROBOT_2R.c: 166: a = a + (d-48)*0.01;
  3291  0001F8  0ED7               	movlw	215
  3292  0001FA  6E12               	movwf	i2___ftmul@f2^0,c
  3293  0001FC  0E23               	movlw	35
  3294  0001FE  6E13               	movwf	(i2___ftmul@f2+1)^0,c
  3295  000200  0E3C               	movlw	60
  3296  000202  6E14               	movwf	(i2___ftmul@f2+2)^0,c
  3297  000204  0ED0               	movlw	208
  3298  000206  2458               	addwf	TMR1_ISR@d^0,w,c
  3299  000208  6E09               	movwf	___awtoft@c^0,c
  3300  00020A  6A0A               	clrf	(___awtoft@c+1)^0,c
  3301  00020C  0EFF               	movlw	255
  3302  00020E  220A               	addwfc	(___awtoft@c+1)^0,f,c
  3303  000210  ECCF  F019         	call	___awtoft	;wreg free
  3304  000214  C009  F00F         	movff	?___awtoft,i2___ftmul@f1
  3305  000218  C00A  F010         	movff	?___awtoft+1,i2___ftmul@f1+1
  3306  00021C  C00B  F011         	movff	?___awtoft+2,i2___ftmul@f1+2
  3307  000220  EC7D  F013         	call	i2___ftmul	;wreg free
  3308  000224  C00F  F02C         	movff	?i2___ftmul,i2___ftadd@f1
  3309  000228  C010  F02D         	movff	?i2___ftmul+1,i2___ftadd@f1+1
  3310  00022C  C011  F02E         	movff	?i2___ftmul+2,i2___ftadd@f1+2
  3311  000230  C059  F02F         	movff	_a,i2___ftadd@f2
  3312  000234  C05A  F030         	movff	_a+1,i2___ftadd@f2+1
  3313  000238  C05B  F031         	movff	_a+2,i2___ftadd@f2+2
  3314  00023C  EC40  F00F         	call	i2___ftadd	;wreg free
  3315  000240  C02C  F059         	movff	?i2___ftadd,_a
  3316  000244  C02D  F05A         	movff	?i2___ftadd+1,_a+1
  3317  000248  C02E  F05B         	movff	?i2___ftadd+2,_a+2
  3318                           
  3319                           ;PIC_ROBOT_2R.c: 167: flag = 5;
  3320  00024C  0E00               	movlw	0
  3321  00024E  6E5E               	movwf	(_flag+1)^0,c
  3322  000250  0E05               	movlw	5
  3323  000252  D007               	goto	L4
  3324  000254                     i2l3777:
  3325                           
  3326                           ;PIC_ROBOT_2R.c: 171: else if(d == '.'){
  3327  000254  0E2E               	movlw	46
  3328  000256  1858               	xorwf	TMR1_ISR@d^0,w,c
  3329  000258  A4D8               	btfss	status,2,c
  3330  00025A  D005               	goto	i2l3781
  3331                           
  3332                           ;PIC_ROBOT_2R.c: 172: flag = 3;
  3333  00025C  0E00               	movlw	0
  3334  00025E  6E5E               	movwf	(_flag+1)^0,c
  3335  000260  0E03               	movlw	3
  3336  000262                     L4:
  3337  000262  6E5D               	movwf	_flag^0,c
  3338                           
  3339                           ;PIC_ROBOT_2R.c: 173: }
  3340  000264  D061               	goto	i2l166
  3341  000266                     i2l3781:
  3342                           
  3343                           ;PIC_ROBOT_2R.c: 175: else if (d == 'O') {
  3344  000266  0E4F               	movlw	79
  3345  000268  1858               	xorwf	TMR1_ISR@d^0,w,c
  3346  00026A  A4D8               	btfss	status,2,c
  3347  00026C  D020               	goto	i2l3793
  3348                           
  3349                           ;PIC_ROBOT_2R.c: 177: if (servo == 'A'){
  3350  00026E  0E41               	movlw	65
  3351  000270  185C               	xorwf	_servo^0,w,c
  3352  000272  A4D8               	btfss	status,2,c
  3353  000274  D007               	goto	i2l3787
  3354                           
  3355                           ;PIC_ROBOT_2R.c: 178: b = a;
  3356  000276  C059  F0AE         	movff	_a,_b
  3357  00027A  C05A  F0AF         	movff	_a+1,_b+1
  3358  00027E  C05B  F0B0         	movff	_a+2,_b+2
  3359                           
  3360                           ;PIC_ROBOT_2R.c: 179: }
  3361  000282  D00A               	goto	i2l3791
  3362  000284                     i2l3787:
  3363                           
  3364                           ;PIC_ROBOT_2R.c: 180: else if(servo == 'B'){
  3365  000284  0E42               	movlw	66
  3366  000286  185C               	xorwf	_servo^0,w,c
  3367  000288  A4D8               	btfss	status,2,c
  3368  00028A  D006               	goto	i2l3791
  3369                           
  3370                           ;PIC_ROBOT_2R.c: 181: c = a;
  3371  00028C  C059  F0AB         	movff	_a,_c
  3372  000290  C05A  F0AC         	movff	_a+1,_c+1
  3373  000294  C05B  F0AD         	movff	_a+2,_c+2
  3374  000298                     i2l3791:
  3375                           
  3376                           ;PIC_ROBOT_2R.c: 182: };PIC_ROBOT_2R.c: 183: flag = 1;
  3377  000298  0E00               	movlw	0
  3378  00029A  6E5E               	movwf	(_flag+1)^0,c
  3379  00029C  0E01               	movlw	1
  3380  00029E  6E5D               	movwf	_flag^0,c
  3381                           
  3382                           ;PIC_ROBOT_2R.c: 184: a = 0.0;
  3383  0002A0  0E00               	movlw	0
  3384  0002A2  6E59               	movwf	_a^0,c
  3385  0002A4  0E00               	movlw	0
  3386  0002A6  6E5A               	movwf	(_a+1)^0,c
  3387  0002A8  0E00               	movlw	0
  3388  0002AA  6E5B               	movwf	(_a+2)^0,c
  3389                           
  3390                           ;PIC_ROBOT_2R.c: 185: }
  3391  0002AC  D03D               	goto	i2l166
  3392  0002AE                     i2l3793:
  3393                           
  3394                           ;PIC_ROBOT_2R.c: 187: else if (d == 'K'){
  3395  0002AE  0E4B               	movlw	75
  3396  0002B0  1858               	xorwf	TMR1_ISR@d^0,w,c
  3397  0002B2  A4D8               	btfss	status,2,c
  3398  0002B4  D039               	goto	i2l166
  3399                           
  3400                           ;PIC_ROBOT_2R.c: 188: deg2time1((float)b);
  3401  0002B6  C0AE  F04D         	movff	_b,i2deg2time1@degrees1
  3402  0002BA  C0AF  F04E         	movff	_b+1,i2deg2time1@degrees1+1
  3403  0002BE  C0B0  F04F         	movff	_b+2,i2deg2time1@degrees1+2
  3404  0002C2  ECE9  F011         	call	i2_deg2time1	;wreg free
  3405                           
  3406                           ;PIC_ROBOT_2R.c: 189: deg2time2((float)c);
  3407  0002C6  C0AB  F04D         	movff	_c,i2deg2time2@degrees2
  3408  0002CA  C0AC  F04E         	movff	_c+1,i2deg2time2@degrees2+1
  3409  0002CE  C0AD  F04F         	movff	_c+2,i2deg2time2@degrees2+2
  3410  0002D2  EC4E  F011         	call	i2_deg2time2	;wreg free
  3411                           
  3412                           ;PIC_ROBOT_2R.c: 191: SettingsLCD(0x01);
  3413  0002D6  0E01               	movlw	1
  3414  0002D8  EC53  F01A         	call	i2_SettingsLCD
  3415                           
  3416                           ;PIC_ROBOT_2R.c: 193: SettingsLCD(0x80);
  3417  0002DC  0E80               	movlw	128
  3418  0002DE  EC53  F01A         	call	i2_SettingsLCD
  3419                           
  3420                           ;PIC_ROBOT_2R.c: 194: sprintf(text,"Servo 1:%.2f",b);
  3421  0002E2  0ECD               	movlw	low _text
  3422  0002E4  6E4D               	movwf	sprintf@sp^0,c
  3423  0002E6  0E77               	movlw	low STR_1
  3424  0002E8  6E4E               	movwf	sprintf@f^0,c
  3425  0002EA  C0AE  F04F         	movff	_b,?_sprintf+2
  3426  0002EE  C0AF  F050         	movff	_b+1,?_sprintf+3
  3427  0002F2  C0B0  F051         	movff	_b+2,?_sprintf+4
  3428  0002F6  EC49  F008         	call	_sprintf	;wreg free
  3429                           
  3430                           ; BSR set to: 0
  3431                           ;PIC_ROBOT_2R.c: 195: DataLCD();
  3432  0002FA  EC33  F019         	call	_DataLCD	;wreg free
  3433                           
  3434                           ; BSR set to: 0
  3435                           ;PIC_ROBOT_2R.c: 200: SettingsLCD(0xC0);
  3436  0002FE  0EC0               	movlw	192
  3437  000300  EC53  F01A         	call	i2_SettingsLCD
  3438                           
  3439                           ;PIC_ROBOT_2R.c: 201: sprintf(text,"Servo 2:%.2f",c);
  3440  000304  0ECD               	movlw	low _text
  3441  000306  6E4D               	movwf	sprintf@sp^0,c
  3442  000308  0E84               	movlw	low STR_2
  3443  00030A  6E4E               	movwf	sprintf@f^0,c
  3444  00030C  C0AB  F04F         	movff	_c,?_sprintf+2
  3445  000310  C0AC  F050         	movff	_c+1,?_sprintf+3
  3446  000314  C0AD  F051         	movff	_c+2,?_sprintf+4
  3447  000318  EC49  F008         	call	_sprintf	;wreg free
  3448                           
  3449                           ;PIC_ROBOT_2R.c: 202: DataLCD();
  3450  00031C  EC33  F019         	call	_DataLCD	;wreg free
  3451                           
  3452                           ; BSR set to: 0
  3453                           ;PIC_ROBOT_2R.c: 205: confir = 1;
  3454  000320  0E00               	movlw	0
  3455  000322  6FC0               	movwf	(_confir+1)& (0+255),b
  3456  000324  0E01               	movlw	1
  3457  000326                     L1:
  3458  000326  6FBF               	movwf	_confir& (0+255),b
  3459  000328                     i2l166:
  3460  000328  C07D  FFF5         	movff	??_TMR1_ISR+7,tablat
  3461  00032C  C07C  FFF8         	movff	??_TMR1_ISR+6,tblptru
  3462  000330  C07B  FFF7         	movff	??_TMR1_ISR+5,tblptrh
  3463  000334  C07A  FFF6         	movff	??_TMR1_ISR+4,tblptrl
  3464  000338  C079  FFF4         	movff	??_TMR1_ISR+3,prodh
  3465  00033C  C078  FFF3         	movff	??_TMR1_ISR+2,prodl
  3466  000340  C077  FFDA         	movff	??_TMR1_ISR+1,fsr2h
  3467  000344  C076  FFD9         	movff	??_TMR1_ISR,fsr2l
  3468  000348  925F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  3469  00034A  0011               	retfie		f
  3470  00034C                     __end_of_TMR1_ISR:
  3471                           	callstack 0
  3472                           
  3473 ;; *************** function i2_deg2time2 *****************
  3474 ;; Defined at:
  3475 ;;		line 224 in file "PIC_ROBOT_2R.c"
  3476 ;; Parameters:    Size  Location     Type
  3477 ;;  degrees2        3   76[COMRAM] float 
  3478 ;; Auto vars:     Size  Location     Type
  3479 ;;		None
  3480 ;; Return value:  Size  Location     Type
  3481 ;;                  1    wreg      void 
  3482 ;; Registers used:
  3483 ;;		wreg, status,2, status,0, cstack
  3484 ;; Tracked objects:
  3485 ;;		On entry : 0/0
  3486 ;;		On exit  : 0/0
  3487 ;;		Unchanged: 0/0
  3488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3489 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3490 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3491 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3492 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3493 ;;Total ram usage:        6 bytes
  3494 ;; Hardware stack levels used: 1
  3495 ;; Hardware stack levels required when called: 3
  3496 ;; This function calls:
  3497 ;;		i2___ftadd
  3498 ;;		i2___ftdiv
  3499 ;;		i2___ftmul
  3500 ;;		i2___ftsub
  3501 ;;		i2___fttol
  3502 ;; This function is called by:
  3503 ;;		_TMR1_ISR
  3504 ;; This function uses a non-reentrant model
  3505 ;;
  3506                           
  3507                           	psect	text13
  3508  00229C                     __ptext13:
  3509                           	callstack 0
  3510  00229C                     i2_deg2time2:
  3511                           	callstack 21
  3512                           
  3513                           ;PIC_ROBOT_2R.c: 226: time_high = (((degrees2 * (1.9 / 180.0)) + 0.6))*0.001;
  3514                           
  3515                           ;incstack = 0
  3516  00229C  0E9A               	movlw	154
  3517  00229E  6E2F               	movwf	i2___ftadd@f2^0,c
  3518  0022A0  0E19               	movlw	25
  3519  0022A2  6E30               	movwf	(i2___ftadd@f2+1)^0,c
  3520  0022A4  0E3F               	movlw	63
  3521  0022A6  6E31               	movwf	(i2___ftadd@f2+2)^0,c
  3522  0022A8  0EF1               	movlw	241
  3523  0022AA  6E12               	movwf	i2___ftmul@f2^0,c
  3524  0022AC  0E2C               	movlw	44
  3525  0022AE  6E13               	movwf	(i2___ftmul@f2+1)^0,c
  3526  0022B0  0E3C               	movlw	60
  3527  0022B2  6E14               	movwf	(i2___ftmul@f2+2)^0,c
  3528  0022B4  C04D  F00F         	movff	i2deg2time2@degrees2,i2___ftmul@f1
  3529  0022B8  C04E  F010         	movff	i2deg2time2@degrees2+1,i2___ftmul@f1+1
  3530  0022BC  C04F  F011         	movff	i2deg2time2@degrees2+2,i2___ftmul@f1+2
  3531  0022C0  EC7D  F013         	call	i2___ftmul	;wreg free
  3532  0022C4  C00F  F02C         	movff	?i2___ftmul,i2___ftadd@f1
  3533  0022C8  C010  F02D         	movff	?i2___ftmul+1,i2___ftadd@f1+1
  3534  0022CC  C011  F02E         	movff	?i2___ftmul+2,i2___ftadd@f1+2
  3535  0022D0  EC40  F00F         	call	i2___ftadd	;wreg free
  3536  0022D4  C02C  F050         	movff	?i2___ftadd,i2_deg2time2$1038
  3537  0022D8  C02D  F051         	movff	?i2___ftadd+1,i2_deg2time2$1038+1
  3538  0022DC  C02E  F052         	movff	?i2___ftadd+2,i2_deg2time2$1038+2
  3539                           
  3540                           ;PIC_ROBOT_2R.c: 226: time_high = (((degrees2 * (1.9 / 180.0)) + 0.6))*0.001;
  3541  0022E0  C050  F00F         	movff	i2_deg2time2$1038,i2___ftmul@f1
  3542  0022E4  C051  F010         	movff	i2_deg2time2$1038+1,i2___ftmul@f1+1
  3543  0022E8  C052  F011         	movff	i2_deg2time2$1038+2,i2___ftmul@f1+2
  3544  0022EC  0E12               	movlw	18
  3545  0022EE  6E12               	movwf	i2___ftmul@f2^0,c
  3546  0022F0  0E83               	movlw	131
  3547  0022F2  6E13               	movwf	(i2___ftmul@f2+1)^0,c
  3548  0022F4  0E3A               	movlw	58
  3549  0022F6  6E14               	movwf	(i2___ftmul@f2+2)^0,c
  3550  0022F8  EC7D  F013         	call	i2___ftmul	;wreg free
  3551  0022FC  C00F  F0B4         	movff	?i2___ftmul,_time_high
  3552  002300  C010  F0B5         	movff	?i2___ftmul+1,_time_high+1
  3553  002304  C011  F0B6         	movff	?i2___ftmul+2,_time_high+2
  3554                           
  3555                           ;PIC_ROBOT_2R.c: 227: th2 = 65535.0 - (time_high / (0.00000025 * 2.0));
  3556  002308  0E38               	movlw	56
  3557  00230A  6E0C               	movwf	i2___ftdiv@f2^0,c
  3558  00230C  0E06               	movlw	6
  3559  00230E  6E0D               	movwf	(i2___ftdiv@f2+1)^0,c
  3560  002310  0E35               	movlw	53
  3561  002312  6E0E               	movwf	(i2___ftdiv@f2+2)^0,c
  3562  002314  C0B4  F009         	movff	_time_high,i2___ftdiv@f1
  3563  002318  C0B5  F00A         	movff	_time_high+1,i2___ftdiv@f1+1
  3564  00231C  C0B6  F00B         	movff	_time_high+2,i2___ftdiv@f1+2
  3565  002320  EC58  F015         	call	i2___ftdiv	;wreg free
  3566  002324  C009  F03B         	movff	?i2___ftdiv,i2___ftsub@f2
  3567  002328  C00A  F03C         	movff	?i2___ftdiv+1,i2___ftsub@f2+1
  3568  00232C  C00B  F03D         	movff	?i2___ftdiv+2,i2___ftsub@f2+2
  3569  002330  0EFF               	movlw	255
  3570  002332  6E38               	movwf	i2___ftsub@f1^0,c
  3571  002334  0E7F               	movlw	127
  3572  002336  6E39               	movwf	(i2___ftsub@f1+1)^0,c
  3573  002338  0E47               	movlw	71
  3574  00233A  6E3A               	movwf	(i2___ftsub@f1+2)^0,c
  3575  00233C  EC75  F019         	call	i2___ftsub	;wreg free
  3576  002340  C038  F03E         	movff	?i2___ftsub,i2___fttol@f1
  3577  002344  C039  F03F         	movff	?i2___ftsub+1,i2___fttol@f1+1
  3578  002348  C03A  F040         	movff	?i2___ftsub+2,i2___fttol@f1+2
  3579  00234C  ECCB  F015         	call	i2___fttol	;wreg free
  3580  002350  C03E  F0C7         	movff	?i2___fttol,_th2
  3581  002354  C03F  F0C8         	movff	?i2___fttol+1,_th2+1
  3582                           
  3583                           ;PIC_ROBOT_2R.c: 228: time_low = 0.02 - time_high;
  3584  002358  0ED7               	movlw	215
  3585  00235A  6E38               	movwf	i2___ftsub@f1^0,c
  3586  00235C  0EA3               	movlw	163
  3587  00235E  6E39               	movwf	(i2___ftsub@f1+1)^0,c
  3588  002360  0E3C               	movlw	60
  3589  002362  6E3A               	movwf	(i2___ftsub@f1+2)^0,c
  3590  002364  C0B4  F03B         	movff	_time_high,i2___ftsub@f2
  3591  002368  C0B5  F03C         	movff	_time_high+1,i2___ftsub@f2+1
  3592  00236C  C0B6  F03D         	movff	_time_high+2,i2___ftsub@f2+2
  3593  002370  EC75  F019         	call	i2___ftsub	;wreg free
  3594  002374  C038  F0B1         	movff	?i2___ftsub,_time_low
  3595  002378  C039  F0B2         	movff	?i2___ftsub+1,_time_low+1
  3596  00237C  C03A  F0B3         	movff	?i2___ftsub+2,_time_low+2
  3597                           
  3598                           ;PIC_ROBOT_2R.c: 229: tl2 = 65535.0 - (time_low / (0.00000025 * 2.0));
  3599  002380  0E38               	movlw	56
  3600  002382  6E0C               	movwf	i2___ftdiv@f2^0,c
  3601  002384  0E06               	movlw	6
  3602  002386  6E0D               	movwf	(i2___ftdiv@f2+1)^0,c
  3603  002388  0E35               	movlw	53
  3604  00238A  6E0E               	movwf	(i2___ftdiv@f2+2)^0,c
  3605  00238C  C0B1  F009         	movff	_time_low,i2___ftdiv@f1
  3606  002390  C0B2  F00A         	movff	_time_low+1,i2___ftdiv@f1+1
  3607  002394  C0B3  F00B         	movff	_time_low+2,i2___ftdiv@f1+2
  3608  002398  EC58  F015         	call	i2___ftdiv	;wreg free
  3609  00239C  C009  F03B         	movff	?i2___ftdiv,i2___ftsub@f2
  3610  0023A0  C00A  F03C         	movff	?i2___ftdiv+1,i2___ftsub@f2+1
  3611  0023A4  C00B  F03D         	movff	?i2___ftdiv+2,i2___ftsub@f2+2
  3612  0023A8  0EFF               	movlw	255
  3613  0023AA  6E38               	movwf	i2___ftsub@f1^0,c
  3614  0023AC  0E7F               	movlw	127
  3615  0023AE  6E39               	movwf	(i2___ftsub@f1+1)^0,c
  3616  0023B0  0E47               	movlw	71
  3617  0023B2  6E3A               	movwf	(i2___ftsub@f1+2)^0,c
  3618  0023B4  EC75  F019         	call	i2___ftsub	;wreg free
  3619  0023B8  C038  F03E         	movff	?i2___ftsub,i2___fttol@f1
  3620  0023BC  C039  F03F         	movff	?i2___ftsub+1,i2___fttol@f1+1
  3621  0023C0  C03A  F040         	movff	?i2___ftsub+2,i2___fttol@f1+2
  3622  0023C4  ECCB  F015         	call	i2___fttol	;wreg free
  3623  0023C8  C03E  F0C5         	movff	?i2___fttol,_tl2
  3624  0023CC  C03F  F0C6         	movff	?i2___fttol+1,_tl2+1
  3625  0023D0  0012               	return		;funcret
  3626  0023D2                     __end_ofi2_deg2time2:
  3627                           	callstack 0
  3628                           
  3629 ;; *************** function i2_deg2time1 *****************
  3630 ;; Defined at:
  3631 ;;		line 214 in file "PIC_ROBOT_2R.c"
  3632 ;; Parameters:    Size  Location     Type
  3633 ;;  degrees1        3   76[COMRAM] float 
  3634 ;; Auto vars:     Size  Location     Type
  3635 ;;		None
  3636 ;; Return value:  Size  Location     Type
  3637 ;;                  1    wreg      void 
  3638 ;; Registers used:
  3639 ;;		wreg, status,2, status,0, cstack
  3640 ;; Tracked objects:
  3641 ;;		On entry : 0/0
  3642 ;;		On exit  : 0/0
  3643 ;;		Unchanged: 0/0
  3644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3645 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3646 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3647 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3648 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3649 ;;Total ram usage:        6 bytes
  3650 ;; Hardware stack levels used: 1
  3651 ;; Hardware stack levels required when called: 3
  3652 ;; This function calls:
  3653 ;;		i2___ftadd
  3654 ;;		i2___ftdiv
  3655 ;;		i2___ftmul
  3656 ;;		i2___ftsub
  3657 ;;		i2___fttol
  3658 ;; This function is called by:
  3659 ;;		_TMR1_ISR
  3660 ;; This function uses a non-reentrant model
  3661 ;;
  3662                           
  3663                           	psect	text14
  3664  0023D2                     __ptext14:
  3665                           	callstack 0
  3666  0023D2                     i2_deg2time1:
  3667                           	callstack 21
  3668                           
  3669                           ;PIC_ROBOT_2R.c: 216: time_high = (((degrees1 * (1.9 / 180.0)) + 0.6))*0.001;
  3670                           
  3671                           ;incstack = 0
  3672  0023D2  0E9A               	movlw	154
  3673  0023D4  6E2F               	movwf	i2___ftadd@f2^0,c
  3674  0023D6  0E19               	movlw	25
  3675  0023D8  6E30               	movwf	(i2___ftadd@f2+1)^0,c
  3676  0023DA  0E3F               	movlw	63
  3677  0023DC  6E31               	movwf	(i2___ftadd@f2+2)^0,c
  3678  0023DE  0EF1               	movlw	241
  3679  0023E0  6E12               	movwf	i2___ftmul@f2^0,c
  3680  0023E2  0E2C               	movlw	44
  3681  0023E4  6E13               	movwf	(i2___ftmul@f2+1)^0,c
  3682  0023E6  0E3C               	movlw	60
  3683  0023E8  6E14               	movwf	(i2___ftmul@f2+2)^0,c
  3684  0023EA  C04D  F00F         	movff	i2deg2time1@degrees1,i2___ftmul@f1
  3685  0023EE  C04E  F010         	movff	i2deg2time1@degrees1+1,i2___ftmul@f1+1
  3686  0023F2  C04F  F011         	movff	i2deg2time1@degrees1+2,i2___ftmul@f1+2
  3687  0023F6  EC7D  F013         	call	i2___ftmul	;wreg free
  3688  0023FA  C00F  F02C         	movff	?i2___ftmul,i2___ftadd@f1
  3689  0023FE  C010  F02D         	movff	?i2___ftmul+1,i2___ftadd@f1+1
  3690  002402  C011  F02E         	movff	?i2___ftmul+2,i2___ftadd@f1+2
  3691  002406  EC40  F00F         	call	i2___ftadd	;wreg free
  3692  00240A  C02C  F050         	movff	?i2___ftadd,i2_deg2time1$1037
  3693  00240E  C02D  F051         	movff	?i2___ftadd+1,i2_deg2time1$1037+1
  3694  002412  C02E  F052         	movff	?i2___ftadd+2,i2_deg2time1$1037+2
  3695                           
  3696                           ;PIC_ROBOT_2R.c: 216: time_high = (((degrees1 * (1.9 / 180.0)) + 0.6))*0.001;
  3697  002416  C050  F00F         	movff	i2_deg2time1$1037,i2___ftmul@f1
  3698  00241A  C051  F010         	movff	i2_deg2time1$1037+1,i2___ftmul@f1+1
  3699  00241E  C052  F011         	movff	i2_deg2time1$1037+2,i2___ftmul@f1+2
  3700  002422  0E12               	movlw	18
  3701  002424  6E12               	movwf	i2___ftmul@f2^0,c
  3702  002426  0E83               	movlw	131
  3703  002428  6E13               	movwf	(i2___ftmul@f2+1)^0,c
  3704  00242A  0E3A               	movlw	58
  3705  00242C  6E14               	movwf	(i2___ftmul@f2+2)^0,c
  3706  00242E  EC7D  F013         	call	i2___ftmul	;wreg free
  3707  002432  C00F  F0B4         	movff	?i2___ftmul,_time_high
  3708  002436  C010  F0B5         	movff	?i2___ftmul+1,_time_high+1
  3709  00243A  C011  F0B6         	movff	?i2___ftmul+2,_time_high+2
  3710                           
  3711                           ;PIC_ROBOT_2R.c: 217: th1 = 65535.0 - (time_high / (0.00000025 * 2.0));
  3712  00243E  0E38               	movlw	56
  3713  002440  6E0C               	movwf	i2___ftdiv@f2^0,c
  3714  002442  0E06               	movlw	6
  3715  002444  6E0D               	movwf	(i2___ftdiv@f2+1)^0,c
  3716  002446  0E35               	movlw	53
  3717  002448  6E0E               	movwf	(i2___ftdiv@f2+2)^0,c
  3718  00244A  C0B4  F009         	movff	_time_high,i2___ftdiv@f1
  3719  00244E  C0B5  F00A         	movff	_time_high+1,i2___ftdiv@f1+1
  3720  002452  C0B6  F00B         	movff	_time_high+2,i2___ftdiv@f1+2
  3721  002456  EC58  F015         	call	i2___ftdiv	;wreg free
  3722  00245A  C009  F03B         	movff	?i2___ftdiv,i2___ftsub@f2
  3723  00245E  C00A  F03C         	movff	?i2___ftdiv+1,i2___ftsub@f2+1
  3724  002462  C00B  F03D         	movff	?i2___ftdiv+2,i2___ftsub@f2+2
  3725  002466  0EFF               	movlw	255
  3726  002468  6E38               	movwf	i2___ftsub@f1^0,c
  3727  00246A  0E7F               	movlw	127
  3728  00246C  6E39               	movwf	(i2___ftsub@f1+1)^0,c
  3729  00246E  0E47               	movlw	71
  3730  002470  6E3A               	movwf	(i2___ftsub@f1+2)^0,c
  3731  002472  EC75  F019         	call	i2___ftsub	;wreg free
  3732  002476  C038  F03E         	movff	?i2___ftsub,i2___fttol@f1
  3733  00247A  C039  F03F         	movff	?i2___ftsub+1,i2___fttol@f1+1
  3734  00247E  C03A  F040         	movff	?i2___ftsub+2,i2___fttol@f1+2
  3735  002482  ECCB  F015         	call	i2___fttol	;wreg free
  3736  002486  C03E  F0CB         	movff	?i2___fttol,_th1
  3737  00248A  C03F  F0CC         	movff	?i2___fttol+1,_th1+1
  3738                           
  3739                           ;PIC_ROBOT_2R.c: 218: time_low = 0.02 - time_high;
  3740  00248E  0ED7               	movlw	215
  3741  002490  6E38               	movwf	i2___ftsub@f1^0,c
  3742  002492  0EA3               	movlw	163
  3743  002494  6E39               	movwf	(i2___ftsub@f1+1)^0,c
  3744  002496  0E3C               	movlw	60
  3745  002498  6E3A               	movwf	(i2___ftsub@f1+2)^0,c
  3746  00249A  C0B4  F03B         	movff	_time_high,i2___ftsub@f2
  3747  00249E  C0B5  F03C         	movff	_time_high+1,i2___ftsub@f2+1
  3748  0024A2  C0B6  F03D         	movff	_time_high+2,i2___ftsub@f2+2
  3749  0024A6  EC75  F019         	call	i2___ftsub	;wreg free
  3750  0024AA  C038  F0B1         	movff	?i2___ftsub,_time_low
  3751  0024AE  C039  F0B2         	movff	?i2___ftsub+1,_time_low+1
  3752  0024B2  C03A  F0B3         	movff	?i2___ftsub+2,_time_low+2
  3753                           
  3754                           ;PIC_ROBOT_2R.c: 219: tl1 = 65535.0 - (time_low / (0.00000025 * 2.0));
  3755  0024B6  0E38               	movlw	56
  3756  0024B8  6E0C               	movwf	i2___ftdiv@f2^0,c
  3757  0024BA  0E06               	movlw	6
  3758  0024BC  6E0D               	movwf	(i2___ftdiv@f2+1)^0,c
  3759  0024BE  0E35               	movlw	53
  3760  0024C0  6E0E               	movwf	(i2___ftdiv@f2+2)^0,c
  3761  0024C2  C0B1  F009         	movff	_time_low,i2___ftdiv@f1
  3762  0024C6  C0B2  F00A         	movff	_time_low+1,i2___ftdiv@f1+1
  3763  0024CA  C0B3  F00B         	movff	_time_low+2,i2___ftdiv@f1+2
  3764  0024CE  EC58  F015         	call	i2___ftdiv	;wreg free
  3765  0024D2  C009  F03B         	movff	?i2___ftdiv,i2___ftsub@f2
  3766  0024D6  C00A  F03C         	movff	?i2___ftdiv+1,i2___ftsub@f2+1
  3767  0024DA  C00B  F03D         	movff	?i2___ftdiv+2,i2___ftsub@f2+2
  3768  0024DE  0EFF               	movlw	255
  3769  0024E0  6E38               	movwf	i2___ftsub@f1^0,c
  3770  0024E2  0E7F               	movlw	127
  3771  0024E4  6E39               	movwf	(i2___ftsub@f1+1)^0,c
  3772  0024E6  0E47               	movlw	71
  3773  0024E8  6E3A               	movwf	(i2___ftsub@f1+2)^0,c
  3774  0024EA  EC75  F019         	call	i2___ftsub	;wreg free
  3775  0024EE  C038  F03E         	movff	?i2___ftsub,i2___fttol@f1
  3776  0024F2  C039  F03F         	movff	?i2___ftsub+1,i2___fttol@f1+1
  3777  0024F6  C03A  F040         	movff	?i2___ftsub+2,i2___fttol@f1+2
  3778  0024FA  ECCB  F015         	call	i2___fttol	;wreg free
  3779  0024FE  C03E  F0C9         	movff	?i2___fttol,_tl1
  3780  002502  C03F  F0CA         	movff	?i2___fttol+1,_tl1+1
  3781  002506  0012               	return		;funcret
  3782  002508                     __end_ofi2_deg2time1:
  3783                           	callstack 0
  3784                           
  3785 ;; *************** function i2___ftdiv *****************
  3786 ;; Defined at:
  3787 ;;		line 54 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\ftdiv.c"
  3788 ;; Parameters:    Size  Location     Type
  3789 ;;  f1              3    8[COMRAM] float 
  3790 ;;  f2              3   11[COMRAM] float 
  3791 ;; Auto vars:     Size  Location     Type
  3792 ;;  f3              3   18[COMRAM] float 
  3793 ;;  sign            1   22[COMRAM] unsigned char 
  3794 ;;  exp             1   21[COMRAM] unsigned char 
  3795 ;;  cntr            1   17[COMRAM] unsigned char 
  3796 ;; Return value:  Size  Location     Type
  3797 ;;                  3    8[COMRAM] float 
  3798 ;; Registers used:
  3799 ;;		wreg, status,2, status,0, cstack
  3800 ;; Tracked objects:
  3801 ;;		On entry : 0/0
  3802 ;;		On exit  : 0/0
  3803 ;;		Unchanged: 0/0
  3804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3805 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3806 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3807 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3808 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3809 ;;Total ram usage:       15 bytes
  3810 ;; Hardware stack levels used: 1
  3811 ;; Hardware stack levels required when called: 1
  3812 ;; This function calls:
  3813 ;;		i2___ftpack
  3814 ;; This function is called by:
  3815 ;;		i2_deg2time1
  3816 ;;		i2_deg2time2
  3817 ;; This function uses a non-reentrant model
  3818 ;;
  3819                           
  3820                           	psect	text15
  3821  002AB0                     __ptext15:
  3822                           	callstack 0
  3823  002AB0                     i2___ftdiv:
  3824                           	callstack 22
  3825                           
  3826                           ;incstack = 0
  3827  002AB0  C00B  F00F         	movff	i2___ftdiv@f1+2,??i2___ftdiv
  3828  002AB4  6A10               	clrf	(??i2___ftdiv+1)^0,c
  3829  002AB6  6A11               	clrf	(??i2___ftdiv+2)^0,c
  3830  002AB8  340A               	rlcf	(i2___ftdiv@f1+1)^0,w,c
  3831  002ABA  360F               	rlcf	??i2___ftdiv^0,f,c
  3832  002ABC  E301               	bnc	u353_41
  3833  002ABE  8010               	bsf	(??i2___ftdiv+1)^0,0,c
  3834  002AC0                     u353_41:
  3835  002AC0  500F               	movf	??i2___ftdiv^0,w,c
  3836  002AC2  6E16               	movwf	i2___ftdiv@exp^0,c
  3837  002AC4  5016               	movf	i2___ftdiv@exp^0,w,c
  3838  002AC6  A4D8               	btfss	status,2,c
  3839  002AC8  D007               	goto	i2l3323
  3840  002ACA  0E00               	movlw	0
  3841  002ACC  6E09               	movwf	?i2___ftdiv^0,c
  3842  002ACE  0E00               	movlw	0
  3843  002AD0  6E0A               	movwf	(?i2___ftdiv+1)^0,c
  3844  002AD2  0E00               	movlw	0
  3845  002AD4  6E0B               	movwf	(?i2___ftdiv+2)^0,c
  3846  002AD6  0012               	return	
  3847  002AD8                     i2l3323:
  3848  002AD8  C00E  F00F         	movff	i2___ftdiv@f2+2,??i2___ftdiv
  3849  002ADC  6A10               	clrf	(??i2___ftdiv+1)^0,c
  3850  002ADE  6A11               	clrf	(??i2___ftdiv+2)^0,c
  3851  002AE0  340D               	rlcf	(i2___ftdiv@f2+1)^0,w,c
  3852  002AE2  360F               	rlcf	??i2___ftdiv^0,f,c
  3853  002AE4  E301               	bnc	u355_41
  3854  002AE6  8010               	bsf	(??i2___ftdiv+1)^0,0,c
  3855  002AE8                     u355_41:
  3856  002AE8  500F               	movf	??i2___ftdiv^0,w,c
  3857  002AEA  6E17               	movwf	i2___ftdiv@sign^0,c
  3858  002AEC  5017               	movf	i2___ftdiv@sign^0,w,c
  3859  002AEE  A4D8               	btfss	status,2,c
  3860  002AF0  D007               	goto	i2l3329
  3861  002AF2  0E00               	movlw	0
  3862  002AF4  6E09               	movwf	?i2___ftdiv^0,c
  3863  002AF6  0E00               	movlw	0
  3864  002AF8  6E0A               	movwf	(?i2___ftdiv+1)^0,c
  3865  002AFA  0E00               	movlw	0
  3866  002AFC  6E0B               	movwf	(?i2___ftdiv+2)^0,c
  3867  002AFE  0012               	return	
  3868  002B00                     i2l3329:
  3869  002B00  0E00               	movlw	0
  3870  002B02  6E13               	movwf	i2___ftdiv@f3^0,c
  3871  002B04  0E00               	movlw	0
  3872  002B06  6E14               	movwf	(i2___ftdiv@f3+1)^0,c
  3873  002B08  0E00               	movlw	0
  3874  002B0A  6E15               	movwf	(i2___ftdiv@f3+2)^0,c
  3875  002B0C  5017               	movf	i2___ftdiv@sign^0,w,c
  3876  002B0E  0F89               	addlw	137
  3877  002B10  5E16               	subwf	i2___ftdiv@exp^0,f,c
  3878  002B12  C00B  F017         	movff	i2___ftdiv@f1+2,i2___ftdiv@sign
  3879  002B16  500E               	movf	(i2___ftdiv@f2+2)^0,w,c
  3880  002B18  1A17               	xorwf	i2___ftdiv@sign^0,f,c
  3881  002B1A  0E80               	movlw	128
  3882  002B1C  1617               	andwf	i2___ftdiv@sign^0,f,c
  3883  002B1E  8E0A               	bsf	(i2___ftdiv@f1+1)^0,7,c
  3884  002B20  0EFF               	movlw	255
  3885  002B22  1609               	andwf	i2___ftdiv@f1^0,f,c
  3886  002B24  0EFF               	movlw	255
  3887  002B26  160A               	andwf	(i2___ftdiv@f1+1)^0,f,c
  3888  002B28  0E00               	movlw	0
  3889  002B2A  160B               	andwf	(i2___ftdiv@f1+2)^0,f,c
  3890  002B2C  8E0D               	bsf	(i2___ftdiv@f2+1)^0,7,c
  3891  002B2E  0EFF               	movlw	255
  3892  002B30  160C               	andwf	i2___ftdiv@f2^0,f,c
  3893  002B32  0EFF               	movlw	255
  3894  002B34  160D               	andwf	(i2___ftdiv@f2+1)^0,f,c
  3895  002B36  0E00               	movlw	0
  3896  002B38  160E               	andwf	(i2___ftdiv@f2+2)^0,f,c
  3897  002B3A  0E18               	movlw	24
  3898  002B3C  6E12               	movwf	i2___ftdiv@cntr^0,c
  3899  002B3E                     i2l3349:
  3900  002B3E  90D8               	bcf	status,0,c
  3901  002B40  3613               	rlcf	i2___ftdiv@f3^0,f,c
  3902  002B42  3614               	rlcf	(i2___ftdiv@f3+1)^0,f,c
  3903  002B44  3615               	rlcf	(i2___ftdiv@f3+2)^0,f,c
  3904  002B46  500C               	movf	i2___ftdiv@f2^0,w,c
  3905  002B48  5C09               	subwf	i2___ftdiv@f1^0,w,c
  3906  002B4A  500D               	movf	(i2___ftdiv@f2+1)^0,w,c
  3907  002B4C  580A               	subwfb	(i2___ftdiv@f1+1)^0,w,c
  3908  002B4E  500E               	movf	(i2___ftdiv@f2+2)^0,w,c
  3909  002B50  580B               	subwfb	(i2___ftdiv@f1+2)^0,w,c
  3910  002B52  A0D8               	btfss	status,0,c
  3911  002B54  D007               	goto	i2l647
  3912  002B56  500C               	movf	i2___ftdiv@f2^0,w,c
  3913  002B58  5E09               	subwf	i2___ftdiv@f1^0,f,c
  3914  002B5A  500D               	movf	(i2___ftdiv@f2+1)^0,w,c
  3915  002B5C  5A0A               	subwfb	(i2___ftdiv@f1+1)^0,f,c
  3916  002B5E  500E               	movf	(i2___ftdiv@f2+2)^0,w,c
  3917  002B60  5A0B               	subwfb	(i2___ftdiv@f1+2)^0,f,c
  3918  002B62  8013               	bsf	i2___ftdiv@f3^0,0,c
  3919  002B64                     i2l647:
  3920  002B64  90D8               	bcf	status,0,c
  3921  002B66  3609               	rlcf	i2___ftdiv@f1^0,f,c
  3922  002B68  360A               	rlcf	(i2___ftdiv@f1+1)^0,f,c
  3923  002B6A  360B               	rlcf	(i2___ftdiv@f1+2)^0,f,c
  3924  002B6C  2E12               	decfsz	i2___ftdiv@cntr^0,f,c
  3925  002B6E  D7E7               	goto	i2l3349
  3926  002B70  C013  F001         	movff	i2___ftdiv@f3,i2___ftpack@arg
  3927  002B74  C014  F002         	movff	i2___ftdiv@f3+1,i2___ftpack@arg+1
  3928  002B78  C015  F003         	movff	i2___ftdiv@f3+2,i2___ftpack@arg+2
  3929  002B7C  C016  F004         	movff	i2___ftdiv@exp,i2___ftpack@exp
  3930  002B80  C017  F005         	movff	i2___ftdiv@sign,i2___ftpack@sign
  3931  002B84  EC8B  F016         	call	i2___ftpack	;wreg free
  3932  002B88  C001  F009         	movff	?i2___ftpack,?i2___ftdiv
  3933  002B8C  C002  F00A         	movff	?i2___ftpack+1,?i2___ftdiv+1
  3934  002B90  C003  F00B         	movff	?i2___ftpack+2,?i2___ftdiv+2
  3935  002B94  0012               	return		;funcret
  3936  002B96                     __end_ofi2___ftdiv:
  3937                           	callstack 0
  3938                           
  3939 ;; *************** function i2_SettingsLCD *****************
  3940 ;; Defined at:
  3941 ;;		line 233 in file "PIC_ROBOT_2R.c"
  3942 ;; Parameters:    Size  Location     Type
  3943 ;;  word            1    wreg     unsigned char 
  3944 ;; Auto vars:     Size  Location     Type
  3945 ;;  word            1    2[COMRAM] unsigned char 
  3946 ;; Return value:  Size  Location     Type
  3947 ;;                  1    wreg      void 
  3948 ;; Registers used:
  3949 ;;		wreg, status,2, status,0, cstack
  3950 ;; Tracked objects:
  3951 ;;		On entry : 0/0
  3952 ;;		On exit  : 0/0
  3953 ;;		Unchanged: 0/0
  3954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3955 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3956 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3957 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3958 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3959 ;;Total ram usage:        1 bytes
  3960 ;; Hardware stack levels used: 1
  3961 ;; Hardware stack levels required when called: 1
  3962 ;; This function calls:
  3963 ;;		i2_LCD
  3964 ;; This function is called by:
  3965 ;;		_TMR1_ISR
  3966 ;; This function uses a non-reentrant model
  3967 ;;
  3968                           
  3969                           	psect	text16
  3970  0034A6                     __ptext16:
  3971                           	callstack 0
  3972  0034A6                     i2_SettingsLCD:
  3973                           	callstack 23
  3974                           
  3975                           ;incstack = 0
  3976                           ;i2SettingsLCD@word stored from wreg
  3977  0034A6  6E03               	movwf	i2SettingsLCD@word^0,c
  3978                           
  3979                           ;PIC_ROBOT_2R.c: 234: LATEbits.LATE1 = 0;
  3980  0034A8  928D               	bcf	141,1,c	;volatile
  3981                           
  3982                           ;PIC_ROBOT_2R.c: 235: LCD(word >> 4);
  3983  0034AA  3803               	swapf	i2SettingsLCD@word^0,w,c
  3984  0034AC  0B0F               	andlw	15
  3985  0034AE  EC8B  F017         	call	i2_LCD
  3986                           
  3987                           ;PIC_ROBOT_2R.c: 236: LCD(word & 0x0F);
  3988  0034B2  5003               	movf	i2SettingsLCD@word^0,w,c
  3989  0034B4  0B0F               	andlw	15
  3990  0034B6  EC8B  F017         	call	i2_LCD
  3991  0034BA  0012               	return		;funcret
  3992  0034BC                     __end_ofi2_SettingsLCD:
  3993                           	callstack 0
  3994                           
  3995 ;; *************** function _sprintf *****************
  3996 ;; Defined at:
  3997 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c"
  3998 ;; Parameters:    Size  Location     Type
  3999 ;;  sp              1   76[COMRAM] PTR unsigned char 
  4000 ;;		 -> text(20), 
  4001 ;;  f               1   77[COMRAM] PTR const unsigned char 
  4002 ;;		 -> STR_2(13), STR_1(13), 
  4003 ;; Auto vars:     Size  Location     Type
  4004 ;;  tmpval          4   12[BANK0 ] struct .
  4005 ;;  val             4    6[BANK0 ] unsigned long 
  4006 ;;  fval            3   18[BANK0 ] unsigned long 
  4007 ;;  cp              3    0        PTR const unsigned char 
  4008 ;;  prec            2   16[BANK0 ] int 
  4009 ;;  eexp            2   10[BANK0 ] int 
  4010 ;;  flag            2    4[BANK0 ] unsigned short 
  4011 ;;  len             2    0        unsigned int 
  4012 ;;  width           2    0        int 
  4013 ;;  c               1   21[BANK0 ] unsigned char 
  4014 ;;  ap              1    3[BANK0 ] PTR void [1]
  4015 ;;		 -> ?_sprintf(2), 
  4016 ;;  d               1    0        unsigned char 
  4017 ;; Return value:  Size  Location     Type
  4018 ;;                  2   76[COMRAM] int 
  4019 ;; Registers used:
  4020 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4021 ;; Tracked objects:
  4022 ;;		On entry : 0/0
  4023 ;;		On exit  : 3F/0
  4024 ;;		Unchanged: 0/0
  4025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4026 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4027 ;;      Locals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4028 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4029 ;;      Totals:        11      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4030 ;;Total ram usage:       33 bytes
  4031 ;; Hardware stack levels used: 1
  4032 ;; Hardware stack levels required when called: 3
  4033 ;; This function calls:
  4034 ;;		___awdiv
  4035 ;;		___ftge
  4036 ;;		___ftneg
  4037 ;;		___lldiv
  4038 ;;		___llmod
  4039 ;;		___lltoft
  4040 ;;		___wmul
  4041 ;;		__div_to_l_
  4042 ;;		__tdiv_to_l_
  4043 ;;		_fround
  4044 ;;		_isdigit
  4045 ;;		_scale
  4046 ;;		i2___ftadd
  4047 ;;		i2___ftmul
  4048 ;;		i2___ftsub
  4049 ;;		i2___fttol
  4050 ;; This function is called by:
  4051 ;;		_TMR1_ISR
  4052 ;; This function uses a non-reentrant model
  4053 ;;
  4054                           
  4055                           	psect	text17
  4056  001092                     __ptext17:
  4057                           	callstack 0
  4058  001092                     _sprintf:
  4059                           	callstack 21
  4060                           
  4061                           ;doprnt.c: 507: va_list ap;;doprnt.c: 512: char c;;doprnt.c: 514: int width;;doprnt.c: 5
      +                          17: int prec;;doprnt.c: 525: unsigned short flag;;doprnt.c: 532: char d;;doprnt.c: 533: 
      +                          double fval;;doprnt.c: 534: int eexp;;doprnt.c: 540: union {;doprnt.c: 541: unsigned lon
      +                          g vd;;doprnt.c: 542: double integ;;doprnt.c: 543: } tmpval;;doprnt.c: 545: unsigned long
      +                           val;;doprnt.c: 546: unsigned len;;doprnt.c: 547: const char * cp;;doprnt.c: 550: *ap = 
      +                          __va_start();
  4062                           
  4063                           ;incstack = 0
  4064  001092  0E4F               	movlw	low (?_sprintf+2)
  4065  001094  0100               	movlb	0	; () banked
  4066  001096  6F63               	movwf	sprintf@ap& (0+255),b
  4067                           
  4068                           ;doprnt.c: 553: while((c = *f++)) {
  4069  001098  D352               	goto	i2l3673
  4070  00109A                     i2l3473:
  4071                           
  4072                           ; BSR set to: 0
  4073                           ;doprnt.c: 555: if(c != '%')
  4074  00109A  0E25               	movlw	37
  4075  00109C  1975               	xorwf	sprintf@c& (0+255),w,b
  4076  00109E  B4D8               	btfsc	status,2,c
  4077  0010A0  D007               	goto	i2l3479
  4078                           
  4079                           ; BSR set to: 0
  4080                           ;doprnt.c: 557: {;doprnt.c: 558: ((*sp++ = (c)));
  4081  0010A2  504D               	movf	sprintf@sp^0,w,c
  4082  0010A4  6ED9               	movwf	fsr2l,c
  4083  0010A6  6ADA               	clrf	fsr2h,c
  4084  0010A8  C075  FFDF         	movff	sprintf@c,indf2
  4085  0010AC                     i2l3477:
  4086                           
  4087                           ; BSR set to: 0
  4088  0010AC  2A4D               	incf	sprintf@sp^0,f,c
  4089                           
  4090                           ;doprnt.c: 559: continue;
  4091  0010AE  D347               	goto	i2l3673
  4092  0010B0                     i2l3479:
  4093                           
  4094                           ; BSR set to: 0
  4095                           ;doprnt.c: 560: };doprnt.c: 565: flag = 0;
  4096  0010B0  0E00               	movlw	0
  4097  0010B2  6F65               	movwf	(sprintf@flag+1)& (0+255),b
  4098  0010B4  0E00               	movlw	0
  4099  0010B6  6F64               	movwf	sprintf@flag& (0+255),b
  4100                           
  4101                           ; BSR set to: 0
  4102                           ;doprnt.c: 628: if(*f == '.') {
  4103  0010B8  C04E  FFF6         	movff	sprintf@f,tblptrl
  4104  0010BC                     	if	1	;There is more than 1 active tblptr byte
  4105  0010BC  0E10               	movlw	high __smallconst
  4106  0010BE  6EF7               	movwf	tblptrh,c
  4107  0010C0                     	endif
  4108  0010C0                     	if	0	;tblptru may be non-zero
  4109  0010C0                     	endif
  4110  0010C0                     	if	0	;tblptru may be non-zero
  4111  0010C0                     	endif
  4112  0010C0  0008               	tblrd		*
  4113  0010C2  50F5               	movf	tablat,w,c
  4114  0010C4  0A2E               	xorlw	46
  4115  0010C6  A4D8               	btfss	status,2,c
  4116  0010C8  D036               	goto	i2l3495
  4117                           
  4118                           ; BSR set to: 0
  4119                           ;doprnt.c: 629: flag |= 0x4000;
  4120  0010CA  8D65               	bsf	(sprintf@flag+1)& (0+255),6,b
  4121                           
  4122                           ;doprnt.c: 630: f++;
  4123  0010CC  2A4E               	incf	sprintf@f^0,f,c
  4124                           
  4125                           ; BSR set to: 0
  4126                           ;doprnt.c: 644: {;doprnt.c: 645: prec = 0;
  4127  0010CE  0E00               	movlw	0
  4128  0010D0  6F71               	movwf	(sprintf@prec+1)& (0+255),b
  4129  0010D2  0E00               	movlw	0
  4130  0010D4  6F70               	movwf	sprintf@prec& (0+255),b
  4131                           
  4132                           ;doprnt.c: 646: while(isdigit((unsigned)*f)) {
  4133  0010D6  D024               	goto	i2l3493
  4134  0010D8                     i2l3487:
  4135                           
  4136                           ;doprnt.c: 647: prec *= 10;
  4137  0010D8  C070  F001         	movff	sprintf@prec,___wmul@multiplier
  4138  0010DC  C071  F002         	movff	sprintf@prec+1,___wmul@multiplier+1
  4139  0010E0  0E00               	movlw	0
  4140  0010E2  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  4141  0010E4  0E0A               	movlw	10
  4142  0010E6  6E03               	movwf	___wmul@multiplicand^0,c
  4143  0010E8  EC00  F01A         	call	___wmul	;wreg free
  4144  0010EC  C001  F070         	movff	?___wmul,sprintf@prec
  4145  0010F0  C002  F071         	movff	?___wmul+1,sprintf@prec+1
  4146                           
  4147                           ;doprnt.c: 648: prec += *f++ - '0';
  4148  0010F4  0ED0               	movlw	208
  4149  0010F6  6E52               	movwf	??_sprintf^0,c
  4150  0010F8  0EFF               	movlw	255
  4151  0010FA  6E53               	movwf	(??_sprintf+1)^0,c
  4152  0010FC  C04E  FFF6         	movff	sprintf@f,tblptrl
  4153  001100                     	if	1	;There is more than 1 active tblptr byte
  4154  001100  0E10               	movlw	high __smallconst
  4155  001102  6EF7               	movwf	tblptrh,c
  4156  001104                     	endif
  4157  001104                     	if	0	;tblptru may be non-zero
  4158  001104                     	endif
  4159  001104                     	if	0	;tblptru may be non-zero
  4160  001104                     	endif
  4161  001104  0008               	tblrd		*
  4162  001106  50F5               	movf	tablat,w,c
  4163  001108  6E54               	movwf	(??_sprintf+2)^0,c
  4164  00110A  6A55               	clrf	(??_sprintf+3)^0,c
  4165  00110C  5052               	movf	??_sprintf^0,w,c
  4166  00110E  2654               	addwf	(??_sprintf+2)^0,f,c
  4167  001110  5053               	movf	(??_sprintf+1)^0,w,c
  4168  001112  2255               	addwfc	(??_sprintf+3)^0,f,c
  4169  001114  5054               	movf	(??_sprintf+2)^0,w,c
  4170  001116  0100               	movlb	0	; () banked
  4171  001118  2770               	addwf	sprintf@prec& (0+255),f,b
  4172  00111A  5055               	movf	(??_sprintf+3)^0,w,c
  4173  00111C  2371               	addwfc	(sprintf@prec+1)& (0+255),f,b
  4174                           
  4175                           ; BSR set to: 0
  4176  00111E  2A4E               	incf	sprintf@f^0,f,c
  4177  001120                     i2l3493:
  4178                           
  4179                           ; BSR set to: 0
  4180  001120  C04E  FFF6         	movff	sprintf@f,tblptrl
  4181  001124                     	if	1	;There is more than 1 active tblptr byte
  4182  001124  0E10               	movlw	high __smallconst
  4183  001126  6EF7               	movwf	tblptrh,c
  4184  001128                     	endif
  4185  001128                     	if	0	;tblptru may be non-zero
  4186  001128                     	endif
  4187  001128                     	if	0	;tblptru may be non-zero
  4188  001128                     	endif
  4189  001128  0008               	tblrd		*
  4190  00112A  50F5               	movf	tablat,w,c
  4191  00112C  EC36  F01A         	call	_isdigit
  4192  001130  A0D8               	btfss	status,0,c
  4193  001132  D009               	goto	i2l3503
  4194  001134  D7D1               	goto	i2l3487
  4195  001136                     i2l3495:
  4196                           
  4197                           ; BSR set to: 0
  4198                           ;doprnt.c: 652: prec = 0;
  4199  001136  0E00               	movlw	0
  4200  001138  6F71               	movwf	(sprintf@prec+1)& (0+255),b
  4201  00113A  0E00               	movlw	0
  4202  00113C  6F70               	movwf	sprintf@prec& (0+255),b
  4203                           
  4204                           ; BSR set to: 0
  4205                           ;doprnt.c: 654: flag |= 0x1000;
  4206  00113E  8965               	bsf	(sprintf@flag+1)& (0+255),4,b
  4207  001140  D002               	goto	i2l3503
  4208  001142                     i2l3499:
  4209                           
  4210                           ; BSR set to: 0
  4211                           ;doprnt.c: 689: flag |= 0x400;
  4212  001142  8565               	bsf	(sprintf@flag+1)& (0+255),2,b
  4213                           
  4214                           ;doprnt.c: 690: break;
  4215  001144  D013               	goto	i2l3505
  4216  001146                     i2l3503:
  4217  001146  2A4E               	incf	sprintf@f^0,f,c
  4218  001148  044E               	decf	sprintf@f^0,w,c
  4219  00114A  6E52               	movwf	??_sprintf^0,c
  4220  00114C  C052  FFF6         	movff	??_sprintf,tblptrl
  4221  001150                     	if	1	;There is more than 1 active tblptr byte
  4222  001150  0E10               	movlw	high __smallconst
  4223  001152  6EF7               	movwf	tblptrh,c
  4224  001154                     	endif
  4225  001154                     	if	0	;tblptru may be non-zero
  4226  001154                     	endif
  4227  001154                     	if	0	;tblptru may be non-zero
  4228  001154                     	endif
  4229  001154  0008               	tblrd		*
  4230  001156  CFF5 F075          	movff	tablat,sprintf@c
  4231  00115A  0100               	movlb	0	; () banked
  4232  00115C  5175               	movf	sprintf@c& (0+255),w,b
  4233                           
  4234                           ; Switch size 1, requested type "simple"
  4235                           ; Number of cases is 2, Range of values is 0 to 102
  4236                           ; switch strategies available:
  4237                           ; Name         Instructions Cycles
  4238                           ; simple_byte            7     4 (average)
  4239                           ;	Chosen strategy is simple_byte
  4240  00115E  0A00               	xorlw	0	; case 0
  4241  001160  B4D8               	btfsc	status,2,c
  4242  001162  D2FA               	goto	i2u398_40
  4243  001164  0A66               	xorlw	102	; case 102
  4244  001166  B4D8               	btfsc	status,2,c
  4245  001168  D7EC               	goto	i2l3499
  4246  00116A  D2E9               	goto	i2l3673
  4247  00116C                     i2l3505:
  4248                           
  4249                           ; BSR set to: 0
  4250                           ;doprnt.c: 851: if(flag & (0x700)) {
  4251  00116C  0E07               	movlw	7
  4252  00116E  1565               	andwf	(sprintf@flag+1)& (0+255),w,b
  4253  001170  B4D8               	btfsc	status,2,c
  4254  001172  D2B5               	goto	i2l3653
  4255                           
  4256                           ; BSR set to: 0
  4257                           ;doprnt.c: 853: if(flag & 0x1000)
  4258  001174  A965               	btfss	(sprintf@flag+1)& (0+255),4,b
  4259  001176  D004               	goto	i2l3511
  4260                           
  4261                           ; BSR set to: 0
  4262                           ;doprnt.c: 855: prec = 6;
  4263  001178  0E00               	movlw	0
  4264  00117A  6F71               	movwf	(sprintf@prec+1)& (0+255),b
  4265  00117C  0E06               	movlw	6
  4266  00117E  6F70               	movwf	sprintf@prec& (0+255),b
  4267  001180                     i2l3511:
  4268                           
  4269                           ; BSR set to: 0
  4270                           ;doprnt.c: 856: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  4271  001180  5163               	movf	sprintf@ap& (0+255),w,b
  4272  001182  6ED9               	movwf	fsr2l,c
  4273  001184  6ADA               	clrf	fsr2h,c
  4274  001186  CFDE F072          	movff	postinc2,sprintf@fval
  4275  00118A  CFDE F073          	movff	postinc2,sprintf@fval+1
  4276  00118E  CFDD F074          	movff	postdec2,sprintf@fval+2
  4277                           
  4278                           ; BSR set to: 0
  4279  001192  0E03               	movlw	3
  4280  001194  2763               	addwf	sprintf@ap& (0+255),f,b
  4281                           
  4282                           ; BSR set to: 0
  4283                           ;doprnt.c: 857: if(fval < 0.0) {
  4284  001196  AF74               	btfss	(sprintf@fval+2)& (0+255),7,b
  4285  001198  D010               	goto	i2l3521
  4286                           
  4287                           ; BSR set to: 0
  4288                           ;doprnt.c: 858: fval = -fval;
  4289  00119A  C072  F001         	movff	sprintf@fval,___ftneg@f1
  4290  00119E  C073  F002         	movff	sprintf@fval+1,___ftneg@f1+1
  4291  0011A2  C074  F003         	movff	sprintf@fval+2,___ftneg@f1+2
  4292  0011A6  EC13  F01A         	call	___ftneg	;wreg free
  4293  0011AA  C001  F072         	movff	?___ftneg,sprintf@fval
  4294  0011AE  C002  F073         	movff	?___ftneg+1,sprintf@fval+1
  4295  0011B2  C003  F074         	movff	?___ftneg+2,sprintf@fval+2
  4296                           
  4297                           ; BSR set to: 0
  4298                           ;doprnt.c: 859: flag |= 0x03;
  4299  0011B6  0E03               	movlw	3
  4300  0011B8  1364               	iorwf	sprintf@flag& (0+255),f,b
  4301  0011BA                     i2l3521:
  4302                           
  4303                           ; BSR set to: 0
  4304                           ;doprnt.c: 860: };doprnt.c: 861: eexp = 0;
  4305  0011BA  0E00               	movlw	0
  4306  0011BC  6F6B               	movwf	(sprintf@eexp+1)& (0+255),b
  4307  0011BE  0E00               	movlw	0
  4308  0011C0  6F6A               	movwf	sprintf@eexp& (0+255),b
  4309                           
  4310                           ; BSR set to: 0
  4311                           ;doprnt.c: 862: if( fval!=0) {
  4312  0011C2  5172               	movf	sprintf@fval& (0+255),w,b
  4313  0011C4  1173               	iorwf	(sprintf@fval+1)& (0+255),w,b
  4314  0011C6  1174               	iorwf	(sprintf@fval+2)& (0+255),w,b
  4315  0011C8  B4D8               	btfsc	status,2,c
  4316  0011CA  D086               	goto	i2l3549
  4317                           
  4318                           ; BSR set to: 0
  4319                           ;doprnt.c: 863: (void)(*(&eexp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
  4320  0011CC  0E82               	movlw	130
  4321  0011CE  6E52               	movwf	??_sprintf^0,c
  4322  0011D0  0EFF               	movlw	255
  4323  0011D2  6E53               	movwf	(??_sprintf+1)^0,c
  4324  0011D4  C072  F054         	movff	sprintf@fval,??_sprintf+2
  4325  0011D8  C073  F055         	movff	sprintf@fval+1,??_sprintf+3
  4326  0011DC  C074  F056         	movff	sprintf@fval+2,??_sprintf+4
  4327  0011E0  C075  F057         	movff	sprintf@fval+3,??_sprintf+5
  4328  0011E4  0E10               	movlw	16
  4329  0011E6  D005               	goto	i2u374_40
  4330  0011E8                     i2u374_45:
  4331  0011E8  90D8               	bcf	status,0,c
  4332  0011EA  3257               	rrcf	(??_sprintf+5)^0,f,c
  4333  0011EC  3256               	rrcf	(??_sprintf+4)^0,f,c
  4334  0011EE  3255               	rrcf	(??_sprintf+3)^0,f,c
  4335  0011F0  3254               	rrcf	(??_sprintf+2)^0,f,c
  4336  0011F2                     i2u374_40:
  4337  0011F2  2EE8               	decfsz	wreg,f,c
  4338  0011F4  D7F9               	goto	i2u374_45
  4339  0011F6  5054               	movf	(??_sprintf+2)^0,w,c
  4340  0011F8  2452               	addwf	??_sprintf^0,w,c
  4341  0011FA  6F6A               	movwf	sprintf@eexp& (0+255),b
  4342  0011FC  0E00               	movlw	0
  4343  0011FE  2053               	addwfc	(??_sprintf+1)^0,w,c
  4344  001200  6F6B               	movwf	(sprintf@eexp+1)& (0+255),b
  4345                           
  4346                           ; BSR set to: 0
  4347                           ;doprnt.c: 864: eexp--;
  4348  001202  076A               	decf	sprintf@eexp& (0+255),f,b
  4349  001204  A0D8               	btfss	status,0,c
  4350  001206  076B               	decf	(sprintf@eexp+1)& (0+255),f,b
  4351                           
  4352                           ; BSR set to: 0
  4353                           ;doprnt.c: 865: eexp *= 3;
  4354  001208  C06A  F001         	movff	sprintf@eexp,___wmul@multiplier
  4355  00120C  C06B  F002         	movff	sprintf@eexp+1,___wmul@multiplier+1
  4356  001210  0E00               	movlw	0
  4357  001212  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  4358  001214  0E03               	movlw	3
  4359  001216  6E03               	movwf	___wmul@multiplicand^0,c
  4360  001218  EC00  F01A         	call	___wmul	;wreg free
  4361  00121C  C001  F06A         	movff	?___wmul,sprintf@eexp
  4362  001220  C002  F06B         	movff	?___wmul+1,sprintf@eexp+1
  4363                           
  4364                           ;doprnt.c: 866: eexp /= 10;
  4365  001224  C06A  F007         	movff	sprintf@eexp,___awdiv@dividend
  4366  001228  C06B  F008         	movff	sprintf@eexp+1,___awdiv@dividend+1
  4367  00122C  0E00               	movlw	0
  4368  00122E  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  4369  001230  0E0A               	movlw	10
  4370  001232  6E09               	movwf	___awdiv@divisor^0,c
  4371  001234  ECDD  F017         	call	___awdiv	;wreg free
  4372  001238  C007  F06A         	movff	?___awdiv,sprintf@eexp
  4373  00123C  C008  F06B         	movff	?___awdiv+1,sprintf@eexp+1
  4374                           
  4375                           ;doprnt.c: 867: if(eexp < 0)
  4376  001240  0100               	movlb	0	; () banked
  4377  001242  AF6B               	btfss	(sprintf@eexp+1)& (0+255),7,b
  4378  001244  D003               	goto	i2l3537
  4379                           
  4380                           ; BSR set to: 0
  4381                           ;doprnt.c: 868: eexp--;
  4382  001246  076A               	decf	sprintf@eexp& (0+255),f,b
  4383  001248  A0D8               	btfss	status,0,c
  4384  00124A  076B               	decf	(sprintf@eexp+1)& (0+255),f,b
  4385  00124C                     i2l3537:
  4386                           
  4387                           ; BSR set to: 0
  4388                           ;doprnt.c: 872: tmpval.integ = scale(-eexp);
  4389  00124C  516A               	movf	sprintf@eexp& (0+255),w,b
  4390  00124E  0800               	sublw	0
  4391  001250  ECB2  F00B         	call	_scale
  4392  001254  C01E  F06C         	movff	?_scale,sprintf@tmpval
  4393  001258  C01F  F06D         	movff	?_scale+1,sprintf@tmpval+1
  4394  00125C  C020  F06E         	movff	?_scale+2,sprintf@tmpval+2
  4395                           
  4396                           ;doprnt.c: 873: tmpval.integ *= fval;
  4397  001260  C06C  F00F         	movff	sprintf@tmpval,i2___ftmul@f1
  4398  001264  C06D  F010         	movff	sprintf@tmpval+1,i2___ftmul@f1+1
  4399  001268  C06E  F011         	movff	sprintf@tmpval+2,i2___ftmul@f1+2
  4400  00126C  C072  F012         	movff	sprintf@fval,i2___ftmul@f2
  4401  001270  C073  F013         	movff	sprintf@fval+1,i2___ftmul@f2+1
  4402  001274  C074  F014         	movff	sprintf@fval+2,i2___ftmul@f2+2
  4403  001278  EC7D  F013         	call	i2___ftmul	;wreg free
  4404  00127C  C00F  F06C         	movff	?i2___ftmul,sprintf@tmpval
  4405  001280  C010  F06D         	movff	?i2___ftmul+1,sprintf@tmpval+1
  4406  001284  C011  F06E         	movff	?i2___ftmul+2,sprintf@tmpval+2
  4407                           
  4408                           ;doprnt.c: 874: if(tmpval.integ < 1.0)
  4409  001288  C06C  F001         	movff	sprintf@tmpval,___ftge@ff1
  4410  00128C  C06D  F002         	movff	sprintf@tmpval+1,___ftge@ff1+1
  4411  001290  C06E  F003         	movff	sprintf@tmpval+2,___ftge@ff1+2
  4412  001294  0E00               	movlw	0
  4413  001296  6E04               	movwf	___ftge@ff2^0,c
  4414  001298  0E80               	movlw	128
  4415  00129A  6E05               	movwf	(___ftge@ff2+1)^0,c
  4416  00129C  0E3F               	movlw	63
  4417  00129E  6E06               	movwf	(___ftge@ff2+2)^0,c
  4418  0012A0  EC60  F018         	call	___ftge	;wreg free
  4419  0012A4  B0D8               	btfsc	status,0,c
  4420  0012A6  D005               	goto	i2l3545
  4421                           
  4422                           ;doprnt.c: 875: eexp--;
  4423  0012A8  0100               	movlb	0	; () banked
  4424  0012AA  076A               	decf	sprintf@eexp& (0+255),f,b
  4425  0012AC  A0D8               	btfss	status,0,c
  4426  0012AE  076B               	decf	(sprintf@eexp+1)& (0+255),f,b
  4427  0012B0  D013               	goto	i2l3549
  4428  0012B2                     i2l3545:
  4429                           
  4430                           ;doprnt.c: 876: else if(tmpval.integ >= 10.0)
  4431  0012B2  C06C  F001         	movff	sprintf@tmpval,___ftge@ff1
  4432  0012B6  C06D  F002         	movff	sprintf@tmpval+1,___ftge@ff1+1
  4433  0012BA  C06E  F003         	movff	sprintf@tmpval+2,___ftge@ff1+2
  4434  0012BE  0E00               	movlw	0
  4435  0012C0  6E04               	movwf	___ftge@ff2^0,c
  4436  0012C2  0E20               	movlw	32
  4437  0012C4  6E05               	movwf	(___ftge@ff2+1)^0,c
  4438  0012C6  0E41               	movlw	65
  4439  0012C8  6E06               	movwf	(___ftge@ff2+2)^0,c
  4440  0012CA  EC60  F018         	call	___ftge	;wreg free
  4441  0012CE  A0D8               	btfss	status,0,c
  4442  0012D0  D003               	goto	i2l3549
  4443                           
  4444                           ;doprnt.c: 877: eexp++;
  4445  0012D2  0100               	movlb	0	; () banked
  4446  0012D4  4B6A               	infsnz	sprintf@eexp& (0+255),f,b
  4447  0012D6  2B6B               	incf	(sprintf@eexp+1)& (0+255),f,b
  4448  0012D8                     i2l3549:
  4449                           
  4450                           ;doprnt.c: 878: };doprnt.c: 1138: if(prec <= 12)
  4451  0012D8  0100               	movlb	0	; () banked
  4452  0012DA  BF71               	btfsc	(sprintf@prec+1)& (0+255),7,b
  4453  0012DC  D006               	goto	i2u378_40
  4454  0012DE  5171               	movf	(sprintf@prec+1)& (0+255),w,b
  4455  0012E0  E11B               	bnz	i2l3553
  4456  0012E2  0E0D               	movlw	13
  4457  0012E4  5D70               	subwf	sprintf@prec& (0+255),w,b
  4458  0012E6  B0D8               	btfsc	status,0,c
  4459  0012E8  D017               	goto	i2l3553
  4460  0012EA                     i2u378_40:
  4461                           
  4462                           ; BSR set to: 0
  4463                           ;doprnt.c: 1139: fval += fround((unsigned int)prec);
  4464  0012EA  C072  F02C         	movff	sprintf@fval,i2___ftadd@f1
  4465  0012EE  C073  F02D         	movff	sprintf@fval+1,i2___ftadd@f1+1
  4466  0012F2  C074  F02E         	movff	sprintf@fval+2,i2___ftadd@f1+2
  4467  0012F6  5170               	movf	sprintf@prec& (0+255),w,b
  4468  0012F8  EC7E  F00D         	call	_fround
  4469  0012FC  C01E  F02F         	movff	?_fround,i2___ftadd@f2
  4470  001300  C01F  F030         	movff	?_fround+1,i2___ftadd@f2+1
  4471  001304  C020  F031         	movff	?_fround+2,i2___ftadd@f2+2
  4472  001308  EC40  F00F         	call	i2___ftadd	;wreg free
  4473  00130C  C02C  F072         	movff	?i2___ftadd,sprintf@fval
  4474  001310  C02D  F073         	movff	?i2___ftadd+1,sprintf@fval+1
  4475  001314  C02E  F074         	movff	?i2___ftadd+2,sprintf@fval+2
  4476  001318                     i2l3553:
  4477                           
  4478                           ;doprnt.c: 1142: if((eexp > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  4479  001318  0100               	movlb	0	; () banked
  4480  00131A  BF6B               	btfsc	(sprintf@eexp+1)& (0+255),7,b
  4481  00131C  D006               	goto	i2u379_40
  4482  00131E  516B               	movf	(sprintf@eexp+1)& (0+255),w,b
  4483  001320  E120               	bnz	i2l3561
  4484  001322  0E0A               	movlw	10
  4485  001324  5D6A               	subwf	sprintf@eexp& (0+255),w,b
  4486  001326  B0D8               	btfsc	status,0,c
  4487  001328  D01C               	goto	i2u382_40
  4488  00132A                     i2u379_40:
  4489                           
  4490                           ; BSR set to: 0
  4491  00132A  5172               	movf	sprintf@fval& (0+255),w,b
  4492  00132C  1173               	iorwf	(sprintf@fval+1)& (0+255),w,b
  4493  00132E  1174               	iorwf	(sprintf@fval+2)& (0+255),w,b
  4494  001330  B4D8               	btfsc	status,2,c
  4495  001332  D056               	goto	i2l3575
  4496                           
  4497                           ; BSR set to: 0
  4498  001334  C072  F03E         	movff	sprintf@fval,i2___fttol@f1
  4499  001338  C073  F03F         	movff	sprintf@fval+1,i2___fttol@f1+1
  4500  00133C  C074  F040         	movff	sprintf@fval+2,i2___fttol@f1+2
  4501  001340  ECCB  F015         	call	i2___fttol	;wreg free
  4502  001344  503E               	movf	?i2___fttol^0,w,c
  4503  001346  103F               	iorwf	(?i2___fttol+1)^0,w,c
  4504  001348  1040               	iorwf	(?i2___fttol+2)^0,w,c
  4505  00134A  1041               	iorwf	(?i2___fttol+3)^0,w,c
  4506  00134C  A4D8               	btfss	status,2,c
  4507  00134E  D048               	goto	i2l3575
  4508  001350  0100               	movlb	0	; () banked
  4509  001352  BF6B               	btfsc	(sprintf@eexp+1)& (0+255),7,b
  4510  001354  D045               	goto	i2l3575
  4511  001356  516B               	movf	(sprintf@eexp+1)& (0+255),w,b
  4512  001358  E104               	bnz	i2u382_40
  4513  00135A  0E02               	movlw	2
  4514  00135C  5D6A               	subwf	sprintf@eexp& (0+255),w,b
  4515  00135E  A0D8               	btfss	status,0,c
  4516  001360  D03F               	goto	i2l3575
  4517  001362                     i2u382_40:
  4518  001362                     i2l3561:
  4519                           
  4520                           ; BSR set to: 0
  4521                           ;doprnt.c: 1146: if(tmpval.integ < 4.294967296){
  4522  001362  C06C  F001         	movff	sprintf@tmpval,___ftge@ff1
  4523  001366  C06D  F002         	movff	sprintf@tmpval+1,___ftge@ff1+1
  4524  00136A  C06E  F003         	movff	sprintf@tmpval+2,___ftge@ff1+2
  4525  00136E  0E70               	movlw	112
  4526  001370  6E04               	movwf	___ftge@ff2^0,c
  4527  001372  0E89               	movlw	137
  4528  001374  6E05               	movwf	(___ftge@ff2+1)^0,c
  4529  001376  0E40               	movlw	64
  4530  001378  6E06               	movwf	(___ftge@ff2+2)^0,c
  4531  00137A  EC60  F018         	call	___ftge	;wreg free
  4532  00137E  B0D8               	btfsc	status,0,c
  4533  001380  D003               	goto	i2l3565
  4534                           
  4535                           ;doprnt.c: 1147: eexp -= (sizeof dpowers/sizeof dpowers[0])-1;
  4536  001382  0100               	movlb	0	; () banked
  4537  001384  0EF7               	movlw	247
  4538  001386  D002               	goto	L5
  4539  001388                     i2l3565:
  4540                           
  4541                           ;doprnt.c: 1149: eexp -= (sizeof dpowers/sizeof dpowers[0])-2;
  4542  001388  0100               	movlb	0	; () banked
  4543  00138A  0EF8               	movlw	248
  4544  00138C                     L5:
  4545  00138C  276A               	addwf	sprintf@eexp& (0+255),f,b
  4546  00138E  0EFF               	movlw	255
  4547  001390  236B               	addwfc	(sprintf@eexp+1)& (0+255),f,b
  4548                           
  4549                           ; BSR set to: 0
  4550                           ;doprnt.c: 1150: };doprnt.c: 1151: tmpval.integ = scale(eexp);
  4551  001392  516A               	movf	sprintf@eexp& (0+255),w,b
  4552  001394  ECB2  F00B         	call	_scale
  4553  001398  C01E  F06C         	movff	?_scale,sprintf@tmpval
  4554  00139C  C01F  F06D         	movff	?_scale+1,sprintf@tmpval+1
  4555  0013A0  C020  F06E         	movff	?_scale+2,sprintf@tmpval+2
  4556                           
  4557                           ;doprnt.c: 1152: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  4558  0013A4  C072  F001         	movff	sprintf@fval,__tdiv_to_l_@f1
  4559  0013A8  C073  F002         	movff	sprintf@fval+1,__tdiv_to_l_@f1+1
  4560  0013AC  C074  F003         	movff	sprintf@fval+2,__tdiv_to_l_@f1+2
  4561  0013B0  C06C  F004         	movff	sprintf@tmpval,__tdiv_to_l_@f2
  4562  0013B4  C06D  F005         	movff	sprintf@tmpval+1,__tdiv_to_l_@f2+1
  4563  0013B8  C06E  F006         	movff	sprintf@tmpval+2,__tdiv_to_l_@f2+2
  4564  0013BC  EC84  F012         	call	__tdiv_to_l_	;wreg free
  4565  0013C0  C001  F066         	movff	?__tdiv_to_l_,sprintf@val
  4566  0013C4  C002  F067         	movff	?__tdiv_to_l_+1,sprintf@val+1
  4567  0013C8  C003  F068         	movff	?__tdiv_to_l_+2,sprintf@val+2
  4568  0013CC  C004  F069         	movff	?__tdiv_to_l_+3,sprintf@val+3
  4569                           
  4570                           ;doprnt.c: 1155: fval = 0.0;
  4571  0013D0  0E00               	movlw	0
  4572  0013D2  0100               	movlb	0	; () banked
  4573  0013D4  6F72               	movwf	sprintf@fval& (0+255),b
  4574  0013D6  0E00               	movlw	0
  4575  0013D8  6F73               	movwf	(sprintf@fval+1)& (0+255),b
  4576  0013DA  0E00               	movlw	0
  4577  0013DC  6F74               	movwf	(sprintf@fval+2)& (0+255),b
  4578                           
  4579                           ;doprnt.c: 1156: } else {
  4580  0013DE  D033               	goto	i2l3579
  4581  0013E0                     i2l3575:
  4582                           
  4583                           ;doprnt.c: 1157: val = (unsigned long)fval;
  4584  0013E0  C072  F03E         	movff	sprintf@fval,i2___fttol@f1
  4585  0013E4  C073  F03F         	movff	sprintf@fval+1,i2___fttol@f1+1
  4586  0013E8  C074  F040         	movff	sprintf@fval+2,i2___fttol@f1+2
  4587  0013EC  ECCB  F015         	call	i2___fttol	;wreg free
  4588  0013F0  C03E  F066         	movff	?i2___fttol,sprintf@val
  4589  0013F4  C03F  F067         	movff	?i2___fttol+1,sprintf@val+1
  4590  0013F8  C040  F068         	movff	?i2___fttol+2,sprintf@val+2
  4591  0013FC  C041  F069         	movff	?i2___fttol+3,sprintf@val+3
  4592                           
  4593                           ;doprnt.c: 1158: fval -= (double)val;
  4594  001400  C072  F038         	movff	sprintf@fval,i2___ftsub@f1
  4595  001404  C073  F039         	movff	sprintf@fval+1,i2___ftsub@f1+1
  4596  001408  C074  F03A         	movff	sprintf@fval+2,i2___ftsub@f1+2
  4597  00140C  C066  F009         	movff	sprintf@val,___lltoft@c
  4598  001410  C067  F00A         	movff	sprintf@val+1,___lltoft@c+1
  4599  001414  C068  F00B         	movff	sprintf@val+2,___lltoft@c+2
  4600  001418  C069  F00C         	movff	sprintf@val+3,___lltoft@c+3
  4601  00141C  EC05  F019         	call	___lltoft	;wreg free
  4602  001420  C009  F03B         	movff	?___lltoft,i2___ftsub@f2
  4603  001424  C00A  F03C         	movff	?___lltoft+1,i2___ftsub@f2+1
  4604  001428  C00B  F03D         	movff	?___lltoft+2,i2___ftsub@f2+2
  4605  00142C  EC75  F019         	call	i2___ftsub	;wreg free
  4606  001430  C038  F072         	movff	?i2___ftsub,sprintf@fval
  4607  001434  C039  F073         	movff	?i2___ftsub+1,sprintf@fval+1
  4608  001438  C03A  F074         	movff	?i2___ftsub+2,sprintf@fval+2
  4609                           
  4610                           ;doprnt.c: 1159: eexp = 0;
  4611  00143C  0E00               	movlw	0
  4612  00143E  0100               	movlb	0	; () banked
  4613  001440  6F6B               	movwf	(sprintf@eexp+1)& (0+255),b
  4614  001442  0E00               	movlw	0
  4615  001444  6F6A               	movwf	sprintf@eexp& (0+255),b
  4616  001446                     i2l3579:
  4617                           
  4618                           ; BSR set to: 0
  4619                           ;doprnt.c: 1160: };doprnt.c: 1162: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ;
      +                           c++)
  4620  001446  0E01               	movlw	1
  4621  001448  6F75               	movwf	sprintf@c& (0+255),b
  4622  00144A                     i2l3585:
  4623                           
  4624                           ; BSR set to: 0
  4625                           ;doprnt.c: 1163: if(val < dpowers[c])
  4626  00144A  5175               	movf	sprintf@c& (0+255),w,b
  4627  00144C  0D04               	mullw	4
  4628  00144E  50F3               	movf	243,w,c
  4629  001450  0F4F               	addlw	low _dpowers
  4630  001452  6E52               	movwf	??_sprintf^0,c
  4631  001454  C052  FFF6         	movff	??_sprintf,tblptrl
  4632  001458                     	if	1	;There is more than 1 active tblptr byte
  4633  001458  0E10               	movlw	high __smallconst
  4634  00145A  6EF7               	movwf	tblptrh,c
  4635  00145C                     	endif
  4636  00145C                     	if	0	;tblptru may be non-zero
  4637  00145C                     	endif
  4638  00145C                     	if	0	;tblptru may be non-zero
  4639  00145C                     	endif
  4640  00145C  0009               	tblrd		*+
  4641  00145E  50F5               	movf	tablat,w,c
  4642  001460  5D66               	subwf	sprintf@val& (0+255),w,b
  4643  001462  0009               	tblrd		*+
  4644  001464  50F5               	movf	tablat,w,c
  4645  001466  5967               	subwfb	(sprintf@val+1)& (0+255),w,b
  4646  001468  0009               	tblrd		*+
  4647  00146A  50F5               	movf	tablat,w,c
  4648  00146C  5968               	subwfb	(sprintf@val+2)& (0+255),w,b
  4649  00146E  0009               	tblrd		*+
  4650  001470  50F5               	movf	tablat,w,c
  4651  001472  5969               	subwfb	(sprintf@val+3)& (0+255),w,b
  4652  001474  A0D8               	btfss	status,0,c
  4653  001476  D005               	goto	i2u385_40
  4654                           
  4655                           ; BSR set to: 0
  4656  001478  2B75               	incf	sprintf@c& (0+255),f,b
  4657                           
  4658                           ; BSR set to: 0
  4659  00147A  0E0A               	movlw	10
  4660  00147C  1975               	xorwf	sprintf@c& (0+255),w,b
  4661  00147E  A4D8               	btfss	status,2,c
  4662  001480  D7E4               	goto	i2l3585
  4663  001482                     i2u385_40:
  4664                           
  4665                           ; BSR set to: 0
  4666                           ;doprnt.c: 1201: {;doprnt.c: 1214: if(flag & 0x03)
  4667  001482  C064  F052         	movff	sprintf@flag,??_sprintf
  4668  001486  0E03               	movlw	3
  4669  001488  1652               	andwf	??_sprintf^0,f,c
  4670  00148A  B4D8               	btfsc	status,2,c
  4671  00148C  D04E               	goto	i2l3607
  4672                           
  4673                           ; BSR set to: 0
  4674                           ;doprnt.c: 1216: ((*sp++ = ('-')));
  4675  00148E  504D               	movf	sprintf@sp^0,w,c
  4676  001490  6ED9               	movwf	fsr2l,c
  4677  001492  6ADA               	clrf	fsr2h,c
  4678  001494  0E2D               	movlw	45
  4679  001496  6EDF               	movwf	indf2,c
  4680                           
  4681                           ; BSR set to: 0
  4682  001498  2A4D               	incf	sprintf@sp^0,f,c
  4683  00149A  D047               	goto	i2l3607
  4684  00149C                     i2l3599:
  4685                           
  4686                           ; BSR set to: 0
  4687                           ;doprnt.c: 1226: {;doprnt.c: 1227: tmpval.vd = val/dpowers[c];
  4688  00149C  C066  F001         	movff	sprintf@val,___lldiv@dividend
  4689  0014A0  C067  F002         	movff	sprintf@val+1,___lldiv@dividend+1
  4690  0014A4  C068  F003         	movff	sprintf@val+2,___lldiv@dividend+2
  4691  0014A8  C069  F004         	movff	sprintf@val+3,___lldiv@dividend+3
  4692  0014AC  5175               	movf	sprintf@c& (0+255),w,b
  4693  0014AE  0D04               	mullw	4
  4694  0014B0  50F3               	movf	243,w,c
  4695  0014B2  0F4F               	addlw	low _dpowers
  4696  0014B4  6E52               	movwf	??_sprintf^0,c
  4697  0014B6  C052  FFF6         	movff	??_sprintf,tblptrl
  4698  0014BA                     	if	1	;There is more than 1 active tblptr byte
  4699  0014BA  0E10               	movlw	high __smallconst
  4700  0014BC  6EF7               	movwf	tblptrh,c
  4701  0014BE                     	endif
  4702  0014BE                     	if	0	;tblptru may be non-zero
  4703  0014BE                     	endif
  4704  0014BE                     	if	0	;tblptru may be non-zero
  4705  0014BE                     	endif
  4706  0014BE  0009               	tblrd		*+
  4707  0014C0  CFF5 F005          	movff	tablat,___lldiv@divisor
  4708  0014C4  0009               	tblrd		*+
  4709  0014C6  CFF5 F006          	movff	tablat,___lldiv@divisor+1
  4710  0014CA  0009               	tblrd		*+
  4711  0014CC  CFF5 F007          	movff	tablat,___lldiv@divisor+2
  4712  0014D0  000A               	tblrd		*-
  4713  0014D2  CFF5 F008          	movff	tablat,___lldiv@divisor+3
  4714  0014D6  EC1F  F018         	call	___lldiv	;wreg free
  4715  0014DA  C001  F06C         	movff	?___lldiv,sprintf@tmpval
  4716  0014DE  C002  F06D         	movff	?___lldiv+1,sprintf@tmpval+1
  4717  0014E2  C003  F06E         	movff	?___lldiv+2,sprintf@tmpval+2
  4718  0014E6  C004  F06F         	movff	?___lldiv+3,sprintf@tmpval+3
  4719                           
  4720                           ; BSR set to: 0
  4721                           ;doprnt.c: 1228: tmpval.vd %= 10;
  4722  0014EA  C06C  F001         	movff	sprintf@tmpval,___llmod@dividend
  4723  0014EE  C06D  F002         	movff	sprintf@tmpval+1,___llmod@dividend+1
  4724  0014F2  C06E  F003         	movff	sprintf@tmpval+2,___llmod@dividend+2
  4725  0014F6  C06F  F004         	movff	sprintf@tmpval+3,___llmod@dividend+3
  4726  0014FA  0E0A               	movlw	10
  4727  0014FC  6E05               	movwf	___llmod@divisor^0,c
  4728  0014FE  0E00               	movlw	0
  4729  001500  6E06               	movwf	(___llmod@divisor+1)^0,c
  4730  001502  0E00               	movlw	0
  4731  001504  6E07               	movwf	(___llmod@divisor+2)^0,c
  4732  001506  0E00               	movlw	0
  4733  001508  6E08               	movwf	(___llmod@divisor+3)^0,c
  4734  00150A  ECD2  F018         	call	___llmod	;wreg free
  4735  00150E  C001  F06C         	movff	?___llmod,sprintf@tmpval
  4736  001512  C002  F06D         	movff	?___llmod+1,sprintf@tmpval+1
  4737  001516  C003  F06E         	movff	?___llmod+2,sprintf@tmpval+2
  4738  00151A  C004  F06F         	movff	?___llmod+3,sprintf@tmpval+3
  4739                           
  4740                           ; BSR set to: 0
  4741                           ;doprnt.c: 1229: ((*sp++ = ('0' + tmpval.vd)));
  4742  00151E  504D               	movf	sprintf@sp^0,w,c
  4743  001520  6ED9               	movwf	fsr2l,c
  4744  001522  6ADA               	clrf	fsr2h,c
  4745  001524  516C               	movf	sprintf@tmpval& (0+255),w,b
  4746  001526  0F30               	addlw	48
  4747  001528  D7B6               	goto	L6
  4748  00152A                     i2l3607:
  4749                           
  4750                           ; BSR set to: 0
  4751  00152A  0775               	decf	sprintf@c& (0+255),f,b
  4752  00152C  2975               	incf	sprintf@c& (0+255),w,b
  4753  00152E  B4D8               	btfsc	status,2,c
  4754  001530  D00A               	goto	i2l3615
  4755  001532  D7B4               	goto	i2l3599
  4756  001534                     i2l3609:
  4757                           
  4758                           ; BSR set to: 0
  4759                           ;doprnt.c: 1234: ((*sp++ = ('0')));
  4760  001534  504D               	movf	sprintf@sp^0,w,c
  4761  001536  6ED9               	movwf	fsr2l,c
  4762  001538  6ADA               	clrf	fsr2h,c
  4763  00153A  0E30               	movlw	48
  4764  00153C  6EDF               	movwf	indf2,c
  4765                           
  4766                           ; BSR set to: 0
  4767  00153E  2A4D               	incf	sprintf@sp^0,f,c
  4768                           
  4769                           ; BSR set to: 0
  4770                           ;doprnt.c: 1235: eexp--;
  4771  001540  076A               	decf	sprintf@eexp& (0+255),f,b
  4772  001542  A0D8               	btfss	status,0,c
  4773  001544  076B               	decf	(sprintf@eexp+1)& (0+255),f,b
  4774  001546                     i2l3615:
  4775                           
  4776                           ; BSR set to: 0
  4777  001546  BF6B               	btfsc	(sprintf@eexp+1)& (0+255),7,b
  4778  001548  D005               	goto	i2u388_40
  4779  00154A  516B               	movf	(sprintf@eexp+1)& (0+255),w,b
  4780  00154C  E1F3               	bnz	i2l3609
  4781  00154E  056A               	decf	sprintf@eexp& (0+255),w,b
  4782  001550  B0D8               	btfsc	status,0,c
  4783  001552  D7F0               	goto	i2l3609
  4784  001554                     i2u388_40:
  4785                           
  4786                           ; BSR set to: 0
  4787                           ;doprnt.c: 1236: };doprnt.c: 1237: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2)
      +                          )
  4788  001554  BF71               	btfsc	(sprintf@prec+1)& (0+255),7,b
  4789  001556  D009               	goto	i2l271
  4790  001558  5171               	movf	(sprintf@prec+1)& (0+255),w,b
  4791  00155A  E104               	bnz	i2u389_40
  4792  00155C  0E09               	movlw	9
  4793  00155E  5D70               	subwf	sprintf@prec& (0+255),w,b
  4794  001560  A0D8               	btfss	status,0,c
  4795  001562  D003               	goto	i2l271
  4796  001564                     i2u389_40:
  4797                           
  4798                           ; BSR set to: 0
  4799                           ;doprnt.c: 1238: c = (sizeof dpowers/sizeof dpowers[0])-2;
  4800  001564  0E08               	movlw	8
  4801  001566  6F75               	movwf	sprintf@c& (0+255),b
  4802  001568  D002               	goto	i2l3621
  4803  00156A                     i2l271:
  4804                           
  4805                           ; BSR set to: 0
  4806                           ;doprnt.c: 1239: else;doprnt.c: 1240: c = (char)prec;
  4807  00156A  C070  F075         	movff	sprintf@prec,sprintf@c
  4808  00156E                     i2l3621:
  4809                           
  4810                           ; BSR set to: 0
  4811                           ;doprnt.c: 1241: prec -= (int)c;
  4812  00156E  5175               	movf	sprintf@c& (0+255),w,b
  4813  001570  5F70               	subwf	sprintf@prec& (0+255),f,b
  4814  001572  0E00               	movlw	0
  4815  001574  5B71               	subwfb	(sprintf@prec+1)& (0+255),f,b
  4816                           
  4817                           ; BSR set to: 0
  4818                           ;doprnt.c: 1245: if(c)
  4819  001576  5175               	movf	sprintf@c& (0+255),w,b
  4820  001578  B4D8               	btfsc	status,2,c
  4821  00157A  D006               	goto	i2l3629
  4822                           
  4823                           ; BSR set to: 0
  4824                           ;doprnt.c: 1247: ((*sp++ = ('.')));
  4825  00157C  504D               	movf	sprintf@sp^0,w,c
  4826  00157E  6ED9               	movwf	fsr2l,c
  4827  001580  6ADA               	clrf	fsr2h,c
  4828  001582  0E2E               	movlw	46
  4829  001584  6EDF               	movwf	indf2,c
  4830                           
  4831                           ; BSR set to: 0
  4832  001586  2A4D               	incf	sprintf@sp^0,f,c
  4833  001588                     i2l3629:
  4834                           
  4835                           ; BSR set to: 0
  4836                           ;doprnt.c: 1253: val = (unsigned long)(fval * scale((signed char)c));
  4837  001588  5175               	movf	sprintf@c& (0+255),w,b
  4838  00158A  ECB2  F00B         	call	_scale
  4839  00158E  C01E  F060         	movff	?_scale,_sprintf$1036
  4840  001592  C01F  F061         	movff	?_scale+1,_sprintf$1036+1
  4841  001596  C020  F062         	movff	?_scale+2,_sprintf$1036+2
  4842                           
  4843                           ;doprnt.c: 1253: val = (unsigned long)(fval * scale((signed char)c));
  4844  00159A  C072  F012         	movff	sprintf@fval,i2___ftmul@f2
  4845  00159E  C073  F013         	movff	sprintf@fval+1,i2___ftmul@f2+1
  4846  0015A2  C074  F014         	movff	sprintf@fval+2,i2___ftmul@f2+2
  4847  0015A6  C060  F00F         	movff	_sprintf$1036,i2___ftmul@f1
  4848  0015AA  C061  F010         	movff	_sprintf$1036+1,i2___ftmul@f1+1
  4849  0015AE  C062  F011         	movff	_sprintf$1036+2,i2___ftmul@f1+2
  4850  0015B2  EC7D  F013         	call	i2___ftmul	;wreg free
  4851  0015B6  C00F  F03E         	movff	?i2___ftmul,i2___fttol@f1
  4852  0015BA  C010  F03F         	movff	?i2___ftmul+1,i2___fttol@f1+1
  4853  0015BE  C011  F040         	movff	?i2___ftmul+2,i2___fttol@f1+2
  4854  0015C2  ECCB  F015         	call	i2___fttol	;wreg free
  4855  0015C6  C03E  F066         	movff	?i2___fttol,sprintf@val
  4856  0015CA  C03F  F067         	movff	?i2___fttol+1,sprintf@val+1
  4857  0015CE  C040  F068         	movff	?i2___fttol+2,sprintf@val+2
  4858  0015D2  C041  F069         	movff	?i2___fttol+3,sprintf@val+3
  4859                           
  4860                           ;doprnt.c: 1254: while(c--) {
  4861  0015D6  D06F               	goto	i2l3643
  4862  0015D8                     i2l3633:
  4863                           
  4864                           ; BSR set to: 0
  4865                           ;doprnt.c: 1255: tmpval.vd = val/dpowers[c];
  4866  0015D8  C066  F001         	movff	sprintf@val,___lldiv@dividend
  4867  0015DC  C067  F002         	movff	sprintf@val+1,___lldiv@dividend+1
  4868  0015E0  C068  F003         	movff	sprintf@val+2,___lldiv@dividend+2
  4869  0015E4  C069  F004         	movff	sprintf@val+3,___lldiv@dividend+3
  4870  0015E8  5175               	movf	sprintf@c& (0+255),w,b
  4871  0015EA  0D04               	mullw	4
  4872  0015EC  50F3               	movf	243,w,c
  4873  0015EE  0F4F               	addlw	low _dpowers
  4874  0015F0  6E52               	movwf	??_sprintf^0,c
  4875  0015F2  C052  FFF6         	movff	??_sprintf,tblptrl
  4876  0015F6                     	if	1	;There is more than 1 active tblptr byte
  4877  0015F6  0E10               	movlw	high __smallconst
  4878  0015F8  6EF7               	movwf	tblptrh,c
  4879  0015FA                     	endif
  4880  0015FA                     	if	0	;tblptru may be non-zero
  4881  0015FA                     	endif
  4882  0015FA                     	if	0	;tblptru may be non-zero
  4883  0015FA                     	endif
  4884  0015FA  0009               	tblrd		*+
  4885  0015FC  CFF5 F005          	movff	tablat,___lldiv@divisor
  4886  001600  0009               	tblrd		*+
  4887  001602  CFF5 F006          	movff	tablat,___lldiv@divisor+1
  4888  001606  0009               	tblrd		*+
  4889  001608  CFF5 F007          	movff	tablat,___lldiv@divisor+2
  4890  00160C  000A               	tblrd		*-
  4891  00160E  CFF5 F008          	movff	tablat,___lldiv@divisor+3
  4892  001612  EC1F  F018         	call	___lldiv	;wreg free
  4893  001616  C001  F06C         	movff	?___lldiv,sprintf@tmpval
  4894  00161A  C002  F06D         	movff	?___lldiv+1,sprintf@tmpval+1
  4895  00161E  C003  F06E         	movff	?___lldiv+2,sprintf@tmpval+2
  4896  001622  C004  F06F         	movff	?___lldiv+3,sprintf@tmpval+3
  4897                           
  4898                           ; BSR set to: 0
  4899                           ;doprnt.c: 1256: tmpval.vd %= 10;
  4900  001626  C06C  F001         	movff	sprintf@tmpval,___llmod@dividend
  4901  00162A  C06D  F002         	movff	sprintf@tmpval+1,___llmod@dividend+1
  4902  00162E  C06E  F003         	movff	sprintf@tmpval+2,___llmod@dividend+2
  4903  001632  C06F  F004         	movff	sprintf@tmpval+3,___llmod@dividend+3
  4904  001636  0E0A               	movlw	10
  4905  001638  6E05               	movwf	___llmod@divisor^0,c
  4906  00163A  0E00               	movlw	0
  4907  00163C  6E06               	movwf	(___llmod@divisor+1)^0,c
  4908  00163E  0E00               	movlw	0
  4909  001640  6E07               	movwf	(___llmod@divisor+2)^0,c
  4910  001642  0E00               	movlw	0
  4911  001644  6E08               	movwf	(___llmod@divisor+3)^0,c
  4912  001646  ECD2  F018         	call	___llmod	;wreg free
  4913  00164A  C001  F06C         	movff	?___llmod,sprintf@tmpval
  4914  00164E  C002  F06D         	movff	?___llmod+1,sprintf@tmpval+1
  4915  001652  C003  F06E         	movff	?___llmod+2,sprintf@tmpval+2
  4916  001656  C004  F06F         	movff	?___llmod+3,sprintf@tmpval+3
  4917                           
  4918                           ; BSR set to: 0
  4919                           ;doprnt.c: 1257: ((*sp++ = ('0' + tmpval.vd)));
  4920  00165A  504D               	movf	sprintf@sp^0,w,c
  4921  00165C  6ED9               	movwf	fsr2l,c
  4922  00165E  6ADA               	clrf	fsr2h,c
  4923  001660  516C               	movf	sprintf@tmpval& (0+255),w,b
  4924  001662  0F30               	addlw	48
  4925  001664  6EDF               	movwf	indf2,c
  4926                           
  4927                           ; BSR set to: 0
  4928  001666  2A4D               	incf	sprintf@sp^0,f,c
  4929                           
  4930                           ; BSR set to: 0
  4931                           ;doprnt.c: 1258: val %= dpowers[c];
  4932  001668  C066  F001         	movff	sprintf@val,___llmod@dividend
  4933  00166C  C067  F002         	movff	sprintf@val+1,___llmod@dividend+1
  4934  001670  C068  F003         	movff	sprintf@val+2,___llmod@dividend+2
  4935  001674  C069  F004         	movff	sprintf@val+3,___llmod@dividend+3
  4936  001678  5175               	movf	sprintf@c& (0+255),w,b
  4937  00167A  0D04               	mullw	4
  4938  00167C  50F3               	movf	243,w,c
  4939  00167E  0F4F               	addlw	low _dpowers
  4940  001680  6E52               	movwf	??_sprintf^0,c
  4941  001682  C052  FFF6         	movff	??_sprintf,tblptrl
  4942  001686                     	if	1	;There is more than 1 active tblptr byte
  4943  001686  0E10               	movlw	high __smallconst
  4944  001688  6EF7               	movwf	tblptrh,c
  4945  00168A                     	endif
  4946  00168A                     	if	0	;tblptru may be non-zero
  4947  00168A                     	endif
  4948  00168A                     	if	0	;tblptru may be non-zero
  4949  00168A                     	endif
  4950  00168A  0009               	tblrd		*+
  4951  00168C  CFF5 F005          	movff	tablat,___llmod@divisor
  4952  001690  0009               	tblrd		*+
  4953  001692  CFF5 F006          	movff	tablat,___llmod@divisor+1
  4954  001696  0009               	tblrd		*+
  4955  001698  CFF5 F007          	movff	tablat,___llmod@divisor+2
  4956  00169C  000A               	tblrd		*-
  4957  00169E  CFF5 F008          	movff	tablat,___llmod@divisor+3
  4958  0016A2  ECD2  F018         	call	___llmod	;wreg free
  4959  0016A6  C001  F066         	movff	?___llmod,sprintf@val
  4960  0016AA  C002  F067         	movff	?___llmod+1,sprintf@val+1
  4961  0016AE  C003  F068         	movff	?___llmod+2,sprintf@val+2
  4962  0016B2  C004  F069         	movff	?___llmod+3,sprintf@val+3
  4963  0016B6                     i2l3643:
  4964  0016B6  0100               	movlb	0	; () banked
  4965  0016B8  0775               	decf	sprintf@c& (0+255),f,b
  4966  0016BA  2975               	incf	sprintf@c& (0+255),w,b
  4967  0016BC  B4D8               	btfsc	status,2,c
  4968  0016BE  D00A               	goto	i2l3651
  4969  0016C0  D78B               	goto	i2l3633
  4970  0016C2                     i2l3645:
  4971                           
  4972                           ; BSR set to: 0
  4973                           ;doprnt.c: 1262: ((*sp++ = ('0')));
  4974  0016C2  504D               	movf	sprintf@sp^0,w,c
  4975  0016C4  6ED9               	movwf	fsr2l,c
  4976  0016C6  6ADA               	clrf	fsr2h,c
  4977  0016C8  0E30               	movlw	48
  4978  0016CA  6EDF               	movwf	indf2,c
  4979                           
  4980                           ; BSR set to: 0
  4981  0016CC  2A4D               	incf	sprintf@sp^0,f,c
  4982                           
  4983                           ; BSR set to: 0
  4984                           ;doprnt.c: 1263: prec--;
  4985  0016CE  0770               	decf	sprintf@prec& (0+255),f,b
  4986  0016D0  A0D8               	btfss	status,0,c
  4987  0016D2  0771               	decf	(sprintf@prec+1)& (0+255),f,b
  4988  0016D4                     i2l3651:
  4989                           
  4990                           ; BSR set to: 0
  4991  0016D4  5170               	movf	sprintf@prec& (0+255),w,b
  4992  0016D6  1171               	iorwf	(sprintf@prec+1)& (0+255),w,b
  4993  0016D8  B4D8               	btfsc	status,2,c
  4994  0016DA  D031               	goto	i2l3673
  4995  0016DC  D7F2               	goto	i2l3645
  4996  0016DE                     i2l3653:
  4997                           
  4998                           ; BSR set to: 0
  4999                           ;doprnt.c: 1272: };doprnt.c: 1316: if(prec == 0 && val == 0)
  5000  0016DE  5170               	movf	sprintf@prec& (0+255),w,b
  5001  0016E0  1171               	iorwf	(sprintf@prec+1)& (0+255),w,b
  5002  0016E2  A4D8               	btfss	status,2,c
  5003  0016E4  D008               	goto	i2l3659
  5004                           
  5005                           ; BSR set to: 0
  5006  0016E6  5166               	movf	sprintf@val& (0+255),w,b
  5007  0016E8  1167               	iorwf	(sprintf@val+1)& (0+255),w,b
  5008  0016EA  1168               	iorwf	(sprintf@val+2)& (0+255),w,b
  5009  0016EC  1169               	iorwf	(sprintf@val+3)& (0+255),w,b
  5010  0016EE  A4D8               	btfss	status,2,c
  5011  0016F0  D002               	goto	i2l3659
  5012                           
  5013                           ; BSR set to: 0
  5014                           ;doprnt.c: 1317: prec++;
  5015  0016F2  4B70               	infsnz	sprintf@prec& (0+255),f,b
  5016  0016F4  2B71               	incf	(sprintf@prec+1)& (0+255),f,b
  5017  0016F6                     i2l3659:
  5018                           
  5019                           ; BSR set to: 0
  5020                           ;doprnt.c: 1365: if(c < prec)
  5021  0016F6  5175               	movf	sprintf@c& (0+255),w,b
  5022  0016F8  6E52               	movwf	??_sprintf^0,c
  5023  0016FA  6A53               	clrf	(??_sprintf+1)^0,c
  5024  0016FC  5170               	movf	sprintf@prec& (0+255),w,b
  5025  0016FE  5C52               	subwf	??_sprintf^0,w,c
  5026  001700  5053               	movf	(??_sprintf+1)^0,w,c
  5027  001702  0A80               	xorlw	128
  5028  001704  6E54               	movwf	(??_sprintf+2)^0,c
  5029  001706  5171               	movf	(sprintf@prec+1)& (0+255),w,b
  5030  001708  0A80               	xorlw	128
  5031  00170A  5854               	subwfb	(??_sprintf+2)^0,w,c
  5032  00170C  A0D8               	btfss	status,0,c
  5033  00170E  D00B               	goto	i2u396_41
  5034                           
  5035                           ; BSR set to: 0
  5036                           ;doprnt.c: 1367: else if(prec < c)
  5037                           
  5038                           ; BSR set to: 0
  5039  001710  5175               	movf	sprintf@c& (0+255),w,b
  5040  001712  6E52               	movwf	??_sprintf^0,c
  5041  001714  6A53               	clrf	(??_sprintf+1)^0,c
  5042  001716  5052               	movf	??_sprintf^0,w,c
  5043  001718  5D70               	subwf	sprintf@prec& (0+255),w,b
  5044  00171A  5171               	movf	(sprintf@prec+1)& (0+255),w,b
  5045  00171C  0A80               	xorlw	128
  5046  00171E  6E54               	movwf	(??_sprintf+2)^0,c
  5047  001720  5053               	movf	(??_sprintf+1)^0,w,c
  5048  001722  0A80               	xorlw	128
  5049  001724  5854               	subwfb	(??_sprintf+2)^0,w,c
  5050  001726                     i2u396_41:
  5051                           
  5052                           ; BSR set to: 0
  5053                           ;doprnt.c: 1448: {;doprnt.c: 1464: if(flag & 0x03)
  5054                           
  5055                           ; BSR set to: 0
  5056  001726  C064  F052         	movff	sprintf@flag,??_sprintf
  5057  00172A  0E03               	movlw	3
  5058  00172C  1652               	andwf	??_sprintf^0,f,c
  5059  00172E  B4D8               	btfsc	status,2,c
  5060  001730  D006               	goto	i2l3673
  5061                           
  5062                           ; BSR set to: 0
  5063                           ;doprnt.c: 1465: ((*sp++ = ('-')));
  5064  001732  504D               	movf	sprintf@sp^0,w,c
  5065  001734  6ED9               	movwf	fsr2l,c
  5066  001736  6ADA               	clrf	fsr2h,c
  5067  001738  0E2D               	movlw	45
  5068  00173A  6EDF               	movwf	indf2,c
  5069  00173C  D4B7               	goto	i2l3477
  5070  00173E                     i2l3673:
  5071                           
  5072                           ; BSR set to: 0
  5073  00173E  2A4E               	incf	sprintf@f^0,f,c
  5074  001740  044E               	decf	sprintf@f^0,w,c
  5075  001742  6E52               	movwf	??_sprintf^0,c
  5076  001744  C052  FFF6         	movff	??_sprintf,tblptrl
  5077  001748                     	if	1	;There is more than 1 active tblptr byte
  5078  001748  0E10               	movlw	high __smallconst
  5079  00174A  6EF7               	movwf	tblptrh,c
  5080  00174C                     	endif
  5081  00174C                     	if	0	;tblptru may be non-zero
  5082  00174C                     	endif
  5083  00174C                     	if	0	;tblptru may be non-zero
  5084  00174C                     	endif
  5085  00174C  0008               	tblrd		*
  5086  00174E  CFF5 F075          	movff	tablat,sprintf@c
  5087  001752  5175               	movf	sprintf@c& (0+255),w,b
  5088  001754  A4D8               	btfss	status,2,c
  5089  001756  D4A1               	goto	i2l3473
  5090  001758                     i2u398_40:
  5091                           
  5092                           ; BSR set to: 0
  5093                           ;doprnt.c: 1564: *sp = 0;
  5094  001758  504D               	movf	sprintf@sp^0,w,c
  5095  00175A  6ED9               	movwf	fsr2l,c
  5096  00175C  6ADA               	clrf	fsr2h,c
  5097  00175E  0E00               	movlw	0
  5098  001760  6EDF               	movwf	indf2,c
  5099                           
  5100                           ; BSR set to: 0
  5101  001762  0012               	return		;funcret
  5102  001764                     __end_of_sprintf:
  5103                           	callstack 0
  5104                           
  5105 ;; *************** function i2___fttol *****************
  5106 ;; Defined at:
  5107 ;;		line 44 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\fttol.c"
  5108 ;; Parameters:    Size  Location     Type
  5109 ;;  f1              3   61[COMRAM] float 
  5110 ;; Auto vars:     Size  Location     Type
  5111 ;;  lval            4   71[COMRAM] unsigned long 
  5112 ;;  exp1            1   75[COMRAM] unsigned char 
  5113 ;;  sign1           1   70[COMRAM] unsigned char 
  5114 ;; Return value:  Size  Location     Type
  5115 ;;                  4   61[COMRAM] long 
  5116 ;; Registers used:
  5117 ;;		wreg, status,2, status,0
  5118 ;; Tracked objects:
  5119 ;;		On entry : 0/0
  5120 ;;		On exit  : 0/0
  5121 ;;		Unchanged: 0/0
  5122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5123 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5124 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5125 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5126 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5127 ;;Total ram usage:       15 bytes
  5128 ;; Hardware stack levels used: 1
  5129 ;; This function calls:
  5130 ;;		Nothing
  5131 ;; This function is called by:
  5132 ;;		_sprintf
  5133 ;;		i2_deg2time1
  5134 ;;		i2_deg2time2
  5135 ;; This function uses a non-reentrant model
  5136 ;;
  5137                           
  5138                           	psect	text18
  5139  002B96                     __ptext18:
  5140                           	callstack 0
  5141  002B96                     i2___fttol:
  5142                           	callstack 23
  5143                           
  5144                           ; BSR set to: 0
  5145                           ;incstack = 0
  5146  002B96  C040  F042         	movff	i2___fttol@f1+2,??i2___fttol
  5147  002B9A  6A43               	clrf	(??i2___fttol+1)^0,c
  5148  002B9C  6A44               	clrf	(??i2___fttol+2)^0,c
  5149  002B9E  343F               	rlcf	(i2___fttol@f1+1)^0,w,c
  5150  002BA0  3642               	rlcf	??i2___fttol^0,f,c
  5151  002BA2  E301               	bnc	u359_41
  5152  002BA4  8043               	bsf	(??i2___fttol+1)^0,0,c
  5153  002BA6                     u359_41:
  5154  002BA6  5042               	movf	??i2___fttol^0,w,c
  5155  002BA8  6E4C               	movwf	i2___fttol@exp1^0,c
  5156  002BAA  504C               	movf	i2___fttol@exp1^0,w,c
  5157  002BAC  A4D8               	btfss	status,2,c
  5158  002BAE  D009               	goto	i2l3377
  5159  002BB0                     i2u360_40:
  5160  002BB0  0E00               	movlw	0
  5161  002BB2  6E3E               	movwf	?i2___fttol^0,c
  5162  002BB4  0E00               	movlw	0
  5163  002BB6  6E3F               	movwf	(?i2___fttol+1)^0,c
  5164  002BB8  0E00               	movlw	0
  5165  002BBA  6E40               	movwf	(?i2___fttol+2)^0,c
  5166  002BBC  0E00               	movlw	0
  5167  002BBE  6E41               	movwf	(?i2___fttol+3)^0,c
  5168  002BC0  0012               	return	
  5169  002BC2                     i2l3377:
  5170  002BC2  0E17               	movlw	23
  5171  002BC4  6E42               	movwf	??i2___fttol^0,c
  5172  002BC6  C03E  F043         	movff	i2___fttol@f1,??i2___fttol+1
  5173  002BCA  C03F  F044         	movff	i2___fttol@f1+1,??i2___fttol+2
  5174  002BCE  C040  F045         	movff	i2___fttol@f1+2,??i2___fttol+3
  5175  002BD2  2842               	incf	??i2___fttol^0,w,c
  5176  002BD4  6E46               	movwf	(??i2___fttol+4)^0,c
  5177  002BD6  D004               	goto	i2u361_40
  5178  002BD8                     i2u361_45:
  5179  002BD8  90D8               	bcf	status,0,c
  5180  002BDA  3245               	rrcf	(??i2___fttol+3)^0,f,c
  5181  002BDC  3244               	rrcf	(??i2___fttol+2)^0,f,c
  5182  002BDE  3243               	rrcf	(??i2___fttol+1)^0,f,c
  5183  002BE0                     i2u361_40:
  5184  002BE0  2E46               	decfsz	(??i2___fttol+4)^0,f,c
  5185  002BE2  D7FA               	goto	i2u361_45
  5186  002BE4  5043               	movf	(??i2___fttol+1)^0,w,c
  5187  002BE6  6E47               	movwf	i2___fttol@sign1^0,c
  5188  002BE8  8E3F               	bsf	(i2___fttol@f1+1)^0,7,c
  5189  002BEA  0EFF               	movlw	255
  5190  002BEC  163E               	andwf	i2___fttol@f1^0,f,c
  5191  002BEE  0EFF               	movlw	255
  5192  002BF0  163F               	andwf	(i2___fttol@f1+1)^0,f,c
  5193  002BF2  0E00               	movlw	0
  5194  002BF4  1640               	andwf	(i2___fttol@f1+2)^0,f,c
  5195  002BF6  503E               	movf	i2___fttol@f1^0,w,c
  5196  002BF8  6E48               	movwf	i2___fttol@lval^0,c
  5197  002BFA  503F               	movf	(i2___fttol@f1+1)^0,w,c
  5198  002BFC  6E49               	movwf	(i2___fttol@lval+1)^0,c
  5199  002BFE  5040               	movf	(i2___fttol@f1+2)^0,w,c
  5200  002C00  6E4A               	movwf	(i2___fttol@lval+2)^0,c
  5201  002C02  6A4B               	clrf	(i2___fttol@lval+3)^0,c
  5202  002C04  0E8E               	movlw	142
  5203  002C06  5E4C               	subwf	i2___fttol@exp1^0,f,c
  5204  002C08  AE4C               	btfss	i2___fttol@exp1^0,7,c
  5205  002C0A  D00D               	goto	i2l3399
  5206  002C0C  504C               	movf	i2___fttol@exp1^0,w,c
  5207  002C0E  0A80               	xorlw	128
  5208  002C10  0F8F               	addlw	143
  5209  002C12  A0D8               	btfss	status,0,c
  5210  002C14  D7CD               	goto	i2u360_40
  5211  002C16                     i2l3395:
  5212  002C16  90D8               	bcf	status,0,c
  5213  002C18  324B               	rrcf	(i2___fttol@lval+3)^0,f,c
  5214  002C1A  324A               	rrcf	(i2___fttol@lval+2)^0,f,c
  5215  002C1C  3249               	rrcf	(i2___fttol@lval+1)^0,f,c
  5216  002C1E  3248               	rrcf	i2___fttol@lval^0,f,c
  5217  002C20  3E4C               	incfsz	i2___fttol@exp1^0,f,c
  5218  002C22  D7F9               	goto	i2l3395
  5219  002C24  D00D               	goto	i2u365_40
  5220  002C26                     i2l3399:
  5221  002C26  0E17               	movlw	23
  5222  002C28  644C               	cpfsgt	i2___fttol@exp1^0,c
  5223  002C2A  D007               	goto	i2l3407
  5224  002C2C  D7C1               	goto	i2u360_40
  5225  002C2E                     i2l3405:
  5226  002C2E  90D8               	bcf	status,0,c
  5227  002C30  3648               	rlcf	i2___fttol@lval^0,f,c
  5228  002C32  3649               	rlcf	(i2___fttol@lval+1)^0,f,c
  5229  002C34  364A               	rlcf	(i2___fttol@lval+2)^0,f,c
  5230  002C36  364B               	rlcf	(i2___fttol@lval+3)^0,f,c
  5231  002C38  064C               	decf	i2___fttol@exp1^0,f,c
  5232  002C3A                     i2l3407:
  5233  002C3A  504C               	movf	i2___fttol@exp1^0,w,c
  5234  002C3C  A4D8               	btfss	status,2,c
  5235  002C3E  D7F7               	goto	i2l3405
  5236  002C40                     i2u365_40:
  5237  002C40  5047               	movf	i2___fttol@sign1^0,w,c
  5238  002C42  B4D8               	btfsc	status,2,c
  5239  002C44  D008               	goto	i2l3413
  5240  002C46  1E4B               	comf	(i2___fttol@lval+3)^0,f,c
  5241  002C48  1E4A               	comf	(i2___fttol@lval+2)^0,f,c
  5242  002C4A  1E49               	comf	(i2___fttol@lval+1)^0,f,c
  5243  002C4C  6C48               	negf	i2___fttol@lval^0,c
  5244  002C4E  0E00               	movlw	0
  5245  002C50  2249               	addwfc	(i2___fttol@lval+1)^0,f,c
  5246  002C52  224A               	addwfc	(i2___fttol@lval+2)^0,f,c
  5247  002C54  224B               	addwfc	(i2___fttol@lval+3)^0,f,c
  5248  002C56                     i2l3413:
  5249  002C56  C048  F03E         	movff	i2___fttol@lval,?i2___fttol
  5250  002C5A  C049  F03F         	movff	i2___fttol@lval+1,?i2___fttol+1
  5251  002C5E  C04A  F040         	movff	i2___fttol@lval+2,?i2___fttol+2
  5252  002C62  C04B  F041         	movff	i2___fttol@lval+3,?i2___fttol+3
  5253  002C66  0012               	return		;funcret
  5254  002C68                     __end_ofi2___fttol:
  5255                           	callstack 0
  5256                           
  5257 ;; *************** function i2___ftsub *****************
  5258 ;; Defined at:
  5259 ;;		line 19 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\ftsub.c"
  5260 ;; Parameters:    Size  Location     Type
  5261 ;;  f1              3   55[COMRAM] float 
  5262 ;;  f2              3   58[COMRAM] float 
  5263 ;; Auto vars:     Size  Location     Type
  5264 ;;		None
  5265 ;; Return value:  Size  Location     Type
  5266 ;;                  3   55[COMRAM] float 
  5267 ;; Registers used:
  5268 ;;		wreg, status,2, status,0, cstack
  5269 ;; Tracked objects:
  5270 ;;		On entry : 0/0
  5271 ;;		On exit  : 0/0
  5272 ;;		Unchanged: 0/0
  5273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5274 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5275 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5276 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5277 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5278 ;;Total ram usage:        6 bytes
  5279 ;; Hardware stack levels used: 1
  5280 ;; Hardware stack levels required when called: 2
  5281 ;; This function calls:
  5282 ;;		i2___ftadd
  5283 ;; This function is called by:
  5284 ;;		_sprintf
  5285 ;;		i2_deg2time1
  5286 ;;		i2_deg2time2
  5287 ;; This function uses a non-reentrant model
  5288 ;;
  5289                           
  5290                           	psect	text19
  5291  0032EA                     __ptext19:
  5292                           	callstack 0
  5293  0032EA                     i2___ftsub:
  5294                           	callstack 21
  5295                           
  5296                           ;incstack = 0
  5297  0032EA  503B               	movf	i2___ftsub@f2^0,w,c
  5298  0032EC  103C               	iorwf	(i2___ftsub@f2+1)^0,w,c
  5299  0032EE  103D               	iorwf	(i2___ftsub@f2+2)^0,w,c
  5300  0032F0  B4D8               	btfsc	status,2,c
  5301  0032F2  D006               	goto	i2l3367
  5302  0032F4  0E00               	movlw	0
  5303  0032F6  1A3B               	xorwf	i2___ftsub@f2^0,f,c
  5304  0032F8  0E00               	movlw	0
  5305  0032FA  1A3C               	xorwf	(i2___ftsub@f2+1)^0,f,c
  5306  0032FC  0E80               	movlw	128
  5307  0032FE  1A3D               	xorwf	(i2___ftsub@f2+2)^0,f,c
  5308  003300                     i2l3367:
  5309  003300  C038  F02C         	movff	i2___ftsub@f1,i2___ftadd@f1
  5310  003304  C039  F02D         	movff	i2___ftsub@f1+1,i2___ftadd@f1+1
  5311  003308  C03A  F02E         	movff	i2___ftsub@f1+2,i2___ftadd@f1+2
  5312  00330C  C03B  F02F         	movff	i2___ftsub@f2,i2___ftadd@f2
  5313  003310  C03C  F030         	movff	i2___ftsub@f2+1,i2___ftadd@f2+1
  5314  003314  C03D  F031         	movff	i2___ftsub@f2+2,i2___ftadd@f2+2
  5315  003318  EC40  F00F         	call	i2___ftadd	;wreg free
  5316  00331C  C02C  F038         	movff	?i2___ftadd,?i2___ftsub
  5317  003320  C02D  F039         	movff	?i2___ftadd+1,?i2___ftsub+1
  5318  003324  C02E  F03A         	movff	?i2___ftadd+2,?i2___ftsub+2
  5319  003328  0012               	return		;funcret
  5320  00332A                     __end_ofi2___ftsub:
  5321                           	callstack 0
  5322                           
  5323 ;; *************** function i2___ftadd *****************
  5324 ;; Defined at:
  5325 ;;		line 86 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\ftadd.c"
  5326 ;; Parameters:    Size  Location     Type
  5327 ;;  f1              3   43[COMRAM] float 
  5328 ;;  f2              3   46[COMRAM] float 
  5329 ;; Auto vars:     Size  Location     Type
  5330 ;;  exp1            1   54[COMRAM] unsigned char 
  5331 ;;  exp2            1   53[COMRAM] unsigned char 
  5332 ;;  sign            1   52[COMRAM] unsigned char 
  5333 ;; Return value:  Size  Location     Type
  5334 ;;                  3   43[COMRAM] float 
  5335 ;; Registers used:
  5336 ;;		wreg, status,2, status,0, cstack
  5337 ;; Tracked objects:
  5338 ;;		On entry : 0/0
  5339 ;;		On exit  : 0/0
  5340 ;;		Unchanged: 0/0
  5341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5342 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5343 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5344 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5345 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5346 ;;Total ram usage:       12 bytes
  5347 ;; Hardware stack levels used: 1
  5348 ;; Hardware stack levels required when called: 1
  5349 ;; This function calls:
  5350 ;;		i2___ftpack
  5351 ;; This function is called by:
  5352 ;;		_TMR1_ISR
  5353 ;;		_sprintf
  5354 ;;		i2_deg2time1
  5355 ;;		i2_deg2time2
  5356 ;;		i2___ftsub
  5357 ;; This function uses a non-reentrant model
  5358 ;;
  5359                           
  5360                           	psect	text20
  5361  001E80                     __ptext20:
  5362                           	callstack 0
  5363  001E80                     i2___ftadd:
  5364                           	callstack 21
  5365                           
  5366                           ;incstack = 0
  5367  001E80  C02E  F032         	movff	i2___ftadd@f1+2,??i2___ftadd
  5368  001E84  6A33               	clrf	(??i2___ftadd+1)^0,c
  5369  001E86  6A34               	clrf	(??i2___ftadd+2)^0,c
  5370  001E88  342D               	rlcf	(i2___ftadd@f1+1)^0,w,c
  5371  001E8A  3632               	rlcf	??i2___ftadd^0,f,c
  5372  001E8C  E301               	bnc	u289_41
  5373  001E8E  8033               	bsf	(??i2___ftadd+1)^0,0,c
  5374  001E90                     u289_41:
  5375  001E90  5032               	movf	??i2___ftadd^0,w,c
  5376  001E92  6E37               	movwf	i2___ftadd@exp1^0,c
  5377  001E94  C031  F032         	movff	i2___ftadd@f2+2,??i2___ftadd
  5378  001E98  6A33               	clrf	(??i2___ftadd+1)^0,c
  5379  001E9A  6A34               	clrf	(??i2___ftadd+2)^0,c
  5380  001E9C  3430               	rlcf	(i2___ftadd@f2+1)^0,w,c
  5381  001E9E  3632               	rlcf	??i2___ftadd^0,f,c
  5382  001EA0  E301               	bnc	u290_41
  5383  001EA2  8033               	bsf	(??i2___ftadd+1)^0,0,c
  5384  001EA4                     u290_41:
  5385  001EA4  5032               	movf	??i2___ftadd^0,w,c
  5386  001EA6  6E36               	movwf	i2___ftadd@exp2^0,c
  5387  001EA8  5037               	movf	i2___ftadd@exp1^0,w,c
  5388  001EAA  B4D8               	btfsc	status,2,c
  5389  001EAC  D00A               	goto	i2u293_40
  5390  001EAE  5036               	movf	i2___ftadd@exp2^0,w,c
  5391  001EB0  5C37               	subwf	i2___ftadd@exp1^0,w,c
  5392  001EB2  B0D8               	btfsc	status,0,c
  5393  001EB4  D00D               	goto	i2l2921
  5394  001EB6  5037               	movf	i2___ftadd@exp1^0,w,c
  5395  001EB8  5C36               	subwf	i2___ftadd@exp2^0,w,c
  5396  001EBA  6E32               	movwf	??i2___ftadd^0,c
  5397  001EBC  0E18               	movlw	24
  5398  001EBE  6432               	cpfsgt	??i2___ftadd^0,c
  5399  001EC0  D007               	goto	i2l2921
  5400  001EC2                     i2u293_40:
  5401  001EC2  C02F  F02C         	movff	i2___ftadd@f2,?i2___ftadd
  5402  001EC6  C030  F02D         	movff	i2___ftadd@f2+1,?i2___ftadd+1
  5403  001ECA  C031  F02E         	movff	i2___ftadd@f2+2,?i2___ftadd+2
  5404  001ECE  0012               	return	
  5405  001ED0                     i2l2921:
  5406  001ED0  5036               	movf	i2___ftadd@exp2^0,w,c
  5407  001ED2  B4D8               	btfsc	status,2,c
  5408  001ED4  D00A               	goto	i2u296_40
  5409  001ED6  5037               	movf	i2___ftadd@exp1^0,w,c
  5410  001ED8  5C36               	subwf	i2___ftadd@exp2^0,w,c
  5411  001EDA  B0D8               	btfsc	status,0,c
  5412  001EDC  D00D               	goto	i2l2927
  5413  001EDE  5036               	movf	i2___ftadd@exp2^0,w,c
  5414  001EE0  5C37               	subwf	i2___ftadd@exp1^0,w,c
  5415  001EE2  6E32               	movwf	??i2___ftadd^0,c
  5416  001EE4  0E18               	movlw	24
  5417  001EE6  6432               	cpfsgt	??i2___ftadd^0,c
  5418  001EE8  D007               	goto	i2l2927
  5419  001EEA                     i2u296_40:
  5420  001EEA  C02C  F02C         	movff	i2___ftadd@f1,?i2___ftadd
  5421  001EEE  C02D  F02D         	movff	i2___ftadd@f1+1,?i2___ftadd+1
  5422  001EF2  C02E  F02E         	movff	i2___ftadd@f1+2,?i2___ftadd+2
  5423  001EF6  0012               	return	
  5424  001EF8                     i2l2927:
  5425  001EF8  0E06               	movlw	6
  5426  001EFA  6E35               	movwf	i2___ftadd@sign^0,c
  5427  001EFC  BE2E               	btfsc	(i2___ftadd@f1+2)^0,7,c
  5428  001EFE  8E35               	bsf	i2___ftadd@sign^0,7,c
  5429  001F00  BE31               	btfsc	(i2___ftadd@f2+2)^0,7,c
  5430  001F02  8C35               	bsf	i2___ftadd@sign^0,6,c
  5431  001F04  8E2D               	bsf	(i2___ftadd@f1+1)^0,7,c
  5432  001F06  0EFF               	movlw	255
  5433  001F08  162C               	andwf	i2___ftadd@f1^0,f,c
  5434  001F0A  0EFF               	movlw	255
  5435  001F0C  162D               	andwf	(i2___ftadd@f1+1)^0,f,c
  5436  001F0E  0E00               	movlw	0
  5437  001F10  162E               	andwf	(i2___ftadd@f1+2)^0,f,c
  5438  001F12  8E30               	bsf	(i2___ftadd@f2+1)^0,7,c
  5439  001F14  0EFF               	movlw	255
  5440  001F16  162F               	andwf	i2___ftadd@f2^0,f,c
  5441  001F18  0EFF               	movlw	255
  5442  001F1A  1630               	andwf	(i2___ftadd@f2+1)^0,f,c
  5443  001F1C  0E00               	movlw	0
  5444  001F1E  1631               	andwf	(i2___ftadd@f2+2)^0,f,c
  5445  001F20  5036               	movf	i2___ftadd@exp2^0,w,c
  5446  001F22  5C37               	subwf	i2___ftadd@exp1^0,w,c
  5447  001F24  B0D8               	btfsc	status,0,c
  5448  001F26  D01B               	goto	i2l2953
  5449  001F28                     i2u299_40:
  5450  001F28  90D8               	bcf	status,0,c
  5451  001F2A  362F               	rlcf	i2___ftadd@f2^0,f,c
  5452  001F2C  3630               	rlcf	(i2___ftadd@f2+1)^0,f,c
  5453  001F2E  3631               	rlcf	(i2___ftadd@f2+2)^0,f,c
  5454  001F30  0636               	decf	i2___ftadd@exp2^0,f,c
  5455  001F32  5037               	movf	i2___ftadd@exp1^0,w,c
  5456  001F34  1836               	xorwf	i2___ftadd@exp2^0,w,c
  5457  001F36  B4D8               	btfsc	status,2,c
  5458  001F38  D00D               	goto	i2l2951
  5459  001F3A  0635               	decf	i2___ftadd@sign^0,f,c
  5460  001F3C  C035  F032         	movff	i2___ftadd@sign,??i2___ftadd
  5461  001F40  0E07               	movlw	7
  5462  001F42  1632               	andwf	??i2___ftadd^0,f,c
  5463  001F44  B4D8               	btfsc	status,2,c
  5464  001F46  D006               	goto	i2l2951
  5465  001F48  D7EF               	goto	i2u299_40
  5466  001F4A                     i2l2949:
  5467  001F4A  90D8               	bcf	status,0,c
  5468  001F4C  322E               	rrcf	(i2___ftadd@f1+2)^0,f,c
  5469  001F4E  322D               	rrcf	(i2___ftadd@f1+1)^0,f,c
  5470  001F50  322C               	rrcf	i2___ftadd@f1^0,f,c
  5471  001F52  2A37               	incf	i2___ftadd@exp1^0,f,c
  5472  001F54                     i2l2951:
  5473  001F54  5036               	movf	i2___ftadd@exp2^0,w,c
  5474  001F56  1837               	xorwf	i2___ftadd@exp1^0,w,c
  5475  001F58  B4D8               	btfsc	status,2,c
  5476  001F5A  D01F               	goto	i2u306_40
  5477  001F5C  D7F6               	goto	i2l2949
  5478  001F5E                     i2l2953:
  5479  001F5E  5037               	movf	i2___ftadd@exp1^0,w,c
  5480  001F60  5C36               	subwf	i2___ftadd@exp2^0,w,c
  5481  001F62  B0D8               	btfsc	status,0,c
  5482  001F64  D01A               	goto	i2u306_40
  5483  001F66                     i2u303_40:
  5484  001F66  90D8               	bcf	status,0,c
  5485  001F68  362C               	rlcf	i2___ftadd@f1^0,f,c
  5486  001F6A  362D               	rlcf	(i2___ftadd@f1+1)^0,f,c
  5487  001F6C  362E               	rlcf	(i2___ftadd@f1+2)^0,f,c
  5488  001F6E  0637               	decf	i2___ftadd@exp1^0,f,c
  5489  001F70  5037               	movf	i2___ftadd@exp1^0,w,c
  5490  001F72  1836               	xorwf	i2___ftadd@exp2^0,w,c
  5491  001F74  B4D8               	btfsc	status,2,c
  5492  001F76  D00D               	goto	i2l2963
  5493  001F78  0635               	decf	i2___ftadd@sign^0,f,c
  5494  001F7A  C035  F032         	movff	i2___ftadd@sign,??i2___ftadd
  5495  001F7E  0E07               	movlw	7
  5496  001F80  1632               	andwf	??i2___ftadd^0,f,c
  5497  001F82  B4D8               	btfsc	status,2,c
  5498  001F84  D006               	goto	i2l2963
  5499  001F86  D7EF               	goto	i2u303_40
  5500  001F88                     i2l2961:
  5501  001F88  90D8               	bcf	status,0,c
  5502  001F8A  3231               	rrcf	(i2___ftadd@f2+2)^0,f,c
  5503  001F8C  3230               	rrcf	(i2___ftadd@f2+1)^0,f,c
  5504  001F8E  322F               	rrcf	i2___ftadd@f2^0,f,c
  5505  001F90  2A36               	incf	i2___ftadd@exp2^0,f,c
  5506  001F92                     i2l2963:
  5507  001F92  5036               	movf	i2___ftadd@exp2^0,w,c
  5508  001F94  1837               	xorwf	i2___ftadd@exp1^0,w,c
  5509  001F96  A4D8               	btfss	status,2,c
  5510  001F98  D7F7               	goto	i2l2961
  5511  001F9A                     i2u306_40:
  5512  001F9A  AE35               	btfss	i2___ftadd@sign^0,7,c
  5513  001F9C  D00C               	goto	i2l636
  5514  001F9E  0EFF               	movlw	255
  5515  001FA0  1A2C               	xorwf	i2___ftadd@f1^0,f,c
  5516  001FA2  0EFF               	movlw	255
  5517  001FA4  1A2D               	xorwf	(i2___ftadd@f1+1)^0,f,c
  5518  001FA6  0EFF               	movlw	255
  5519  001FA8  1A2E               	xorwf	(i2___ftadd@f1+2)^0,f,c
  5520  001FAA  0E01               	movlw	1
  5521  001FAC  262C               	addwf	i2___ftadd@f1^0,f,c
  5522  001FAE  0E00               	movlw	0
  5523  001FB0  222D               	addwfc	(i2___ftadd@f1+1)^0,f,c
  5524  001FB2  0E00               	movlw	0
  5525  001FB4  222E               	addwfc	(i2___ftadd@f1+2)^0,f,c
  5526  001FB6                     i2l636:
  5527  001FB6  AC35               	btfss	i2___ftadd@sign^0,6,c
  5528  001FB8  D00C               	goto	i2l2969
  5529  001FBA  0EFF               	movlw	255
  5530  001FBC  1A2F               	xorwf	i2___ftadd@f2^0,f,c
  5531  001FBE  0EFF               	movlw	255
  5532  001FC0  1A30               	xorwf	(i2___ftadd@f2+1)^0,f,c
  5533  001FC2  0EFF               	movlw	255
  5534  001FC4  1A31               	xorwf	(i2___ftadd@f2+2)^0,f,c
  5535  001FC6  0E01               	movlw	1
  5536  001FC8  262F               	addwf	i2___ftadd@f2^0,f,c
  5537  001FCA  0E00               	movlw	0
  5538  001FCC  2230               	addwfc	(i2___ftadd@f2+1)^0,f,c
  5539  001FCE  0E00               	movlw	0
  5540  001FD0  2231               	addwfc	(i2___ftadd@f2+2)^0,f,c
  5541  001FD2                     i2l2969:
  5542  001FD2  0E00               	movlw	0
  5543  001FD4  6E35               	movwf	i2___ftadd@sign^0,c
  5544  001FD6  502C               	movf	i2___ftadd@f1^0,w,c
  5545  001FD8  262F               	addwf	i2___ftadd@f2^0,f,c
  5546  001FDA  502D               	movf	(i2___ftadd@f1+1)^0,w,c
  5547  001FDC  2230               	addwfc	(i2___ftadd@f2+1)^0,f,c
  5548  001FDE  502E               	movf	(i2___ftadd@f1+2)^0,w,c
  5549  001FE0  2231               	addwfc	(i2___ftadd@f2+2)^0,f,c
  5550  001FE2  AE31               	btfss	(i2___ftadd@f2+2)^0,7,c
  5551  001FE4  D00E               	goto	i2l2979
  5552  001FE6  0EFF               	movlw	255
  5553  001FE8  1A2F               	xorwf	i2___ftadd@f2^0,f,c
  5554  001FEA  0EFF               	movlw	255
  5555  001FEC  1A30               	xorwf	(i2___ftadd@f2+1)^0,f,c
  5556  001FEE  0EFF               	movlw	255
  5557  001FF0  1A31               	xorwf	(i2___ftadd@f2+2)^0,f,c
  5558  001FF2  0E01               	movlw	1
  5559  001FF4  262F               	addwf	i2___ftadd@f2^0,f,c
  5560  001FF6  0E00               	movlw	0
  5561  001FF8  2230               	addwfc	(i2___ftadd@f2+1)^0,f,c
  5562  001FFA  0E00               	movlw	0
  5563  001FFC  2231               	addwfc	(i2___ftadd@f2+2)^0,f,c
  5564  001FFE  0E01               	movlw	1
  5565  002000  6E35               	movwf	i2___ftadd@sign^0,c
  5566  002002                     i2l2979:
  5567  002002  C02F  F001         	movff	i2___ftadd@f2,i2___ftpack@arg
  5568  002006  C030  F002         	movff	i2___ftadd@f2+1,i2___ftpack@arg+1
  5569  00200A  C031  F003         	movff	i2___ftadd@f2+2,i2___ftpack@arg+2
  5570  00200E  C037  F004         	movff	i2___ftadd@exp1,i2___ftpack@exp
  5571  002012  C035  F005         	movff	i2___ftadd@sign,i2___ftpack@sign
  5572  002016  EC8B  F016         	call	i2___ftpack	;wreg free
  5573  00201A  C001  F02C         	movff	?i2___ftpack,?i2___ftadd
  5574  00201E  C002  F02D         	movff	?i2___ftpack+1,?i2___ftadd+1
  5575  002022  C003  F02E         	movff	?i2___ftpack+2,?i2___ftadd+2
  5576  002026  0012               	return		;funcret
  5577  002028                     __end_ofi2___ftadd:
  5578                           	callstack 0
  5579                           
  5580 ;; *************** function _scale *****************
  5581 ;; Defined at:
  5582 ;;		line 433 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c"
  5583 ;; Parameters:    Size  Location     Type
  5584 ;;  scl             1    wreg     char 
  5585 ;; Auto vars:     Size  Location     Type
  5586 ;;  scl             1   39[COMRAM] char 
  5587 ;; Return value:  Size  Location     Type
  5588 ;;                  3   29[COMRAM] char 
  5589 ;; Registers used:
  5590 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5591 ;; Tracked objects:
  5592 ;;		On entry : 3F/0
  5593 ;;		On exit  : 0/0
  5594 ;;		Unchanged: 0/0
  5595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5596 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5597 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5598 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5599 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5600 ;;Total ram usage:       11 bytes
  5601 ;; Hardware stack levels used: 1
  5602 ;; Hardware stack levels required when called: 2
  5603 ;; This function calls:
  5604 ;;		___awdiv
  5605 ;;		___awmod
  5606 ;;		i2___ftmul
  5607 ;; This function is called by:
  5608 ;;		_sprintf
  5609 ;; This function uses a non-reentrant model
  5610 ;;
  5611                           
  5612                           	psect	text21
  5613  001764                     __ptext21:
  5614                           	callstack 0
  5615  001764                     _scale:
  5616                           	callstack 21
  5617                           
  5618                           ;incstack = 0
  5619                           ;scale@scl stored from wreg
  5620  001764  6E28               	movwf	scale@scl^0,c
  5621                           
  5622                           ;doprnt.c: 436: if(scl < 0) {
  5623  001766  AE28               	btfss	scale@scl^0,7,c
  5624  001768  D0E5               	goto	i2l3095
  5625                           
  5626                           ;doprnt.c: 437: scl = -scl;
  5627  00176A  6C28               	negf	scale@scl^0,c
  5628                           
  5629                           ;doprnt.c: 438: if(scl>=110)
  5630  00176C  5028               	movf	scale@scl^0,w,c
  5631  00176E  0A80               	xorlw	128
  5632  001770  0F12               	addlw	-238
  5633  001772  A0D8               	btfss	status,0,c
  5634  001774  D080               	goto	i2l3085
  5635                           
  5636                           ;doprnt.c: 439: return _npowers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char
      +                          )((scl%100)/10+9)] * _npowers_[(unsigned char)(scl%10)];
  5637  001776  0E00               	movlw	0
  5638  001778  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  5639  00177A  0E0A               	movlw	10
  5640  00177C  6E09               	movwf	___awdiv@divisor^0,c
  5641  00177E  0E00               	movlw	0
  5642  001780  6E04               	movwf	(___awmod@divisor+1)^0,c
  5643  001782  0E64               	movlw	100
  5644  001784  6E03               	movwf	___awmod@divisor^0,c
  5645  001786  5028               	movf	scale@scl^0,w,c
  5646  001788  6E01               	movwf	___awmod@dividend^0,c
  5647  00178A  6A02               	clrf	(___awmod@dividend+1)^0,c
  5648  00178C  BE01               	btfsc	___awmod@dividend^0,7,c
  5649  00178E  0602               	decf	(___awmod@dividend+1)^0,f,c
  5650  001790  EC9A  F018         	call	___awmod	;wreg free
  5651  001794  C001  F007         	movff	?___awmod,___awdiv@dividend
  5652  001798  C002  F008         	movff	?___awmod+1,___awdiv@dividend+1
  5653  00179C  ECDD  F017         	call	___awdiv	;wreg free
  5654  0017A0  5007               	movf	?___awdiv^0,w,c
  5655  0017A2  0D03               	mullw	3
  5656  0017A4  CFF3 F021          	movff	prodl,??_scale
  5657  0017A8  0E1B               	movlw	27
  5658  0017AA  2621               	addwf	??_scale^0,f,c
  5659  0017AC  5021               	movf	??_scale^0,w,c
  5660  0017AE  0F28               	addlw	low __npowers_
  5661  0017B0  6E22               	movwf	(??_scale+1)^0,c
  5662  0017B2  C022  FFF6         	movff	??_scale+1,tblptrl
  5663  0017B6                     	if	1	;There is more than 1 active tblptr byte
  5664  0017B6  0E10               	movlw	high __smallconst
  5665  0017B8  6EF7               	movwf	tblptrh,c
  5666  0017BA                     	endif
  5667  0017BA                     	if	0	;tblptru may be non-zero
  5668  0017BA                     	endif
  5669  0017BA                     	if	0	;tblptru may be non-zero
  5670  0017BA                     	endif
  5671  0017BA  0009               	tblrd		*+
  5672  0017BC  CFF5 F012          	movff	tablat,i2___ftmul@f2
  5673  0017C0  0009               	tblrd		*+
  5674  0017C2  CFF5 F013          	movff	tablat,i2___ftmul@f2+1
  5675  0017C6  000A               	tblrd		*-
  5676  0017C8  CFF5 F014          	movff	tablat,i2___ftmul@f2+2
  5677  0017CC  0E00               	movlw	0
  5678  0017CE  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  5679  0017D0  0E64               	movlw	100
  5680  0017D2  6E09               	movwf	___awdiv@divisor^0,c
  5681  0017D4  5028               	movf	scale@scl^0,w,c
  5682  0017D6  6E07               	movwf	___awdiv@dividend^0,c
  5683  0017D8  6A08               	clrf	(___awdiv@dividend+1)^0,c
  5684  0017DA  BE07               	btfsc	___awdiv@dividend^0,7,c
  5685  0017DC  0608               	decf	(___awdiv@dividend+1)^0,f,c
  5686  0017DE  ECDD  F017         	call	___awdiv	;wreg free
  5687  0017E2  5007               	movf	?___awdiv^0,w,c
  5688  0017E4  0D03               	mullw	3
  5689  0017E6  CFF3 F023          	movff	prodl,??_scale+2
  5690  0017EA  0E36               	movlw	54
  5691  0017EC  2623               	addwf	(??_scale+2)^0,f,c
  5692  0017EE  5023               	movf	(??_scale+2)^0,w,c
  5693  0017F0  0F28               	addlw	low __npowers_
  5694  0017F2  6E24               	movwf	(??_scale+3)^0,c
  5695  0017F4  C024  FFF6         	movff	??_scale+3,tblptrl
  5696  0017F8                     	if	1	;There is more than 1 active tblptr byte
  5697  0017F8  0E10               	movlw	high __smallconst
  5698  0017FA  6EF7               	movwf	tblptrh,c
  5699  0017FC                     	endif
  5700  0017FC                     	if	0	;tblptru may be non-zero
  5701  0017FC                     	endif
  5702  0017FC                     	if	0	;tblptru may be non-zero
  5703  0017FC                     	endif
  5704  0017FC  0009               	tblrd		*+
  5705  0017FE  CFF5 F00F          	movff	tablat,i2___ftmul@f1
  5706  001802  0009               	tblrd		*+
  5707  001804  CFF5 F010          	movff	tablat,i2___ftmul@f1+1
  5708  001808  000A               	tblrd		*-
  5709  00180A  CFF5 F011          	movff	tablat,i2___ftmul@f1+2
  5710  00180E  EC7D  F013         	call	i2___ftmul	;wreg free
  5711  001812  C00F  F025         	movff	?i2___ftmul,_scale$1035
  5712  001816  C010  F026         	movff	?i2___ftmul+1,_scale$1035+1
  5713  00181A  C011  F027         	movff	?i2___ftmul+2,_scale$1035+2
  5714                           
  5715                           ;doprnt.c: 439: return _npowers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char
      +                          )((scl%100)/10+9)] * _npowers_[(unsigned char)(scl%10)];
  5716  00181E  C025  F00F         	movff	_scale$1035,i2___ftmul@f1
  5717  001822  C026  F010         	movff	_scale$1035+1,i2___ftmul@f1+1
  5718  001826  C027  F011         	movff	_scale$1035+2,i2___ftmul@f1+2
  5719  00182A  0E00               	movlw	0
  5720  00182C  6E04               	movwf	(___awmod@divisor+1)^0,c
  5721  00182E  0E0A               	movlw	10
  5722  001830  6E03               	movwf	___awmod@divisor^0,c
  5723  001832  5028               	movf	scale@scl^0,w,c
  5724  001834  6E01               	movwf	___awmod@dividend^0,c
  5725  001836  6A02               	clrf	(___awmod@dividend+1)^0,c
  5726  001838  BE01               	btfsc	___awmod@dividend^0,7,c
  5727  00183A  0602               	decf	(___awmod@dividend+1)^0,f,c
  5728  00183C  EC9A  F018         	call	___awmod	;wreg free
  5729  001840  5001               	movf	?___awmod^0,w,c
  5730  001842  0D03               	mullw	3
  5731  001844  50F3               	movf	243,w,c
  5732  001846  0F28               	addlw	low __npowers_
  5733  001848  6E21               	movwf	??_scale^0,c
  5734  00184A  C021  FFF6         	movff	??_scale,tblptrl
  5735  00184E                     	if	1	;There is more than 1 active tblptr byte
  5736  00184E  0E10               	movlw	high __smallconst
  5737  001850  6EF7               	movwf	tblptrh,c
  5738  001852                     	endif
  5739  001852                     	if	0	;tblptru may be non-zero
  5740  001852                     	endif
  5741  001852                     	if	0	;tblptru may be non-zero
  5742  001852                     	endif
  5743  001852  0009               	tblrd		*+
  5744  001854  CFF5 F012          	movff	tablat,i2___ftmul@f2
  5745  001858  0009               	tblrd		*+
  5746  00185A  CFF5 F013          	movff	tablat,i2___ftmul@f2+1
  5747  00185E  000A               	tblrd		*-
  5748  001860  CFF5 F014          	movff	tablat,i2___ftmul@f2+2
  5749  001864  EC7D  F013         	call	i2___ftmul	;wreg free
  5750  001868  C00F  F01E         	movff	?i2___ftmul,?_scale
  5751  00186C  C010  F01F         	movff	?i2___ftmul+1,?_scale+1
  5752  001870  C011  F020         	movff	?i2___ftmul+2,?_scale+2
  5753  001874  0012               	return	
  5754  001876                     i2l3085:
  5755                           
  5756                           ;doprnt.c: 440: else if(scl > 10)
  5757  001876  5028               	movf	scale@scl^0,w,c
  5758  001878  0A80               	xorlw	128
  5759  00187A  0F75               	addlw	-139
  5760  00187C  A0D8               	btfss	status,0,c
  5761  00187E  D047               	goto	i2l3091
  5762                           
  5763                           ;doprnt.c: 441: return _npowers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(
      +                          scl%10)];
  5764  001880  0E00               	movlw	0
  5765  001882  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  5766  001884  0E0A               	movlw	10
  5767  001886  6E09               	movwf	___awdiv@divisor^0,c
  5768  001888  5028               	movf	scale@scl^0,w,c
  5769  00188A  6E07               	movwf	___awdiv@dividend^0,c
  5770  00188C  6A08               	clrf	(___awdiv@dividend+1)^0,c
  5771  00188E  BE07               	btfsc	___awdiv@dividend^0,7,c
  5772  001890  0608               	decf	(___awdiv@dividend+1)^0,f,c
  5773  001892  ECDD  F017         	call	___awdiv	;wreg free
  5774  001896  5007               	movf	?___awdiv^0,w,c
  5775  001898  0D03               	mullw	3
  5776  00189A  CFF3 F021          	movff	prodl,??_scale
  5777  00189E  0E1B               	movlw	27
  5778  0018A0  2621               	addwf	??_scale^0,f,c
  5779  0018A2  5021               	movf	??_scale^0,w,c
  5780  0018A4  0F28               	addlw	low __npowers_
  5781  0018A6  6E22               	movwf	(??_scale+1)^0,c
  5782  0018A8  C022  FFF6         	movff	??_scale+1,tblptrl
  5783  0018AC                     	if	1	;There is more than 1 active tblptr byte
  5784  0018AC  0E10               	movlw	high __smallconst
  5785  0018AE  6EF7               	movwf	tblptrh,c
  5786  0018B0                     	endif
  5787  0018B0                     	if	0	;tblptru may be non-zero
  5788  0018B0                     	endif
  5789  0018B0                     	if	0	;tblptru may be non-zero
  5790  0018B0                     	endif
  5791  0018B0  0009               	tblrd		*+
  5792  0018B2  CFF5 F00F          	movff	tablat,i2___ftmul@f1
  5793  0018B6  0009               	tblrd		*+
  5794  0018B8  CFF5 F010          	movff	tablat,i2___ftmul@f1+1
  5795  0018BC  000A               	tblrd		*-
  5796  0018BE  CFF5 F011          	movff	tablat,i2___ftmul@f1+2
  5797  0018C2  0E00               	movlw	0
  5798  0018C4  6E04               	movwf	(___awmod@divisor+1)^0,c
  5799  0018C6  0E0A               	movlw	10
  5800  0018C8  6E03               	movwf	___awmod@divisor^0,c
  5801  0018CA  5028               	movf	scale@scl^0,w,c
  5802  0018CC  6E01               	movwf	___awmod@dividend^0,c
  5803  0018CE  6A02               	clrf	(___awmod@dividend+1)^0,c
  5804  0018D0  BE01               	btfsc	___awmod@dividend^0,7,c
  5805  0018D2  0602               	decf	(___awmod@dividend+1)^0,f,c
  5806  0018D4  EC9A  F018         	call	___awmod	;wreg free
  5807  0018D8  5001               	movf	?___awmod^0,w,c
  5808  0018DA  0D03               	mullw	3
  5809  0018DC  50F3               	movf	243,w,c
  5810  0018DE  0F28               	addlw	low __npowers_
  5811  0018E0  6E23               	movwf	(??_scale+2)^0,c
  5812  0018E2  C023  FFF6         	movff	??_scale+2,tblptrl
  5813  0018E6                     	if	1	;There is more than 1 active tblptr byte
  5814  0018E6  0E10               	movlw	high __smallconst
  5815  0018E8  6EF7               	movwf	tblptrh,c
  5816  0018EA                     	endif
  5817  0018EA                     	if	0	;tblptru may be non-zero
  5818  0018EA                     	endif
  5819  0018EA                     	if	0	;tblptru may be non-zero
  5820  0018EA                     	endif
  5821  0018EA  0009               	tblrd		*+
  5822  0018EC  CFF5 F012          	movff	tablat,i2___ftmul@f2
  5823  0018F0  0009               	tblrd		*+
  5824  0018F2  CFF5 F013          	movff	tablat,i2___ftmul@f2+1
  5825  0018F6  000A               	tblrd		*-
  5826  0018F8  CFF5 F014          	movff	tablat,i2___ftmul@f2+2
  5827  0018FC  EC7D  F013         	call	i2___ftmul	;wreg free
  5828  001900  C00F  F01E         	movff	?i2___ftmul,?_scale
  5829  001904  C010  F01F         	movff	?i2___ftmul+1,?_scale+1
  5830  001908  C011  F020         	movff	?i2___ftmul+2,?_scale+2
  5831  00190C  0012               	return	
  5832  00190E                     i2l3091:
  5833                           
  5834                           ;doprnt.c: 442: return _npowers_[(unsigned char)scl];
  5835  00190E  5028               	movf	scale@scl^0,w,c
  5836  001910  0D03               	mullw	3
  5837  001912  50F3               	movf	243,w,c
  5838  001914  0F28               	addlw	low __npowers_
  5839  001916  6E21               	movwf	??_scale^0,c
  5840  001918  C021  FFF6         	movff	??_scale,tblptrl
  5841  00191C                     	if	1	;There is more than 1 active tblptr byte
  5842  00191C  0E10               	movlw	high __smallconst
  5843  00191E  6EF7               	movwf	tblptrh,c
  5844  001920                     	endif
  5845  001920                     	if	0	;tblptru may be non-zero
  5846  001920                     	endif
  5847  001920                     	if	0	;tblptru may be non-zero
  5848  001920                     	endif
  5849  001920  0009               	tblrd		*+
  5850  001922  CFF5 F01E          	movff	tablat,?_scale
  5851  001926  0009               	tblrd		*+
  5852  001928  CFF5 F01F          	movff	tablat,?_scale+1
  5853  00192C  000A               	tblrd		*-
  5854  00192E  CFF5 F020          	movff	tablat,?_scale+2
  5855  001932  0012               	return	
  5856  001934                     i2l3095:
  5857                           
  5858                           ;doprnt.c: 443: };doprnt.c: 444: if(scl>=110)
  5859  001934  5028               	movf	scale@scl^0,w,c
  5860  001936  0A80               	xorlw	128
  5861  001938  0F12               	addlw	-238
  5862  00193A  A0D8               	btfss	status,0,c
  5863  00193C  D080               	goto	i2l3103
  5864                           
  5865                           ;doprnt.c: 445: return _powers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)(
      +                          (scl%100)/10+9)] * _powers_[(unsigned char)(scl%10)];
  5866  00193E  0E00               	movlw	0
  5867  001940  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  5868  001942  0E0A               	movlw	10
  5869  001944  6E09               	movwf	___awdiv@divisor^0,c
  5870  001946  0E00               	movlw	0
  5871  001948  6E04               	movwf	(___awmod@divisor+1)^0,c
  5872  00194A  0E64               	movlw	100
  5873  00194C  6E03               	movwf	___awmod@divisor^0,c
  5874  00194E  5028               	movf	scale@scl^0,w,c
  5875  001950  6E01               	movwf	___awmod@dividend^0,c
  5876  001952  6A02               	clrf	(___awmod@dividend+1)^0,c
  5877  001954  BE01               	btfsc	___awmod@dividend^0,7,c
  5878  001956  0602               	decf	(___awmod@dividend+1)^0,f,c
  5879  001958  EC9A  F018         	call	___awmod	;wreg free
  5880  00195C  C001  F007         	movff	?___awmod,___awdiv@dividend
  5881  001960  C002  F008         	movff	?___awmod+1,___awdiv@dividend+1
  5882  001964  ECDD  F017         	call	___awdiv	;wreg free
  5883  001968  5007               	movf	?___awdiv^0,w,c
  5884  00196A  0D03               	mullw	3
  5885  00196C  CFF3 F021          	movff	prodl,??_scale
  5886  001970  0E1B               	movlw	27
  5887  001972  2621               	addwf	??_scale^0,f,c
  5888  001974  5021               	movf	??_scale^0,w,c
  5889  001976  0F01               	addlw	low __powers_
  5890  001978  6E22               	movwf	(??_scale+1)^0,c
  5891  00197A  C022  FFF6         	movff	??_scale+1,tblptrl
  5892  00197E                     	if	1	;There is more than 1 active tblptr byte
  5893  00197E  0E10               	movlw	high __smallconst
  5894  001980  6EF7               	movwf	tblptrh,c
  5895  001982                     	endif
  5896  001982                     	if	0	;tblptru may be non-zero
  5897  001982                     	endif
  5898  001982                     	if	0	;tblptru may be non-zero
  5899  001982                     	endif
  5900  001982  0009               	tblrd		*+
  5901  001984  CFF5 F012          	movff	tablat,i2___ftmul@f2
  5902  001988  0009               	tblrd		*+
  5903  00198A  CFF5 F013          	movff	tablat,i2___ftmul@f2+1
  5904  00198E  000A               	tblrd		*-
  5905  001990  CFF5 F014          	movff	tablat,i2___ftmul@f2+2
  5906  001994  0E00               	movlw	0
  5907  001996  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  5908  001998  0E64               	movlw	100
  5909  00199A  6E09               	movwf	___awdiv@divisor^0,c
  5910  00199C  5028               	movf	scale@scl^0,w,c
  5911  00199E  6E07               	movwf	___awdiv@dividend^0,c
  5912  0019A0  6A08               	clrf	(___awdiv@dividend+1)^0,c
  5913  0019A2  BE07               	btfsc	___awdiv@dividend^0,7,c
  5914  0019A4  0608               	decf	(___awdiv@dividend+1)^0,f,c
  5915  0019A6  ECDD  F017         	call	___awdiv	;wreg free
  5916  0019AA  5007               	movf	?___awdiv^0,w,c
  5917  0019AC  0D03               	mullw	3
  5918  0019AE  CFF3 F023          	movff	prodl,??_scale+2
  5919  0019B2  0E36               	movlw	54
  5920  0019B4  2623               	addwf	(??_scale+2)^0,f,c
  5921  0019B6  5023               	movf	(??_scale+2)^0,w,c
  5922  0019B8  0F01               	addlw	low __powers_
  5923  0019BA  6E24               	movwf	(??_scale+3)^0,c
  5924  0019BC  C024  FFF6         	movff	??_scale+3,tblptrl
  5925  0019C0                     	if	1	;There is more than 1 active tblptr byte
  5926  0019C0  0E10               	movlw	high __smallconst
  5927  0019C2  6EF7               	movwf	tblptrh,c
  5928  0019C4                     	endif
  5929  0019C4                     	if	0	;tblptru may be non-zero
  5930  0019C4                     	endif
  5931  0019C4                     	if	0	;tblptru may be non-zero
  5932  0019C4                     	endif
  5933  0019C4  0009               	tblrd		*+
  5934  0019C6  CFF5 F00F          	movff	tablat,i2___ftmul@f1
  5935  0019CA  0009               	tblrd		*+
  5936  0019CC  CFF5 F010          	movff	tablat,i2___ftmul@f1+1
  5937  0019D0  000A               	tblrd		*-
  5938  0019D2  CFF5 F011          	movff	tablat,i2___ftmul@f1+2
  5939  0019D6  EC7D  F013         	call	i2___ftmul	;wreg free
  5940  0019DA  C00F  F025         	movff	?i2___ftmul,_scale$1035
  5941  0019DE  C010  F026         	movff	?i2___ftmul+1,_scale$1035+1
  5942  0019E2  C011  F027         	movff	?i2___ftmul+2,_scale$1035+2
  5943                           
  5944                           ;doprnt.c: 445: return _powers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)(
      +                          (scl%100)/10+9)] * _powers_[(unsigned char)(scl%10)];
  5945  0019E6  C025  F00F         	movff	_scale$1035,i2___ftmul@f1
  5946  0019EA  C026  F010         	movff	_scale$1035+1,i2___ftmul@f1+1
  5947  0019EE  C027  F011         	movff	_scale$1035+2,i2___ftmul@f1+2
  5948  0019F2  0E00               	movlw	0
  5949  0019F4  6E04               	movwf	(___awmod@divisor+1)^0,c
  5950  0019F6  0E0A               	movlw	10
  5951  0019F8  6E03               	movwf	___awmod@divisor^0,c
  5952  0019FA  5028               	movf	scale@scl^0,w,c
  5953  0019FC  6E01               	movwf	___awmod@dividend^0,c
  5954  0019FE  6A02               	clrf	(___awmod@dividend+1)^0,c
  5955  001A00  BE01               	btfsc	___awmod@dividend^0,7,c
  5956  001A02  0602               	decf	(___awmod@dividend+1)^0,f,c
  5957  001A04  EC9A  F018         	call	___awmod	;wreg free
  5958  001A08  5001               	movf	?___awmod^0,w,c
  5959  001A0A  0D03               	mullw	3
  5960  001A0C  50F3               	movf	243,w,c
  5961  001A0E  0F01               	addlw	low __powers_
  5962  001A10  6E21               	movwf	??_scale^0,c
  5963  001A12  C021  FFF6         	movff	??_scale,tblptrl
  5964  001A16                     	if	1	;There is more than 1 active tblptr byte
  5965  001A16  0E10               	movlw	high __smallconst
  5966  001A18  6EF7               	movwf	tblptrh,c
  5967  001A1A                     	endif
  5968  001A1A                     	if	0	;tblptru may be non-zero
  5969  001A1A                     	endif
  5970  001A1A                     	if	0	;tblptru may be non-zero
  5971  001A1A                     	endif
  5972  001A1A  0009               	tblrd		*+
  5973  001A1C  CFF5 F012          	movff	tablat,i2___ftmul@f2
  5974  001A20  0009               	tblrd		*+
  5975  001A22  CFF5 F013          	movff	tablat,i2___ftmul@f2+1
  5976  001A26  000A               	tblrd		*-
  5977  001A28  CFF5 F014          	movff	tablat,i2___ftmul@f2+2
  5978  001A2C  EC7D  F013         	call	i2___ftmul	;wreg free
  5979  001A30  C00F  F01E         	movff	?i2___ftmul,?_scale
  5980  001A34  C010  F01F         	movff	?i2___ftmul+1,?_scale+1
  5981  001A38  C011  F020         	movff	?i2___ftmul+2,?_scale+2
  5982  001A3C  0012               	return	
  5983  001A3E                     i2l3103:
  5984                           
  5985                           ;doprnt.c: 446: else if(scl > 10)
  5986  001A3E  5028               	movf	scale@scl^0,w,c
  5987  001A40  0A80               	xorlw	128
  5988  001A42  0F75               	addlw	-139
  5989  001A44  A0D8               	btfss	status,0,c
  5990  001A46  D047               	goto	i2l3109
  5991                           
  5992                           ;doprnt.c: 447: return _powers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(sc
      +                          l%10)];
  5993  001A48  0E00               	movlw	0
  5994  001A4A  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  5995  001A4C  0E0A               	movlw	10
  5996  001A4E  6E09               	movwf	___awdiv@divisor^0,c
  5997  001A50  5028               	movf	scale@scl^0,w,c
  5998  001A52  6E07               	movwf	___awdiv@dividend^0,c
  5999  001A54  6A08               	clrf	(___awdiv@dividend+1)^0,c
  6000  001A56  BE07               	btfsc	___awdiv@dividend^0,7,c
  6001  001A58  0608               	decf	(___awdiv@dividend+1)^0,f,c
  6002  001A5A  ECDD  F017         	call	___awdiv	;wreg free
  6003  001A5E  5007               	movf	?___awdiv^0,w,c
  6004  001A60  0D03               	mullw	3
  6005  001A62  CFF3 F021          	movff	prodl,??_scale
  6006  001A66  0E1B               	movlw	27
  6007  001A68  2621               	addwf	??_scale^0,f,c
  6008  001A6A  5021               	movf	??_scale^0,w,c
  6009  001A6C  0F01               	addlw	low __powers_
  6010  001A6E  6E22               	movwf	(??_scale+1)^0,c
  6011  001A70  C022  FFF6         	movff	??_scale+1,tblptrl
  6012  001A74                     	if	1	;There is more than 1 active tblptr byte
  6013  001A74  0E10               	movlw	high __smallconst
  6014  001A76  6EF7               	movwf	tblptrh,c
  6015  001A78                     	endif
  6016  001A78                     	if	0	;tblptru may be non-zero
  6017  001A78                     	endif
  6018  001A78                     	if	0	;tblptru may be non-zero
  6019  001A78                     	endif
  6020  001A78  0009               	tblrd		*+
  6021  001A7A  CFF5 F00F          	movff	tablat,i2___ftmul@f1
  6022  001A7E  0009               	tblrd		*+
  6023  001A80  CFF5 F010          	movff	tablat,i2___ftmul@f1+1
  6024  001A84  000A               	tblrd		*-
  6025  001A86  CFF5 F011          	movff	tablat,i2___ftmul@f1+2
  6026  001A8A  0E00               	movlw	0
  6027  001A8C  6E04               	movwf	(___awmod@divisor+1)^0,c
  6028  001A8E  0E0A               	movlw	10
  6029  001A90  6E03               	movwf	___awmod@divisor^0,c
  6030  001A92  5028               	movf	scale@scl^0,w,c
  6031  001A94  6E01               	movwf	___awmod@dividend^0,c
  6032  001A96  6A02               	clrf	(___awmod@dividend+1)^0,c
  6033  001A98  BE01               	btfsc	___awmod@dividend^0,7,c
  6034  001A9A  0602               	decf	(___awmod@dividend+1)^0,f,c
  6035  001A9C  EC9A  F018         	call	___awmod	;wreg free
  6036  001AA0  5001               	movf	?___awmod^0,w,c
  6037  001AA2  0D03               	mullw	3
  6038  001AA4  50F3               	movf	243,w,c
  6039  001AA6  0F01               	addlw	low __powers_
  6040  001AA8  6E23               	movwf	(??_scale+2)^0,c
  6041  001AAA  C023  FFF6         	movff	??_scale+2,tblptrl
  6042  001AAE                     	if	1	;There is more than 1 active tblptr byte
  6043  001AAE  0E10               	movlw	high __smallconst
  6044  001AB0  6EF7               	movwf	tblptrh,c
  6045  001AB2                     	endif
  6046  001AB2                     	if	0	;tblptru may be non-zero
  6047  001AB2                     	endif
  6048  001AB2                     	if	0	;tblptru may be non-zero
  6049  001AB2                     	endif
  6050  001AB2  0009               	tblrd		*+
  6051  001AB4  CFF5 F012          	movff	tablat,i2___ftmul@f2
  6052  001AB8  0009               	tblrd		*+
  6053  001ABA  CFF5 F013          	movff	tablat,i2___ftmul@f2+1
  6054  001ABE  000A               	tblrd		*-
  6055  001AC0  CFF5 F014          	movff	tablat,i2___ftmul@f2+2
  6056  001AC4  EC7D  F013         	call	i2___ftmul	;wreg free
  6057  001AC8  C00F  F01E         	movff	?i2___ftmul,?_scale
  6058  001ACC  C010  F01F         	movff	?i2___ftmul+1,?_scale+1
  6059  001AD0  C011  F020         	movff	?i2___ftmul+2,?_scale+2
  6060  001AD4  0012               	return	
  6061  001AD6                     i2l3109:
  6062                           
  6063                           ;doprnt.c: 448: return _powers_[(unsigned char)scl];
  6064  001AD6  5028               	movf	scale@scl^0,w,c
  6065  001AD8  0D03               	mullw	3
  6066  001ADA  50F3               	movf	243,w,c
  6067  001ADC  0F01               	addlw	low __powers_
  6068  001ADE  6E21               	movwf	??_scale^0,c
  6069  001AE0  C021  FFF6         	movff	??_scale,tblptrl
  6070  001AE4                     	if	1	;There is more than 1 active tblptr byte
  6071  001AE4  0E10               	movlw	high __smallconst
  6072  001AE6  6EF7               	movwf	tblptrh,c
  6073  001AE8                     	endif
  6074  001AE8                     	if	0	;tblptru may be non-zero
  6075  001AE8                     	endif
  6076  001AE8                     	if	0	;tblptru may be non-zero
  6077  001AE8                     	endif
  6078  001AE8  0009               	tblrd		*+
  6079  001AEA  CFF5 F01E          	movff	tablat,?_scale
  6080  001AEE  0009               	tblrd		*+
  6081  001AF0  CFF5 F01F          	movff	tablat,?_scale+1
  6082  001AF4  000A               	tblrd		*-
  6083  001AF6  CFF5 F020          	movff	tablat,?_scale+2
  6084  001AFA  0012               	return		;funcret
  6085  001AFC                     __end_of_scale:
  6086                           	callstack 0
  6087                           
  6088 ;; *************** function ___awmod *****************
  6089 ;; Defined at:
  6090 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\awmod.c"
  6091 ;; Parameters:    Size  Location     Type
  6092 ;;  dividend        2    0[COMRAM] int 
  6093 ;;  divisor         2    2[COMRAM] int 
  6094 ;; Auto vars:     Size  Location     Type
  6095 ;;  sign            1    5[COMRAM] unsigned char 
  6096 ;;  counter         1    4[COMRAM] unsigned char 
  6097 ;; Return value:  Size  Location     Type
  6098 ;;                  2    0[COMRAM] int 
  6099 ;; Registers used:
  6100 ;;		wreg, status,2, status,0
  6101 ;; Tracked objects:
  6102 ;;		On entry : 0/0
  6103 ;;		On exit  : 0/0
  6104 ;;		Unchanged: 0/0
  6105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6106 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6107 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6108 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6109 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6110 ;;Total ram usage:        6 bytes
  6111 ;; Hardware stack levels used: 1
  6112 ;; This function calls:
  6113 ;;		Nothing
  6114 ;; This function is called by:
  6115 ;;		_scale
  6116 ;; This function uses a non-reentrant model
  6117 ;;
  6118                           
  6119                           	psect	text22
  6120  003134                     __ptext22:
  6121                           	callstack 0
  6122  003134                     ___awmod:
  6123                           	callstack 22
  6124                           
  6125                           ;incstack = 0
  6126  003134  0E00               	movlw	0
  6127  003136  6E06               	movwf	___awmod@sign^0,c
  6128  003138  AE02               	btfss	(___awmod@dividend+1)^0,7,c
  6129  00313A  D006               	goto	i2l2773
  6130  00313C  6C01               	negf	___awmod@dividend^0,c
  6131  00313E  1E02               	comf	(___awmod@dividend+1)^0,f,c
  6132  003140  B0D8               	btfsc	status,0,c
  6133  003142  2A02               	incf	(___awmod@dividend+1)^0,f,c
  6134  003144  0E01               	movlw	1
  6135  003146  6E06               	movwf	___awmod@sign^0,c
  6136  003148                     i2l2773:
  6137  003148  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  6138  00314A  D004               	goto	i2l2777
  6139  00314C  6C03               	negf	___awmod@divisor^0,c
  6140  00314E  1E04               	comf	(___awmod@divisor+1)^0,f,c
  6141  003150  B0D8               	btfsc	status,0,c
  6142  003152  2A04               	incf	(___awmod@divisor+1)^0,f,c
  6143  003154                     i2l2777:
  6144  003154  5003               	movf	___awmod@divisor^0,w,c
  6145  003156  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  6146  003158  B4D8               	btfsc	status,2,c
  6147  00315A  D018               	goto	i2l2793
  6148  00315C  0E01               	movlw	1
  6149  00315E  6E05               	movwf	___awmod@counter^0,c
  6150  003160  D004               	goto	i2l2783
  6151  003162                     i2l2781:
  6152  003162  90D8               	bcf	status,0,c
  6153  003164  3603               	rlcf	___awmod@divisor^0,f,c
  6154  003166  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  6155  003168  2A05               	incf	___awmod@counter^0,f,c
  6156  00316A                     i2l2783:
  6157  00316A  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  6158  00316C  D7FA               	goto	i2l2781
  6159  00316E                     i2u274_40:
  6160  00316E  5003               	movf	___awmod@divisor^0,w,c
  6161  003170  5C01               	subwf	___awmod@dividend^0,w,c
  6162  003172  5004               	movf	(___awmod@divisor+1)^0,w,c
  6163  003174  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  6164  003176  A0D8               	btfss	status,0,c
  6165  003178  D004               	goto	i2l2789
  6166  00317A  5003               	movf	___awmod@divisor^0,w,c
  6167  00317C  5E01               	subwf	___awmod@dividend^0,f,c
  6168  00317E  5004               	movf	(___awmod@divisor+1)^0,w,c
  6169  003180  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  6170  003182                     i2l2789:
  6171  003182  90D8               	bcf	status,0,c
  6172  003184  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  6173  003186  3203               	rrcf	___awmod@divisor^0,f,c
  6174  003188  2E05               	decfsz	___awmod@counter^0,f,c
  6175  00318A  D7F1               	goto	i2u274_40
  6176  00318C                     i2l2793:
  6177  00318C  5006               	movf	___awmod@sign^0,w,c
  6178  00318E  B4D8               	btfsc	status,2,c
  6179  003190  D004               	goto	i2l2797
  6180  003192  6C01               	negf	___awmod@dividend^0,c
  6181  003194  1E02               	comf	(___awmod@dividend+1)^0,f,c
  6182  003196  B0D8               	btfsc	status,0,c
  6183  003198  2A02               	incf	(___awmod@dividend+1)^0,f,c
  6184  00319A                     i2l2797:
  6185  00319A  C001  F001         	movff	___awmod@dividend,?___awmod
  6186  00319E  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  6187  0031A2  0012               	return		;funcret
  6188  0031A4                     __end_of___awmod:
  6189                           	callstack 0
  6190                           
  6191 ;; *************** function ___awdiv *****************
  6192 ;; Defined at:
  6193 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\awdiv.c"
  6194 ;; Parameters:    Size  Location     Type
  6195 ;;  dividend        2    6[COMRAM] int 
  6196 ;;  divisor         2    8[COMRAM] int 
  6197 ;; Auto vars:     Size  Location     Type
  6198 ;;  quotient        2   12[COMRAM] int 
  6199 ;;  sign            1   11[COMRAM] unsigned char 
  6200 ;;  counter         1   10[COMRAM] unsigned char 
  6201 ;; Return value:  Size  Location     Type
  6202 ;;                  2    6[COMRAM] int 
  6203 ;; Registers used:
  6204 ;;		wreg, status,2, status,0
  6205 ;; Tracked objects:
  6206 ;;		On entry : 0/0
  6207 ;;		On exit  : 0/0
  6208 ;;		Unchanged: 0/0
  6209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6210 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6211 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6212 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6213 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6214 ;;Total ram usage:        8 bytes
  6215 ;; Hardware stack levels used: 1
  6216 ;; This function calls:
  6217 ;;		Nothing
  6218 ;; This function is called by:
  6219 ;;		_scale
  6220 ;;		_sprintf
  6221 ;; This function uses a non-reentrant model
  6222 ;;
  6223                           
  6224                           	psect	text23
  6225  002FBA                     __ptext23:
  6226                           	callstack 0
  6227  002FBA                     ___awdiv:
  6228                           	callstack 22
  6229                           
  6230                           ;incstack = 0
  6231  002FBA  0E00               	movlw	0
  6232  002FBC  6E0C               	movwf	___awdiv@sign^0,c
  6233  002FBE  AE0A               	btfss	(___awdiv@divisor+1)^0,7,c
  6234  002FC0  D006               	goto	i2l2729
  6235  002FC2  6C09               	negf	___awdiv@divisor^0,c
  6236  002FC4  1E0A               	comf	(___awdiv@divisor+1)^0,f,c
  6237  002FC6  B0D8               	btfsc	status,0,c
  6238  002FC8  2A0A               	incf	(___awdiv@divisor+1)^0,f,c
  6239  002FCA  0E01               	movlw	1
  6240  002FCC  6E0C               	movwf	___awdiv@sign^0,c
  6241  002FCE                     i2l2729:
  6242  002FCE  AE08               	btfss	(___awdiv@dividend+1)^0,7,c
  6243  002FD0  D006               	goto	i2l2735
  6244  002FD2  6C07               	negf	___awdiv@dividend^0,c
  6245  002FD4  1E08               	comf	(___awdiv@dividend+1)^0,f,c
  6246  002FD6  B0D8               	btfsc	status,0,c
  6247  002FD8  2A08               	incf	(___awdiv@dividend+1)^0,f,c
  6248  002FDA  0E01               	movlw	1
  6249  002FDC  1A0C               	xorwf	___awdiv@sign^0,f,c
  6250  002FDE                     i2l2735:
  6251  002FDE  0E00               	movlw	0
  6252  002FE0  6E0E               	movwf	(___awdiv@quotient+1)^0,c
  6253  002FE2  0E00               	movlw	0
  6254  002FE4  6E0D               	movwf	___awdiv@quotient^0,c
  6255  002FE6  5009               	movf	___awdiv@divisor^0,w,c
  6256  002FE8  100A               	iorwf	(___awdiv@divisor+1)^0,w,c
  6257  002FEA  B4D8               	btfsc	status,2,c
  6258  002FEC  D01C               	goto	i2l2757
  6259  002FEE  0E01               	movlw	1
  6260  002FF0  6E0B               	movwf	___awdiv@counter^0,c
  6261  002FF2  D004               	goto	i2l2743
  6262  002FF4                     i2l2741:
  6263  002FF4  90D8               	bcf	status,0,c
  6264  002FF6  3609               	rlcf	___awdiv@divisor^0,f,c
  6265  002FF8  360A               	rlcf	(___awdiv@divisor+1)^0,f,c
  6266  002FFA  2A0B               	incf	___awdiv@counter^0,f,c
  6267  002FFC                     i2l2743:
  6268  002FFC  AE0A               	btfss	(___awdiv@divisor+1)^0,7,c
  6269  002FFE  D7FA               	goto	i2l2741
  6270  003000                     i2u268_40:
  6271  003000  90D8               	bcf	status,0,c
  6272  003002  360D               	rlcf	___awdiv@quotient^0,f,c
  6273  003004  360E               	rlcf	(___awdiv@quotient+1)^0,f,c
  6274  003006  5009               	movf	___awdiv@divisor^0,w,c
  6275  003008  5C07               	subwf	___awdiv@dividend^0,w,c
  6276  00300A  500A               	movf	(___awdiv@divisor+1)^0,w,c
  6277  00300C  5808               	subwfb	(___awdiv@dividend+1)^0,w,c
  6278  00300E  A0D8               	btfss	status,0,c
  6279  003010  D005               	goto	i2l2753
  6280  003012  5009               	movf	___awdiv@divisor^0,w,c
  6281  003014  5E07               	subwf	___awdiv@dividend^0,f,c
  6282  003016  500A               	movf	(___awdiv@divisor+1)^0,w,c
  6283  003018  5A08               	subwfb	(___awdiv@dividend+1)^0,f,c
  6284  00301A  800D               	bsf	___awdiv@quotient^0,0,c
  6285  00301C                     i2l2753:
  6286  00301C  90D8               	bcf	status,0,c
  6287  00301E  320A               	rrcf	(___awdiv@divisor+1)^0,f,c
  6288  003020  3209               	rrcf	___awdiv@divisor^0,f,c
  6289  003022  2E0B               	decfsz	___awdiv@counter^0,f,c
  6290  003024  D7ED               	goto	i2u268_40
  6291  003026                     i2l2757:
  6292  003026  500C               	movf	___awdiv@sign^0,w,c
  6293  003028  B4D8               	btfsc	status,2,c
  6294  00302A  D004               	goto	i2l2761
  6295  00302C  6C0D               	negf	___awdiv@quotient^0,c
  6296  00302E  1E0E               	comf	(___awdiv@quotient+1)^0,f,c
  6297  003030  B0D8               	btfsc	status,0,c
  6298  003032  2A0E               	incf	(___awdiv@quotient+1)^0,f,c
  6299  003034                     i2l2761:
  6300  003034  C00D  F007         	movff	___awdiv@quotient,?___awdiv
  6301  003038  C00E  F008         	movff	___awdiv@quotient+1,?___awdiv+1
  6302  00303C  0012               	return		;funcret
  6303  00303E                     __end_of___awdiv:
  6304                           	callstack 0
  6305                           
  6306 ;; *************** function _isdigit *****************
  6307 ;; Defined at:
  6308 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\isdigit.c"
  6309 ;; Parameters:    Size  Location     Type
  6310 ;;  c               1    wreg     unsigned char 
  6311 ;; Auto vars:     Size  Location     Type
  6312 ;;  c               1    2[COMRAM] unsigned char 
  6313 ;; Return value:  Size  Location     Type
  6314 ;;		None               void
  6315 ;; Registers used:
  6316 ;;		wreg, status,2, status,0
  6317 ;; Tracked objects:
  6318 ;;		On entry : 3F/0
  6319 ;;		On exit  : 0/0
  6320 ;;		Unchanged: 0/0
  6321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6322 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6323 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6324 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6325 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6326 ;;Total ram usage:        3 bytes
  6327 ;; Hardware stack levels used: 1
  6328 ;; This function calls:
  6329 ;;		Nothing
  6330 ;; This function is called by:
  6331 ;;		_sprintf
  6332 ;; This function uses a non-reentrant model
  6333 ;;
  6334                           
  6335                           	psect	text24
  6336  00346C                     __ptext24:
  6337                           	callstack 0
  6338  00346C                     _isdigit:
  6339                           	callstack 23
  6340                           
  6341                           ;incstack = 0
  6342                           ;isdigit@c stored from wreg
  6343  00346C  6E03               	movwf	isdigit@c^0,c
  6344  00346E  0E00               	movlw	0
  6345  003470  6E02               	movwf	_isdigit$767^0,c
  6346  003472  0E3A               	movlw	58
  6347  003474  6003               	cpfslt	isdigit@c^0,c
  6348  003476  D005               	goto	i2l3121
  6349  003478  0E2F               	movlw	47
  6350  00347A  6403               	cpfsgt	isdigit@c^0,c
  6351  00347C  D002               	goto	i2l3121
  6352  00347E  0E01               	movlw	1
  6353  003480  6E02               	movwf	_isdigit$767^0,c
  6354  003482                     i2l3121:
  6355  003482  C002  F001         	movff	_isdigit$767,??_isdigit
  6356  003486  3001               	rrcf	??_isdigit^0,w,c
  6357  003488  0012               	return		;funcret
  6358  00348A                     __end_of_isdigit:
  6359                           	callstack 0
  6360                           
  6361 ;; *************** function _fround *****************
  6362 ;; Defined at:
  6363 ;;		line 417 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c"
  6364 ;; Parameters:    Size  Location     Type
  6365 ;;  prec            1    wreg     unsigned char 
  6366 ;; Auto vars:     Size  Location     Type
  6367 ;;  prec            1   42[COMRAM] unsigned char 
  6368 ;; Return value:  Size  Location     Type
  6369 ;;                  3   29[COMRAM] unsigned char 
  6370 ;; Registers used:
  6371 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6372 ;; Tracked objects:
  6373 ;;		On entry : 3F/0
  6374 ;;		On exit  : 0/0
  6375 ;;		Unchanged: 0/0
  6376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6377 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6378 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6379 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6380 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6381 ;;Total ram usage:       14 bytes
  6382 ;; Hardware stack levels used: 1
  6383 ;; Hardware stack levels required when called: 2
  6384 ;; This function calls:
  6385 ;;		___lbdiv
  6386 ;;		___lbmod
  6387 ;;		i2___ftmul
  6388 ;; This function is called by:
  6389 ;;		_sprintf
  6390 ;; This function uses a non-reentrant model
  6391 ;;
  6392                           
  6393                           	psect	text25
  6394  001AFC                     __ptext25:
  6395                           	callstack 0
  6396  001AFC                     _fround:
  6397                           	callstack 21
  6398                           
  6399                           ;incstack = 0
  6400                           ;fround@prec stored from wreg
  6401  001AFC  6E2B               	movwf	fround@prec^0,c
  6402                           
  6403                           ;doprnt.c: 421: if(prec>=110)
  6404  001AFE  0E6D               	movlw	109
  6405  001B00  642B               	cpfsgt	fround@prec^0,c
  6406  001B02  D079               	goto	i2l3063
  6407                           
  6408                           ;doprnt.c: 422: return 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * 
      +                          _npowers_[prec%10U];
  6409  001B04  0E0A               	movlw	10
  6410  001B06  6E05               	movwf	___lbdiv@divisor^0,c
  6411  001B08  0E64               	movlw	100
  6412  001B0A  6E01               	movwf	___lbmod@divisor^0,c
  6413  001B0C  502B               	movf	fround@prec^0,w,c
  6414  001B0E  ECEB  F019         	call	___lbmod
  6415  001B12  ECB2  F019         	call	___lbdiv
  6416  001B16  0D03               	mullw	3
  6417  001B18  CFF3 F021          	movff	prodl,??_fround
  6418  001B1C  0E1B               	movlw	27
  6419  001B1E  2621               	addwf	??_fround^0,f,c
  6420  001B20  5021               	movf	??_fround^0,w,c
  6421  001B22  0F28               	addlw	low __npowers_
  6422  001B24  6E22               	movwf	(??_fround+1)^0,c
  6423  001B26  C022  FFF6         	movff	??_fround+1,tblptrl
  6424  001B2A                     	if	1	;There is more than 1 active tblptr byte
  6425  001B2A  0E10               	movlw	high __smallconst
  6426  001B2C  6EF7               	movwf	tblptrh,c
  6427  001B2E                     	endif
  6428  001B2E                     	if	0	;tblptru may be non-zero
  6429  001B2E                     	endif
  6430  001B2E                     	if	0	;tblptru may be non-zero
  6431  001B2E                     	endif
  6432  001B2E  0009               	tblrd		*+
  6433  001B30  CFF5 F012          	movff	tablat,i2___ftmul@f2
  6434  001B34  0009               	tblrd		*+
  6435  001B36  CFF5 F013          	movff	tablat,i2___ftmul@f2+1
  6436  001B3A  000A               	tblrd		*-
  6437  001B3C  CFF5 F014          	movff	tablat,i2___ftmul@f2+2
  6438  001B40  0E64               	movlw	100
  6439  001B42  6E05               	movwf	___lbdiv@divisor^0,c
  6440  001B44  502B               	movf	fround@prec^0,w,c
  6441  001B46  ECB2  F019         	call	___lbdiv
  6442  001B4A  0D03               	mullw	3
  6443  001B4C  CFF3 F023          	movff	prodl,??_fround+2
  6444  001B50  0E36               	movlw	54
  6445  001B52  2623               	addwf	(??_fround+2)^0,f,c
  6446  001B54  5023               	movf	(??_fround+2)^0,w,c
  6447  001B56  0F28               	addlw	low __npowers_
  6448  001B58  6E24               	movwf	(??_fround+3)^0,c
  6449  001B5A  C024  FFF6         	movff	??_fround+3,tblptrl
  6450  001B5E                     	if	1	;There is more than 1 active tblptr byte
  6451  001B5E  0E10               	movlw	high __smallconst
  6452  001B60  6EF7               	movwf	tblptrh,c
  6453  001B62                     	endif
  6454  001B62                     	if	0	;tblptru may be non-zero
  6455  001B62                     	endif
  6456  001B62                     	if	0	;tblptru may be non-zero
  6457  001B62                     	endif
  6458  001B62  0009               	tblrd		*+
  6459  001B64  CFF5 F00F          	movff	tablat,i2___ftmul@f1
  6460  001B68  0009               	tblrd		*+
  6461  001B6A  CFF5 F010          	movff	tablat,i2___ftmul@f1+1
  6462  001B6E  000A               	tblrd		*-
  6463  001B70  CFF5 F011          	movff	tablat,i2___ftmul@f1+2
  6464  001B74  EC7D  F013         	call	i2___ftmul	;wreg free
  6465  001B78  C00F  F028         	movff	?i2___ftmul,_fround$1033
  6466  001B7C  C010  F029         	movff	?i2___ftmul+1,_fround$1033+1
  6467  001B80  C011  F02A         	movff	?i2___ftmul+2,_fround$1033+2
  6468                           
  6469                           ;doprnt.c: 422: return 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * 
      +                          _npowers_[prec%10U];
  6470  001B84  0E0A               	movlw	10
  6471  001B86  6E01               	movwf	___lbmod@divisor^0,c
  6472  001B88  502B               	movf	fround@prec^0,w,c
  6473  001B8A  ECEB  F019         	call	___lbmod
  6474  001B8E  0D03               	mullw	3
  6475  001B90  50F3               	movf	243,w,c
  6476  001B92  0F28               	addlw	low __npowers_
  6477  001B94  6E21               	movwf	??_fround^0,c
  6478  001B96  C021  FFF6         	movff	??_fround,tblptrl
  6479  001B9A                     	if	1	;There is more than 1 active tblptr byte
  6480  001B9A  0E10               	movlw	high __smallconst
  6481  001B9C  6EF7               	movwf	tblptrh,c
  6482  001B9E                     	endif
  6483  001B9E                     	if	0	;tblptru may be non-zero
  6484  001B9E                     	endif
  6485  001B9E                     	if	0	;tblptru may be non-zero
  6486  001B9E                     	endif
  6487  001B9E  0009               	tblrd		*+
  6488  001BA0  CFF5 F012          	movff	tablat,i2___ftmul@f2
  6489  001BA4  0009               	tblrd		*+
  6490  001BA6  CFF5 F013          	movff	tablat,i2___ftmul@f2+1
  6491  001BAA  000A               	tblrd		*-
  6492  001BAC  CFF5 F014          	movff	tablat,i2___ftmul@f2+2
  6493  001BB0  C028  F00F         	movff	_fround$1033,i2___ftmul@f1
  6494  001BB4  C029  F010         	movff	_fround$1033+1,i2___ftmul@f1+1
  6495  001BB8  C02A  F011         	movff	_fround$1033+2,i2___ftmul@f1+2
  6496  001BBC  EC7D  F013         	call	i2___ftmul	;wreg free
  6497  001BC0  C00F  F025         	movff	?i2___ftmul,_fround$1034
  6498  001BC4  C010  F026         	movff	?i2___ftmul+1,_fround$1034+1
  6499  001BC8  C011  F027         	movff	?i2___ftmul+2,_fround$1034+2
  6500                           
  6501                           ;doprnt.c: 422: return 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * 
      +                          _npowers_[prec%10U];
  6502  001BCC  C025  F00F         	movff	_fround$1034,i2___ftmul@f1
  6503  001BD0  C026  F010         	movff	_fround$1034+1,i2___ftmul@f1+1
  6504  001BD4  C027  F011         	movff	_fround$1034+2,i2___ftmul@f1+2
  6505  001BD8  0E00               	movlw	0
  6506  001BDA  6E12               	movwf	i2___ftmul@f2^0,c
  6507  001BDC  0E00               	movlw	0
  6508  001BDE  6E13               	movwf	(i2___ftmul@f2+1)^0,c
  6509  001BE0  0E3F               	movlw	63
  6510  001BE2  6E14               	movwf	(i2___ftmul@f2+2)^0,c
  6511  001BE4  EC7D  F013         	call	i2___ftmul	;wreg free
  6512  001BE8  C00F  F01E         	movff	?i2___ftmul,?_fround
  6513  001BEC  C010  F01F         	movff	?i2___ftmul+1,?_fround+1
  6514  001BF0  C011  F020         	movff	?i2___ftmul+2,?_fround+2
  6515  001BF4  0012               	return	
  6516  001BF6                     i2l3063:
  6517                           
  6518                           ;doprnt.c: 423: else if(prec > 10)
  6519  001BF6  0E0A               	movlw	10
  6520  001BF8  642B               	cpfsgt	fround@prec^0,c
  6521  001BFA  D04D               	goto	i2l3071
  6522                           
  6523                           ;doprnt.c: 424: return 0.5 * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  6524  001BFC  0E0A               	movlw	10
  6525  001BFE  6E01               	movwf	___lbmod@divisor^0,c
  6526  001C00  502B               	movf	fround@prec^0,w,c
  6527  001C02  ECEB  F019         	call	___lbmod
  6528  001C06  0D03               	mullw	3
  6529  001C08  50F3               	movf	243,w,c
  6530  001C0A  0F28               	addlw	low __npowers_
  6531  001C0C  6E21               	movwf	??_fround^0,c
  6532  001C0E  C021  FFF6         	movff	??_fround,tblptrl
  6533  001C12                     	if	1	;There is more than 1 active tblptr byte
  6534  001C12  0E10               	movlw	high __smallconst
  6535  001C14  6EF7               	movwf	tblptrh,c
  6536  001C16                     	endif
  6537  001C16                     	if	0	;tblptru may be non-zero
  6538  001C16                     	endif
  6539  001C16                     	if	0	;tblptru may be non-zero
  6540  001C16                     	endif
  6541  001C16  0009               	tblrd		*+
  6542  001C18  CFF5 F012          	movff	tablat,i2___ftmul@f2
  6543  001C1C  0009               	tblrd		*+
  6544  001C1E  CFF5 F013          	movff	tablat,i2___ftmul@f2+1
  6545  001C22  000A               	tblrd		*-
  6546  001C24  CFF5 F014          	movff	tablat,i2___ftmul@f2+2
  6547  001C28  0E0A               	movlw	10
  6548  001C2A  6E05               	movwf	___lbdiv@divisor^0,c
  6549  001C2C  502B               	movf	fround@prec^0,w,c
  6550  001C2E  ECB2  F019         	call	___lbdiv
  6551  001C32  0D03               	mullw	3
  6552  001C34  CFF3 F022          	movff	prodl,??_fround+1
  6553  001C38  0E1B               	movlw	27
  6554  001C3A  2622               	addwf	(??_fround+1)^0,f,c
  6555  001C3C  5022               	movf	(??_fround+1)^0,w,c
  6556  001C3E  0F28               	addlw	low __npowers_
  6557  001C40  6E23               	movwf	(??_fround+2)^0,c
  6558  001C42  C023  FFF6         	movff	??_fround+2,tblptrl
  6559  001C46                     	if	1	;There is more than 1 active tblptr byte
  6560  001C46  0E10               	movlw	high __smallconst
  6561  001C48  6EF7               	movwf	tblptrh,c
  6562  001C4A                     	endif
  6563  001C4A                     	if	0	;tblptru may be non-zero
  6564  001C4A                     	endif
  6565  001C4A                     	if	0	;tblptru may be non-zero
  6566  001C4A                     	endif
  6567  001C4A  0009               	tblrd		*+
  6568  001C4C  CFF5 F00F          	movff	tablat,i2___ftmul@f1
  6569  001C50  0009               	tblrd		*+
  6570  001C52  CFF5 F010          	movff	tablat,i2___ftmul@f1+1
  6571  001C56  000A               	tblrd		*-
  6572  001C58  CFF5 F011          	movff	tablat,i2___ftmul@f1+2
  6573  001C5C  EC7D  F013         	call	i2___ftmul	;wreg free
  6574  001C60  C00F  F028         	movff	?i2___ftmul,_fround$1033
  6575  001C64  C010  F029         	movff	?i2___ftmul+1,_fround$1033+1
  6576  001C68  C011  F02A         	movff	?i2___ftmul+2,_fround$1033+2
  6577                           
  6578                           ;doprnt.c: 424: return 0.5 * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  6579  001C6C  C028  F00F         	movff	_fround$1033,i2___ftmul@f1
  6580  001C70  C029  F010         	movff	_fround$1033+1,i2___ftmul@f1+1
  6581  001C74  C02A  F011         	movff	_fround$1033+2,i2___ftmul@f1+2
  6582  001C78  0E00               	movlw	0
  6583  001C7A  6E12               	movwf	i2___ftmul@f2^0,c
  6584  001C7C  0E00               	movlw	0
  6585  001C7E  6E13               	movwf	(i2___ftmul@f2+1)^0,c
  6586  001C80  0E3F               	movlw	63
  6587  001C82  6E14               	movwf	(i2___ftmul@f2+2)^0,c
  6588  001C84  EC7D  F013         	call	i2___ftmul	;wreg free
  6589  001C88  C00F  F01E         	movff	?i2___ftmul,?_fround
  6590  001C8C  C010  F01F         	movff	?i2___ftmul+1,?_fround+1
  6591  001C90  C011  F020         	movff	?i2___ftmul+2,?_fround+2
  6592  001C94  0012               	return	
  6593  001C96                     i2l3071:
  6594                           
  6595                           ;doprnt.c: 425: return 0.5 * _npowers_[prec];
  6596  001C96  502B               	movf	fround@prec^0,w,c
  6597  001C98  0D03               	mullw	3
  6598  001C9A  50F3               	movf	243,w,c
  6599  001C9C  0F28               	addlw	low __npowers_
  6600  001C9E  6E21               	movwf	??_fround^0,c
  6601  001CA0  C021  FFF6         	movff	??_fround,tblptrl
  6602  001CA4                     	if	1	;There is more than 1 active tblptr byte
  6603  001CA4  0E10               	movlw	high __smallconst
  6604  001CA6  6EF7               	movwf	tblptrh,c
  6605  001CA8                     	endif
  6606  001CA8                     	if	0	;tblptru may be non-zero
  6607  001CA8                     	endif
  6608  001CA8                     	if	0	;tblptru may be non-zero
  6609  001CA8                     	endif
  6610  001CA8  0009               	tblrd		*+
  6611  001CAA  CFF5 F00F          	movff	tablat,i2___ftmul@f1
  6612  001CAE  0009               	tblrd		*+
  6613  001CB0  CFF5 F010          	movff	tablat,i2___ftmul@f1+1
  6614  001CB4  000A               	tblrd		*-
  6615  001CB6  CFF5 F011          	movff	tablat,i2___ftmul@f1+2
  6616  001CBA  0E00               	movlw	0
  6617  001CBC  6E12               	movwf	i2___ftmul@f2^0,c
  6618  001CBE  0E00               	movlw	0
  6619  001CC0  6E13               	movwf	(i2___ftmul@f2+1)^0,c
  6620  001CC2  0E3F               	movlw	63
  6621  001CC4  6E14               	movwf	(i2___ftmul@f2+2)^0,c
  6622  001CC6  EC7D  F013         	call	i2___ftmul	;wreg free
  6623  001CCA  C00F  F01E         	movff	?i2___ftmul,?_fround
  6624  001CCE  C010  F01F         	movff	?i2___ftmul+1,?_fround+1
  6625  001CD2  C011  F020         	movff	?i2___ftmul+2,?_fround+2
  6626  001CD6  0012               	return		;funcret
  6627  001CD8                     __end_of_fround:
  6628                           	callstack 0
  6629                           
  6630 ;; *************** function i2___ftmul *****************
  6631 ;; Defined at:
  6632 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\ftmul.c"
  6633 ;; Parameters:    Size  Location     Type
  6634 ;;  f1              3   14[COMRAM] float 
  6635 ;;  f2              3   17[COMRAM] float 
  6636 ;; Auto vars:     Size  Location     Type
  6637 ;;  f3_as_produc    3   24[COMRAM] unsigned um
  6638 ;;  sign            1   28[COMRAM] unsigned char 
  6639 ;;  cntr            1   27[COMRAM] unsigned char 
  6640 ;;  exp             1   23[COMRAM] unsigned char 
  6641 ;; Return value:  Size  Location     Type
  6642 ;;                  3   14[COMRAM] float 
  6643 ;; Registers used:
  6644 ;;		wreg, status,2, status,0, cstack
  6645 ;; Tracked objects:
  6646 ;;		On entry : 0/0
  6647 ;;		On exit  : 0/0
  6648 ;;		Unchanged: 0/0
  6649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6650 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6651 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6652 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6653 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6654 ;;Total ram usage:       15 bytes
  6655 ;; Hardware stack levels used: 1
  6656 ;; Hardware stack levels required when called: 1
  6657 ;; This function calls:
  6658 ;;		i2___ftpack
  6659 ;; This function is called by:
  6660 ;;		_TMR1_ISR
  6661 ;;		_fround
  6662 ;;		_scale
  6663 ;;		_sprintf
  6664 ;;		i2_deg2time1
  6665 ;;		i2_deg2time2
  6666 ;; This function uses a non-reentrant model
  6667 ;;
  6668                           
  6669                           	psect	text26
  6670  0026FA                     __ptext26:
  6671                           	callstack 0
  6672  0026FA                     i2___ftmul:
  6673                           	callstack 22
  6674                           
  6675                           ;incstack = 0
  6676  0026FA  C011  F015         	movff	i2___ftmul@f1+2,??i2___ftmul
  6677  0026FE  6A16               	clrf	(??i2___ftmul+1)^0,c
  6678  002700  6A17               	clrf	(??i2___ftmul+2)^0,c
  6679  002702  3410               	rlcf	(i2___ftmul@f1+1)^0,w,c
  6680  002704  3615               	rlcf	??i2___ftmul^0,f,c
  6681  002706  E301               	bnc	u310_41
  6682  002708  8016               	bsf	(??i2___ftmul+1)^0,0,c
  6683  00270A                     u310_41:
  6684  00270A  5015               	movf	??i2___ftmul^0,w,c
  6685  00270C  6E18               	movwf	i2___ftmul@exp^0,c
  6686  00270E  5018               	movf	i2___ftmul@exp^0,w,c
  6687  002710  A4D8               	btfss	status,2,c
  6688  002712  D007               	goto	i2l2989
  6689  002714  0E00               	movlw	0
  6690  002716  6E0F               	movwf	?i2___ftmul^0,c
  6691  002718  0E00               	movlw	0
  6692  00271A  6E10               	movwf	(?i2___ftmul+1)^0,c
  6693  00271C  0E00               	movlw	0
  6694  00271E  6E11               	movwf	(?i2___ftmul+2)^0,c
  6695  002720  0012               	return	
  6696  002722                     i2l2989:
  6697  002722  C014  F015         	movff	i2___ftmul@f2+2,??i2___ftmul
  6698  002726  6A16               	clrf	(??i2___ftmul+1)^0,c
  6699  002728  6A17               	clrf	(??i2___ftmul+2)^0,c
  6700  00272A  3413               	rlcf	(i2___ftmul@f2+1)^0,w,c
  6701  00272C  3615               	rlcf	??i2___ftmul^0,f,c
  6702  00272E  E301               	bnc	u312_41
  6703  002730  8016               	bsf	(??i2___ftmul+1)^0,0,c
  6704  002732                     u312_41:
  6705  002732  5015               	movf	??i2___ftmul^0,w,c
  6706  002734  6E1D               	movwf	i2___ftmul@sign^0,c
  6707  002736  501D               	movf	i2___ftmul@sign^0,w,c
  6708  002738  A4D8               	btfss	status,2,c
  6709  00273A  D007               	goto	i2l2995
  6710  00273C  0E00               	movlw	0
  6711  00273E  6E0F               	movwf	?i2___ftmul^0,c
  6712  002740  0E00               	movlw	0
  6713  002742  6E10               	movwf	(?i2___ftmul+1)^0,c
  6714  002744  0E00               	movlw	0
  6715  002746  6E11               	movwf	(?i2___ftmul+2)^0,c
  6716  002748  0012               	return	
  6717  00274A                     i2l2995:
  6718  00274A  501D               	movf	i2___ftmul@sign^0,w,c
  6719  00274C  0F7B               	addlw	123
  6720  00274E  2618               	addwf	i2___ftmul@exp^0,f,c
  6721  002750  C011  F01D         	movff	i2___ftmul@f1+2,i2___ftmul@sign
  6722  002754  5014               	movf	(i2___ftmul@f2+2)^0,w,c
  6723  002756  1A1D               	xorwf	i2___ftmul@sign^0,f,c
  6724  002758  0E80               	movlw	128
  6725  00275A  161D               	andwf	i2___ftmul@sign^0,f,c
  6726  00275C  8E10               	bsf	(i2___ftmul@f1+1)^0,7,c
  6727  00275E  8E13               	bsf	(i2___ftmul@f2+1)^0,7,c
  6728  002760  0EFF               	movlw	255
  6729  002762  1612               	andwf	i2___ftmul@f2^0,f,c
  6730  002764  0EFF               	movlw	255
  6731  002766  1613               	andwf	(i2___ftmul@f2+1)^0,f,c
  6732  002768  0E00               	movlw	0
  6733  00276A  1614               	andwf	(i2___ftmul@f2+2)^0,f,c
  6734  00276C  0E00               	movlw	0
  6735  00276E  6E19               	movwf	i2___ftmul@f3_as_product^0,c
  6736  002770  0E00               	movlw	0
  6737  002772  6E1A               	movwf	(i2___ftmul@f3_as_product+1)^0,c
  6738  002774  0E00               	movlw	0
  6739  002776  6E1B               	movwf	(i2___ftmul@f3_as_product+2)^0,c
  6740  002778  0E07               	movlw	7
  6741  00277A  6E1C               	movwf	i2___ftmul@cntr^0,c
  6742  00277C                     i2l3009:
  6743  00277C  A00F               	btfss	i2___ftmul@f1^0,0,c
  6744  00277E  D006               	goto	i2l3013
  6745  002780  5012               	movf	i2___ftmul@f2^0,w,c
  6746  002782  2619               	addwf	i2___ftmul@f3_as_product^0,f,c
  6747  002784  5013               	movf	(i2___ftmul@f2+1)^0,w,c
  6748  002786  221A               	addwfc	(i2___ftmul@f3_as_product+1)^0,f,c
  6749  002788  5014               	movf	(i2___ftmul@f2+2)^0,w,c
  6750  00278A  221B               	addwfc	(i2___ftmul@f3_as_product+2)^0,f,c
  6751  00278C                     i2l3013:
  6752  00278C  90D8               	bcf	status,0,c
  6753  00278E  3211               	rrcf	(i2___ftmul@f1+2)^0,f,c
  6754  002790  3210               	rrcf	(i2___ftmul@f1+1)^0,f,c
  6755  002792  320F               	rrcf	i2___ftmul@f1^0,f,c
  6756  002794  90D8               	bcf	status,0,c
  6757  002796  3612               	rlcf	i2___ftmul@f2^0,f,c
  6758  002798  3613               	rlcf	(i2___ftmul@f2+1)^0,f,c
  6759  00279A  3614               	rlcf	(i2___ftmul@f2+2)^0,f,c
  6760  00279C  2E1C               	decfsz	i2___ftmul@cntr^0,f,c
  6761  00279E  D7EE               	goto	i2l3009
  6762  0027A0  0E09               	movlw	9
  6763  0027A2  6E1C               	movwf	i2___ftmul@cntr^0,c
  6764  0027A4                     i2l3019:
  6765  0027A4  A00F               	btfss	i2___ftmul@f1^0,0,c
  6766  0027A6  D006               	goto	i2l3023
  6767  0027A8  5012               	movf	i2___ftmul@f2^0,w,c
  6768  0027AA  2619               	addwf	i2___ftmul@f3_as_product^0,f,c
  6769  0027AC  5013               	movf	(i2___ftmul@f2+1)^0,w,c
  6770  0027AE  221A               	addwfc	(i2___ftmul@f3_as_product+1)^0,f,c
  6771  0027B0  5014               	movf	(i2___ftmul@f2+2)^0,w,c
  6772  0027B2  221B               	addwfc	(i2___ftmul@f3_as_product+2)^0,f,c
  6773  0027B4                     i2l3023:
  6774  0027B4  90D8               	bcf	status,0,c
  6775  0027B6  3211               	rrcf	(i2___ftmul@f1+2)^0,f,c
  6776  0027B8  3210               	rrcf	(i2___ftmul@f1+1)^0,f,c
  6777  0027BA  320F               	rrcf	i2___ftmul@f1^0,f,c
  6778  0027BC  90D8               	bcf	status,0,c
  6779  0027BE  321B               	rrcf	(i2___ftmul@f3_as_product+2)^0,f,c
  6780  0027C0  321A               	rrcf	(i2___ftmul@f3_as_product+1)^0,f,c
  6781  0027C2  3219               	rrcf	i2___ftmul@f3_as_product^0,f,c
  6782  0027C4  2E1C               	decfsz	i2___ftmul@cntr^0,f,c
  6783  0027C6  D7EE               	goto	i2l3019
  6784  0027C8  C019  F001         	movff	i2___ftmul@f3_as_product,i2___ftpack@arg
  6785  0027CC  C01A  F002         	movff	i2___ftmul@f3_as_product+1,i2___ftpack@arg+1
  6786  0027D0  C01B  F003         	movff	i2___ftmul@f3_as_product+2,i2___ftpack@arg+2
  6787  0027D4  C018  F004         	movff	i2___ftmul@exp,i2___ftpack@exp
  6788  0027D8  C01D  F005         	movff	i2___ftmul@sign,i2___ftpack@sign
  6789  0027DC  EC8B  F016         	call	i2___ftpack	;wreg free
  6790  0027E0  C001  F00F         	movff	?i2___ftpack,?i2___ftmul
  6791  0027E4  C002  F010         	movff	?i2___ftpack+1,?i2___ftmul+1
  6792  0027E8  C003  F011         	movff	?i2___ftpack+2,?i2___ftmul+2
  6793  0027EC  0012               	return		;funcret
  6794  0027EE                     __end_ofi2___ftmul:
  6795                           	callstack 0
  6796                           
  6797 ;; *************** function ___lbmod *****************
  6798 ;; Defined at:
  6799 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\lbmod.c"
  6800 ;; Parameters:    Size  Location     Type
  6801 ;;  dividend        1    wreg     unsigned char 
  6802 ;;  divisor         1    0[COMRAM] unsigned char 
  6803 ;; Auto vars:     Size  Location     Type
  6804 ;;  dividend        1    1[COMRAM] unsigned char 
  6805 ;;  rem             1    3[COMRAM] unsigned char 
  6806 ;;  counter         1    2[COMRAM] unsigned char 
  6807 ;; Return value:  Size  Location     Type
  6808 ;;                  1    wreg      unsigned char 
  6809 ;; Registers used:
  6810 ;;		wreg, status,2, status,0
  6811 ;; Tracked objects:
  6812 ;;		On entry : 0/0
  6813 ;;		On exit  : 0/0
  6814 ;;		Unchanged: 0/0
  6815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6816 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6817 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6818 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6819 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6820 ;;Total ram usage:        4 bytes
  6821 ;; Hardware stack levels used: 1
  6822 ;; This function calls:
  6823 ;;		Nothing
  6824 ;; This function is called by:
  6825 ;;		_fround
  6826 ;; This function uses a non-reentrant model
  6827 ;;
  6828                           
  6829                           	psect	text27
  6830  0033D6                     __ptext27:
  6831                           	callstack 0
  6832  0033D6                     ___lbmod:
  6833                           	callstack 22
  6834                           
  6835                           ;incstack = 0
  6836                           ;___lbmod@dividend stored from wreg
  6837  0033D6  6E02               	movwf	___lbmod@dividend^0,c
  6838  0033D8  0E08               	movlw	8
  6839  0033DA  6E03               	movwf	___lbmod@counter^0,c
  6840  0033DC  0E00               	movlw	0
  6841  0033DE  6E04               	movwf	___lbmod@rem^0,c
  6842  0033E0                     i2l2875:
  6843  0033E0  90D8               	bcf	status,0,c
  6844  0033E2  3402               	rlcf	___lbmod@dividend^0,w,c
  6845  0033E4  3404               	rlcf	___lbmod@rem^0,w,c
  6846  0033E6  6E04               	movwf	___lbmod@rem^0,c
  6847  0033E8  90D8               	bcf	status,0,c
  6848  0033EA  3602               	rlcf	___lbmod@dividend^0,f,c
  6849  0033EC  5001               	movf	___lbmod@divisor^0,w,c
  6850  0033EE  5C04               	subwf	___lbmod@rem^0,w,c
  6851  0033F0  A0D8               	btfss	status,0,c
  6852  0033F2  D002               	goto	i2l2883
  6853  0033F4  5001               	movf	___lbmod@divisor^0,w,c
  6854  0033F6  5E04               	subwf	___lbmod@rem^0,f,c
  6855  0033F8                     i2l2883:
  6856  0033F8  2E03               	decfsz	___lbmod@counter^0,f,c
  6857  0033FA  D7F2               	goto	i2l2875
  6858  0033FC  5004               	movf	___lbmod@rem^0,w,c
  6859  0033FE  0012               	return		;funcret
  6860  003400                     __end_of___lbmod:
  6861                           	callstack 0
  6862                           
  6863 ;; *************** function ___lbdiv *****************
  6864 ;; Defined at:
  6865 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\lbdiv.c"
  6866 ;; Parameters:    Size  Location     Type
  6867 ;;  dividend        1    wreg     unsigned char 
  6868 ;;  divisor         1    4[COMRAM] unsigned char 
  6869 ;; Auto vars:     Size  Location     Type
  6870 ;;  dividend        1    5[COMRAM] unsigned char 
  6871 ;;  quotient        1    7[COMRAM] unsigned char 
  6872 ;;  counter         1    6[COMRAM] unsigned char 
  6873 ;; Return value:  Size  Location     Type
  6874 ;;                  1    wreg      unsigned char 
  6875 ;; Registers used:
  6876 ;;		wreg, status,2, status,0
  6877 ;; Tracked objects:
  6878 ;;		On entry : 0/0
  6879 ;;		On exit  : 0/0
  6880 ;;		Unchanged: 0/0
  6881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6882 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6883 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6884 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6885 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6886 ;;Total ram usage:        4 bytes
  6887 ;; Hardware stack levels used: 1
  6888 ;; This function calls:
  6889 ;;		Nothing
  6890 ;; This function is called by:
  6891 ;;		_fround
  6892 ;; This function uses a non-reentrant model
  6893 ;;
  6894                           
  6895                           	psect	text28
  6896  003364                     __ptext28:
  6897                           	callstack 0
  6898  003364                     ___lbdiv:
  6899                           	callstack 22
  6900                           
  6901                           ;incstack = 0
  6902                           ;___lbdiv@dividend stored from wreg
  6903  003364  6E06               	movwf	___lbdiv@dividend^0,c
  6904  003366  0E00               	movlw	0
  6905  003368  6E08               	movwf	___lbdiv@quotient^0,c
  6906  00336A  5005               	movf	___lbdiv@divisor^0,w,c
  6907  00336C  B4D8               	btfsc	status,2,c
  6908  00336E  D015               	goto	i2l2869
  6909  003370  0E01               	movlw	1
  6910  003372  6E07               	movwf	___lbdiv@counter^0,c
  6911  003374  D003               	goto	i2l2857
  6912  003376                     i2l2853:
  6913  003376  90D8               	bcf	status,0,c
  6914  003378  3605               	rlcf	___lbdiv@divisor^0,f,c
  6915  00337A  2A07               	incf	___lbdiv@counter^0,f,c
  6916  00337C                     i2l2857:
  6917  00337C  AE05               	btfss	___lbdiv@divisor^0,7,c
  6918  00337E  D7FB               	goto	i2l2853
  6919  003380                     i2u286_40:
  6920  003380  90D8               	bcf	status,0,c
  6921  003382  3608               	rlcf	___lbdiv@quotient^0,f,c
  6922  003384  5005               	movf	___lbdiv@divisor^0,w,c
  6923  003386  5C06               	subwf	___lbdiv@dividend^0,w,c
  6924  003388  A0D8               	btfss	status,0,c
  6925  00338A  D003               	goto	i2l2865
  6926  00338C  5005               	movf	___lbdiv@divisor^0,w,c
  6927  00338E  5E06               	subwf	___lbdiv@dividend^0,f,c
  6928  003390  8008               	bsf	___lbdiv@quotient^0,0,c
  6929  003392                     i2l2865:
  6930  003392  90D8               	bcf	status,0,c
  6931  003394  3205               	rrcf	___lbdiv@divisor^0,f,c
  6932  003396  2E07               	decfsz	___lbdiv@counter^0,f,c
  6933  003398  D7F3               	goto	i2u286_40
  6934  00339A                     i2l2869:
  6935  00339A  5008               	movf	___lbdiv@quotient^0,w,c
  6936  00339C  0012               	return		;funcret
  6937  00339E                     __end_of___lbdiv:
  6938                           	callstack 0
  6939                           
  6940 ;; *************** function __tdiv_to_l_ *****************
  6941 ;; Defined at:
  6942 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\ftdivl.c"
  6943 ;; Parameters:    Size  Location     Type
  6944 ;;  f1              3    0[COMRAM] float 
  6945 ;;  f2              3    3[COMRAM] float 
  6946 ;; Auto vars:     Size  Location     Type
  6947 ;;  quot            4    9[COMRAM] unsigned long 
  6948 ;;  exp1            1   14[COMRAM] unsigned char 
  6949 ;;  cntr            1   13[COMRAM] unsigned char 
  6950 ;; Return value:  Size  Location     Type
  6951 ;;                  4    0[COMRAM] unsigned long 
  6952 ;; Registers used:
  6953 ;;		wreg, status,2, status,0
  6954 ;; Tracked objects:
  6955 ;;		On entry : 0/0
  6956 ;;		On exit  : 0/0
  6957 ;;		Unchanged: 0/0
  6958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6959 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6960 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6961 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6962 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6963 ;;Total ram usage:       15 bytes
  6964 ;; Hardware stack levels used: 1
  6965 ;; This function calls:
  6966 ;;		Nothing
  6967 ;; This function is called by:
  6968 ;;		_sprintf
  6969 ;; This function uses a non-reentrant model
  6970 ;;
  6971                           
  6972                           	psect	text29
  6973  002508                     __ptext29:
  6974                           	callstack 0
  6975  002508                     __tdiv_to_l_:
  6976                           	callstack 23
  6977                           
  6978                           ;incstack = 0
  6979  002508  C003  F007         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
  6980  00250C  6A08               	clrf	(??__tdiv_to_l_+1)^0,c
  6981  00250E  6A09               	clrf	(??__tdiv_to_l_+2)^0,c
  6982  002510  3402               	rlcf	(__tdiv_to_l_@f1+1)^0,w,c
  6983  002512  3607               	rlcf	??__tdiv_to_l_^0,f,c
  6984  002514  E301               	bnc	u326_41
  6985  002516  8008               	bsf	(??__tdiv_to_l_+1)^0,0,c
  6986  002518                     u326_41:
  6987  002518  5007               	movf	??__tdiv_to_l_^0,w,c
  6988  00251A  6E0F               	movwf	__tdiv_to_l_@exp1^0,c
  6989  00251C  500F               	movf	__tdiv_to_l_@exp1^0,w,c
  6990  00251E  A4D8               	btfss	status,2,c
  6991  002520  D009               	goto	i2l3131
  6992  002522                     i2u327_40:
  6993  002522  0E00               	movlw	0
  6994  002524  6E01               	movwf	?__tdiv_to_l_^0,c
  6995  002526  0E00               	movlw	0
  6996  002528  6E02               	movwf	(?__tdiv_to_l_+1)^0,c
  6997  00252A  0E00               	movlw	0
  6998  00252C  6E03               	movwf	(?__tdiv_to_l_+2)^0,c
  6999  00252E  0E00               	movlw	0
  7000  002530  6E04               	movwf	(?__tdiv_to_l_+3)^0,c
  7001  002532  0012               	return	
  7002  002534                     i2l3131:
  7003  002534  C006  F007         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
  7004  002538  6A08               	clrf	(??__tdiv_to_l_+1)^0,c
  7005  00253A  6A09               	clrf	(??__tdiv_to_l_+2)^0,c
  7006  00253C  3405               	rlcf	(__tdiv_to_l_@f2+1)^0,w,c
  7007  00253E  3607               	rlcf	??__tdiv_to_l_^0,f,c
  7008  002540  E301               	bnc	u328_41
  7009  002542  8008               	bsf	(??__tdiv_to_l_+1)^0,0,c
  7010  002544                     u328_41:
  7011  002544  5007               	movf	??__tdiv_to_l_^0,w,c
  7012  002546  6E0E               	movwf	__tdiv_to_l_@cntr^0,c
  7013  002548  500E               	movf	__tdiv_to_l_@cntr^0,w,c
  7014  00254A  B4D8               	btfsc	status,2,c
  7015  00254C  D7EA               	goto	i2u327_40
  7016  00254E  8E02               	bsf	(__tdiv_to_l_@f1+1)^0,7,c
  7017  002550  0EFF               	movlw	255
  7018  002552  1601               	andwf	__tdiv_to_l_@f1^0,f,c
  7019  002554  0EFF               	movlw	255
  7020  002556  1602               	andwf	(__tdiv_to_l_@f1+1)^0,f,c
  7021  002558  0E00               	movlw	0
  7022  00255A  1603               	andwf	(__tdiv_to_l_@f1+2)^0,f,c
  7023  00255C  8E05               	bsf	(__tdiv_to_l_@f2+1)^0,7,c
  7024  00255E  0EFF               	movlw	255
  7025  002560  1604               	andwf	__tdiv_to_l_@f2^0,f,c
  7026  002562  0EFF               	movlw	255
  7027  002564  1605               	andwf	(__tdiv_to_l_@f2+1)^0,f,c
  7028  002566  0E00               	movlw	0
  7029  002568  1606               	andwf	(__tdiv_to_l_@f2+2)^0,f,c
  7030  00256A  0E00               	movlw	0
  7031  00256C  6E0A               	movwf	__tdiv_to_l_@quot^0,c
  7032  00256E  0E00               	movlw	0
  7033  002570  6E0B               	movwf	(__tdiv_to_l_@quot+1)^0,c
  7034  002572  0E00               	movlw	0
  7035  002574  6E0C               	movwf	(__tdiv_to_l_@quot+2)^0,c
  7036  002576  0E00               	movlw	0
  7037  002578  6E0D               	movwf	(__tdiv_to_l_@quot+3)^0,c
  7038  00257A  0E7F               	movlw	127
  7039  00257C  5E0F               	subwf	__tdiv_to_l_@exp1^0,f,c
  7040  00257E  500E               	movf	__tdiv_to_l_@cntr^0,w,c
  7041  002580  0F98               	addlw	152
  7042  002582  5E0F               	subwf	__tdiv_to_l_@exp1^0,f,c
  7043  002584  0E18               	movlw	24
  7044  002586  6E0E               	movwf	__tdiv_to_l_@cntr^0,c
  7045  002588                     i2l654:
  7046  002588  90D8               	bcf	status,0,c
  7047  00258A  360A               	rlcf	__tdiv_to_l_@quot^0,f,c
  7048  00258C  360B               	rlcf	(__tdiv_to_l_@quot+1)^0,f,c
  7049  00258E  360C               	rlcf	(__tdiv_to_l_@quot+2)^0,f,c
  7050  002590  360D               	rlcf	(__tdiv_to_l_@quot+3)^0,f,c
  7051  002592  5004               	movf	__tdiv_to_l_@f2^0,w,c
  7052  002594  5C01               	subwf	__tdiv_to_l_@f1^0,w,c
  7053  002596  5005               	movf	(__tdiv_to_l_@f2+1)^0,w,c
  7054  002598  5802               	subwfb	(__tdiv_to_l_@f1+1)^0,w,c
  7055  00259A  5006               	movf	(__tdiv_to_l_@f2+2)^0,w,c
  7056  00259C  5803               	subwfb	(__tdiv_to_l_@f1+2)^0,w,c
  7057  00259E  A0D8               	btfss	status,0,c
  7058  0025A0  D007               	goto	i2l655
  7059  0025A2  5004               	movf	__tdiv_to_l_@f2^0,w,c
  7060  0025A4  5E01               	subwf	__tdiv_to_l_@f1^0,f,c
  7061  0025A6  5005               	movf	(__tdiv_to_l_@f2+1)^0,w,c
  7062  0025A8  5A02               	subwfb	(__tdiv_to_l_@f1+1)^0,f,c
  7063  0025AA  5006               	movf	(__tdiv_to_l_@f2+2)^0,w,c
  7064  0025AC  5A03               	subwfb	(__tdiv_to_l_@f1+2)^0,f,c
  7065  0025AE  800A               	bsf	__tdiv_to_l_@quot^0,0,c
  7066  0025B0                     i2l655:
  7067  0025B0  90D8               	bcf	status,0,c
  7068  0025B2  3601               	rlcf	__tdiv_to_l_@f1^0,f,c
  7069  0025B4  3602               	rlcf	(__tdiv_to_l_@f1+1)^0,f,c
  7070  0025B6  3603               	rlcf	(__tdiv_to_l_@f1+2)^0,f,c
  7071  0025B8  2E0E               	decfsz	__tdiv_to_l_@cntr^0,f,c
  7072  0025BA  D7E6               	goto	i2l654
  7073  0025BC  AE0F               	btfss	__tdiv_to_l_@exp1^0,7,c
  7074  0025BE  D00D               	goto	i2l3171
  7075  0025C0  500F               	movf	__tdiv_to_l_@exp1^0,w,c
  7076  0025C2  0A80               	xorlw	128
  7077  0025C4  0F97               	addlw	151
  7078  0025C6  A0D8               	btfss	status,0,c
  7079  0025C8  D7AC               	goto	i2u327_40
  7080  0025CA                     i2l3167:
  7081  0025CA  90D8               	bcf	status,0,c
  7082  0025CC  320D               	rrcf	(__tdiv_to_l_@quot+3)^0,f,c
  7083  0025CE  320C               	rrcf	(__tdiv_to_l_@quot+2)^0,f,c
  7084  0025D0  320B               	rrcf	(__tdiv_to_l_@quot+1)^0,f,c
  7085  0025D2  320A               	rrcf	__tdiv_to_l_@quot^0,f,c
  7086  0025D4  3E0F               	incfsz	__tdiv_to_l_@exp1^0,f,c
  7087  0025D6  D7F9               	goto	i2l3167
  7088  0025D8  D00D               	goto	i2u334_40
  7089  0025DA                     i2l3171:
  7090  0025DA  0E17               	movlw	23
  7091  0025DC  640F               	cpfsgt	__tdiv_to_l_@exp1^0,c
  7092  0025DE  D007               	goto	i2l3179
  7093  0025E0  D7A0               	goto	i2u327_40
  7094  0025E2                     i2l3177:
  7095  0025E2  90D8               	bcf	status,0,c
  7096  0025E4  360A               	rlcf	__tdiv_to_l_@quot^0,f,c
  7097  0025E6  360B               	rlcf	(__tdiv_to_l_@quot+1)^0,f,c
  7098  0025E8  360C               	rlcf	(__tdiv_to_l_@quot+2)^0,f,c
  7099  0025EA  360D               	rlcf	(__tdiv_to_l_@quot+3)^0,f,c
  7100  0025EC  060F               	decf	__tdiv_to_l_@exp1^0,f,c
  7101  0025EE                     i2l3179:
  7102  0025EE  500F               	movf	__tdiv_to_l_@exp1^0,w,c
  7103  0025F0  A4D8               	btfss	status,2,c
  7104  0025F2  D7F7               	goto	i2l3177
  7105  0025F4                     i2u334_40:
  7106  0025F4  C00A  F001         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
  7107  0025F8  C00B  F002         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
  7108  0025FC  C00C  F003         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
  7109  002600  C00D  F004         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
  7110  002604  0012               	return		;funcret
  7111  002606                     __end_of__tdiv_to_l_:
  7112                           	callstack 0
  7113                           
  7114 ;; *************** function __div_to_l_ *****************
  7115 ;; Defined at:
  7116 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\fldivl.c"
  7117 ;; Parameters:    Size  Location     Type
  7118 ;;  f1              3    0[COMRAM] unsigned long 
  7119 ;;  f2              3    3[COMRAM] unsigned long 
  7120 ;; Auto vars:     Size  Location     Type
  7121 ;;  quot            4    6[COMRAM] unsigned long 
  7122 ;;  exp1            1   11[COMRAM] unsigned char 
  7123 ;;  cntr            1   10[COMRAM] unsigned char 
  7124 ;; Return value:  Size  Location     Type
  7125 ;;                  4    0[COMRAM] unsigned long 
  7126 ;; Registers used:
  7127 ;;		wreg, status,2, status,0
  7128 ;; Tracked objects:
  7129 ;;		On entry : 0/0
  7130 ;;		On exit  : 0/0
  7131 ;;		Unchanged: 0/0
  7132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7133 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7134 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7135 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7136 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7137 ;;Total ram usage:       12 bytes
  7138 ;; Hardware stack levels used: 1
  7139 ;; This function calls:
  7140 ;;		Nothing
  7141 ;; This function is called by:
  7142 ;;		_sprintf
  7143 ;; This function uses a non-reentrant model
  7144 ;;
  7145                           
  7146                           	psect	text30
  7147  0027EE                     __ptext30:
  7148                           	callstack 0
  7149  0027EE                     __div_to_l_:
  7150                           	callstack 23
  7151                           
  7152                           ;incstack = 0
  7153  0027EE  3403               	rlcf	(__div_to_l_@f1+2)^0,w,c
  7154  0027F0  3404               	rlcf	(__div_to_l_@f1+3)^0,w,c
  7155  0027F2  6E0C               	movwf	__div_to_l_@exp1^0,c
  7156  0027F4  500C               	movf	__div_to_l_@exp1^0,w,c
  7157  0027F6  A4D8               	btfss	status,2,c
  7158  0027F8  D009               	goto	i2l3187
  7159  0027FA                     i2u335_40:
  7160  0027FA  0E00               	movlw	0
  7161  0027FC  6E01               	movwf	?__div_to_l_^0,c
  7162  0027FE  0E00               	movlw	0
  7163  002800  6E02               	movwf	(?__div_to_l_+1)^0,c
  7164  002802  0E00               	movlw	0
  7165  002804  6E03               	movwf	(?__div_to_l_+2)^0,c
  7166  002806  0E00               	movlw	0
  7167  002808  6E04               	movwf	(?__div_to_l_+3)^0,c
  7168  00280A  0012               	return	
  7169  00280C                     i2l3187:
  7170  00280C  3406               	rlcf	(__div_to_l_@f2+2)^0,w,c
  7171  00280E  3407               	rlcf	(__div_to_l_@f2+3)^0,w,c
  7172  002810  6E0B               	movwf	__div_to_l_@cntr^0,c
  7173  002812  500B               	movf	__div_to_l_@cntr^0,w,c
  7174  002814  B4D8               	btfsc	status,2,c
  7175  002816  D7F1               	goto	i2u335_40
  7176  002818  8E03               	bsf	(__div_to_l_@f1+2)^0,7,c
  7177  00281A  0EFF               	movlw	255
  7178  00281C  1601               	andwf	__div_to_l_@f1^0,f,c
  7179  00281E  0EFF               	movlw	255
  7180  002820  1602               	andwf	(__div_to_l_@f1+1)^0,f,c
  7181  002822  0EFF               	movlw	255
  7182  002824  1603               	andwf	(__div_to_l_@f1+2)^0,f,c
  7183  002826  0E00               	movlw	0
  7184  002828  1604               	andwf	(__div_to_l_@f1+3)^0,f,c
  7185  00282A  8E06               	bsf	(__div_to_l_@f2+2)^0,7,c
  7186  00282C  0EFF               	movlw	255
  7187  00282E  1604               	andwf	__div_to_l_@f2^0,f,c
  7188  002830  0EFF               	movlw	255
  7189  002832  1605               	andwf	(__div_to_l_@f2+1)^0,f,c
  7190  002834  0EFF               	movlw	255
  7191  002836  1606               	andwf	(__div_to_l_@f2+2)^0,f,c
  7192  002838  0E00               	movlw	0
  7193  00283A  1607               	andwf	(__div_to_l_@f2+3)^0,f,c
  7194  00283C  0E00               	movlw	0
  7195  00283E  6E07               	movwf	__div_to_l_@quot^0,c
  7196  002840  0E00               	movlw	0
  7197  002842  6E08               	movwf	(__div_to_l_@quot+1)^0,c
  7198  002844  0E00               	movlw	0
  7199  002846  6E09               	movwf	(__div_to_l_@quot+2)^0,c
  7200  002848  0E00               	movlw	0
  7201  00284A  6E0A               	movwf	(__div_to_l_@quot+3)^0,c
  7202  00284C  0E7F               	movlw	127
  7203  00284E  5E0C               	subwf	__div_to_l_@exp1^0,f,c
  7204  002850  500B               	movf	__div_to_l_@cntr^0,w,c
  7205  002852  0FA0               	addlw	160
  7206  002854  5E0C               	subwf	__div_to_l_@exp1^0,f,c
  7207  002856  0E20               	movlw	32
  7208  002858  6E0B               	movwf	__div_to_l_@cntr^0,c
  7209  00285A                     i2l3207:
  7210  00285A  90D8               	bcf	status,0,c
  7211  00285C  3607               	rlcf	__div_to_l_@quot^0,f,c
  7212  00285E  3608               	rlcf	(__div_to_l_@quot+1)^0,f,c
  7213  002860  3609               	rlcf	(__div_to_l_@quot+2)^0,f,c
  7214  002862  360A               	rlcf	(__div_to_l_@quot+3)^0,f,c
  7215  002864  5004               	movf	__div_to_l_@f2^0,w,c
  7216  002866  5C01               	subwf	__div_to_l_@f1^0,w,c
  7217  002868  5005               	movf	(__div_to_l_@f2+1)^0,w,c
  7218  00286A  5802               	subwfb	(__div_to_l_@f1+1)^0,w,c
  7219  00286C  5006               	movf	(__div_to_l_@f2+2)^0,w,c
  7220  00286E  5803               	subwfb	(__div_to_l_@f1+2)^0,w,c
  7221  002870  5007               	movf	(__div_to_l_@f2+3)^0,w,c
  7222  002872  5804               	subwfb	(__div_to_l_@f1+3)^0,w,c
  7223  002874  A0D8               	btfss	status,0,c
  7224  002876  D009               	goto	i2l3215
  7225  002878  5004               	movf	__div_to_l_@f2^0,w,c
  7226  00287A  5E01               	subwf	__div_to_l_@f1^0,f,c
  7227  00287C  5005               	movf	(__div_to_l_@f2+1)^0,w,c
  7228  00287E  5A02               	subwfb	(__div_to_l_@f1+1)^0,f,c
  7229  002880  5006               	movf	(__div_to_l_@f2+2)^0,w,c
  7230  002882  5A03               	subwfb	(__div_to_l_@f1+2)^0,f,c
  7231  002884  5007               	movf	(__div_to_l_@f2+3)^0,w,c
  7232  002886  5A04               	subwfb	(__div_to_l_@f1+3)^0,f,c
  7233  002888  8007               	bsf	__div_to_l_@quot^0,0,c
  7234  00288A                     i2l3215:
  7235  00288A  90D8               	bcf	status,0,c
  7236  00288C  3601               	rlcf	__div_to_l_@f1^0,f,c
  7237  00288E  3602               	rlcf	(__div_to_l_@f1+1)^0,f,c
  7238  002890  3603               	rlcf	(__div_to_l_@f1+2)^0,f,c
  7239  002892  3604               	rlcf	(__div_to_l_@f1+3)^0,f,c
  7240  002894  2E0B               	decfsz	__div_to_l_@cntr^0,f,c
  7241  002896  D7E1               	goto	i2l3207
  7242  002898  AE0C               	btfss	__div_to_l_@exp1^0,7,c
  7243  00289A  D00D               	goto	i2l3231
  7244  00289C  500C               	movf	__div_to_l_@exp1^0,w,c
  7245  00289E  0A80               	xorlw	128
  7246  0028A0  0F9F               	addlw	159
  7247  0028A2  A0D8               	btfss	status,0,c
  7248  0028A4  D7AA               	goto	i2u335_40
  7249  0028A6                     i2l3227:
  7250  0028A6  90D8               	bcf	status,0,c
  7251  0028A8  320A               	rrcf	(__div_to_l_@quot+3)^0,f,c
  7252  0028AA  3209               	rrcf	(__div_to_l_@quot+2)^0,f,c
  7253  0028AC  3208               	rrcf	(__div_to_l_@quot+1)^0,f,c
  7254  0028AE  3207               	rrcf	__div_to_l_@quot^0,f,c
  7255  0028B0  3E0C               	incfsz	__div_to_l_@exp1^0,f,c
  7256  0028B2  D7F9               	goto	i2l3227
  7257  0028B4  D00D               	goto	i2u341_40
  7258  0028B6                     i2l3231:
  7259  0028B6  0E1F               	movlw	31
  7260  0028B8  640C               	cpfsgt	__div_to_l_@exp1^0,c
  7261  0028BA  D007               	goto	i2l3239
  7262  0028BC  D79E               	goto	i2u335_40
  7263  0028BE                     i2l3237:
  7264  0028BE  90D8               	bcf	status,0,c
  7265  0028C0  3607               	rlcf	__div_to_l_@quot^0,f,c
  7266  0028C2  3608               	rlcf	(__div_to_l_@quot+1)^0,f,c
  7267  0028C4  3609               	rlcf	(__div_to_l_@quot+2)^0,f,c
  7268  0028C6  360A               	rlcf	(__div_to_l_@quot+3)^0,f,c
  7269  0028C8  060C               	decf	__div_to_l_@exp1^0,f,c
  7270  0028CA                     i2l3239:
  7271  0028CA  500C               	movf	__div_to_l_@exp1^0,w,c
  7272  0028CC  A4D8               	btfss	status,2,c
  7273  0028CE  D7F7               	goto	i2l3237
  7274  0028D0                     i2u341_40:
  7275  0028D0  C007  F001         	movff	__div_to_l_@quot,?__div_to_l_
  7276  0028D4  C008  F002         	movff	__div_to_l_@quot+1,?__div_to_l_+1
  7277  0028D8  C009  F003         	movff	__div_to_l_@quot+2,?__div_to_l_+2
  7278  0028DC  C00A  F004         	movff	__div_to_l_@quot+3,?__div_to_l_+3
  7279  0028E0  0012               	return		;funcret
  7280  0028E2                     __end_of__div_to_l_:
  7281                           	callstack 0
  7282                           
  7283 ;; *************** function ___wmul *****************
  7284 ;; Defined at:
  7285 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\Umul16.c"
  7286 ;; Parameters:    Size  Location     Type
  7287 ;;  multiplier      2    0[COMRAM] unsigned int 
  7288 ;;  multiplicand    2    2[COMRAM] unsigned int 
  7289 ;; Auto vars:     Size  Location     Type
  7290 ;;  product         2    4[COMRAM] unsigned int 
  7291 ;; Return value:  Size  Location     Type
  7292 ;;                  2    0[COMRAM] unsigned int 
  7293 ;; Registers used:
  7294 ;;		wreg, status,2, status,0, prodl, prodh
  7295 ;; Tracked objects:
  7296 ;;		On entry : 0/0
  7297 ;;		On exit  : 0/0
  7298 ;;		Unchanged: 0/0
  7299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7300 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7301 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7302 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7303 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7304 ;;Total ram usage:        6 bytes
  7305 ;; Hardware stack levels used: 1
  7306 ;; This function calls:
  7307 ;;		Nothing
  7308 ;; This function is called by:
  7309 ;;		_sprintf
  7310 ;; This function uses a non-reentrant model
  7311 ;;
  7312                           
  7313                           	psect	text31
  7314  003400                     __ptext31:
  7315                           	callstack 0
  7316  003400                     ___wmul:
  7317                           	callstack 23
  7318                           
  7319                           ;incstack = 0
  7320  003400  5001               	movf	___wmul@multiplier^0,w,c
  7321  003402  0203               	mulwf	___wmul@multiplicand^0,c
  7322  003404  CFF3 F005          	movff	prodl,___wmul@product
  7323  003408  CFF4 F006          	movff	prodh,___wmul@product+1
  7324  00340C  5001               	movf	___wmul@multiplier^0,w,c
  7325  00340E  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  7326  003410  50F3               	movf	243,w,c
  7327  003412  2606               	addwf	(___wmul@product+1)^0,f,c
  7328  003414  5002               	movf	(___wmul@multiplier+1)^0,w,c
  7329  003416  0203               	mulwf	___wmul@multiplicand^0,c
  7330  003418  50F3               	movf	243,w,c
  7331  00341A  2606               	addwf	(___wmul@product+1)^0,f,c
  7332  00341C  C005  F001         	movff	___wmul@product,?___wmul
  7333  003420  C006  F002         	movff	___wmul@product+1,?___wmul+1
  7334  003424  0012               	return		;funcret
  7335  003426                     __end_of___wmul:
  7336                           	callstack 0
  7337                           
  7338 ;; *************** function ___lltoft *****************
  7339 ;; Defined at:
  7340 ;;		line 35 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\lltoft.c"
  7341 ;; Parameters:    Size  Location     Type
  7342 ;;  c               4    8[COMRAM] unsigned long 
  7343 ;; Auto vars:     Size  Location     Type
  7344 ;;  exp             1   16[COMRAM] unsigned char 
  7345 ;; Return value:  Size  Location     Type
  7346 ;;                  3    8[COMRAM] float 
  7347 ;; Registers used:
  7348 ;;		wreg, status,2, status,0, cstack
  7349 ;; Tracked objects:
  7350 ;;		On entry : 0/0
  7351 ;;		On exit  : 0/0
  7352 ;;		Unchanged: 0/0
  7353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7354 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7355 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7356 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7357 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7358 ;;Total ram usage:        9 bytes
  7359 ;; Hardware stack levels used: 1
  7360 ;; Hardware stack levels required when called: 1
  7361 ;; This function calls:
  7362 ;;		i2___ftpack
  7363 ;; This function is called by:
  7364 ;;		_sprintf
  7365 ;; This function uses a non-reentrant model
  7366 ;;
  7367                           
  7368                           	psect	text32
  7369  00320A                     __ptext32:
  7370                           	callstack 0
  7371  00320A                     ___lltoft:
  7372                           	callstack 22
  7373                           
  7374                           ;incstack = 0
  7375  00320A  0E8E               	movlw	142
  7376  00320C  6E11               	movwf	___lltoft@exp^0,c
  7377  00320E  D006               	goto	i2l3311
  7378  003210                     i2l3309:
  7379  003210  90D8               	bcf	status,0,c
  7380  003212  320C               	rrcf	(___lltoft@c+3)^0,f,c
  7381  003214  320B               	rrcf	(___lltoft@c+2)^0,f,c
  7382  003216  320A               	rrcf	(___lltoft@c+1)^0,f,c
  7383  003218  3209               	rrcf	___lltoft@c^0,f,c
  7384  00321A  2A11               	incf	___lltoft@exp^0,f,c
  7385  00321C                     i2l3311:
  7386  00321C  0E00               	movlw	0
  7387  00321E  1409               	andwf	___lltoft@c^0,w,c
  7388  003220  6E0D               	movwf	??___lltoft^0,c
  7389  003222  0E00               	movlw	0
  7390  003224  140A               	andwf	(___lltoft@c+1)^0,w,c
  7391  003226  6E0E               	movwf	(??___lltoft+1)^0,c
  7392  003228  0E00               	movlw	0
  7393  00322A  140B               	andwf	(___lltoft@c+2)^0,w,c
  7394  00322C  6E0F               	movwf	(??___lltoft+2)^0,c
  7395  00322E  0EFF               	movlw	255
  7396  003230  140C               	andwf	(___lltoft@c+3)^0,w,c
  7397  003232  6E10               	movwf	(??___lltoft+3)^0,c
  7398  003234  500D               	movf	??___lltoft^0,w,c
  7399  003236  100E               	iorwf	(??___lltoft+1)^0,w,c
  7400  003238  100F               	iorwf	(??___lltoft+2)^0,w,c
  7401  00323A  1010               	iorwf	(??___lltoft+3)^0,w,c
  7402  00323C  A4D8               	btfss	status,2,c
  7403  00323E  D7E8               	goto	i2l3309
  7404  003240  C009  F001         	movff	___lltoft@c,i2___ftpack@arg
  7405  003244  C00A  F002         	movff	___lltoft@c+1,i2___ftpack@arg+1
  7406  003248  C00B  F003         	movff	___lltoft@c+2,i2___ftpack@arg+2
  7407  00324C  C011  F004         	movff	___lltoft@exp,i2___ftpack@exp
  7408  003250  0E00               	movlw	0
  7409  003252  6E05               	movwf	i2___ftpack@sign^0,c
  7410  003254  EC8B  F016         	call	i2___ftpack	;wreg free
  7411  003258  C001  F009         	movff	?i2___ftpack,?___lltoft
  7412  00325C  C002  F00A         	movff	?i2___ftpack+1,?___lltoft+1
  7413  003260  C003  F00B         	movff	?i2___ftpack+2,?___lltoft+2
  7414  003264  0012               	return		;funcret
  7415  003266                     __end_of___lltoft:
  7416                           	callstack 0
  7417                           
  7418 ;; *************** function ___llmod *****************
  7419 ;; Defined at:
  7420 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\llmod.c"
  7421 ;; Parameters:    Size  Location     Type
  7422 ;;  dividend        4    0[COMRAM] unsigned long 
  7423 ;;  divisor         4    4[COMRAM] unsigned long 
  7424 ;; Auto vars:     Size  Location     Type
  7425 ;;  counter         1    8[COMRAM] unsigned char 
  7426 ;; Return value:  Size  Location     Type
  7427 ;;                  4    0[COMRAM] unsigned long 
  7428 ;; Registers used:
  7429 ;;		wreg, status,2, status,0
  7430 ;; Tracked objects:
  7431 ;;		On entry : 3F/0
  7432 ;;		On exit  : 3F/0
  7433 ;;		Unchanged: 3F/0
  7434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7435 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7436 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7437 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7438 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7439 ;;Total ram usage:        9 bytes
  7440 ;; Hardware stack levels used: 1
  7441 ;; This function calls:
  7442 ;;		Nothing
  7443 ;; This function is called by:
  7444 ;;		_sprintf
  7445 ;; This function uses a non-reentrant model
  7446 ;;
  7447                           
  7448                           	psect	text33
  7449  0031A4                     __ptext33:
  7450                           	callstack 0
  7451  0031A4                     ___llmod:
  7452                           	callstack 23
  7453                           
  7454                           ; BSR set to: 0
  7455                           
  7456                           ;incstack = 0
  7457  0031A4  5005               	movf	___llmod@divisor^0,w,c
  7458  0031A6  1006               	iorwf	(___llmod@divisor+1)^0,w,c
  7459  0031A8  1007               	iorwf	(___llmod@divisor+2)^0,w,c
  7460  0031AA  1008               	iorwf	(___llmod@divisor+3)^0,w,c
  7461  0031AC  B4D8               	btfsc	status,2,c
  7462  0031AE  D024               	goto	i2l731
  7463                           
  7464                           ; BSR set to: 0
  7465  0031B0  0E01               	movlw	1
  7466  0031B2  6E09               	movwf	___llmod@counter^0,c
  7467  0031B4  D006               	goto	i2l3297
  7468  0031B6                     i2l3295:
  7469                           
  7470                           ; BSR set to: 0
  7471  0031B6  90D8               	bcf	status,0,c
  7472  0031B8  3605               	rlcf	___llmod@divisor^0,f,c
  7473  0031BA  3606               	rlcf	(___llmod@divisor+1)^0,f,c
  7474  0031BC  3607               	rlcf	(___llmod@divisor+2)^0,f,c
  7475  0031BE  3608               	rlcf	(___llmod@divisor+3)^0,f,c
  7476  0031C0  2A09               	incf	___llmod@counter^0,f,c
  7477  0031C2                     i2l3297:
  7478                           
  7479                           ; BSR set to: 0
  7480  0031C2  AE08               	btfss	(___llmod@divisor+3)^0,7,c
  7481  0031C4  D7F8               	goto	i2l3295
  7482  0031C6                     i2u350_40:
  7483                           
  7484                           ; BSR set to: 0
  7485  0031C6  5005               	movf	___llmod@divisor^0,w,c
  7486  0031C8  5C01               	subwf	___llmod@dividend^0,w,c
  7487  0031CA  5006               	movf	(___llmod@divisor+1)^0,w,c
  7488  0031CC  5802               	subwfb	(___llmod@dividend+1)^0,w,c
  7489  0031CE  5007               	movf	(___llmod@divisor+2)^0,w,c
  7490  0031D0  5803               	subwfb	(___llmod@dividend+2)^0,w,c
  7491  0031D2  5008               	movf	(___llmod@divisor+3)^0,w,c
  7492  0031D4  5804               	subwfb	(___llmod@dividend+3)^0,w,c
  7493  0031D6  A0D8               	btfss	status,0,c
  7494  0031D8  D008               	goto	i2l3303
  7495                           
  7496                           ; BSR set to: 0
  7497  0031DA  5005               	movf	___llmod@divisor^0,w,c
  7498  0031DC  5E01               	subwf	___llmod@dividend^0,f,c
  7499  0031DE  5006               	movf	(___llmod@divisor+1)^0,w,c
  7500  0031E0  5A02               	subwfb	(___llmod@dividend+1)^0,f,c
  7501  0031E2  5007               	movf	(___llmod@divisor+2)^0,w,c
  7502  0031E4  5A03               	subwfb	(___llmod@dividend+2)^0,f,c
  7503  0031E6  5008               	movf	(___llmod@divisor+3)^0,w,c
  7504  0031E8  5A04               	subwfb	(___llmod@dividend+3)^0,f,c
  7505  0031EA                     i2l3303:
  7506                           
  7507                           ; BSR set to: 0
  7508  0031EA  90D8               	bcf	status,0,c
  7509  0031EC  3208               	rrcf	(___llmod@divisor+3)^0,f,c
  7510  0031EE  3207               	rrcf	(___llmod@divisor+2)^0,f,c
  7511  0031F0  3206               	rrcf	(___llmod@divisor+1)^0,f,c
  7512  0031F2  3205               	rrcf	___llmod@divisor^0,f,c
  7513                           
  7514                           ; BSR set to: 0
  7515  0031F4  2E09               	decfsz	___llmod@counter^0,f,c
  7516  0031F6  D7E7               	goto	i2u350_40
  7517  0031F8                     i2l731:
  7518                           
  7519                           ; BSR set to: 0
  7520  0031F8  C001  F001         	movff	___llmod@dividend,?___llmod
  7521  0031FC  C002  F002         	movff	___llmod@dividend+1,?___llmod+1
  7522  003200  C003  F003         	movff	___llmod@dividend+2,?___llmod+2
  7523  003204  C004  F004         	movff	___llmod@dividend+3,?___llmod+3
  7524                           
  7525                           ; BSR set to: 0
  7526  003208  0012               	return		;funcret
  7527  00320A                     __end_of___llmod:
  7528                           	callstack 0
  7529                           
  7530 ;; *************** function ___lldiv *****************
  7531 ;; Defined at:
  7532 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\__lldiv.c"
  7533 ;; Parameters:    Size  Location     Type
  7534 ;;  dividend        4    0[COMRAM] unsigned long 
  7535 ;;  divisor         4    4[COMRAM] unsigned long 
  7536 ;; Auto vars:     Size  Location     Type
  7537 ;;  quotient        4    8[COMRAM] unsigned long 
  7538 ;;  counter         1   12[COMRAM] unsigned char 
  7539 ;; Return value:  Size  Location     Type
  7540 ;;                  4    0[COMRAM] unsigned long 
  7541 ;; Registers used:
  7542 ;;		wreg, status,2, status,0
  7543 ;; Tracked objects:
  7544 ;;		On entry : 3F/0
  7545 ;;		On exit  : 3F/0
  7546 ;;		Unchanged: 3F/0
  7547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7548 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7549 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7550 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7551 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7552 ;;Total ram usage:       13 bytes
  7553 ;; Hardware stack levels used: 1
  7554 ;; This function calls:
  7555 ;;		Nothing
  7556 ;; This function is called by:
  7557 ;;		_sprintf
  7558 ;; This function uses a non-reentrant model
  7559 ;;
  7560                           
  7561                           	psect	text34
  7562  00303E                     __ptext34:
  7563                           	callstack 0
  7564  00303E                     ___lldiv:
  7565                           	callstack 23
  7566                           
  7567                           ; BSR set to: 0
  7568                           
  7569                           ; BSR set to: 0
  7570                           ;incstack = 0
  7571  00303E  0E00               	movlw	0
  7572  003040  6E09               	movwf	___lldiv@quotient^0,c
  7573  003042  0E00               	movlw	0
  7574  003044  6E0A               	movwf	(___lldiv@quotient+1)^0,c
  7575  003046  0E00               	movlw	0
  7576  003048  6E0B               	movwf	(___lldiv@quotient+2)^0,c
  7577  00304A  0E00               	movlw	0
  7578  00304C  6E0C               	movwf	(___lldiv@quotient+3)^0,c
  7579                           
  7580                           ; BSR set to: 0
  7581  00304E  5005               	movf	___lldiv@divisor^0,w,c
  7582  003050  1006               	iorwf	(___lldiv@divisor+1)^0,w,c
  7583  003052  1007               	iorwf	(___lldiv@divisor+2)^0,w,c
  7584  003054  1008               	iorwf	(___lldiv@divisor+3)^0,w,c
  7585  003056  B4D8               	btfsc	status,2,c
  7586  003058  D02A               	goto	i2l316
  7587                           
  7588                           ; BSR set to: 0
  7589  00305A  0E01               	movlw	1
  7590  00305C  6E0D               	movwf	___lldiv@counter^0,c
  7591  00305E  D006               	goto	i2l3255
  7592  003060                     i2l3253:
  7593                           
  7594                           ; BSR set to: 0
  7595  003060  90D8               	bcf	status,0,c
  7596  003062  3605               	rlcf	___lldiv@divisor^0,f,c
  7597  003064  3606               	rlcf	(___lldiv@divisor+1)^0,f,c
  7598  003066  3607               	rlcf	(___lldiv@divisor+2)^0,f,c
  7599  003068  3608               	rlcf	(___lldiv@divisor+3)^0,f,c
  7600  00306A  2A0D               	incf	___lldiv@counter^0,f,c
  7601  00306C                     i2l3255:
  7602                           
  7603                           ; BSR set to: 0
  7604  00306C  AE08               	btfss	(___lldiv@divisor+3)^0,7,c
  7605  00306E  D7F8               	goto	i2l3253
  7606  003070                     i2u343_40:
  7607                           
  7608                           ; BSR set to: 0
  7609  003070  90D8               	bcf	status,0,c
  7610  003072  3609               	rlcf	___lldiv@quotient^0,f,c
  7611  003074  360A               	rlcf	(___lldiv@quotient+1)^0,f,c
  7612  003076  360B               	rlcf	(___lldiv@quotient+2)^0,f,c
  7613  003078  360C               	rlcf	(___lldiv@quotient+3)^0,f,c
  7614                           
  7615                           ; BSR set to: 0
  7616  00307A  5005               	movf	___lldiv@divisor^0,w,c
  7617  00307C  5C01               	subwf	___lldiv@dividend^0,w,c
  7618  00307E  5006               	movf	(___lldiv@divisor+1)^0,w,c
  7619  003080  5802               	subwfb	(___lldiv@dividend+1)^0,w,c
  7620  003082  5007               	movf	(___lldiv@divisor+2)^0,w,c
  7621  003084  5803               	subwfb	(___lldiv@dividend+2)^0,w,c
  7622  003086  5008               	movf	(___lldiv@divisor+3)^0,w,c
  7623  003088  5804               	subwfb	(___lldiv@dividend+3)^0,w,c
  7624  00308A  A0D8               	btfss	status,0,c
  7625  00308C  D009               	goto	i2l3265
  7626                           
  7627                           ; BSR set to: 0
  7628  00308E  5005               	movf	___lldiv@divisor^0,w,c
  7629  003090  5E01               	subwf	___lldiv@dividend^0,f,c
  7630  003092  5006               	movf	(___lldiv@divisor+1)^0,w,c
  7631  003094  5A02               	subwfb	(___lldiv@dividend+1)^0,f,c
  7632  003096  5007               	movf	(___lldiv@divisor+2)^0,w,c
  7633  003098  5A03               	subwfb	(___lldiv@dividend+2)^0,f,c
  7634  00309A  5008               	movf	(___lldiv@divisor+3)^0,w,c
  7635  00309C  5A04               	subwfb	(___lldiv@dividend+3)^0,f,c
  7636                           
  7637                           ; BSR set to: 0
  7638  00309E  8009               	bsf	___lldiv@quotient^0,0,c
  7639  0030A0                     i2l3265:
  7640                           
  7641                           ; BSR set to: 0
  7642  0030A0  90D8               	bcf	status,0,c
  7643  0030A2  3208               	rrcf	(___lldiv@divisor+3)^0,f,c
  7644  0030A4  3207               	rrcf	(___lldiv@divisor+2)^0,f,c
  7645  0030A6  3206               	rrcf	(___lldiv@divisor+1)^0,f,c
  7646  0030A8  3205               	rrcf	___lldiv@divisor^0,f,c
  7647                           
  7648                           ; BSR set to: 0
  7649  0030AA  2E0D               	decfsz	___lldiv@counter^0,f,c
  7650  0030AC  D7E1               	goto	i2u343_40
  7651  0030AE                     i2l316:
  7652                           
  7653                           ; BSR set to: 0
  7654  0030AE  C009  F001         	movff	___lldiv@quotient,?___lldiv
  7655  0030B2  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
  7656  0030B6  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
  7657  0030BA  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
  7658                           
  7659                           ; BSR set to: 0
  7660  0030BE  0012               	return		;funcret
  7661  0030C0                     __end_of___lldiv:
  7662                           	callstack 0
  7663                           
  7664 ;; *************** function ___ftneg *****************
  7665 ;; Defined at:
  7666 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\ftneg.c"
  7667 ;; Parameters:    Size  Location     Type
  7668 ;;  f1              3    0[COMRAM] float 
  7669 ;; Auto vars:     Size  Location     Type
  7670 ;;		None
  7671 ;; Return value:  Size  Location     Type
  7672 ;;                  3    0[COMRAM] float 
  7673 ;; Registers used:
  7674 ;;		wreg, status,2, status,0
  7675 ;; Tracked objects:
  7676 ;;		On entry : 3F/0
  7677 ;;		On exit  : 3F/0
  7678 ;;		Unchanged: 3F/0
  7679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7680 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7681 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7682 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7683 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7684 ;;Total ram usage:        3 bytes
  7685 ;; Hardware stack levels used: 1
  7686 ;; This function calls:
  7687 ;;		Nothing
  7688 ;; This function is called by:
  7689 ;;		_sprintf
  7690 ;; This function uses a non-reentrant model
  7691 ;;
  7692                           
  7693                           	psect	text35
  7694  003426                     __ptext35:
  7695                           	callstack 0
  7696  003426                     ___ftneg:
  7697                           	callstack 23
  7698                           
  7699                           ; BSR set to: 0
  7700                           
  7701                           ; BSR set to: 0
  7702                           ;incstack = 0
  7703  003426  5001               	movf	___ftneg@f1^0,w,c
  7704  003428  1002               	iorwf	(___ftneg@f1+1)^0,w,c
  7705  00342A  1003               	iorwf	(___ftneg@f1+2)^0,w,c
  7706  00342C  B4D8               	btfsc	status,2,c
  7707  00342E  D006               	goto	i2l686
  7708                           
  7709                           ; BSR set to: 0
  7710  003430  0E00               	movlw	0
  7711  003432  1A01               	xorwf	___ftneg@f1^0,f,c
  7712  003434  0E00               	movlw	0
  7713  003436  1A02               	xorwf	(___ftneg@f1+1)^0,f,c
  7714  003438  0E80               	movlw	128
  7715  00343A  1A03               	xorwf	(___ftneg@f1+2)^0,f,c
  7716  00343C                     i2l686:
  7717                           
  7718                           ; BSR set to: 0
  7719  00343C  C001  F001         	movff	___ftneg@f1,?___ftneg
  7720  003440  C002  F002         	movff	___ftneg@f1+1,?___ftneg+1
  7721  003444  C003  F003         	movff	___ftneg@f1+2,?___ftneg+2
  7722                           
  7723                           ; BSR set to: 0
  7724  003448  0012               	return		;funcret
  7725  00344A                     __end_of___ftneg:
  7726                           	callstack 0
  7727                           
  7728 ;; *************** function ___ftge *****************
  7729 ;; Defined at:
  7730 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\ftge.c"
  7731 ;; Parameters:    Size  Location     Type
  7732 ;;  ff1             3    0[COMRAM] float 
  7733 ;;  ff2             3    3[COMRAM] float 
  7734 ;; Auto vars:     Size  Location     Type
  7735 ;;		None
  7736 ;; Return value:  Size  Location     Type
  7737 ;;		None               void
  7738 ;; Registers used:
  7739 ;;		wreg, status,2, status,0
  7740 ;; Tracked objects:
  7741 ;;		On entry : 0/0
  7742 ;;		On exit  : 0/0
  7743 ;;		Unchanged: 0/0
  7744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7745 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7746 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7747 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7748 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7749 ;;Total ram usage:        9 bytes
  7750 ;; Hardware stack levels used: 1
  7751 ;; This function calls:
  7752 ;;		Nothing
  7753 ;; This function is called by:
  7754 ;;		_sprintf
  7755 ;; This function uses a non-reentrant model
  7756 ;;
  7757                           
  7758                           	psect	text36
  7759  0030C0                     __ptext36:
  7760                           	callstack 0
  7761  0030C0                     ___ftge:
  7762                           	callstack 23
  7763                           
  7764                           ; BSR set to: 0
  7765                           ;incstack = 0
  7766  0030C0  AE03               	btfss	(___ftge@ff1+2)^0,7,c
  7767  0030C2  D00F               	goto	i2l3273
  7768  0030C4  0E00               	movlw	0
  7769  0030C6  6E07               	movwf	??___ftge^0,c
  7770  0030C8  0E00               	movlw	0
  7771  0030CA  6E08               	movwf	(??___ftge+1)^0,c
  7772  0030CC  0E80               	movlw	128
  7773  0030CE  6E09               	movwf	(??___ftge+2)^0,c
  7774  0030D0  5001               	movf	___ftge@ff1^0,w,c
  7775  0030D2  5C07               	subwf	??___ftge^0,w,c
  7776  0030D4  6E01               	movwf	___ftge@ff1^0,c
  7777  0030D6  5002               	movf	(___ftge@ff1+1)^0,w,c
  7778  0030D8  5808               	subwfb	(??___ftge+1)^0,w,c
  7779  0030DA  6E02               	movwf	(___ftge@ff1+1)^0,c
  7780  0030DC  5003               	movf	(___ftge@ff1+2)^0,w,c
  7781  0030DE  5809               	subwfb	(??___ftge+2)^0,w,c
  7782  0030E0  6E03               	movwf	(___ftge@ff1+2)^0,c
  7783  0030E2                     i2l3273:
  7784  0030E2  AE06               	btfss	(___ftge@ff2+2)^0,7,c
  7785  0030E4  D00F               	goto	i2l3277
  7786  0030E6  0E00               	movlw	0
  7787  0030E8  6E07               	movwf	??___ftge^0,c
  7788  0030EA  0E00               	movlw	0
  7789  0030EC  6E08               	movwf	(??___ftge+1)^0,c
  7790  0030EE  0E80               	movlw	128
  7791  0030F0  6E09               	movwf	(??___ftge+2)^0,c
  7792  0030F2  5004               	movf	___ftge@ff2^0,w,c
  7793  0030F4  5C07               	subwf	??___ftge^0,w,c
  7794  0030F6  6E04               	movwf	___ftge@ff2^0,c
  7795  0030F8  5005               	movf	(___ftge@ff2+1)^0,w,c
  7796  0030FA  5808               	subwfb	(??___ftge+1)^0,w,c
  7797  0030FC  6E05               	movwf	(___ftge@ff2+1)^0,c
  7798  0030FE  5006               	movf	(___ftge@ff2+2)^0,w,c
  7799  003100  5809               	subwfb	(??___ftge+2)^0,w,c
  7800  003102  6E06               	movwf	(___ftge@ff2+2)^0,c
  7801  003104                     i2l3277:
  7802  003104  0E00               	movlw	0
  7803  003106  1A01               	xorwf	___ftge@ff1^0,f,c
  7804  003108  0E00               	movlw	0
  7805  00310A  1A02               	xorwf	(___ftge@ff1+1)^0,f,c
  7806  00310C  0E80               	movlw	128
  7807  00310E  1A03               	xorwf	(___ftge@ff1+2)^0,f,c
  7808  003110  0E00               	movlw	0
  7809  003112  1A04               	xorwf	___ftge@ff2^0,f,c
  7810  003114  0E00               	movlw	0
  7811  003116  1A05               	xorwf	(___ftge@ff2+1)^0,f,c
  7812  003118  0E80               	movlw	128
  7813  00311A  1A06               	xorwf	(___ftge@ff2+2)^0,f,c
  7814  00311C  5004               	movf	___ftge@ff2^0,w,c
  7815  00311E  5C01               	subwf	___ftge@ff1^0,w,c
  7816  003120  5005               	movf	(___ftge@ff2+1)^0,w,c
  7817  003122  5802               	subwfb	(___ftge@ff1+1)^0,w,c
  7818  003124  5006               	movf	(___ftge@ff2+2)^0,w,c
  7819  003126  5803               	subwfb	(___ftge@ff1+2)^0,w,c
  7820  003128  B0D8               	btfsc	status,0,c
  7821  00312A  D002               	goto	i2l3283
  7822  00312C  90D8               	bcf	status,0,c
  7823  00312E  0012               	return	
  7824  003130                     i2l3283:
  7825  003130  80D8               	bsf	status,0,c
  7826  003132  0012               	return		;funcret
  7827  003134                     __end_of___ftge:
  7828                           	callstack 0
  7829                           
  7830 ;; *************** function ___awtoft *****************
  7831 ;; Defined at:
  7832 ;;		line 32 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\awtoft.c"
  7833 ;; Parameters:    Size  Location     Type
  7834 ;;  c               2    8[COMRAM] int 
  7835 ;; Auto vars:     Size  Location     Type
  7836 ;;  sign            1   11[COMRAM] unsigned char 
  7837 ;; Return value:  Size  Location     Type
  7838 ;;                  3    8[COMRAM] float 
  7839 ;; Registers used:
  7840 ;;		wreg, status,2, status,0, cstack
  7841 ;; Tracked objects:
  7842 ;;		On entry : 0/0
  7843 ;;		On exit  : 0/0
  7844 ;;		Unchanged: 0/0
  7845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7846 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7847 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7848 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7849 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7850 ;;Total ram usage:        4 bytes
  7851 ;; Hardware stack levels used: 1
  7852 ;; Hardware stack levels required when called: 1
  7853 ;; This function calls:
  7854 ;;		i2___ftpack
  7855 ;; This function is called by:
  7856 ;;		_TMR1_ISR
  7857 ;; This function uses a non-reentrant model
  7858 ;;
  7859                           
  7860                           	psect	text37
  7861  00339E                     __ptext37:
  7862                           	callstack 0
  7863  00339E                     ___awtoft:
  7864                           	callstack 23
  7865                           
  7866                           ;incstack = 0
  7867  00339E  0E00               	movlw	0
  7868  0033A0  6E0C               	movwf	___awtoft@sign^0,c
  7869  0033A2  AE0A               	btfss	(___awtoft@c+1)^0,7,c
  7870  0033A4  D006               	goto	i2l3695
  7871  0033A6  6C09               	negf	___awtoft@c^0,c
  7872  0033A8  1E0A               	comf	(___awtoft@c+1)^0,f,c
  7873  0033AA  B0D8               	btfsc	status,0,c
  7874  0033AC  2A0A               	incf	(___awtoft@c+1)^0,f,c
  7875  0033AE  0E01               	movlw	1
  7876  0033B0  6E0C               	movwf	___awtoft@sign^0,c
  7877  0033B2                     i2l3695:
  7878  0033B2  C009  F001         	movff	___awtoft@c,i2___ftpack@arg
  7879  0033B6  C00A  F002         	movff	___awtoft@c+1,i2___ftpack@arg+1
  7880  0033BA  6A03               	clrf	(i2___ftpack@arg+2)^0,c
  7881  0033BC  0E8E               	movlw	142
  7882  0033BE  6E04               	movwf	i2___ftpack@exp^0,c
  7883  0033C0  C00C  F005         	movff	___awtoft@sign,i2___ftpack@sign
  7884  0033C4  EC8B  F016         	call	i2___ftpack	;wreg free
  7885  0033C8  C001  F009         	movff	?i2___ftpack,?___awtoft
  7886  0033CC  C002  F00A         	movff	?i2___ftpack+1,?___awtoft+1
  7887  0033D0  C003  F00B         	movff	?i2___ftpack+2,?___awtoft+2
  7888  0033D4  0012               	return		;funcret
  7889  0033D6                     __end_of___awtoft:
  7890                           	callstack 0
  7891                           
  7892 ;; *************** function i2___ftpack *****************
  7893 ;; Defined at:
  7894 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\float.c"
  7895 ;; Parameters:    Size  Location     Type
  7896 ;;  arg             3    0[COMRAM] unsigned um
  7897 ;;  exp             1    3[COMRAM] unsigned char 
  7898 ;;  sign            1    4[COMRAM] unsigned char 
  7899 ;; Auto vars:     Size  Location     Type
  7900 ;;		None
  7901 ;; Return value:  Size  Location     Type
  7902 ;;                  3    0[COMRAM] float 
  7903 ;; Registers used:
  7904 ;;		wreg, status,2, status,0
  7905 ;; Tracked objects:
  7906 ;;		On entry : 0/0
  7907 ;;		On exit  : 0/0
  7908 ;;		Unchanged: 0/0
  7909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7910 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7911 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7912 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7913 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7914 ;;Total ram usage:        8 bytes
  7915 ;; Hardware stack levels used: 1
  7916 ;; This function calls:
  7917 ;;		Nothing
  7918 ;; This function is called by:
  7919 ;;		___awtoft
  7920 ;;		___lltoft
  7921 ;;		i2___ftadd
  7922 ;;		i2___ftdiv
  7923 ;;		i2___ftmul
  7924 ;; This function uses a non-reentrant model
  7925 ;;
  7926                           
  7927                           	psect	text38
  7928  002D16                     __ptext38:
  7929                           	callstack 0
  7930  002D16                     i2___ftpack:
  7931                           	callstack 21
  7932                           
  7933                           ;incstack = 0
  7934  002D16  5004               	movf	i2___ftpack@exp^0,w,c
  7935  002D18  B4D8               	btfsc	status,2,c
  7936  002D1A  D005               	goto	i2u246_40
  7937  002D1C  5001               	movf	i2___ftpack@arg^0,w,c
  7938  002D1E  1002               	iorwf	(i2___ftpack@arg+1)^0,w,c
  7939  002D20  1003               	iorwf	(i2___ftpack@arg+2)^0,w,c
  7940  002D22  A4D8               	btfss	status,2,c
  7941  002D24  D00C               	goto	i2l2569
  7942  002D26                     i2u246_40:
  7943  002D26  0E00               	movlw	0
  7944  002D28  6E01               	movwf	?i2___ftpack^0,c
  7945  002D2A  0E00               	movlw	0
  7946  002D2C  6E02               	movwf	(?i2___ftpack+1)^0,c
  7947  002D2E  0E00               	movlw	0
  7948  002D30  6E03               	movwf	(?i2___ftpack+2)^0,c
  7949  002D32  0012               	return	
  7950  002D34                     i2l2567:
  7951  002D34  2A04               	incf	i2___ftpack@exp^0,f,c
  7952  002D36  90D8               	bcf	status,0,c
  7953  002D38  3203               	rrcf	(i2___ftpack@arg+2)^0,f,c
  7954  002D3A  3202               	rrcf	(i2___ftpack@arg+1)^0,f,c
  7955  002D3C  3201               	rrcf	i2___ftpack@arg^0,f,c
  7956  002D3E                     i2l2569:
  7957  002D3E  0E00               	movlw	0
  7958  002D40  1401               	andwf	i2___ftpack@arg^0,w,c
  7959  002D42  6E06               	movwf	??i2___ftpack^0,c
  7960  002D44  0E00               	movlw	0
  7961  002D46  1402               	andwf	(i2___ftpack@arg+1)^0,w,c
  7962  002D48  6E07               	movwf	(??i2___ftpack+1)^0,c
  7963  002D4A  0EFE               	movlw	254
  7964  002D4C  1403               	andwf	(i2___ftpack@arg+2)^0,w,c
  7965  002D4E  6E08               	movwf	(??i2___ftpack+2)^0,c
  7966  002D50  5006               	movf	??i2___ftpack^0,w,c
  7967  002D52  1007               	iorwf	(??i2___ftpack+1)^0,w,c
  7968  002D54  1008               	iorwf	(??i2___ftpack+2)^0,w,c
  7969  002D56  B4D8               	btfsc	status,2,c
  7970  002D58  D00C               	goto	i2l2575
  7971  002D5A  D7EC               	goto	i2l2567
  7972  002D5C                     i2l2571:
  7973  002D5C  2A04               	incf	i2___ftpack@exp^0,f,c
  7974  002D5E  0E01               	movlw	1
  7975  002D60  2601               	addwf	i2___ftpack@arg^0,f,c
  7976  002D62  0E00               	movlw	0
  7977  002D64  2202               	addwfc	(i2___ftpack@arg+1)^0,f,c
  7978  002D66  0E00               	movlw	0
  7979  002D68  2203               	addwfc	(i2___ftpack@arg+2)^0,f,c
  7980  002D6A  90D8               	bcf	status,0,c
  7981  002D6C  3203               	rrcf	(i2___ftpack@arg+2)^0,f,c
  7982  002D6E  3202               	rrcf	(i2___ftpack@arg+1)^0,f,c
  7983  002D70  3201               	rrcf	i2___ftpack@arg^0,f,c
  7984  002D72                     i2l2575:
  7985  002D72  0E00               	movlw	0
  7986  002D74  1401               	andwf	i2___ftpack@arg^0,w,c
  7987  002D76  6E06               	movwf	??i2___ftpack^0,c
  7988  002D78  0E00               	movlw	0
  7989  002D7A  1402               	andwf	(i2___ftpack@arg+1)^0,w,c
  7990  002D7C  6E07               	movwf	(??i2___ftpack+1)^0,c
  7991  002D7E  0EFF               	movlw	255
  7992  002D80  1403               	andwf	(i2___ftpack@arg+2)^0,w,c
  7993  002D82  6E08               	movwf	(??i2___ftpack+2)^0,c
  7994  002D84  5006               	movf	??i2___ftpack^0,w,c
  7995  002D86  1007               	iorwf	(??i2___ftpack+1)^0,w,c
  7996  002D88  1008               	iorwf	(??i2___ftpack+2)^0,w,c
  7997  002D8A  B4D8               	btfsc	status,2,c
  7998  002D8C  D006               	goto	i2l2579
  7999  002D8E  D7E6               	goto	i2l2571
  8000  002D90                     i2l2577:
  8001  002D90  0604               	decf	i2___ftpack@exp^0,f,c
  8002  002D92  90D8               	bcf	status,0,c
  8003  002D94  3601               	rlcf	i2___ftpack@arg^0,f,c
  8004  002D96  3602               	rlcf	(i2___ftpack@arg+1)^0,f,c
  8005  002D98  3603               	rlcf	(i2___ftpack@arg+2)^0,f,c
  8006  002D9A                     i2l2579:
  8007  002D9A  BE02               	btfsc	(i2___ftpack@arg+1)^0,7,c
  8008  002D9C  D003               	goto	i2u250_40
  8009  002D9E  0E02               	movlw	2
  8010  002DA0  6004               	cpfslt	i2___ftpack@exp^0,c
  8011  002DA2  D7F6               	goto	i2l2577
  8012  002DA4                     i2u250_40:
  8013  002DA4  A004               	btfss	i2___ftpack@exp^0,0,c
  8014  002DA6  9E02               	bcf	(i2___ftpack@arg+1)^0,7,c
  8015  002DA8  90D8               	bcf	status,0,c
  8016  002DAA  3204               	rrcf	i2___ftpack@exp^0,f,c
  8017  002DAC  5004               	movf	i2___ftpack@exp^0,w,c
  8018  002DAE  1203               	iorwf	(i2___ftpack@arg+2)^0,f,c
  8019  002DB0  5005               	movf	i2___ftpack@sign^0,w,c
  8020  002DB2  A4D8               	btfss	status,2,c
  8021  002DB4  8E03               	bsf	(i2___ftpack@arg+2)^0,7,c
  8022  002DB6  C001  F001         	movff	i2___ftpack@arg,?i2___ftpack
  8023  002DBA  C002  F002         	movff	i2___ftpack@arg+1,?i2___ftpack+1
  8024  002DBE  C003  F003         	movff	i2___ftpack@arg+2,?i2___ftpack+2
  8025  002DC2  0012               	return		;funcret
  8026  002DC4                     __end_ofi2___ftpack:
  8027                           	callstack 0
  8028                           
  8029 ;; *************** function _DataLCD *****************
  8030 ;; Defined at:
  8031 ;;		line 260 in file "PIC_ROBOT_2R.c"
  8032 ;; Parameters:    Size  Location     Type
  8033 ;;		None
  8034 ;; Auto vars:     Size  Location     Type
  8035 ;;		None
  8036 ;; Return value:  Size  Location     Type
  8037 ;;                  1    wreg      void 
  8038 ;; Registers used:
  8039 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8040 ;; Tracked objects:
  8041 ;;		On entry : 3F/0
  8042 ;;		On exit  : 3F/0
  8043 ;;		Unchanged: 0/0
  8044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8045 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8046 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8047 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8048 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8049 ;;Total ram usage:        2 bytes
  8050 ;; Hardware stack levels used: 1
  8051 ;; Hardware stack levels required when called: 2
  8052 ;; This function calls:
  8053 ;;		_WriteLCD
  8054 ;;		_strlen
  8055 ;; This function is called by:
  8056 ;;		_TMR1_ISR
  8057 ;; This function uses a non-reentrant model
  8058 ;;
  8059                           
  8060                           	psect	text39
  8061  003266                     __ptext39:
  8062                           	callstack 0
  8063  003266                     _DataLCD:
  8064                           	callstack 22
  8065                           
  8066                           ; BSR set to: 0
  8067                           ;PIC_ROBOT_2R.c: 261: for (i = 0; i <= strlen(text)-1; i++) {
  8068                           
  8069                           ;incstack = 0
  8070  003266  0E00               	movlw	0
  8071  003268  6FC4               	movwf	(_i+1)& (0+255),b
  8072  00326A  0E00               	movlw	0
  8073  00326C  6FC3               	movwf	_i& (0+255),b
  8074  00326E  D00A               	goto	i2l3685
  8075  003270                     i2l3681:
  8076                           
  8077                           ; BSR set to: 0
  8078                           ;PIC_ROBOT_2R.c: 262: WriteLCD(text[i]);
  8079  003270  51C3               	movf	_i& (0+255),w,b
  8080  003272  0FCD               	addlw	low _text
  8081  003274  6ED9               	movwf	fsr2l,c
  8082  003276  6ADA               	clrf	fsr2h,c
  8083  003278  50DF               	movf	indf2,w,c
  8084  00327A  EC5E  F01A         	call	_WriteLCD
  8085  00327E  0100               	movlb	0	; () banked
  8086  003280  4BC3               	infsnz	_i& (0+255),f,b
  8087  003282  2BC4               	incf	(_i+1)& (0+255),f,b
  8088  003284                     i2l3685:
  8089                           
  8090                           ; BSR set to: 0
  8091  003284  0EFF               	movlw	255
  8092  003286  6E04               	movwf	??_DataLCD^0,c
  8093  003288  0EFF               	movlw	255
  8094  00328A  6E05               	movwf	(??_DataLCD+1)^0,c
  8095  00328C  0ECD               	movlw	low _text
  8096  00328E  6E01               	movwf	strlen@s^0,c
  8097  003290  EC25  F01A         	call	_strlen	;wreg free
  8098  003294  5004               	movf	??_DataLCD^0,w,c
  8099  003296  2601               	addwf	?_strlen^0,f,c
  8100  003298  5005               	movf	(??_DataLCD+1)^0,w,c
  8101  00329A  2202               	addwfc	(?_strlen+1)^0,f,c
  8102  00329C  51C3               	movf	_i& (0+255),w,b
  8103  00329E  5C01               	subwf	?_strlen^0,w,c
  8104  0032A0  51C4               	movf	(_i+1)& (0+255),w,b
  8105  0032A2  5802               	subwfb	(?_strlen+1)^0,w,c
  8106  0032A4  A0D8               	btfss	status,0,c
  8107  0032A6  0012               	return	
  8108  0032A8  D7E3               	goto	i2l3681
  8109  0032AA                     __end_of_DataLCD:
  8110                           	callstack 0
  8111                           
  8112 ;; *************** function _strlen *****************
  8113 ;; Defined at:
  8114 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\strlen.c"
  8115 ;; Parameters:    Size  Location     Type
  8116 ;;  s               1    0[COMRAM] PTR const unsigned char 
  8117 ;;		 -> text(20), 
  8118 ;; Auto vars:     Size  Location     Type
  8119 ;;  cp              1    2[COMRAM] PTR const unsigned char 
  8120 ;;		 -> text(20), 
  8121 ;; Return value:  Size  Location     Type
  8122 ;;                  2    0[COMRAM] unsigned int 
  8123 ;; Registers used:
  8124 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8125 ;; Tracked objects:
  8126 ;;		On entry : 3F/0
  8127 ;;		On exit  : 3F/0
  8128 ;;		Unchanged: 3F/0
  8129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8130 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8131 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8132 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8133 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8134 ;;Total ram usage:        3 bytes
  8135 ;; Hardware stack levels used: 1
  8136 ;; This function calls:
  8137 ;;		Nothing
  8138 ;; This function is called by:
  8139 ;;		_DataLCD
  8140 ;; This function uses a non-reentrant model
  8141 ;;
  8142                           
  8143                           	psect	text40
  8144  00344A                     __ptext40:
  8145                           	callstack 0
  8146  00344A                     _strlen:
  8147                           	callstack 23
  8148                           
  8149                           ; BSR set to: 0
  8150                           
  8151                           ; BSR set to: 0
  8152                           ;incstack = 0
  8153  00344A  C001  F003         	movff	strlen@s,strlen@cp
  8154  00344E  D001               	goto	i2l3047
  8155  003450                     i2l3045:
  8156                           
  8157                           ; BSR set to: 0
  8158  003450  2A03               	incf	strlen@cp^0,f,c
  8159  003452                     i2l3047:
  8160                           
  8161                           ; BSR set to: 0
  8162  003452  5003               	movf	strlen@cp^0,w,c
  8163  003454  6ED9               	movwf	fsr2l,c
  8164  003456  6ADA               	clrf	fsr2h,c
  8165  003458  50DF               	movf	indf2,w,c
  8166  00345A  A4D8               	btfss	status,2,c
  8167  00345C  D7F9               	goto	i2l3045
  8168                           
  8169                           ; BSR set to: 0
  8170  00345E  5001               	movf	strlen@s^0,w,c
  8171  003460  5C03               	subwf	strlen@cp^0,w,c
  8172  003462  6E01               	movwf	?_strlen^0,c
  8173  003464  6A02               	clrf	(?_strlen+1)^0,c
  8174  003466  BE01               	btfsc	?_strlen^0,7,c
  8175  003468  0602               	decf	(?_strlen+1)^0,f,c
  8176                           
  8177                           ; BSR set to: 0
  8178  00346A  0012               	return		;funcret
  8179  00346C                     __end_of_strlen:
  8180                           	callstack 0
  8181                           
  8182 ;; *************** function _WriteLCD *****************
  8183 ;; Defined at:
  8184 ;;		line 239 in file "PIC_ROBOT_2R.c"
  8185 ;; Parameters:    Size  Location     Type
  8186 ;;  word            1    wreg     unsigned char 
  8187 ;; Auto vars:     Size  Location     Type
  8188 ;;  word            1    2[COMRAM] unsigned char 
  8189 ;; Return value:  Size  Location     Type
  8190 ;;                  1    wreg      void 
  8191 ;; Registers used:
  8192 ;;		wreg, status,2, status,0, cstack
  8193 ;; Tracked objects:
  8194 ;;		On entry : 3F/0
  8195 ;;		On exit  : 0/0
  8196 ;;		Unchanged: 0/0
  8197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8198 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8199 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8200 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8201 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8202 ;;Total ram usage:        1 bytes
  8203 ;; Hardware stack levels used: 1
  8204 ;; Hardware stack levels required when called: 1
  8205 ;; This function calls:
  8206 ;;		i2_LCD
  8207 ;; This function is called by:
  8208 ;;		_DataLCD
  8209 ;; This function uses a non-reentrant model
  8210 ;;
  8211                           
  8212                           	psect	text41
  8213  0034BC                     __ptext41:
  8214                           	callstack 0
  8215  0034BC                     _WriteLCD:
  8216                           	callstack 22
  8217                           
  8218                           ; BSR set to: 0
  8219                           ;incstack = 0
  8220                           ;WriteLCD@word stored from wreg
  8221  0034BC  6E03               	movwf	WriteLCD@word^0,c
  8222                           
  8223                           ;PIC_ROBOT_2R.c: 240: LATEbits.LATE1 = 1;
  8224  0034BE  828D               	bsf	141,1,c	;volatile
  8225                           
  8226                           ;PIC_ROBOT_2R.c: 241: LCD(word >> 4);
  8227  0034C0  3803               	swapf	WriteLCD@word^0,w,c
  8228  0034C2  0B0F               	andlw	15
  8229  0034C4  EC8B  F017         	call	i2_LCD
  8230                           
  8231                           ;PIC_ROBOT_2R.c: 242: LCD(word & 0x0F);
  8232  0034C8  5003               	movf	WriteLCD@word^0,w,c
  8233  0034CA  0B0F               	andlw	15
  8234  0034CC  EC8B  F017         	call	i2_LCD
  8235  0034D0  0012               	return		;funcret
  8236  0034D2                     __end_of_WriteLCD:
  8237                           	callstack 0
  8238                           
  8239 ;; *************** function i2_LCD *****************
  8240 ;; Defined at:
  8241 ;;		line 245 in file "PIC_ROBOT_2R.c"
  8242 ;; Parameters:    Size  Location     Type
  8243 ;;  data            1    wreg     unsigned char 
  8244 ;; Auto vars:     Size  Location     Type
  8245 ;;  data            1    1[COMRAM] unsigned char 
  8246 ;; Return value:  Size  Location     Type
  8247 ;;                  1    wreg      void 
  8248 ;; Registers used:
  8249 ;;		wreg, status,2, status,0, cstack
  8250 ;; Tracked objects:
  8251 ;;		On entry : 0/0
  8252 ;;		On exit  : 0/0
  8253 ;;		Unchanged: 0/0
  8254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8255 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8256 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8257 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8258 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8259 ;;Total ram usage:        2 bytes
  8260 ;; Hardware stack levels used: 1
  8261 ;; This function calls:
  8262 ;;		Nothing
  8263 ;; This function is called by:
  8264 ;;		_WriteLCD
  8265 ;;		i2_SettingsLCD
  8266 ;; This function uses a non-reentrant model
  8267 ;;
  8268                           
  8269                           	psect	text42
  8270  002F16                     __ptext42:
  8271                           	callstack 0
  8272  002F16                     i2_LCD:
  8273                           	callstack 23
  8274                           
  8275                           ;incstack = 0
  8276                           ;i2LCD@data stored from wreg
  8277  002F16  6E02               	movwf	i2LCD@data^0,c
  8278                           
  8279                           ;PIC_ROBOT_2R.c: 246: LATEbits.LATE0 = 1;
  8280  002F18  808D               	bsf	141,0,c	;volatile
  8281                           
  8282                           ;PIC_ROBOT_2R.c: 247: _delay((unsigned long)((10)*(16000000/4000000.0)));
  8283  002F1A  0E0D               	movlw	13
  8284  002F1C                     i2u486_47:
  8285  002F1C  2EE8               	decfsz	wreg,f,c
  8286  002F1E  D7FE               	bra	i2u486_47
  8287  002F20  F000               	nop	
  8288                           
  8289                           ;PIC_ROBOT_2R.c: 248: LATDbits.LATD0 = (data & 0x01);
  8290  002F22  C002  F001         	movff	i2LCD@data,??i2_LCD
  8291  002F26  0E01               	movlw	1
  8292  002F28  1601               	andwf	??i2_LCD^0,f,c
  8293  002F2A  508C               	movf	140,w,c	;volatile
  8294  002F2C  1801               	xorwf	??i2_LCD^0,w,c
  8295  002F2E  0BFE               	andlw	-2
  8296  002F30  1801               	xorwf	??i2_LCD^0,w,c
  8297  002F32  6E8C               	movwf	140,c	;volatile
  8298                           
  8299                           ;PIC_ROBOT_2R.c: 249: _delay((unsigned long)((10)*(16000000/4000000.0)));
  8300  002F34  0E0D               	movlw	13
  8301  002F36                     i2u487_47:
  8302  002F36  2EE8               	decfsz	wreg,f,c
  8303  002F38  D7FE               	bra	i2u487_47
  8304  002F3A  F000               	nop	
  8305                           
  8306                           ;PIC_ROBOT_2R.c: 250: LATDbits.LATD1 = (data & 0x02) >> 1;
  8307  002F3C  C002  F001         	movff	i2LCD@data,??i2_LCD
  8308  002F40  90D8               	bcf	status,0,c
  8309  002F42  3201               	rrcf	??i2_LCD^0,f,c
  8310  002F44  0E01               	movlw	1
  8311  002F46  1601               	andwf	??i2_LCD^0,f,c
  8312  002F48  4601               	rlncf	??i2_LCD^0,f,c
  8313  002F4A  508C               	movf	140,w,c	;volatile
  8314  002F4C  1801               	xorwf	??i2_LCD^0,w,c
  8315  002F4E  0BFD               	andlw	-3
  8316  002F50  1801               	xorwf	??i2_LCD^0,w,c
  8317  002F52  6E8C               	movwf	140,c	;volatile
  8318                           
  8319                           ;PIC_ROBOT_2R.c: 251: _delay((unsigned long)((10)*(16000000/4000000.0)));
  8320  002F54  0E0D               	movlw	13
  8321  002F56                     i2u488_47:
  8322  002F56  2EE8               	decfsz	wreg,f,c
  8323  002F58  D7FE               	bra	i2u488_47
  8324  002F5A  F000               	nop	
  8325                           
  8326                           ;PIC_ROBOT_2R.c: 252: LATDbits.LATD2 = (data & 0x04) >> 2;
  8327  002F5C  C002  F001         	movff	i2LCD@data,??i2_LCD
  8328  002F60  90D8               	bcf	status,0,c
  8329  002F62  3201               	rrcf	??i2_LCD^0,f,c
  8330  002F64  90D8               	bcf	status,0,c
  8331  002F66  3201               	rrcf	??i2_LCD^0,f,c
  8332  002F68  0E01               	movlw	1
  8333  002F6A  1601               	andwf	??i2_LCD^0,f,c
  8334  002F6C  4601               	rlncf	??i2_LCD^0,f,c
  8335  002F6E  4601               	rlncf	??i2_LCD^0,f,c
  8336  002F70  508C               	movf	140,w,c	;volatile
  8337  002F72  1801               	xorwf	??i2_LCD^0,w,c
  8338  002F74  0BFB               	andlw	-5
  8339  002F76  1801               	xorwf	??i2_LCD^0,w,c
  8340  002F78  6E8C               	movwf	140,c	;volatile
  8341                           
  8342                           ;PIC_ROBOT_2R.c: 253: _delay((unsigned long)((10)*(16000000/4000000.0)));
  8343  002F7A  0E0D               	movlw	13
  8344  002F7C                     i2u489_47:
  8345  002F7C  2EE8               	decfsz	wreg,f,c
  8346  002F7E  D7FE               	bra	i2u489_47
  8347  002F80  F000               	nop	
  8348                           
  8349                           ;PIC_ROBOT_2R.c: 254: LATDbits.LATD3 = (data & 0x08) >> 3;
  8350  002F82  C002  F001         	movff	i2LCD@data,??i2_LCD
  8351  002F86  90D8               	bcf	status,0,c
  8352  002F88  3201               	rrcf	??i2_LCD^0,f,c
  8353  002F8A  90D8               	bcf	status,0,c
  8354  002F8C  3201               	rrcf	??i2_LCD^0,f,c
  8355  002F8E  90D8               	bcf	status,0,c
  8356  002F90  3201               	rrcf	??i2_LCD^0,f,c
  8357  002F92  0E01               	movlw	1
  8358  002F94  1601               	andwf	??i2_LCD^0,f,c
  8359  002F96  4601               	rlncf	??i2_LCD^0,f,c
  8360  002F98  4601               	rlncf	??i2_LCD^0,f,c
  8361  002F9A  4601               	rlncf	??i2_LCD^0,f,c
  8362  002F9C  508C               	movf	140,w,c	;volatile
  8363  002F9E  1801               	xorwf	??i2_LCD^0,w,c
  8364  002FA0  0BF7               	andlw	-9
  8365  002FA2  1801               	xorwf	??i2_LCD^0,w,c
  8366  002FA4  6E8C               	movwf	140,c	;volatile
  8367                           
  8368                           ;PIC_ROBOT_2R.c: 255: _delay((unsigned long)((10)*(16000000/4000000.0)));
  8369  002FA6  0E0D               	movlw	13
  8370  002FA8                     i2u490_47:
  8371  002FA8  2EE8               	decfsz	wreg,f,c
  8372  002FAA  D7FE               	bra	i2u490_47
  8373  002FAC  F000               	nop	
  8374                           
  8375                           ;PIC_ROBOT_2R.c: 256: LATEbits.LATE0 = 0;
  8376  002FAE  908D               	bcf	141,0,c	;volatile
  8377                           
  8378                           ;PIC_ROBOT_2R.c: 257: _delay((unsigned long)((10)*(16000000/4000000.0)));
  8379  002FB0  0E0D               	movlw	13
  8380  002FB2                     i2u491_47:
  8381  002FB2  2EE8               	decfsz	wreg,f,c
  8382  002FB4  D7FE               	bra	i2u491_47
  8383  002FB6  F000               	nop	
  8384  002FB8  0012               	return		;funcret
  8385  002FBA                     __end_ofi2_LCD:
  8386                           	callstack 0
  8387                           
  8388                           	psect	rparam
  8389  0000                     
  8390                           	psect	temp
  8391  00005F                     btemp:
  8392                           	callstack 0
  8393  00005F                     	ds	1
  8394  0000                     int$flags	set	btemp
  8395  0000                     wtemp8	set	btemp+1
  8396  0000                     ttemp5	set	btemp+1
  8397  0000                     ttemp6	set	btemp+4
  8398  0000                     ttemp7	set	btemp+8
  8399                           
  8400                           	psect	idloc
  8401                           
  8402                           ;Config register IDLOC0 @ 0x200000
  8403                           ;	unspecified, using default values
  8404  200000                     	org	2097152
  8405  200000  FF                 	db	255
  8406                           
  8407                           ;Config register IDLOC1 @ 0x200001
  8408                           ;	unspecified, using default values
  8409  200001                     	org	2097153
  8410  200001  FF                 	db	255
  8411                           
  8412                           ;Config register IDLOC2 @ 0x200002
  8413                           ;	unspecified, using default values
  8414  200002                     	org	2097154
  8415  200002  FF                 	db	255
  8416                           
  8417                           ;Config register IDLOC3 @ 0x200003
  8418                           ;	unspecified, using default values
  8419  200003                     	org	2097155
  8420  200003  FF                 	db	255
  8421                           
  8422                           ;Config register IDLOC4 @ 0x200004
  8423                           ;	unspecified, using default values
  8424  200004                     	org	2097156
  8425  200004  FF                 	db	255
  8426                           
  8427                           ;Config register IDLOC5 @ 0x200005
  8428                           ;	unspecified, using default values
  8429  200005                     	org	2097157
  8430  200005  FF                 	db	255
  8431                           
  8432                           ;Config register IDLOC6 @ 0x200006
  8433                           ;	unspecified, using default values
  8434  200006                     	org	2097158
  8435  200006  FF                 	db	255
  8436                           
  8437                           ;Config register IDLOC7 @ 0x200007
  8438                           ;	unspecified, using default values
  8439  200007                     	org	2097159
  8440  200007  FF                 	db	255
  8441                           
  8442                           	psect	config
  8443                           
  8444                           ; Padding undefined space
  8445  300000                     	org	3145728
  8446  300000  FF                 	db	255
  8447                           
  8448                           ;Config register CONFIG1H @ 0x300001
  8449                           ;	Oscillator Selection bits
  8450                           ;	FOSC = INTIO67, Internal oscillator block
  8451                           ;	4X PLL Enable
  8452                           ;	PLLCFG = 0x0, unprogrammed default
  8453                           ;	Primary clock enable bit
  8454                           ;	PRICLKEN = 0x1, unprogrammed default
  8455                           ;	Fail-Safe Clock Monitor Enable bit
  8456                           ;	FCMEN = 0x0, unprogrammed default
  8457                           ;	Internal/External Oscillator Switchover bit
  8458                           ;	IESO = 0x0, unprogrammed default
  8459  300001                     	org	3145729
  8460  300001  28                 	db	40
  8461                           
  8462                           ;Config register CONFIG2L @ 0x300002
  8463                           ;	unspecified, using default values
  8464                           ;	Power-up Timer Enable bit
  8465                           ;	PWRTEN = 0x1, unprogrammed default
  8466                           ;	Brown-out Reset Enable bits
  8467                           ;	BOREN = 0x3, unprogrammed default
  8468                           ;	Brown Out Reset Voltage bits
  8469                           ;	BORV = 0x3, unprogrammed default
  8470  300002                     	org	3145730
  8471  300002  1F                 	db	31
  8472                           
  8473                           ;Config register CONFIG2H @ 0x300003
  8474                           ;	Watchdog Timer Enable bits
  8475                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
  8476                           ;	Watchdog Timer Postscale Select bits
  8477                           ;	WDTPS = 0xF, unprogrammed default
  8478  300003                     	org	3145731
  8479  300003  3C                 	db	60
  8480                           
  8481                           ; Padding undefined space
  8482  300004                     	org	3145732
  8483  300004  FF                 	db	255
  8484                           
  8485                           ;Config register CONFIG3H @ 0x300005
  8486                           ;	unspecified, using default values
  8487                           ;	CCP2 MUX bit
  8488                           ;	CCP2MX = 0x1, unprogrammed default
  8489                           ;	PORTB A/D Enable bit
  8490                           ;	PBADEN = 0x1, unprogrammed default
  8491                           ;	P3A/CCP3 Mux bit
  8492                           ;	CCP3MX = 0x1, unprogrammed default
  8493                           ;	HFINTOSC Fast Start-up
  8494                           ;	HFOFST = 0x1, unprogrammed default
  8495                           ;	Timer3 Clock input mux bit
  8496                           ;	T3CMX = 0x1, unprogrammed default
  8497                           ;	ECCP2 B output mux bit
  8498                           ;	P2BMX = 0x1, unprogrammed default
  8499                           ;	MCLR Pin Enable bit
  8500                           ;	MCLRE = 0x1, unprogrammed default
  8501  300005                     	org	3145733
  8502  300005  BF                 	db	191
  8503                           
  8504                           ;Config register CONFIG4L @ 0x300006
  8505                           ;	Stack Full/Underflow Reset Enable bit
  8506                           ;	STVREN = 0x1, unprogrammed default
  8507                           ;	Single-Supply ICSP Enable bit
  8508                           ;	LVP = OFF, Single-Supply ICSP disabled
  8509                           ;	Extended Instruction Set Enable bit
  8510                           ;	XINST = 0x0, unprogrammed default
  8511                           ;	Background Debug
  8512                           ;	DEBUG = 0x1, unprogrammed default
  8513  300006                     	org	3145734
  8514  300006  81                 	db	129
  8515                           
  8516                           ; Padding undefined space
  8517  300007                     	org	3145735
  8518  300007  FF                 	db	255
  8519                           
  8520                           ;Config register CONFIG5L @ 0x300008
  8521                           ;	unspecified, using default values
  8522                           ;	Code Protection Block 0
  8523                           ;	CP0 = 0x1, unprogrammed default
  8524                           ;	Code Protection Block 1
  8525                           ;	CP1 = 0x1, unprogrammed default
  8526                           ;	Code Protection Block 2
  8527                           ;	CP2 = 0x1, unprogrammed default
  8528                           ;	Code Protection Block 3
  8529                           ;	CP3 = 0x1, unprogrammed default
  8530  300008                     	org	3145736
  8531  300008  0F                 	db	15
  8532                           
  8533                           ;Config register CONFIG5H @ 0x300009
  8534                           ;	unspecified, using default values
  8535                           ;	Boot Block Code Protection bit
  8536                           ;	CPB = 0x1, unprogrammed default
  8537                           ;	Data EEPROM Code Protection bit
  8538                           ;	CPD = 0x1, unprogrammed default
  8539  300009                     	org	3145737
  8540  300009  C0                 	db	192
  8541                           
  8542                           ;Config register CONFIG6L @ 0x30000A
  8543                           ;	unspecified, using default values
  8544                           ;	Write Protection Block 0
  8545                           ;	WRT0 = 0x1, unprogrammed default
  8546                           ;	Write Protection Block 1
  8547                           ;	WRT1 = 0x1, unprogrammed default
  8548                           ;	Write Protection Block 2
  8549                           ;	WRT2 = 0x1, unprogrammed default
  8550                           ;	Write Protection Block 3
  8551                           ;	WRT3 = 0x1, unprogrammed default
  8552  30000A                     	org	3145738
  8553  30000A  0F                 	db	15
  8554                           
  8555                           ;Config register CONFIG6H @ 0x30000B
  8556                           ;	unspecified, using default values
  8557                           ;	Configuration Register Write Protection bit
  8558                           ;	WRTC = 0x1, unprogrammed default
  8559                           ;	Boot Block Write Protection bit
  8560                           ;	WRTB = 0x1, unprogrammed default
  8561                           ;	Data EEPROM Write Protection bit
  8562                           ;	WRTD = 0x1, unprogrammed default
  8563  30000B                     	org	3145739
  8564  30000B  E0                 	db	224
  8565                           
  8566                           ;Config register CONFIG7L @ 0x30000C
  8567                           ;	unspecified, using default values
  8568                           ;	Table Read Protection Block 0
  8569                           ;	EBTR0 = 0x1, unprogrammed default
  8570                           ;	Table Read Protection Block 1
  8571                           ;	EBTR1 = 0x1, unprogrammed default
  8572                           ;	Table Read Protection Block 2
  8573                           ;	EBTR2 = 0x1, unprogrammed default
  8574                           ;	Table Read Protection Block 3
  8575                           ;	EBTR3 = 0x1, unprogrammed default
  8576  30000C                     	org	3145740
  8577  30000C  0F                 	db	15
  8578                           
  8579                           ;Config register CONFIG7H @ 0x30000D
  8580                           ;	unspecified, using default values
  8581                           ;	Boot Block Table Read Protection bit
  8582                           ;	EBTRB = 0x1, unprogrammed default
  8583  30000D                     	org	3145741
  8584  30000D  40                 	db	64
  8585                           tosu	equ	0xFFF
  8586                           tosh	equ	0xFFE
  8587                           tosl	equ	0xFFD
  8588                           stkptr	equ	0xFFC
  8589                           pclatu	equ	0xFFB
  8590                           pclath	equ	0xFFA
  8591                           pcl	equ	0xFF9
  8592                           tblptru	equ	0xFF8
  8593                           tblptrh	equ	0xFF7
  8594                           tblptrl	equ	0xFF6
  8595                           tablat	equ	0xFF5
  8596                           prodh	equ	0xFF4
  8597                           prodl	equ	0xFF3
  8598                           indf0	equ	0xFEF
  8599                           postinc0	equ	0xFEE
  8600                           postdec0	equ	0xFED
  8601                           preinc0	equ	0xFEC
  8602                           plusw0	equ	0xFEB
  8603                           fsr0h	equ	0xFEA
  8604                           fsr0l	equ	0xFE9
  8605                           wreg	equ	0xFE8
  8606                           indf1	equ	0xFE7
  8607                           postinc1	equ	0xFE6
  8608                           postdec1	equ	0xFE5
  8609                           preinc1	equ	0xFE4
  8610                           plusw1	equ	0xFE3
  8611                           fsr1h	equ	0xFE2
  8612                           fsr1l	equ	0xFE1
  8613                           bsr	equ	0xFE0
  8614                           indf2	equ	0xFDF
  8615                           postinc2	equ	0xFDE
  8616                           postdec2	equ	0xFDD
  8617                           preinc2	equ	0xFDC
  8618                           plusw2	equ	0xFDB
  8619                           fsr2h	equ	0xFDA
  8620                           fsr2l	equ	0xFD9
  8621                           status	equ	0xFD8

Data Sizes:
    Strings     26
    Constant    118
    Data        2
    BSS         58
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     88      94
    BANK0           160     75     129
    BANK1           256     17      17
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(1) Largest target is 20
		 -> text(BANK0[20]), 

    strlen@cp	PTR const unsigned char  size(1) Largest target is 20
		 -> text(BANK0[20]), 

    sprintf@f	PTR const unsigned char  size(1) Largest target is 13
		 -> STR_2(CODE[13]), STR_1(CODE[13]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 20
		 -> text(BANK0[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _TMR1_ISR in COMRAM

    _TMR1_ISR->_sprintf
    i2_deg2time2->i2___fttol
    i2_deg2time1->i2___fttol
    i2___ftdiv->i2___ftpack
    i2_SettingsLCD->i2_LCD
    _sprintf->i2___fttol
    i2___fttol->i2___ftsub
    i2___ftsub->i2___ftadd
    i2___ftadd->_fround
    _scale->i2___ftmul
    ___awdiv->___awmod
    _fround->i2___ftmul
    i2___ftmul->___awdiv
    ___lbdiv->___lbmod
    ___lltoft->i2___ftpack
    ___awtoft->i2___ftpack
    _DataLCD->_WriteLCD
    _DataLCD->_strlen
    _WriteLCD->i2_LCD

Critical Paths under _main in BANK0

    _deg2time2->___fttol
    _deg2time1->___fttol
    ___fttol->___ftsub
    ___ftsub->___ftadd
    ___ftadd->___ftmul
    ___ftmul->___ftpack
    ___ftmul->___ftpack
    ___ftdiv->___ftpack
    _SettingsLCD->_LCD

Critical Paths under _TMR1_ISR in BANK0

    _TMR1_ISR->_sprintf

Critical Paths under _main in BANK1

    _settings->_deg2time1
    _settings->_deg2time2
    _deg2time2->___fttol
    _deg2time1->___fttol

Critical Paths under _TMR1_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _TMR1_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _TMR1_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _TMR1_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _TMR1_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _TMR1_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _TMR1_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _TMR1_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _TMR1_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _TMR1_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _TMR1_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _TMR1_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _TMR1_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _TMR1_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _TMR1_ISR in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   48900
                           _settings
 ---------------------------------------------------------------------------------
 (1) _settings                                             0     0      0   48900
                        _SettingsLCD
                          _deg2time1
                          _deg2time2
 ---------------------------------------------------------------------------------
 (2) _deg2time2                                            6     3      3   24384
                                             11 BANK1      6     3      3
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___ftsub
                            ___fttol
 ---------------------------------------------------------------------------------
 (2) _deg2time1                                            6     3      3   24384
                                             11 BANK1      6     3      3
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___ftsub
                            ___fttol
 ---------------------------------------------------------------------------------
 (3) ___fttol                                             15    11      4     896
                                             71 BANK0      4     0      4
                                              0 BANK1     11    11      0
                            ___ftdiv (ARG)
                            ___ftsub (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftsub                                              6     0      6    6934
                                             65 BANK0      6     0      6
                            ___ftadd
                            ___ftdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftadd                                             12     6      6    5508
                                             53 BANK0     12     6      6
                            ___ftmul (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             15     9      6    6387
                                             38 BANK0     15     9      6
                           ___ftpack
                           ___ftpack (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftdiv                                             15     9      6    4449
                                             38 BANK0     15     9      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (5) ___ftpack                                             8     3      5    3163
                                             30 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (2) _SettingsLCD                                          1     1      0     132
                                             32 BANK0      1     1      0
                                _LCD
 ---------------------------------------------------------------------------------
 (3) _LCD                                                  2     2      0      88
                                             30 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _TMR1_ISR                                             9     9      0   43969
                                             87 COMRAM     1     1      0
                                             22 BANK0      8     8      0
                            _DataLCD
                           ___awtoft
                            _sprintf
                      i2_SettingsLCD
                          i2___ftadd
                          i2___ftmul
                        i2_deg2time1
                        i2_deg2time2
 ---------------------------------------------------------------------------------
 (7) i2_deg2time2                                          6     3      3    7738
                                             76 COMRAM     6     3      3
                          i2___ftadd
                          i2___ftdiv
                          i2___ftmul
                          i2___ftsub
                          i2___fttol
 ---------------------------------------------------------------------------------
 (7) i2_deg2time1                                          6     3      3    7738
                                             76 COMRAM     6     3      3
                          i2___ftadd
                          i2___ftdiv
                          i2___ftmul
                          i2___ftsub
                          i2___fttol
 ---------------------------------------------------------------------------------
 (8) i2___ftdiv                                           15     9      6    1111
                                              8 COMRAM    15     9      6
                         i2___ftpack
 ---------------------------------------------------------------------------------
 (7) i2_SettingsLCD                                        1     1      0     132
                                              2 COMRAM     1     1      0
                              i2_LCD
 ---------------------------------------------------------------------------------
 (7) _sprintf                                             41    36      5   22677
                                             76 COMRAM    11     6      5
                                              0 BANK0     22    22      0
                            ___awdiv
                             ___ftge
                            ___ftneg
                            ___lldiv
                            ___llmod
                           ___lltoft
                             ___wmul
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
                          i2___ftadd
                          i2___ftmul
                          i2___ftsub
                          i2___fttol
 ---------------------------------------------------------------------------------
 (8) i2___fttol                                           15    11      4     434
                                             61 COMRAM    15    11      4
                          i2___ftdiv (ARG)
                          i2___ftmul (ARG)
                          i2___ftsub (ARG)
 ---------------------------------------------------------------------------------
 (8) i2___ftsub                                            6     0      6    2256
                                             55 COMRAM     6     0      6
                           ___lltoft (ARG)
                          i2___ftadd
                          i2___ftdiv (ARG)
 ---------------------------------------------------------------------------------
 (9) i2___ftadd                                           12     6      6    1825
                                             43 COMRAM    12     6      6
                           ___awtoft (ARG)
                             _fround (ARG)
                          i2___ftmul (ARG)
                         i2___ftpack
 ---------------------------------------------------------------------------------
 (8) _scale                                               11     8      3    5056
                                             29 COMRAM    11     8      3
                            ___awdiv
                            ___awmod
                          i2___ftmul
 ---------------------------------------------------------------------------------
 (9) ___awmod                                              6     2      4    1208
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (9) ___awdiv                                              8     4      4    1364
                                              6 COMRAM     8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (8) _isdigit                                              3     3      0      68
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (8) _fround                                              14    11      3    3063
                                             29 COMRAM    14    11      3
                            ___lbdiv
                            ___lbmod
                          i2___ftmul
 ---------------------------------------------------------------------------------
 (8) i2___ftmul                                           15     9      6    2041
                                             14 COMRAM    15     9      6
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           ___awtoft (ARG)
                            ___lbdiv (ARG)
                            ___lbmod (ARG)
                         i2___ftpack
 ---------------------------------------------------------------------------------
 (9) ___lbmod                                              4     3      1     387
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (9) ___lbdiv                                              4     3      1     390
                                              4 COMRAM     4     3      1
                            ___lbmod (ARG)
 ---------------------------------------------------------------------------------
 (8) __tdiv_to_l_                                         15     9      6     455
                                              0 COMRAM    15     9      6
 ---------------------------------------------------------------------------------
 (8) __div_to_l_                                          12     6      6     598
                                              0 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (8) ___wmul                                               6     2      4     763
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (8) ___lltoft                                             9     5      4     766
                                              8 COMRAM     9     5      4
                         i2___ftpack
 ---------------------------------------------------------------------------------
 (8) ___llmod                                              9     1      8     615
                                              0 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (8) ___lldiv                                             13     5      8     466
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (8) ___ftneg                                              3     0      3     121
                                              0 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (8) ___ftge                                               9     3      6     592
                                              0 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (7) ___awtoft                                             4     1      3    1016
                                              8 COMRAM     4     1      3
                         i2___ftpack
 ---------------------------------------------------------------------------------
 (10) i2___ftpack                                          8     3      5     621
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (7) _DataLCD                                              2     2      0     361
                                              3 COMRAM     2     2      0
                           _WriteLCD
                             _strlen
 ---------------------------------------------------------------------------------
 (8) _strlen                                               3     1      2     229
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (8) _WriteLCD                                             1     1      0     132
                                              2 COMRAM     1     1      0
                              i2_LCD
 ---------------------------------------------------------------------------------
 (8) i2_LCD                                                2     2      0      88
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _settings
     _SettingsLCD
       _LCD
     _deg2time1
       ___ftadd
         ___ftmul (ARG)
           ___ftpack
           ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftdiv
         ___ftpack
       ___ftmul
       ___ftsub
         ___ftadd
         ___ftdiv (ARG)
       ___fttol
         ___ftdiv (ARG)
         ___ftsub (ARG)
     _deg2time2
       ___ftadd
       ___ftdiv
       ___ftmul
       ___ftsub
       ___fttol

 _TMR1_ISR (ROOT)
   _DataLCD
     _WriteLCD
       i2_LCD
     _strlen
   ___awtoft
     i2___ftpack
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___ftge
     ___ftneg
     ___lldiv
     ___llmod
     ___lltoft
       i2___ftpack
     ___wmul
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___lbdiv
         ___lbmod (ARG)
       ___lbmod
       i2___ftmul
         ___awdiv (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
         ___lbdiv (ARG)
         ___lbmod (ARG)
         i2___ftpack (ARG)
     _isdigit
     _scale
       ___awdiv
       ___awmod
       i2___ftmul
     i2___ftadd
       ___awtoft (ARG)
       _fround (ARG)
       i2___ftmul (ARG)
       i2___ftpack (ARG)
     i2___ftmul
     i2___ftsub
       ___lltoft (ARG)
       i2___ftadd (ARG)
       i2___ftdiv (ARG)
         i2___ftpack
     i2___fttol
       i2___ftdiv (ARG)
       i2___ftmul (ARG)
       i2___ftsub (ARG)
   i2_SettingsLCD
     i2_LCD
   i2___ftadd
   i2___ftmul
   i2_deg2time1
     i2___ftadd
     i2___ftdiv
     i2___ftmul
     i2___ftsub
     i2___fttol
   i2_deg2time2
     i2___ftadd
     i2___ftdiv
     i2___ftmul
     i2___ftsub
     i2___fttol

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      49        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     11      11       7        6.6%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     4B      81       5       80.6%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     58      5E       1      100.0%
BITBIGSFRlhll       4F      0       0      46        0.0%
BITBANK15           38      0       0      34        0.0%
BANK15              38      0       0      35        0.0%
BITBIGSFRhl         1E      0       0      37        0.0%
BITBIGSFRlhhhlh     19      0       0      39        0.0%
BITBIGSFRhh          D      0       0      36        0.0%
BITBIGSFRlhhllh      9      0       0      42        0.0%
BITBIGSFRlhlh        6      0       0      45        0.0%
BITBIGSFRlhhlll      6      0       0      44        0.0%
BITBIGSFRlhhhh       3      0       0      38        0.0%
BITBIGSFRll          2      0       0      47        0.0%
BITBIGSFRlhhllh      1      0       0      43        0.0%
BITBIGSFRlhhlh       1      0       0      41        0.0%
BITBIGSFRlhhhll      1      0       0      40        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      F0      48        0.0%
DATA                 0      0      F0       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Fri Oct 07 14:45:36 2022

                      _a 0059                        _b 00AE                        _c 00AB  
                      _i 00C3             ___awdiv@sign 000C      ___wmul@multiplicand 0003  
             i2___ftpack 2D16             ___ftadd@exp1 00A0             ___ftadd@exp2 009F  
           ___ftadd@sign 009E                      l121 34D6                      l636 1E0E  
                    l647 2A7E                      _GIE 007F97                      _LCD 2DC4  
                    _th1 00CB                      _th2 00C7                      _tl1 00C9  
                    _tl2 00C5             ___awmod@sign 0006                      wreg 000FE8  
            i2_deg2time1 23D2              i2_deg2time2 229C            i2_SettingsLCD 34A6  
                   ?_LCD 0001             ___ftdiv@cntr 008F             ___ftdiv@sign 0094  
                   l4011 32C0                     l4021 2916                     l4051 299C  
                   l4043 2988                     l4039 2978                     l4057 29B8  
                   l4049 2990                     l3823 2CC4                     l3815 2C86  
                   l3825 2CE2                     l3817 2C90                     l3827 2CEC  
                   l3819 2CAE                     l3851 1D28                     l3925 2A1A  
                   l3909 1E5A                     l3919 29F2                     l3945 2A58  
                   l3881 1DAC                     l3857 1D50                     l3971 2656  
                   l3891 1DE0                     l3883 1DB6                     l3965 262E  
                   l3893 1DEA                     l3879 1DA2                     l3985 2688  
                   l3995 26B0                     l3899 1E2A                     l3989 2698  
                   l3999 26C0                     STR_1 1077                     STR_2 1084  
                   _LATD 000F8C                     _LATE 000F8D                     u4320 2C78  
                   u4401 1CFC                     u4430 1D1A                     u4360 2CF6  
                   u4601 29DA                     u4530 1DBE                     _PEIE 007F96  
                   u4460 1D42                     u4621 2A02                     u4391 1CE8  
                   u4560 1DF2                     u4721 28F8                     u4490 1D80  
                   u4730 2902                     u4651 2616                     u4740 2934  
                   u4807 2DCA                     u4671 263E                     u4817 2DE6  
                   u4745 292C                     u4827 2E08                     u4780 29A2  
                   u4837 2E30                     u4847 2E5E                     u4857 2E68  
                   _TMR1 000FCE                     _TMR3 000FB2                     _flag 005D  
                   _main 34D2             ___ftpack@arg 007E             ___ftpack@exp 0081  
                   _text 00CD                     fsr2h 000FDA                     indf2 000FDF  
                   fsr2l 000FD9                     btemp 005F             i2___ftadd@f1 002C  
           i2___ftadd@f2 002F          __end_of_DataLCD 32AA                     prodh 000FF4  
                   prodl 000FF3                     start 034C             i2___ftdiv@f1 0009  
           i2___ftdiv@f2 000C             i2___ftdiv@f3 0013             _sprintf$1036 0060  
           ___ftmul@cntr 0093             i2___ftmul@f1 000F             i2___ftmul@f2 0012  
           ___param_bank 000000             ___ftmul@sign 0094             i2___ftsub@f1 0038  
           i2___ftsub@f2 003B             i2___fttol@f1 003E                    ??_LCD 007E  
           ___fttol@exp1 010A             ___fttol@lval 0106                    ?_main 0001  
        __end_of___awdiv 303E          __end_of___lbdiv 339E          __end_of___ftadd 1E80  
        __end_of___awmod 31A4          __end_of___lbmod 3400          __end_of___ftdiv 2AB0  
        __end_of___ftneg 344A          __end_of___lldiv 30C0          __end_of___ftmul 26FA  
        ___awdiv@divisor 0009                    _T1CON 000FCD          __end_of___llmod 320A  
        __end_of___ftsub 32EA          __end_of___fttol 29CA                    _T3CON 000FB1  
                  _RC1IE 007CED                    _RC1IF 007CF5                    _LATD6 007C66  
                  _LATD7 007C67                    i2l140 0084                    i2l132 0058  
                  i2l134 0048                    i2l135 0056                    i2l137 0086  
                  i2l139 0076                    i2l316 30AE                    i2l166 0328  
                  i2l271 156A                    i2l731 31F8                    i2l636 1FB6  
                  i2l654 2588                    i2l655 25B0                    i2l647 2B64  
                  i2l686 343C          ___awdiv@counter 000B                    i2_LCD 2F16  
                  _TRISD 000F95                    _TRISE 000F96         i2_deg2time1$1037 0050  
       i2_deg2time2$1038 0050             ___lltoft@exp 0011         __end_of_TMR1_ISR 034C  
         ?i2_SettingsLCD 0001            ___awtoft@sign 000C          __end_of_dpowers 1077  
                  _scale 1764          __end_of_isdigit 348A            ___ftpack@sign 0082  
                  _servo 005C                    tablat 000FF5                    ttemp5 0060  
                  ttemp6 0063                    ttemp7 0067                    status 000FD8  
                  wtemp8 0060          __end_of_sprintf 1764          ___lbdiv@divisor 0005  
        ___lbdiv@counter 0007            i2___ftdiv@exp 0016            _deg2time1$954 010E  
          _deg2time2$955 010E          __initialization 332A             __end_of_main 34D8  
          i2___ftmul@exp 0018              ?i2___ftpack 0001                   ??_main 00AB  
          ___fttol@sign1 0105            __activetblptr 000002                   ?i2_LCD 0001  
       ___llmod@dividend 0001                   ?_scale 001E         ___awdiv@dividend 0007  
       __end_of___awtoft 33D6                   _ANSELC 000F3A                   _ANSELD 000F3B  
                 _ANSELE 000F3C         __end_of___ftpack 2D16         __end_of_WriteLCD 34D2  
              ??_DataLCD 0004         __end_of___lltoft 3266                   i2l3013 278C  
                 i2l3023 27B4                   i2l3103 1A3E                   i2l3009 277C  
                 i2l3121 3482                   i2l3131 2534                   i2l3019 27A4  
                 i2l3045 3450                   i2l3109 1AD6                   i2l3047 3452  
                 i2l3303 31EA                   i2l3311 321C                   i2l3231 28B6  
                 i2l3215 288A                   i2l3207 285A                   i2l3071 1C96  
                 i2l3063 1BF6                   i2l3227 28A6                   i2l3171 25DA  
                 i2l3091 190E                   i2l3323 2AD8                   i2l3253 3060  
                 i2l3309 3210                   i2l3237 28BE                   i2l3085 1876  
                 i2l3413 2C56                   i2l3405 2C2E                   i2l3255 306C  
                 i2l3239 28CA                   i2l3167 25CA                   i2l3095 1934  
                 i2l3407 2C3A                   i2l3511 1180                   i2l3503 1146  
                 i2l3273 30E2                   i2l3265 30A0                   i2l3177 25E2  
                 i2l3521 11BA                   i2l3505 116C                   i2l3329 2B00  
                 i2l2571 2D5C                   i2l3283 3130                   i2l3187 280C  
                 i2l3179 25EE                   i2l3277 3104                   u310_41 270A  
                 i2l2741 2FF4                   i2l3621 156E                   i2l3349 2B3E  
                 i2l2575 2D72                   i2l2567 2D34                   i2l3295 31B6  
                 i2l2743 2FFC                   i2l2735 2FDE                   i2l3367 3300  
                 i2l3615 1546                   i2l3607 152A                   i2l2577 2D90  
                 i2l2569 2D3E                   i2l3297 31C2                   i2l2761 3034  
                 i2l2753 301C                   i2l2729 2FCE                   i2l2921 1ED0  
                 i2l3377 2BC2                   i2l3633 15D8                   i2l3609 1534  
                 i2l3561 1362                   i2l3553 1318                   i2l3545 12B2  
                 i2l3537 124C                   i2l3473 109A                   i2l2579 2D9A  
                 i2l3395 2C16                   i2l3651 16D4                   i2l3643 16B6  
                 i2l2853 3376                   i2l2757 3026                   i2l2781 3162  
                 i2l2773 3148                   i2l3645 16C2                   i2l3629 1588  
                 i2l3565 1388                   i2l3549 12D8                   i2l3653 16DE  
                 i2l3493 1120                   i2l3477 10AC                   i2l2783 316A  
                 i2l2951 1F54                   i2l2927 1EF8                   i2l3399 2C26  
                 i2l3575 13E0                   i2l3487 10D8                   i2l3495 1136  
                 i2l3479 10B0                   i2l3735 00AC                   i2l3681 3270  
                 i2l2865 3392                   i2l2857 337C                   i2l2793 318C  
                 i2l2777 3154                   i2l2961 1F88                   i2l2953 1F5E  
                 i2l3585 144A                   i2l3673 173E                   i2l3761 0128  
                 i2l2883 33F8                   i2l2875 33E0                   i2l2963 1F92  
                 i2l3659 16F6                   i2l3579 1446                   i2l3499 1142  
                 i2l3771 01EE                   i2l3685 3284                   i2l2869 339A  
                 u312_41 2732                   i2l2797 319A                   i2l2789 3182  
                 i2l2949 1F4A                   i2l3781 0266                   i2l3765 0188  
                 i2l3695 33B2                   i2l3599 149C                   i2l3791 0298  
                 i2l2969 1FD2                   i2l3793 02AE                   i2l3777 0254  
                 i2l2995 274A                   i2l2979 2002                   i2l3787 0284  
                 i2l2989 2722                   u326_41 2518                   _RCREG1 000FAE  
                 u328_41 2544                   u353_41 2AC0                   u290_41 1EA4  
                 u355_41 2AE8                   _RCSTA1 000FAB                   u359_41 2BA6  
                 u289_41 1E90                   _OSCCON 000FD3                   _SPBRG1 000FAF  
                 _TMR1IE 007CE8                   _TMR1IF 007CF0                   _TMR3IE 007D01  
                 _TMR3IF 007D09                   _TMR1ON 007E68                   _TMR3ON 007D88  
                 _TXSTA1 000FAC         __end_of__powers_ 1028                   ___ftge 30C0  
                 ___wmul 3400                ??___awdiv 000B                ??___lbdiv 0006  
              ??___ftadd 009B                ??___awmod 0005                ??___lbmod 0002  
              ??___ftdiv 008C                ??___ftneg 0004                ??___lldiv 0009  
              ??___ftmul 008C                ??___llmod 0009                ??___ftsub 00A7  
              ??___fttol 0100                   _confir 00BF                   _fround 1AFC  
                 clear_0 3348         ___awdiv@quotient 000D          ___awmod@divisor 0003  
                 isa$std 000001          ___awmod@counter 0005                   _strlen 344A  
  ___ftmul@f3_as_product 0090             __pdataCOMRAM 005D                ??_isdigit 0001  
        ??i2_SettingsLCD 0003        __end_ofi2___ftadd 2028        __end_ofi2___ftdiv 2B96  
         i2___ftadd@exp1 0037           i2___ftadd@exp2 0036        __end_ofi2___ftmul 27EE  
      __end_ofi2___ftsub 332A        __end_ofi2___fttol 2C68           i2___ftadd@sign 0035  
           __mediumconst 0000            ??_SettingsLCD 0080         __end_of_settings 2F16  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
              ??_sprintf 0052         ___lbdiv@dividend 0006          ___lbmod@divisor 0001  
         i2___ftdiv@cntr 0012               __accesstop 0060  __end_of__initialization 3356  
         i2___ftdiv@sign 0017             WriteLCD@word 0003          ___lbmod@counter 0003  
             ___ftadd@f1 0095               ___ftadd@f2 0098               ___ftge@ff1 0001  
             ___ftge@ff2 0004            ___rparam_used 000001               ___ftdiv@f1 0086  
             ___ftdiv@f2 0089               ___ftdiv@f3 0090               ___ftneg@f1 0001  
          __end_ofi2_LCD 2FBA               ___awtoft@c 0009           i2___ftpack@arg 0001  
         i2___ftpack@exp 0004               ___ftmul@f1 0086               ___ftmul@f2 0089  
             ___ftsub@f1 00A1               ___ftsub@f2 00A4               ___fttol@f1 00A7  
         __pcstackCOMRAM 0001                ?_TMR1_ISR 0001               ___lltoft@c 0009  
         i2___ftmul@cntr 001C            __end_of_scale 1AFC           i2___ftmul@sign 001D  
       ___lbdiv@quotient 0008           i2___fttol@exp1 004C           i2___fttol@lval 0048  
             __div_to_l_ 27EE                  ??i2_LCD 0001             ?i2_deg2time1 004D  
           ?i2_deg2time2 004D          __div_to_l_@exp1 000C          __div_to_l_@cntr 000B  
                ??_scale 0021          __div_to_l_@quot 0007                  LCD@data 007F  
             __pbssBANK0 00AB      __end_of_SettingsLCD 34A6            __div_to_l_@f1 0001  
          __div_to_l_@f2 0004                  ?___ftge 0001                  ?___wmul 0001  
             ??_TMR1_ISR 0076                  ?_fround 001E                ?___awtoft 0009  
              ?___ftpack 007E                ?_WriteLCD 0001                ?___lltoft 0009  
              TMR1_ISR@d 0058                  ?_strlen 0001        __end_of_deg2time1 229C  
      __end_of_deg2time2 2162                  _DataLCD 3266        __end_of__npowers_ 104F  
                __Hparam 0000               _scale$1035 0025                  __Lparam 0000  
             _incremento 00C1                ?_settings 0001                  ___awdiv 2FBA  
                ___lbdiv 3364                  ___ftadd 1CD8                  ___awmod 3134  
                ___lbmod 33D6                  ___ftdiv 29CA                  ___ftneg 3426  
                ___lldiv 303E                  ___ftmul 2606                  ___llmod 31A4  
                ___ftsub 32AA                  ___fttol 28E2             __psmallconst 1000  
              i2LCD@data 0002                  __pcinit 332A             ??i2___ftpack 0006  
             ??___awtoft 000C               ??___ftpack 0083               ??_WriteLCD 0003  
i2___ftmul@f3_as_product 0019                  __ramtop 1000               ??___lltoft 000D  
                __ptext0 34D2                  __ptext1 2E70                  __ptext2 2028  
                __ptext3 2162                  __ptext4 28E2                  __ptext5 32AA  
                __ptext6 1CD8                  __ptext7 2606                  __ptext8 29CA  
                __ptext9 2C68                  _confir1 00BD              ?__div_to_l_ 0001  
                _dpowers 104F                  _isdigit 346C         ___awmod@dividend 0001  
            _SettingsLCD 348A                  _sprintf 1092     end_of_initialization 3356  
          __Lmediumconst 0000       __end_ofi2___ftpack 2DC4      i2deg2time1@degrees1 004D  
        ___lldiv@divisor 0005          ___lldiv@counter 000D      i2deg2time2@degrees2 004D  
                postdec2 000FDD               ??_settings 00AB                  postinc0 000FEE  
                postinc2 000FDE           __tdiv_to_l_@f1 0001           __tdiv_to_l_@f2 0004  
                strlen@s 0001            ??__tdiv_to_l_ 0007         ___lbmod@dividend 0002  
              _TRISCbits 000F94                i2___ftadd 1E80                i2___ftdiv 2AB0  
              i2___ftmul 26FA                i2___ftsub 32EA                i2___fttol 2B96  
            ___lbmod@rem 0004              ___ftdiv@exp 0093          i2___ftpack@sign 0005  
            ___ftmul@exp 008F           __end_of___ftge 3134           __end_of___wmul 3426  
          __pidataCOMRAM 34D8           __end_of_fround 1CD8           __end_of_strlen 346C  
    start_initialization 332A              __end_of_LCD 2E70      __end_of__tdiv_to_l_ 2606  
  __end_ofi2_SettingsLCD 34BC          i2___fttol@sign1 0047               ?i2___ftadd 002C  
             ?i2___ftdiv 0009               ?i2___ftmul 000F               ?i2___ftsub 0038  
             ?i2___fttol 003E          ___llmod@divisor 0005          ___llmod@counter 0009  
               ??___ftge 0007                 ??___wmul 0005                 ??_fround 0021  
          sprintf@tmpval 006C                 ??_strlen 0003               fround@prec 002B  
            __pbssCOMRAM 0059            __pcstackBANK0 0060            __pcstackBANK1 0100  
              _deg2time1 2162                _deg2time2 2028        i2SettingsLCD@word 0003  
               ?_DataLCD 0001              sprintf@flag 0064              sprintf@eexp 006A  
            sprintf@fval 0072              sprintf@prec 0070                __pintcode 0008  
               ?___awdiv 0007                 ?___lbdiv 0005                 ?___ftadd 0095  
               ?___awmod 0001                 ?___lbmod 0001                 ?___ftdiv 0086  
               ?___ftneg 0001                 ?___lldiv 0001                 ?___ftmul 0086  
               ?___llmod 0001                 ?___ftsub 00A1                __npowers_ 1028  
               ?___fttol 00A7              __tdiv_to_l_ 2508             ??__div_to_l_ 0007  
            __smallconst 1000                 ?_isdigit 0001             ?_SettingsLCD 0001  
             ?_deg2time1 010B               ?_deg2time2 010B              ??i2___ftadd 0032  
               ?_sprintf 004D              ??i2___ftdiv 000F              ??i2___ftmul 0015  
            ??i2___ftsub 003E              ??i2___fttol 0042           ___wmul@product 0005  
               _LATDbits 000F8C                 _LATEbits 000F8D                 i2u303_40 1F66  
               i2u250_40 2DA4                 i2u306_40 1F9A                 i2u411_40 009E  
               i2u341_40 28D0                 i2u421_40 00FC                 i2u246_40 2D26  
               i2u350_40 31C6                 i2u334_40 25F4                 i2u343_40 3070  
               i2u335_40 27FA                 i2u327_40 2522                 i2u360_40 2BB0  
               i2u361_40 2BE0                 i2u361_45 2BD8       __end_of__div_to_l_ 28E2  
               i2u274_40 316E                 i2u268_40 3000                 i2u293_40 1EC2  
               i2u365_40 2C40                 i2u286_40 3380                 i2u382_40 1362  
               i2u374_40 11F2                 i2u374_45 11E8                 i2u296_40 1EEA  
               i2u385_40 1482                 i2u378_40 12EA                 i2u490_47 2FA8  
               i2u299_40 1F28                 i2u379_40 132A                 i2u491_47 2FB2  
               i2u388_40 1554                 i2u396_41 1726                 i2u389_40 1564  
               i2u398_40 1758                 i2u486_47 2F1C                 i2u487_47 2F36  
               i2u488_47 2F56                 i2u489_47 2F7C                _time_high 00B4  
               _TMR1_ISR 0008        ___wmul@multiplier 0001        deg2time1@degrees1 010B  
      deg2time2@degrees2 010B                 __Hrparam 0000                 __Lrparam 0000  
               ___awtoft 339E                 ___ftpack 2C68                 _WriteLCD 34BC  
            _fround$1033 0028              _fround$1034 0025                 ___lltoft 320A  
            _isdigit$767 0002               sprintf@val 0066                 _degrees1 00BA  
               _degrees2 00B7            ??i2_deg2time1 0050            ??i2_deg2time2 0050  
            ??_deg2time1 00AB              ??_deg2time2 00AB                 __ptext10 348A  
               __ptext11 2DC4                 __ptext20 1E80                 __ptext21 1764  
               __ptext13 229C                 __ptext30 27EE                 __ptext22 3134  
               __ptext14 23D2                 __ptext31 3400                 __ptext23 2FBA  
               __ptext15 2AB0                 __ptext40 344A                 __ptext32 320A  
               __ptext24 346C                 __ptext16 34A6                 __ptext41 34BC  
               __ptext33 31A4                 __ptext25 1AFC                 __ptext17 1092  
               __ptext42 2F16                 __ptext34 303E                 __ptext26 26FA  
               __ptext18 2B96                 __ptext35 3426                 __ptext27 33D6  
               __ptext19 32EA                 __ptext36 30C0                 __ptext28 3364  
               __ptext37 339E                 __ptext29 2508                 __ptext38 2D16  
               __ptext39 3266                 __powers_ 1001                 isa$xinst 000000  
               _time_low 00B1                 _settings 2E70                 int$flags 005F  
               isdigit@c 0003                 scale@scl 0028                 intlevel2 0000  
              sprintf@ap 0063         __tdiv_to_l_@exp1 000F                sprintf@sp 004D  
       __tdiv_to_l_@cntr 000E         __tdiv_to_l_@quot 000A      __end_ofi2_deg2time1 2508  
    __end_ofi2_deg2time2 23D2         ___lldiv@dividend 0001             ?__tdiv_to_l_ 0001  
               sprintf@c 0075                 sprintf@f 004E         ___lldiv@quotient 0009  
               strlen@cp 0003          SettingsLCD@word 0080  
