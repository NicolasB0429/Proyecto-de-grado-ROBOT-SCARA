

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Wed Mar 22 17:42:56 2023

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og9 
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=3
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text43,global,reloc=2,class=CODE,delta=1
    56                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    57                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=2
    58                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=2
    59                           	psect	text47,global,reloc=2,class=CODE,delta=1
    60                           	psect	text48,global,reloc=2,class=CODE,delta=1
    61                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=3
    62                           	psect	text50,global,reloc=2,class=CODE,delta=1
    63                           	psect	text51,global,reloc=2,class=CODE,delta=1
    64                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    65                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    66                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    67                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    68                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    69  0000                     
    70                           ; Version 2.36
    71                           ; Generated 28/01/2022 GMT
    72                           ; 
    73                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    74                           ; All rights reserved.
    75                           ; 
    76                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    77                           ; 
    78                           ; Redistribution and use in source and binary forms, with or without modification, are
    79                           ; permitted provided that the following conditions are met:
    80                           ; 
    81                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    82                           ;        conditions and the following disclaimer.
    83                           ; 
    84                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    85                           ;        of conditions and the following disclaimer in the documentation and/or other
    86                           ;        materials provided with the distribution. Publication is not required when
    87                           ;        this file is used in an embedded application.
    88                           ; 
    89                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    90                           ;        software without specific prior written permission.
    91                           ; 
    92                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    93                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    94                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    95                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    96                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    97                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    98                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    99                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   100                           ; 
   101                           ; 
   102                           ; Code-generator required, PIC18F46K22 Definitions
   103                           ; 
   104                           ; SFR Addresses
   105  0000                     
   106                           	psect	idataBANK0
   107  003034                     __pidataBANK0:
   108                           	callstack 0
   109                           
   110                           ;initializer for _flag
   111  003034  0001               	dw	1
   112                           
   113                           	psect	smallconst
   114  001000                     __psmallconst:
   115                           	callstack 0
   116  001000  00                 	db	0
   117  001001                     __powers_:
   118                           	callstack 0
   119  001001  00                 	db	0
   120  001002  80                 	db	128
   121  001003  3F                 	db	63
   122  001004  00                 	db	0
   123  001005  20                 	db	32
   124  001006  41                 	db	65
   125  001007  00                 	db	0
   126  001008  C8                 	db	200
   127  001009  42                 	db	66
   128  00100A  00                 	db	0
   129  00100B  7A                 	db	122
   130  00100C  44                 	db	68
   131  00100D  40                 	db	64
   132  00100E  1C                 	db	28
   133  00100F  46                 	db	70
   134  001010  50                 	db	80
   135  001011  C3                 	db	195
   136  001012  47                 	db	71
   137  001013  24                 	db	36
   138  001014  74                 	db	116
   139  001015  49                 	db	73
   140  001016  97                 	db	151
   141  001017  18                 	db	24
   142  001018  4B                 	db	75
   143  001019  BC                 	db	188
   144  00101A  BE                 	db	190
   145  00101B  4C                 	db	76
   146  00101C  6B                 	db	107
   147  00101D  6E                 	db	110
   148  00101E  4E                 	db	78
   149  00101F  03                 	db	3
   150  001020  15                 	db	21
   151  001021  50                 	db	80
   152  001022  79                 	db	121
   153  001023  AD                 	db	173
   154  001024  60                 	db	96
   155  001025  F3                 	db	243
   156  001026  49                 	db	73
   157  001027  71                 	db	113
   158  001028                     __end_of__powers_:
   159                           	callstack 0
   160  001028                     __npowers_:
   161                           	callstack 0
   162  001028  00                 	db	0
   163  001029  80                 	db	128
   164  00102A  3F                 	db	63
   165  00102B  CD                 	db	205
   166  00102C  CC                 	db	204
   167  00102D  3D                 	db	61
   168  00102E  D7                 	db	215
   169  00102F  23                 	db	35
   170  001030  3C                 	db	60
   171  001031  12                 	db	18
   172  001032  83                 	db	131
   173  001033  3A                 	db	58
   174  001034  B7                 	db	183
   175  001035  D1                 	db	209
   176  001036  38                 	db	56
   177  001037  C6                 	db	198
   178  001038  27                 	db	39
   179  001039  37                 	db	55
   180  00103A  38                 	db	56
   181  00103B  86                 	db	134
   182  00103C  35                 	db	53
   183  00103D  C0                 	db	192
   184  00103E  D6                 	db	214
   185  00103F  33                 	db	51
   186  001040  CC                 	db	204
   187  001041  2B                 	db	43
   188  001042  32                 	db	50
   189  001043  70                 	db	112
   190  001044  89                 	db	137
   191  001045  30                 	db	48
   192  001046  E7                 	db	231
   193  001047  DB                 	db	219
   194  001048  2E                 	db	46
   195  001049  E5                 	db	229
   196  00104A  3C                 	db	60
   197  00104B  1E                 	db	30
   198  00104C  42                 	db	66
   199  00104D  A2                 	db	162
   200  00104E  0D                 	db	13
   201  00104F                     __end_of__npowers_:
   202                           	callstack 0
   203  00104F                     _dpowers:
   204                           	callstack 0
   205  00104F  0001               	dw	1
   206  001051  0000               	dw	0
   207  001053  000A               	dw	10
   208  001055  0000               	dw	0
   209  001057  0064               	dw	100
   210  001059  0000               	dw	0
   211  00105B  03E8               	dw	1000
   212  00105D  0000               	dw	0
   213  00105F  2710               	dw	10000
   214  001061  0000               	dw	0
   215  001063  86A0               	dw	34464
   216  001065  0001               	dw	1
   217  001067  4240               	dw	16960
   218  001069  000F               	dw	15
   219  00106B  9680               	dw	38528
   220  00106D  0098               	dw	152
   221  00106F  E100               	dw	57600
   222  001071  05F5               	dw	1525
   223  001073  CA00               	dw	51712
   224  001075  3B9A               	dw	15258
   225  001077                     __end_of_dpowers:
   226                           	callstack 0
   227  0000                     _SSP1CON2bits	set	4037
   228  0000                     _LATDbits	set	3980
   229  0000                     _LATEbits	set	3981
   230  0000                     _LATD7	set	31847
   231  0000                     _LATD6	set	31846
   232  0000                     _PEIE	set	32662
   233  0000                     _ANSELC	set	3898
   234  0000                     _ANSELD	set	3899
   235  0000                     _OSCCON	set	4051
   236  0000                     _GIE	set	32663
   237  0000                     _LATD	set	3980
   238  0000                     _TRISD	set	3989
   239  0000                     _ANSELE	set	3900
   240  0000                     _RCSTA1	set	4011
   241  0000                     _SPBRG1	set	4015
   242  0000                     _TRISE	set	3990
   243  0000                     _RC1IE	set	31981
   244  0000                     _TRISCbits	set	3988
   245  0000                     _LATE	set	3981
   246  0000                     _SSP1CON2	set	4037
   247  0000                     _SSP1CON1	set	4038
   248  0000                     _SSP1STAT	set	4039
   249  0000                     _RCREG1	set	4014
   250  0000                     _TXSTA1	set	4012
   251  0000                     _RC1IF	set	31989
   252  0000                     _SSP1BUF	set	4041
   253  0000                     _SSP1ADD	set	4040
   254  0000                     _SSP1CON3	set	4043
   255  001077                     STR_1:
   256  001077  53                 	db	83	;'S'
   257  001078  65                 	db	101	;'e'
   258  001079  72                 	db	114	;'r'
   259  00107A  76                 	db	118	;'v'
   260  00107B  6F                 	db	111	;'o'
   261  00107C  20                 	db	32
   262  00107D  31                 	db	49	;'1'
   263  00107E  3A                 	db	58	;':'
   264  00107F  25                 	db	37
   265  001080  2E                 	db	46
   266  001081  32                 	db	50	;'2'
   267  001082  66                 	db	102	;'f'
   268  001083  00                 	db	0
   269  001084                     STR_2:
   270  001084  53                 	db	83	;'S'
   271  001085  65                 	db	101	;'e'
   272  001086  72                 	db	114	;'r'
   273  001087  76                 	db	118	;'v'
   274  001088  6F                 	db	111	;'o'
   275  001089  20                 	db	32
   276  00108A  32                 	db	50	;'2'
   277  00108B  3A                 	db	58	;':'
   278  00108C  25                 	db	37
   279  00108D  2E                 	db	46
   280  00108E  32                 	db	50	;'2'
   281  00108F  66                 	db	102	;'f'
   282  001090  00                 	db	0
   283  001091  00                 	db	0	; dummy byte at the end
   284  0000                     
   285                           ; #config settings
   286                           
   287                           	psect	cinit
   288  002E7C                     __pcinit:
   289                           	callstack 0
   290  002E7C                     start_initialization:
   291                           	callstack 0
   292  002E7C                     __initialization:
   293                           	callstack 0
   294                           
   295                           ; Initialize objects allocated to BANK0 (2 bytes)
   296                           ; load TBLPTR registers with __pidataBANK0
   297  002E7C  0E34               	movlw	low __pidataBANK0
   298  002E7E  6EF6               	movwf	tblptrl,c
   299  002E80  0E30               	movlw	high __pidataBANK0
   300  002E82  6EF7               	movwf	tblptrh,c
   301  002E84  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   302  002E86  6EF8               	movwf	tblptru,c
   303  002E88  0009               	tblrd		*+	;fetch initializer
   304  002E8A  CFF5 F0D6          	movff	tablat,__pdataBANK0
   305  002E8E  0009               	tblrd		*+	;fetch initializer
   306  002E90  CFF5 F0D7          	movff	tablat,__pdataBANK0+1
   307                           
   308                           ; Clear objects allocated to BANK0 (51 bytes)
   309  002E94  EE00  F0A3         	lfsr	0,__pbssBANK0
   310  002E98  0E33               	movlw	51
   311  002E9A                     clear_0:
   312  002E9A  6AEE               	clrf	postinc0,c
   313  002E9C  06E8               	decf	wreg,f,c
   314  002E9E  E1FD               	bnz	clear_0
   315  002EA0                     end_of_initialization:
   316                           	callstack 0
   317  002EA0                     __end_of__initialization:
   318                           	callstack 0
   319  002EA0  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   320  002EA2  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   321  002EA4  0E00               	movlw	low (__Lmediumconst shr (0+16))
   322  002EA6  6EF8               	movwf	tblptru,c
   323  002EA8  0100               	movlb	0
   324  002EAA  EF17  F018         	goto	_main	;jump to C main() function
   325                           
   326                           	psect	bssBANK0
   327  0000A3                     __pbssBANK0:
   328                           	callstack 0
   329  0000A3                     _c:
   330                           	callstack 0
   331  0000A3                     	ds	3
   332  0000A6                     _b:
   333                           	callstack 0
   334  0000A6                     	ds	3
   335  0000A9                     _a:
   336                           	callstack 0
   337  0000A9                     	ds	3
   338  0000AC                     _led:
   339                           	callstack 0
   340  0000AC                     	ds	2
   341  0000AE                     _DriverPin2:
   342                           	callstack 0
   343  0000AE                     	ds	2
   344  0000B0                     _DriverPin1:
   345                           	callstack 0
   346  0000B0                     	ds	2
   347  0000B2                     _pos:
   348                           	callstack 0
   349  0000B2                     	ds	2
   350  0000B4                     _confir:
   351                           	callstack 0
   352  0000B4                     	ds	2
   353  0000B6                     _i:
   354                           	callstack 0
   355  0000B6                     	ds	2
   356  0000B8                     _data1:
   357                           	callstack 0
   358  0000B8                     	ds	1
   359  0000B9                     _servo:
   360                           	callstack 0
   361  0000B9                     	ds	1
   362  0000BA                     _text:
   363                           	callstack 0
   364  0000BA                     	ds	20
   365  0000CE                     _data3:
   366                           	callstack 0
   367  0000CE                     	ds	4
   368  0000D2                     _data2:
   369                           	callstack 0
   370  0000D2                     	ds	4
   371                           
   372                           	psect	dataBANK0
   373  0000D6                     __pdataBANK0:
   374                           	callstack 0
   375  0000D6                     _flag:
   376                           	callstack 0
   377  0000D6                     	ds	2
   378                           
   379                           	psect	cstackBANK0
   380  000060                     __pcstackBANK0:
   381                           	callstack 0
   382  000060                     ??_TMR1_ISR:
   383                           
   384                           ; 1 bytes @ 0x0
   385  000060                     	ds	8
   386  000068                     TMR1_ISR@d:
   387                           	callstack 0
   388                           
   389                           ; 1 bytes @ 0x8
   390  000068                     	ds	1
   391  000069                     ??_LCD:
   392  000069                     ??_readyI2C:
   393  000069                     ?___ftpack:
   394                           	callstack 0
   395  000069                     ___ftpack@arg:
   396                           	callstack 0
   397  000069                     ___ftge@ff1:
   398                           	callstack 0
   399                           
   400                           ; 3 bytes @ 0x9
   401  000069                     	ds	1
   402  00006A                     ??_receiveI2C:
   403  00006A                     LCD@data:
   404                           	callstack 0
   405  00006A                     sendI2C@data:
   406                           	callstack 0
   407                           
   408                           ; 1 bytes @ 0xA
   409  00006A                     	ds	1
   410  00006B                     SettingsLCD@word:
   411                           	callstack 0
   412  00006B                     receiveI2C@flag:
   413                           	callstack 0
   414  00006B                     writeI2C1@Register:
   415                           	callstack 0
   416                           
   417                           ; 1 bytes @ 0xB
   418  00006B                     	ds	1
   419  00006C                     receiveI2C@buffer:
   420                           	callstack 0
   421  00006C                     writeI2C1@Data:
   422                           	callstack 0
   423  00006C                     ___ftpack@exp:
   424                           	callstack 0
   425  00006C                     ___ftge@ff2:
   426                           	callstack 0
   427                           
   428                           ; 3 bytes @ 0xC
   429  00006C                     	ds	1
   430  00006D                     readI2C1@Register:
   431                           	callstack 0
   432  00006D                     writeI2C1@Address:
   433                           	callstack 0
   434  00006D                     ___ftpack@sign:
   435                           	callstack 0
   436                           
   437                           ; 1 bytes @ 0xD
   438  00006D                     	ds	1
   439  00006E                     ??___ftpack:
   440  00006E                     readI2C1@Data:
   441                           	callstack 0
   442                           
   443                           ; 1 bytes @ 0xE
   444  00006E                     	ds	1
   445  00006F                     ??___ftge:
   446  00006F                     readI2C1@bytes:
   447                           	callstack 0
   448                           
   449                           ; 2 bytes @ 0xF
   450  00006F                     	ds	2
   451  000071                     ??_readI2C1:
   452  000071                     ?___lltoft:
   453                           	callstack 0
   454  000071                     ___lltoft@c:
   455                           	callstack 0
   456                           
   457                           ; 4 bytes @ 0x11
   458  000071                     	ds	2
   459  000073                     readI2C1@Address:
   460                           	callstack 0
   461                           
   462                           ; 1 bytes @ 0x13
   463  000073                     	ds	2
   464  000075                     ??___lltoft:
   465                           
   466                           ; 1 bytes @ 0x15
   467  000075                     	ds	4
   468  000079                     ___lltoft@exp:
   469                           	callstack 0
   470                           
   471                           ; 1 bytes @ 0x19
   472  000079                     	ds	1
   473  00007A                     ?___ftdiv:
   474                           	callstack 0
   475  00007A                     ___ftdiv@f1:
   476                           	callstack 0
   477                           
   478                           ; 3 bytes @ 0x1A
   479  00007A                     	ds	3
   480  00007D                     ___ftdiv@f2:
   481                           	callstack 0
   482                           
   483                           ; 3 bytes @ 0x1D
   484  00007D                     	ds	3
   485  000080                     ??___ftdiv:
   486                           
   487                           ; 1 bytes @ 0x20
   488  000080                     	ds	3
   489  000083                     ___ftdiv@cntr:
   490                           	callstack 0
   491                           
   492                           ; 1 bytes @ 0x23
   493  000083                     	ds	1
   494  000084                     ___ftdiv@f3:
   495                           	callstack 0
   496                           
   497                           ; 3 bytes @ 0x24
   498  000084                     	ds	3
   499  000087                     ___ftdiv@exp:
   500                           	callstack 0
   501                           
   502                           ; 1 bytes @ 0x27
   503  000087                     	ds	1
   504  000088                     ___ftdiv@sign:
   505                           	callstack 0
   506                           
   507                           ; 1 bytes @ 0x28
   508  000088                     	ds	1
   509  000089                     ?___fttol:
   510                           	callstack 0
   511  000089                     ___fttol@f1:
   512                           	callstack 0
   513                           
   514                           ; 3 bytes @ 0x29
   515  000089                     	ds	4
   516  00008D                     ??___fttol:
   517                           
   518                           ; 1 bytes @ 0x2D
   519  00008D                     	ds	5
   520  000092                     ___fttol@sign1:
   521                           	callstack 0
   522                           
   523                           ; 1 bytes @ 0x32
   524  000092                     	ds	1
   525  000093                     ___fttol@lval:
   526                           	callstack 0
   527                           
   528                           ; 4 bytes @ 0x33
   529  000093                     	ds	4
   530  000097                     ___fttol@exp1:
   531                           	callstack 0
   532                           
   533                           ; 1 bytes @ 0x37
   534  000097                     	ds	1
   535  000098                     setPWMFreq@freq:
   536                           	callstack 0
   537                           
   538                           ; 3 bytes @ 0x38
   539  000098                     	ds	3
   540  00009B                     ??_setPWMFreq:
   541                           
   542                           ; 1 bytes @ 0x3B
   543  00009B                     	ds	1
   544  00009C                     setPWMFreq@prescale:
   545                           	callstack 0
   546                           
   547                           ; 1 bytes @ 0x3C
   548  00009C                     	ds	1
   549  00009D                     setPWMFreq@prescaleval:
   550                           	callstack 0
   551                           
   552                           ; 4 bytes @ 0x3D
   553  00009D                     	ds	4
   554  0000A1                     ??_settings:
   555                           
   556                           ; 1 bytes @ 0x41
   557  0000A1                     	ds	2
   558  0000A3                     
   559                           ; 1 bytes @ 0x43
   560                           
   561                           	psect	cstackCOMRAM
   562  000001                     __pcstackCOMRAM:
   563                           	callstack 0
   564  000001                     ??_isdigit:
   565  000001                     ??i2_LCD:
   566  000001                     ??i2_readyI2C:
   567  000001                     ?_strlen:
   568                           	callstack 0
   569  000001                     ?___awmod:
   570                           	callstack 0
   571  000001                     ?___ftneg:
   572                           	callstack 0
   573  000001                     ?i2___ftpack:
   574                           	callstack 0
   575  000001                     ?__tdiv_to_l_:
   576                           	callstack 0
   577  000001                     ?__div_to_l_:
   578                           	callstack 0
   579  000001                     ?___lldiv:
   580                           	callstack 0
   581  000001                     ?___llmod:
   582                           	callstack 0
   583  000001                     ___lbmod@divisor:
   584                           	callstack 0
   585  000001                     strlen@s:
   586                           	callstack 0
   587  000001                     ___awmod@dividend:
   588                           	callstack 0
   589  000001                     __div_to_l_@f1:
   590                           	callstack 0
   591  000001                     __tdiv_to_l_@f1:
   592                           	callstack 0
   593  000001                     ___ftneg@f1:
   594                           	callstack 0
   595  000001                     i2___ftpack@arg:
   596                           	callstack 0
   597  000001                     i2___ftge@ff1:
   598                           	callstack 0
   599  000001                     ___lldiv@dividend:
   600                           	callstack 0
   601  000001                     ___llmod@dividend:
   602                           	callstack 0
   603                           
   604                           ; 4 bytes @ 0x0
   605  000001                     	ds	1
   606  000002                     ___lbmod@dividend:
   607                           	callstack 0
   608  000002                     _isdigit$922:
   609                           	callstack 0
   610  000002                     i2LCD@data:
   611                           	callstack 0
   612  000002                     i2sendI2C@data:
   613                           	callstack 0
   614                           
   615                           ; 1 bytes @ 0x1
   616  000002                     	ds	1
   617  000003                     WriteLCD@word:
   618                           	callstack 0
   619  000003                     writeI2C@Register:
   620                           	callstack 0
   621  000003                     ___lbmod@counter:
   622                           	callstack 0
   623  000003                     isdigit@c:
   624                           	callstack 0
   625  000003                     strlen@cp:
   626                           	callstack 0
   627  000003                     i2SettingsLCD@word:
   628                           	callstack 0
   629  000003                     ___awmod@divisor:
   630                           	callstack 0
   631                           
   632                           ; 2 bytes @ 0x2
   633  000003                     	ds	1
   634  000004                     ??_DataLCD:
   635  000004                     writeI2C@Data:
   636                           	callstack 0
   637  000004                     ___lbmod@rem:
   638                           	callstack 0
   639  000004                     i2___ftpack@exp:
   640                           	callstack 0
   641  000004                     __div_to_l_@f2:
   642                           	callstack 0
   643  000004                     __tdiv_to_l_@f2:
   644                           	callstack 0
   645  000004                     i2___ftge@ff2:
   646                           	callstack 0
   647                           
   648                           ; 3 bytes @ 0x3
   649  000004                     	ds	1
   650  000005                     ___awmod@counter:
   651                           	callstack 0
   652  000005                     ___lbdiv@divisor:
   653                           	callstack 0
   654  000005                     i2___ftpack@sign:
   655                           	callstack 0
   656  000005                     writeI2C@bytes:
   657                           	callstack 0
   658  000005                     ___lldiv@divisor:
   659                           	callstack 0
   660  000005                     ___llmod@divisor:
   661                           	callstack 0
   662                           
   663                           ; 4 bytes @ 0x4
   664  000005                     	ds	1
   665  000006                     ??i2___ftpack:
   666  000006                     ___awmod@sign:
   667                           	callstack 0
   668  000006                     ___lbdiv@dividend:
   669                           	callstack 0
   670                           
   671                           ; 1 bytes @ 0x5
   672  000006                     	ds	1
   673  000007                     ??__tdiv_to_l_:
   674  000007                     ??i2___ftge:
   675  000007                     ?___awdiv:
   676                           	callstack 0
   677  000007                     writeI2C@Address:
   678                           	callstack 0
   679  000007                     ___lbdiv@counter:
   680                           	callstack 0
   681  000007                     ___awdiv@dividend:
   682                           	callstack 0
   683  000007                     __div_to_l_@quot:
   684                           	callstack 0
   685                           
   686                           ; 4 bytes @ 0x6
   687  000007                     	ds	1
   688  000008                     ___lbdiv@quotient:
   689                           	callstack 0
   690                           
   691                           ; 1 bytes @ 0x7
   692  000008                     	ds	1
   693  000009                     ?___awtoft:
   694                           	callstack 0
   695  000009                     ?i2___lltoft:
   696                           	callstack 0
   697  000009                     ___llmod@counter:
   698                           	callstack 0
   699  000009                     ___awdiv@divisor:
   700                           	callstack 0
   701  000009                     ___awtoft@c:
   702                           	callstack 0
   703  000009                     ___lldiv@quotient:
   704                           	callstack 0
   705  000009                     i2___lltoft@c:
   706                           	callstack 0
   707                           
   708                           ; 4 bytes @ 0x8
   709  000009                     	ds	1
   710  00000A                     __tdiv_to_l_@quot:
   711                           	callstack 0
   712                           
   713                           ; 4 bytes @ 0x9
   714  00000A                     	ds	1
   715  00000B                     ___awdiv@counter:
   716                           	callstack 0
   717  00000B                     __div_to_l_@cntr:
   718                           	callstack 0
   719                           
   720                           ; 1 bytes @ 0xA
   721  00000B                     	ds	1
   722  00000C                     ___awdiv@sign:
   723                           	callstack 0
   724  00000C                     ___awtoft@sign:
   725                           	callstack 0
   726  00000C                     __div_to_l_@exp1:
   727                           	callstack 0
   728                           
   729                           ; 1 bytes @ 0xB
   730  00000C                     	ds	1
   731  00000D                     ??i2___lltoft:
   732  00000D                     ___lldiv@counter:
   733                           	callstack 0
   734  00000D                     ___awdiv@quotient:
   735                           	callstack 0
   736                           
   737                           ; 2 bytes @ 0xC
   738  00000D                     	ds	1
   739  00000E                     __tdiv_to_l_@cntr:
   740                           	callstack 0
   741                           
   742                           ; 1 bytes @ 0xD
   743  00000E                     	ds	1
   744  00000F                     ?___wmul:
   745                           	callstack 0
   746  00000F                     ?___ftmul:
   747                           	callstack 0
   748  00000F                     __tdiv_to_l_@exp1:
   749                           	callstack 0
   750  00000F                     ___wmul@multiplier:
   751                           	callstack 0
   752  00000F                     ___ftmul@f1:
   753                           	callstack 0
   754                           
   755                           ; 3 bytes @ 0xE
   756  00000F                     	ds	2
   757  000011                     i2___lltoft@exp:
   758                           	callstack 0
   759  000011                     ___wmul@multiplicand:
   760                           	callstack 0
   761                           
   762                           ; 2 bytes @ 0x10
   763  000011                     	ds	1
   764  000012                     ___ftmul@f2:
   765                           	callstack 0
   766                           
   767                           ; 3 bytes @ 0x11
   768  000012                     	ds	1
   769  000013                     ___wmul@product:
   770                           	callstack 0
   771                           
   772                           ; 2 bytes @ 0x12
   773  000013                     	ds	2
   774  000015                     ??___ftmul:
   775                           
   776                           ; 1 bytes @ 0x14
   777  000015                     	ds	3
   778  000018                     ___ftmul@exp:
   779                           	callstack 0
   780                           
   781                           ; 1 bytes @ 0x17
   782  000018                     	ds	1
   783  000019                     ___ftmul@f3_as_product:
   784                           	callstack 0
   785                           
   786                           ; 3 bytes @ 0x18
   787  000019                     	ds	3
   788  00001C                     ___ftmul@cntr:
   789                           	callstack 0
   790                           
   791                           ; 1 bytes @ 0x1B
   792  00001C                     	ds	1
   793  00001D                     ___ftmul@sign:
   794                           	callstack 0
   795                           
   796                           ; 1 bytes @ 0x1C
   797  00001D                     	ds	1
   798  00001E                     ?_fround:
   799                           	callstack 0
   800  00001E                     ?_scale:
   801                           	callstack 0
   802                           
   803                           ; 3 bytes @ 0x1D
   804  00001E                     	ds	3
   805  000021                     ??_fround:
   806  000021                     ??_scale:
   807                           
   808                           ; 1 bytes @ 0x20
   809  000021                     	ds	4
   810  000025                     _fround$1114:
   811                           	callstack 0
   812  000025                     _scale$1115:
   813                           	callstack 0
   814                           
   815                           ; 3 bytes @ 0x24
   816  000025                     	ds	3
   817  000028                     scale@scl:
   818                           	callstack 0
   819  000028                     _fround$1113:
   820                           	callstack 0
   821                           
   822                           ; 3 bytes @ 0x27
   823  000028                     	ds	1
   824  000029                     ?i2___fttol:
   825                           	callstack 0
   826  000029                     i2___fttol@f1:
   827                           	callstack 0
   828                           
   829                           ; 3 bytes @ 0x28
   830  000029                     	ds	2
   831  00002B                     fround@prec:
   832                           	callstack 0
   833                           
   834                           ; 1 bytes @ 0x2A
   835  00002B                     	ds	1
   836  00002C                     ?___ftadd:
   837                           	callstack 0
   838  00002C                     ___ftadd@f1:
   839                           	callstack 0
   840                           
   841                           ; 3 bytes @ 0x2B
   842  00002C                     	ds	1
   843  00002D                     ??i2___fttol:
   844                           
   845                           ; 1 bytes @ 0x2C
   846  00002D                     	ds	2
   847  00002F                     ___ftadd@f2:
   848                           	callstack 0
   849                           
   850                           ; 3 bytes @ 0x2E
   851  00002F                     	ds	3
   852  000032                     ??___ftadd:
   853  000032                     i2___fttol@sign1:
   854                           	callstack 0
   855                           
   856                           ; 1 bytes @ 0x31
   857  000032                     	ds	1
   858  000033                     i2___fttol@lval:
   859                           	callstack 0
   860                           
   861                           ; 4 bytes @ 0x32
   862  000033                     	ds	2
   863  000035                     ___ftadd@sign:
   864                           	callstack 0
   865                           
   866                           ; 1 bytes @ 0x34
   867  000035                     	ds	1
   868  000036                     ___ftadd@exp2:
   869                           	callstack 0
   870                           
   871                           ; 1 bytes @ 0x35
   872  000036                     	ds	1
   873  000037                     ___ftadd@exp1:
   874                           	callstack 0
   875  000037                     i2___fttol@exp1:
   876                           	callstack 0
   877                           
   878                           ; 1 bytes @ 0x36
   879  000037                     	ds	1
   880  000038                     ?_map:
   881                           	callstack 0
   882  000038                     ?___ftsub:
   883                           	callstack 0
   884  000038                     map@x:
   885                           	callstack 0
   886  000038                     ___ftsub@f1:
   887                           	callstack 0
   888                           
   889                           ; 3 bytes @ 0x37
   890  000038                     	ds	2
   891  00003A                     map@In_Min:
   892                           	callstack 0
   893                           
   894                           ; 2 bytes @ 0x39
   895  00003A                     	ds	1
   896  00003B                     ___ftsub@f2:
   897                           	callstack 0
   898                           
   899                           ; 3 bytes @ 0x3A
   900  00003B                     	ds	1
   901  00003C                     map@In_Max:
   902                           	callstack 0
   903                           
   904                           ; 2 bytes @ 0x3B
   905  00003C                     	ds	2
   906  00003E                     ?_sprintf:
   907                           	callstack 0
   908  00003E                     sprintf@sp:
   909                           	callstack 0
   910  00003E                     map@Out_Min:
   911                           	callstack 0
   912                           
   913                           ; 2 bytes @ 0x3D
   914  00003E                     	ds	1
   915  00003F                     sprintf@f:
   916                           	callstack 0
   917                           
   918                           ; 1 bytes @ 0x3E
   919  00003F                     	ds	1
   920  000040                     map@Out_Max:
   921                           	callstack 0
   922                           
   923                           ; 2 bytes @ 0x3F
   924  000040                     	ds	2
   925  000042                     
   926                           ; 1 bytes @ 0x41
   927  000042                     	ds	1
   928  000043                     ??_sprintf:
   929                           
   930                           ; 1 bytes @ 0x42
   931  000043                     	ds	6
   932  000049                     _sprintf$1116:
   933                           	callstack 0
   934                           
   935                           ; 3 bytes @ 0x48
   936  000049                     	ds	3
   937  00004C                     sprintf@ap:
   938                           	callstack 0
   939                           
   940                           ; 1 bytes @ 0x4B
   941  00004C                     	ds	1
   942  00004D                     sprintf@flag:
   943                           	callstack 0
   944                           
   945                           ; 2 bytes @ 0x4C
   946  00004D                     	ds	2
   947  00004F                     sprintf@val:
   948                           	callstack 0
   949                           
   950                           ; 4 bytes @ 0x4E
   951  00004F                     	ds	4
   952  000053                     sprintf@eexp:
   953                           	callstack 0
   954                           
   955                           ; 2 bytes @ 0x52
   956  000053                     	ds	2
   957  000055                     sprintf@tmpval:
   958                           	callstack 0
   959                           
   960                           ; 4 bytes @ 0x54
   961  000055                     	ds	4
   962  000059                     sprintf@prec:
   963                           	callstack 0
   964                           
   965                           ; 2 bytes @ 0x58
   966  000059                     	ds	2
   967  00005B                     sprintf@fval:
   968                           	callstack 0
   969                           
   970                           ; 3 bytes @ 0x5A
   971  00005B                     	ds	3
   972  00005E                     sprintf@c:
   973                           	callstack 0
   974                           
   975                           ; 1 bytes @ 0x5D
   976  00005E                     	ds	1
   977                           
   978 ;;
   979 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   980 ;;
   981 ;; *************** function _main *****************
   982 ;; Defined at:
   983 ;;		line 93 in file "PIC18F46K22_PCA9685_ROBOR_2R.c"
   984 ;; Parameters:    Size  Location     Type
   985 ;;		None
   986 ;; Auto vars:     Size  Location     Type
   987 ;;		None
   988 ;; Return value:  Size  Location     Type
   989 ;;                  1    wreg      void 
   990 ;; Registers used:
   991 ;;		wreg, status,2, status,0, cstack
   992 ;; Tracked objects:
   993 ;;		On entry : 0/0
   994 ;;		On exit  : 0/0
   995 ;;		Unchanged: 0/0
   996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   997 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   998 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   999 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1000 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1001 ;;Total ram usage:        0 bytes
  1002 ;; Hardware stack levels required when called: 10
  1003 ;; This function calls:
  1004 ;;		_settings
  1005 ;; This function is called by:
  1006 ;;		Startup code after reset
  1007 ;; This function uses a non-reentrant model
  1008 ;;
  1009                           
  1010                           	psect	text0
  1011  00302E                     __ptext0:
  1012                           	callstack 0
  1013  00302E                     _main:
  1014                           	callstack 21
  1015                           
  1016                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 94: settings();
  1017                           
  1018                           ;incstack = 0
  1019  00302E  ECDB  F011         	call	_settings	;wreg free
  1020  003032                     l123:
  1021  003032  D7FF               	goto	l123
  1022  003034                     __end_of_main:
  1023                           	callstack 0
  1024                           
  1025 ;; *************** function _settings *****************
  1026 ;; Defined at:
  1027 ;;		line 100 in file "PIC18F46K22_PCA9685_ROBOR_2R.c"
  1028 ;; Parameters:    Size  Location     Type
  1029 ;;		None
  1030 ;; Auto vars:     Size  Location     Type
  1031 ;;		None
  1032 ;; Return value:  Size  Location     Type
  1033 ;;                  1    wreg      void 
  1034 ;; Registers used:
  1035 ;;		wreg, status,2, status,0, cstack
  1036 ;; Tracked objects:
  1037 ;;		On entry : 0/0
  1038 ;;		On exit  : 0/0
  1039 ;;		Unchanged: 0/0
  1040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1041 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1042 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1043 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1044 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1045 ;;Total ram usage:        2 bytes
  1046 ;; Hardware stack levels used: 1
  1047 ;; Hardware stack levels required when called: 9
  1048 ;; This function calls:
  1049 ;;		_SettingsLCD
  1050 ;;		_setPWMFreq
  1051 ;;		_writeI2C1
  1052 ;; This function is called by:
  1053 ;;		_main
  1054 ;; This function uses a non-reentrant model
  1055 ;;
  1056                           
  1057                           	psect	text1
  1058  0023B6                     __ptext1:
  1059                           	callstack 0
  1060  0023B6                     _settings:
  1061                           	callstack 21
  1062                           
  1063                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 101: OSCCON = 0x72;
  1064                           
  1065                           ;incstack = 0
  1066  0023B6  0E72               	movlw	114
  1067  0023B8  6ED3               	movwf	211,c	;volatile
  1068                           
  1069                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 102: ANSELD = 0x00;
  1070  0023BA  0E00               	movlw	0
  1071  0023BC  010F               	movlb	15	; () banked
  1072  0023BE  6F3B               	movwf	59,b	;volatile
  1073                           
  1074                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 103: ANSELE = 0x00;
  1075  0023C0  0E00               	movlw	0
  1076  0023C2  6F3C               	movwf	60,b	;volatile
  1077                           
  1078                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 104: ANSELC = 0x00;
  1079  0023C4  0E00               	movlw	0
  1080  0023C6  6F3A               	movwf	58,b	;volatile
  1081                           
  1082                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 107: TRISD = 0;
  1083  0023C8  0E00               	movlw	0
  1084  0023CA  6E95               	movwf	149,c	;volatile
  1085                           
  1086                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 108: TRISE = 0;
  1087  0023CC  0E00               	movlw	0
  1088  0023CE  6E96               	movwf	150,c	;volatile
  1089                           
  1090                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 109: LATD = 0;
  1091  0023D0  0E00               	movlw	0
  1092  0023D2  6E8C               	movwf	140,c	;volatile
  1093                           
  1094                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 110: LATE = 0;
  1095  0023D4  0E00               	movlw	0
  1096  0023D6  6E8D               	movwf	141,c	;volatile
  1097                           
  1098                           ; BSR set to: 15
  1099                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 112: SettingsLCD(0x02);
  1100  0023D8  0E02               	movlw	2
  1101  0023DA  ECC0  F017         	call	_SettingsLCD
  1102                           
  1103                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 113: SettingsLCD(0x06);
  1104  0023DE  0E06               	movlw	6
  1105  0023E0  ECC0  F017         	call	_SettingsLCD
  1106                           
  1107                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 114: SettingsLCD(0x0F);
  1108  0023E4  0E0F               	movlw	15
  1109  0023E6  ECC0  F017         	call	_SettingsLCD
  1110                           
  1111                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 115: SettingsLCD(0x28);
  1112  0023EA  0E28               	movlw	40
  1113  0023EC  ECC0  F017         	call	_SettingsLCD
  1114                           
  1115                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 116: SettingsLCD(0x01);
  1116  0023F0  0E01               	movlw	1
  1117  0023F2  ECC0  F017         	call	_SettingsLCD
  1118                           
  1119                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 119: TRISCbits.TRISC6 = 0;
  1120  0023F6  9C94               	bcf	148,6,c	;volatile
  1121                           
  1122                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 120: TRISCbits.TRISC7 = 1;
  1123  0023F8  8E94               	bsf	148,7,c	;volatile
  1124                           
  1125                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 121: SPBRG1 = 0x19;
  1126  0023FA  0E19               	movlw	25
  1127  0023FC  6EAF               	movwf	175,c	;volatile
  1128                           
  1129                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 122: RCSTA1 = 0x90;
  1130  0023FE  0E90               	movlw	144
  1131  002400  6EAB               	movwf	171,c	;volatile
  1132                           
  1133                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 123: TXSTA1 = 0x20;
  1134  002402  0E20               	movlw	32
  1135  002404  6EAC               	movwf	172,c	;volatile
  1136                           
  1137                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 125: GIE = 1;
  1138  002406  8EF2               	bsf	4082,7,c	;volatile
  1139                           
  1140                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 126: PEIE = 1;
  1141  002408  8CF2               	bsf	4082,6,c	;volatile
  1142                           
  1143                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 129: RC1IE = 1;
  1144  00240A  8A9D               	bsf	3997,5,c	;volatile
  1145                           
  1146                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 130: RC1IF = 0;
  1147  00240C  9A9E               	bcf	3998,5,c	;volatile
  1148                           
  1149                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 133: TRISCbits.RC3 = 1;
  1150  00240E  8694               	bsf	148,3,c	;volatile
  1151                           
  1152                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 134: TRISCbits.RC4 = 1;
  1153  002410  8894               	bsf	148,4,c	;volatile
  1154                           
  1155                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 136: SSP1STAT = 0x80;
  1156  002412  0E80               	movlw	128
  1157  002414  6EC7               	movwf	199,c	;volatile
  1158                           
  1159                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 137: SSP1CON1 = 0x28;
  1160  002416  0E28               	movlw	40
  1161  002418  6EC6               	movwf	198,c	;volatile
  1162                           
  1163                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 138: SSP1CON2 = 0x00;
  1164  00241A  0E00               	movlw	0
  1165  00241C  6EC5               	movwf	197,c	;volatile
  1166                           
  1167                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 139: SSP1CON3 = 0x00;
  1168  00241E  0E00               	movlw	0
  1169  002420  6ECB               	movwf	203,c	;volatile
  1170                           
  1171                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 140: SSP1ADD = 0x27;
  1172  002422  0E27               	movlw	39
  1173  002424  6EC8               	movwf	200,c	;volatile
  1174                           
  1175                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 142: writeI2C1(0x80, 0x00, 0x80);
  1176  002426  0E00               	movlw	0
  1177  002428  0100               	movlb	0	; () banked
  1178  00242A  6F6B               	movwf	writeI2C1@Register& (0+255),b
  1179  00242C  0E80               	movlw	128
  1180  00242E  6F6C               	movwf	writeI2C1@Data& (0+255),b
  1181  002430  0E80               	movlw	128
  1182  002432  ECA2  F017         	call	_writeI2C1
  1183                           
  1184                           ; BSR set to: 0
  1185                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 143: _delay((unsigned long)((10)*(16000000/4000.0)));
  1186  002436  0E34               	movlw	52
  1187  002438  0100               	movlb	0	; () banked
  1188  00243A  6FA1               	movwf	??_settings& (0+255),b
  1189  00243C  0EF1               	movlw	241
  1190  00243E                     u3857:
  1191  00243E  2EE8               	decfsz	wreg,f,c
  1192  002440  D7FE               	bra	u3857
  1193  002442  2FA1               	decfsz	??_settings& (0+255),f,b
  1194  002444  D7FC               	bra	u3857
  1195  002446  D000               	nop2	
  1196                           
  1197                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 145: setPWMFreq(1000);
  1198  002448  0E00               	movlw	0
  1199  00244A  0100               	movlb	0	; () banked
  1200  00244C  6F98               	movwf	setPWMFreq@freq& (0+255),b
  1201  00244E  0E7A               	movlw	122
  1202  002450  6F99               	movwf	(setPWMFreq@freq+1)& (0+255),b
  1203  002452  0E44               	movlw	68
  1204  002454  6F9A               	movwf	(setPWMFreq@freq+2)& (0+255),b
  1205  002456  EC31  F00F         	call	_setPWMFreq	;wreg free
  1206                           
  1207                           ; BSR set to: 0
  1208                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 147: setPWMFreq(50);
  1209  00245A  0E00               	movlw	0
  1210  00245C  6F98               	movwf	setPWMFreq@freq& (0+255),b
  1211  00245E  0E48               	movlw	72
  1212  002460  6F99               	movwf	(setPWMFreq@freq+1)& (0+255),b
  1213  002462  0E42               	movlw	66
  1214  002464  6F9A               	movwf	(setPWMFreq@freq+2)& (0+255),b
  1215  002466  EC31  F00F         	call	_setPWMFreq	;wreg free
  1216                           
  1217                           ; BSR set to: 0
  1218                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 148: _delay((unsigned long)((300)*(16000000/4000.0)));
  1219  00246A  0E07               	movlw	7
  1220  00246C  0100               	movlb	0	; () banked
  1221  00246E  6FA2               	movwf	(??_settings+1)& (0+255),b
  1222  002470  0E17               	movlw	23
  1223  002472  6FA1               	movwf	??_settings& (0+255),b
  1224  002474  0E6A               	movlw	106
  1225  002476                     u3867:
  1226  002476  2EE8               	decfsz	wreg,f,c
  1227  002478  D7FE               	bra	u3867
  1228  00247A  2FA1               	decfsz	??_settings& (0+255),f,b
  1229  00247C  D7FC               	bra	u3867
  1230  00247E  2FA2               	decfsz	(??_settings+1)& (0+255),f,b
  1231  002480  D7FA               	bra	u3867
  1232  002482  F000               	nop	
  1233                           
  1234                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 151: LATD6 = 1;
  1235  002484  8C8C               	bsf	3980,6,c	;volatile
  1236                           
  1237                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 152: LATD7 = 1;
  1238  002486  8E8C               	bsf	3980,7,c	;volatile
  1239  002488  0012               	return		;funcret
  1240  00248A                     __end_of_settings:
  1241                           	callstack 0
  1242                           
  1243 ;; *************** function _setPWMFreq *****************
  1244 ;; Defined at:
  1245 ;;		line 346 in file "PIC18F46K22_PCA9685_ROBOR_2R.c"
  1246 ;; Parameters:    Size  Location     Type
  1247 ;;  freq            3   56[BANK0 ] float 
  1248 ;; Auto vars:     Size  Location     Type
  1249 ;;  prescaleval     4   61[BANK0 ] unsigned long 
  1250 ;;  newmode         1    0        unsigned char 
  1251 ;;  prescale        1   60[BANK0 ] unsigned char 
  1252 ;; Return value:  Size  Location     Type
  1253 ;;                  1    wreg      void 
  1254 ;; Registers used:
  1255 ;;		wreg, status,2, status,0, cstack
  1256 ;; Tracked objects:
  1257 ;;		On entry : 3F/0
  1258 ;;		On exit  : 3F/0
  1259 ;;		Unchanged: 0/0
  1260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1261 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1262 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1263 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1264 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1265 ;;Total ram usage:        9 bytes
  1266 ;; Hardware stack levels used: 1
  1267 ;; Hardware stack levels required when called: 8
  1268 ;; This function calls:
  1269 ;;		___ftdiv
  1270 ;;		___ftge
  1271 ;;		___fttol
  1272 ;;		___lltoft
  1273 ;;		_readI2C1
  1274 ;;		_writeI2C1
  1275 ;; This function is called by:
  1276 ;;		_settings
  1277 ;; This function uses a non-reentrant model
  1278 ;;
  1279                           
  1280                           	psect	text2
  1281  001E62                     __ptext2:
  1282                           	callstack 0
  1283  001E62                     _setPWMFreq:
  1284                           	callstack 21
  1285                           
  1286                           ; BSR set to: 0
  1287                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 348: if (freq < 1) freq = 1;
  1288                           
  1289                           ;incstack = 0
  1290  001E62  C098  F069         	movff	setPWMFreq@freq,___ftge@ff1
  1291  001E66  C099  F06A         	movff	setPWMFreq@freq+1,___ftge@ff1+1
  1292  001E6A  C09A  F06B         	movff	setPWMFreq@freq+2,___ftge@ff1+2
  1293  001E6E  0E00               	movlw	0
  1294  001E70  6F6C               	movwf	___ftge@ff2& (0+255),b
  1295  001E72  0E80               	movlw	128
  1296  001E74  6F6D               	movwf	(___ftge@ff2+1)& (0+255),b
  1297  001E76  0E3F               	movlw	63
  1298  001E78  6F6E               	movwf	(___ftge@ff2+2)& (0+255),b
  1299  001E7A  ECF1  F014         	call	___ftge	;wreg free
  1300  001E7E  B0D8               	btfsc	status,0,c
  1301  001E80  D006               	goto	l3047
  1302                           
  1303                           ; BSR set to: 0
  1304  001E82  0E00               	movlw	0
  1305  001E84  6F98               	movwf	setPWMFreq@freq& (0+255),b
  1306  001E86  0E80               	movlw	128
  1307  001E88  6F99               	movwf	(setPWMFreq@freq+1)& (0+255),b
  1308  001E8A  0E3F               	movlw	63
  1309  001E8C  6F9A               	movwf	(setPWMFreq@freq+2)& (0+255),b
  1310  001E8E                     l3047:
  1311                           
  1312                           ; BSR set to: 0
  1313                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 349: if (freq > 3500) freq = 3500;
  1314  001E8E  0EC0               	movlw	192
  1315  001E90  6F69               	movwf	___ftge@ff1& (0+255),b
  1316  001E92  0E5A               	movlw	90
  1317  001E94  6F6A               	movwf	(___ftge@ff1+1)& (0+255),b
  1318  001E96  0E45               	movlw	69
  1319  001E98  6F6B               	movwf	(___ftge@ff1+2)& (0+255),b
  1320  001E9A  C098  F06C         	movff	setPWMFreq@freq,___ftge@ff2
  1321  001E9E  C099  F06D         	movff	setPWMFreq@freq+1,___ftge@ff2+1
  1322  001EA2  C09A  F06E         	movff	setPWMFreq@freq+2,___ftge@ff2+2
  1323  001EA6  ECF1  F014         	call	___ftge	;wreg free
  1324  001EAA  B0D8               	btfsc	status,0,c
  1325  001EAC  D006               	goto	l210
  1326                           
  1327                           ; BSR set to: 0
  1328  001EAE  0EC0               	movlw	192
  1329  001EB0  6F98               	movwf	setPWMFreq@freq& (0+255),b
  1330  001EB2  0E5A               	movlw	90
  1331  001EB4  6F99               	movwf	(setPWMFreq@freq+1)& (0+255),b
  1332  001EB6  0E45               	movlw	69
  1333  001EB8  6F9A               	movwf	(setPWMFreq@freq+2)& (0+255),b
  1334  001EBA                     l210:
  1335                           
  1336                           ; BSR set to: 0
  1337                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 354: unsigned long prescaleval = 26075000;
  1338  001EBA  0E78               	movlw	120
  1339  001EBC  6F9D               	movwf	setPWMFreq@prescaleval& (0+255),b
  1340  001EBE  0EDF               	movlw	223
  1341  001EC0  6F9E               	movwf	(setPWMFreq@prescaleval+1)& (0+255),b
  1342  001EC2  0E8D               	movlw	141
  1343  001EC4  6F9F               	movwf	(setPWMFreq@prescaleval+2)& (0+255),b
  1344  001EC6  0E01               	movlw	1
  1345  001EC8  6FA0               	movwf	(setPWMFreq@prescaleval+3)& (0+255),b
  1346                           
  1347                           ; BSR set to: 0
  1348                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 355: prescaleval /= freq;
  1349  001ECA  C098  F07D         	movff	setPWMFreq@freq,___ftdiv@f2
  1350  001ECE  C099  F07E         	movff	setPWMFreq@freq+1,___ftdiv@f2+1
  1351  001ED2  C09A  F07F         	movff	setPWMFreq@freq+2,___ftdiv@f2+2
  1352  001ED6  C09D  F071         	movff	setPWMFreq@prescaleval,___lltoft@c
  1353  001EDA  C09E  F072         	movff	setPWMFreq@prescaleval+1,___lltoft@c+1
  1354  001EDE  C09F  F073         	movff	setPWMFreq@prescaleval+2,___lltoft@c+2
  1355  001EE2  C0A0  F074         	movff	setPWMFreq@prescaleval+3,___lltoft@c+3
  1356  001EE6  EC05  F016         	call	___lltoft	;wreg free
  1357  001EEA  C071  F07A         	movff	?___lltoft,___ftdiv@f1
  1358  001EEE  C072  F07B         	movff	?___lltoft+1,___ftdiv@f1+1
  1359  001EF2  C073  F07C         	movff	?___lltoft+2,___ftdiv@f1+2
  1360  001EF6  EC68  F011         	call	___ftdiv	;wreg free
  1361  001EFA  C07A  F089         	movff	?___ftdiv,___fttol@f1
  1362  001EFE  C07B  F08A         	movff	?___ftdiv+1,___fttol@f1+1
  1363  001F02  C07C  F08B         	movff	?___ftdiv+2,___fttol@f1+2
  1364  001F06  EC45  F012         	call	___fttol	;wreg free
  1365  001F0A  C089  F09D         	movff	?___fttol,setPWMFreq@prescaleval
  1366  001F0E  C08A  F09E         	movff	?___fttol+1,setPWMFreq@prescaleval+1
  1367  001F12  C08B  F09F         	movff	?___fttol+2,setPWMFreq@prescaleval+2
  1368  001F16  C08C  F0A0         	movff	?___fttol+3,setPWMFreq@prescaleval+3
  1369                           
  1370                           ; BSR set to: 0
  1371                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 357: prescaleval += 2048;
  1372  001F1A  0E00               	movlw	0
  1373  001F1C  279D               	addwf	setPWMFreq@prescaleval& (0+255),f,b
  1374  001F1E  0E08               	movlw	8
  1375  001F20  239E               	addwfc	(setPWMFreq@prescaleval+1)& (0+255),f,b
  1376  001F22  0E00               	movlw	0
  1377  001F24  239F               	addwfc	(setPWMFreq@prescaleval+2)& (0+255),f,b
  1378  001F26  0E00               	movlw	0
  1379  001F28  23A0               	addwfc	(setPWMFreq@prescaleval+3)& (0+255),f,b
  1380                           
  1381                           ; BSR set to: 0
  1382                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 358: prescaleval /= 4096;
  1383  001F2A  0E0C               	movlw	12
  1384  001F2C  6F9B               	movwf	??_setPWMFreq& (0+255),b
  1385  001F2E                     u2795:
  1386  001F2E  90D8               	bcf	status,0,c
  1387  001F30  33A0               	rrcf	(setPWMFreq@prescaleval+3)& (0+255),f,b
  1388  001F32  339F               	rrcf	(setPWMFreq@prescaleval+2)& (0+255),f,b
  1389  001F34  339E               	rrcf	(setPWMFreq@prescaleval+1)& (0+255),f,b
  1390  001F36  339D               	rrcf	setPWMFreq@prescaleval& (0+255),f,b
  1391  001F38  2F9B               	decfsz	??_setPWMFreq& (0+255),f,b
  1392  001F3A  D7F9               	goto	u2795
  1393                           
  1394                           ; BSR set to: 0
  1395                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 359: prescaleval -= 1;
  1396  001F3C  079D               	decf	setPWMFreq@prescaleval& (0+255),f,b
  1397  001F3E  0E00               	movlw	0
  1398  001F40  5B9E               	subwfb	(setPWMFreq@prescaleval+1)& (0+255),f,b
  1399  001F42  5B9F               	subwfb	(setPWMFreq@prescaleval+2)& (0+255),f,b
  1400  001F44  5BA0               	subwfb	(setPWMFreq@prescaleval+3)& (0+255),f,b
  1401                           
  1402                           ; BSR set to: 0
  1403                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 360: if (prescaleval < 3) prescaleval = 3;
  1404  001F46  51A0               	movf	(setPWMFreq@prescaleval+3)& (0+255),w,b
  1405  001F48  119F               	iorwf	(setPWMFreq@prescaleval+2)& (0+255),w,b
  1406  001F4A  119E               	iorwf	(setPWMFreq@prescaleval+1)& (0+255),w,b
  1407  001F4C  E10C               	bnz	l3063
  1408  001F4E  0E03               	movlw	3
  1409  001F50  5D9D               	subwf	setPWMFreq@prescaleval& (0+255),w,b
  1410  001F52  B0D8               	btfsc	status,0,c
  1411  001F54  D008               	goto	l3063
  1412                           
  1413                           ; BSR set to: 0
  1414  001F56  0E03               	movlw	3
  1415  001F58  6F9D               	movwf	setPWMFreq@prescaleval& (0+255),b
  1416  001F5A  0E00               	movlw	0
  1417  001F5C  6F9E               	movwf	(setPWMFreq@prescaleval+1)& (0+255),b
  1418  001F5E  0E00               	movlw	0
  1419  001F60  6F9F               	movwf	(setPWMFreq@prescaleval+2)& (0+255),b
  1420  001F62  0E00               	movlw	0
  1421  001F64  6FA0               	movwf	(setPWMFreq@prescaleval+3)& (0+255),b
  1422  001F66                     l3063:
  1423                           
  1424                           ; BSR set to: 0
  1425                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 361: if (prescaleval > 255) prescaleval = 255;
  1426  001F66  51A0               	movf	(setPWMFreq@prescaleval+3)& (0+255),w,b
  1427  001F68  119F               	iorwf	(setPWMFreq@prescaleval+2)& (0+255),w,b
  1428  001F6A  E103               	bnz	u2810
  1429  001F6C  059E               	decf	(setPWMFreq@prescaleval+1)& (0+255),w,b
  1430  001F6E  A0D8               	btfss	status,0,c
  1431  001F70  D008               	goto	l3067
  1432  001F72                     u2810:
  1433                           
  1434                           ; BSR set to: 0
  1435  001F72  0EFF               	movlw	255
  1436  001F74  6F9D               	movwf	setPWMFreq@prescaleval& (0+255),b
  1437  001F76  0E00               	movlw	0
  1438  001F78  6F9E               	movwf	(setPWMFreq@prescaleval+1)& (0+255),b
  1439  001F7A  0E00               	movlw	0
  1440  001F7C  6F9F               	movwf	(setPWMFreq@prescaleval+2)& (0+255),b
  1441  001F7E  0E00               	movlw	0
  1442  001F80  6FA0               	movwf	(setPWMFreq@prescaleval+3)& (0+255),b
  1443  001F82                     l3067:
  1444                           
  1445                           ; BSR set to: 0
  1446                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 362: unsigned char prescale = (unsigned char) prescalev
      +                          al;
  1447  001F82  C09D  F09C         	movff	setPWMFreq@prescaleval,setPWMFreq@prescale
  1448                           
  1449                           ; BSR set to: 0
  1450                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 363: readI2C1(0x80, 0x00, data1, 1);
  1451  001F86  0E00               	movlw	0
  1452  001F88  6F6D               	movwf	readI2C1@Register& (0+255),b
  1453  001F8A  0E00               	movlw	0
  1454  001F8C  6F6E               	movwf	readI2C1@Data& (0+255),b
  1455  001F8E  0E00               	movlw	0
  1456  001F90  6F70               	movwf	(readI2C1@bytes+1)& (0+255),b
  1457  001F92  0E01               	movlw	1
  1458  001F94  6F6F               	movwf	readI2C1@bytes& (0+255),b
  1459  001F96  0E80               	movlw	128
  1460  001F98  EC9D  F015         	call	_readI2C1
  1461                           
  1462                           ; BSR set to: 0
  1463                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 366: writeI2C1(0x80, 0x00, newmode);
  1464  001F9C  0E00               	movlw	0
  1465  001F9E  6F6B               	movwf	writeI2C1@Register& (0+255),b
  1466  001FA0  0E10               	movlw	16
  1467  001FA2  6F6C               	movwf	writeI2C1@Data& (0+255),b
  1468  001FA4  0E80               	movlw	128
  1469  001FA6  ECA2  F017         	call	_writeI2C1
  1470                           
  1471                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 367: writeI2C1(0x80, 0xFE, prescale);
  1472  001FAA  0EFE               	movlw	254
  1473  001FAC  6F6B               	movwf	writeI2C1@Register& (0+255),b
  1474  001FAE  C09C  F06C         	movff	setPWMFreq@prescale,writeI2C1@Data
  1475  001FB2  0E80               	movlw	128
  1476  001FB4  ECA2  F017         	call	_writeI2C1
  1477                           
  1478                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 368: writeI2C1(0x80, 0x00, data1);
  1479  001FB8  0E00               	movlw	0
  1480  001FBA  6F6B               	movwf	writeI2C1@Register& (0+255),b
  1481  001FBC  0E00               	movlw	0
  1482  001FBE  6F6C               	movwf	writeI2C1@Data& (0+255),b
  1483  001FC0  0E80               	movlw	128
  1484  001FC2  ECA2  F017         	call	_writeI2C1
  1485                           
  1486                           ; BSR set to: 0
  1487                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 369: _delay((unsigned long)((5)*(16000000/4000.0)));
  1488  001FC6  0E1A               	movlw	26
  1489  001FC8  0100               	movlb	0	; () banked
  1490  001FCA  6F9B               	movwf	??_setPWMFreq& (0+255),b
  1491  001FCC  0EF8               	movlw	248
  1492  001FCE                     u3877:
  1493  001FCE  2EE8               	decfsz	wreg,f,c
  1494  001FD0  D7FE               	bra	u3877
  1495  001FD2  2F9B               	decfsz	??_setPWMFreq& (0+255),f,b
  1496  001FD4  D7FC               	bra	u3877
  1497  001FD6  F000               	nop	
  1498                           
  1499                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 371: writeI2C1(0x80, 0x00, (data1 | 0x80 | 0x20));
  1500  001FD8  0E00               	movlw	0
  1501  001FDA  0100               	movlb	0	; () banked
  1502  001FDC  6F6B               	movwf	writeI2C1@Register& (0+255),b
  1503  001FDE  0EA0               	movlw	160
  1504  001FE0  6F6C               	movwf	writeI2C1@Data& (0+255),b
  1505  001FE2  0E80               	movlw	128
  1506  001FE4  ECA2  F017         	call	_writeI2C1
  1507                           
  1508                           ; BSR set to: 0
  1509  001FE8  0012               	return		;funcret
  1510  001FEA                     __end_of_setPWMFreq:
  1511                           	callstack 0
  1512                           
  1513 ;; *************** function _writeI2C1 *****************
  1514 ;; Defined at:
  1515 ;;		line 395 in file "PIC18F46K22_PCA9685_ROBOR_2R.c"
  1516 ;; Parameters:    Size  Location     Type
  1517 ;;  Address         1    wreg     unsigned char 
  1518 ;;  Register        1   11[BANK0 ] unsigned char 
  1519 ;;  Data            1   12[BANK0 ] unsigned char 
  1520 ;; Auto vars:     Size  Location     Type
  1521 ;;  Address         1   13[BANK0 ] unsigned char 
  1522 ;; Return value:  Size  Location     Type
  1523 ;;                  1    wreg      void 
  1524 ;; Registers used:
  1525 ;;		wreg, status,2, status,0, cstack
  1526 ;; Tracked objects:
  1527 ;;		On entry : 3F/0
  1528 ;;		On exit  : 3F/0
  1529 ;;		Unchanged: 0/0
  1530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1531 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1532 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1533 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1534 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1535 ;;Total ram usage:        3 bytes
  1536 ;; Hardware stack levels used: 1
  1537 ;; Hardware stack levels required when called: 7
  1538 ;; This function calls:
  1539 ;;		_sendI2C
  1540 ;;		_startI2C
  1541 ;;		_stopI2C
  1542 ;; This function is called by:
  1543 ;;		_settings
  1544 ;;		_setPWMFreq
  1545 ;; This function uses a non-reentrant model
  1546 ;;
  1547                           
  1548                           	psect	text3
  1549  002F44                     __ptext3:
  1550                           	callstack 0
  1551  002F44                     _writeI2C1:
  1552                           	callstack 22
  1553                           
  1554                           ; BSR set to: 0
  1555                           ;incstack = 0
  1556                           ;writeI2C1@Address stored from wreg
  1557  002F44  6F6D               	movwf	writeI2C1@Address& (0+255),b
  1558                           
  1559                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 396: startI2C();
  1560  002F46  EC07  F018         	call	_startI2C	;wreg free
  1561                           
  1562                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 397: sendI2C(Address);
  1563  002F4A  516D               	movf	writeI2C1@Address& (0+255),w,b
  1564  002F4C  ECF7  F017         	call	_sendI2C
  1565                           
  1566                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 398: sendI2C(Register);
  1567  002F50  516B               	movf	writeI2C1@Register& (0+255),w,b
  1568  002F52  ECF7  F017         	call	_sendI2C
  1569                           
  1570                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 399: sendI2C(Data);
  1571  002F56  516C               	movf	writeI2C1@Data& (0+255),w,b
  1572  002F58  ECF7  F017         	call	_sendI2C
  1573                           
  1574                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 400: stopI2C();
  1575  002F5C  EC03  F018         	call	_stopI2C	;wreg free
  1576                           
  1577                           ; BSR set to: 0
  1578  002F60  0012               	return		;funcret
  1579  002F62                     __end_of_writeI2C1:
  1580                           	callstack 0
  1581                           
  1582 ;; *************** function _readI2C1 *****************
  1583 ;; Defined at:
  1584 ;;		line 374 in file "PIC18F46K22_PCA9685_ROBOR_2R.c"
  1585 ;; Parameters:    Size  Location     Type
  1586 ;;  Address         1    wreg     unsigned char 
  1587 ;;  Register        1   13[BANK0 ] unsigned char 
  1588 ;;  Data            1   14[BANK0 ] unsigned char 
  1589 ;;  bytes           2   15[BANK0 ] int 
  1590 ;; Auto vars:     Size  Location     Type
  1591 ;;  Address         1   19[BANK0 ] unsigned char 
  1592 ;; Return value:  Size  Location     Type
  1593 ;;                  1    wreg      void 
  1594 ;; Registers used:
  1595 ;;		wreg, status,2, status,0, cstack
  1596 ;; Tracked objects:
  1597 ;;		On entry : 3F/0
  1598 ;;		On exit  : 3F/0
  1599 ;;		Unchanged: 0/0
  1600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1601 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1602 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1603 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1604 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1605 ;;Total ram usage:        7 bytes
  1606 ;; Hardware stack levels used: 1
  1607 ;; Hardware stack levels required when called: 7
  1608 ;; This function calls:
  1609 ;;		_receiveI2C
  1610 ;;		_repeatedStart
  1611 ;;		_sendI2C
  1612 ;;		_startI2C
  1613 ;;		_stopI2C
  1614 ;; This function is called by:
  1615 ;;		_setPWMFreq
  1616 ;; This function uses a non-reentrant model
  1617 ;;
  1618                           
  1619                           	psect	text4
  1620  002B3A                     __ptext4:
  1621                           	callstack 0
  1622  002B3A                     _readI2C1:
  1623                           	callstack 21
  1624                           
  1625                           ; BSR set to: 0
  1626                           ;incstack = 0
  1627                           ;readI2C1@Address stored from wreg
  1628  002B3A  6F73               	movwf	readI2C1@Address& (0+255),b
  1629                           
  1630                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 375: startI2C();
  1631  002B3C  EC07  F018         	call	_startI2C	;wreg free
  1632                           
  1633                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 376: sendI2C(Address);
  1634  002B40  5173               	movf	readI2C1@Address& (0+255),w,b
  1635  002B42  ECF7  F017         	call	_sendI2C
  1636                           
  1637                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 377: sendI2C(Register);
  1638  002B46  516D               	movf	readI2C1@Register& (0+255),w,b
  1639  002B48  ECF7  F017         	call	_sendI2C
  1640                           
  1641                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 378: repeatedStart();
  1642  002B4C  EC0B  F018         	call	_repeatedStart	;wreg free
  1643                           
  1644                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 379: sendI2C(Address | 0x01);
  1645  002B50  5173               	movf	readI2C1@Address& (0+255),w,b
  1646  002B52  0901               	iorlw	1
  1647  002B54  ECF7  F017         	call	_sendI2C
  1648                           
  1649                           ; BSR set to: 0
  1650                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 381: for (i = 0; i < bytes; i++) {
  1651  002B58  0E00               	movlw	0
  1652  002B5A  6FB7               	movwf	(_i+1)& (0+255),b
  1653  002B5C  0E00               	movlw	0
  1654  002B5E  6FB6               	movwf	_i& (0+255),b
  1655  002B60  D018               	goto	l2645
  1656  002B62                     l2635:
  1657                           
  1658                           ; BSR set to: 0
  1659                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 382: if (i + 1 == bytes) {
  1660  002B62  0E01               	movlw	1
  1661  002B64  25B6               	addwf	_i& (0+255),w,b
  1662  002B66  6F71               	movwf	??_readI2C1& (0+255),b
  1663  002B68  0E00               	movlw	0
  1664  002B6A  21B7               	addwfc	(_i+1)& (0+255),w,b
  1665  002B6C  6F72               	movwf	(??_readI2C1+1)& (0+255),b
  1666  002B6E  516F               	movf	readI2C1@bytes& (0+255),w,b
  1667  002B70  1971               	xorwf	??_readI2C1& (0+255),w,b
  1668  002B72  E108               	bnz	l2639
  1669  002B74  5170               	movf	(readI2C1@bytes+1)& (0+255),w,b
  1670  002B76  1972               	xorwf	(??_readI2C1+1)& (0+255),w,b
  1671  002B78  A4D8               	btfss	status,2,c
  1672  002B7A  D004               	goto	l2639
  1673                           
  1674                           ; BSR set to: 0
  1675                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 383: Data = receiveI2C(1);
  1676  002B7C  0E01               	movlw	1
  1677  002B7E  ECE7  F016         	call	_receiveI2C
  1678  002B82  D003               	goto	L1
  1679  002B84                     l2639:
  1680                           
  1681                           ; BSR set to: 0
  1682                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 385: Data = receiveI2C(0);
  1683  002B84  0E00               	movlw	0
  1684  002B86  ECE7  F016         	call	_receiveI2C
  1685  002B8A                     L1:
  1686  002B8A  6F6E               	movwf	readI2C1@Data& (0+255),b
  1687                           
  1688                           ; BSR set to: 0
  1689                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 386: };PIC18F46K22_PCA9685_ROBOR_2R.c: 388: Data++;
  1690  002B8C  2B6E               	incf	readI2C1@Data& (0+255),f,b
  1691                           
  1692                           ; BSR set to: 0
  1693  002B8E  4BB6               	infsnz	_i& (0+255),f,b
  1694  002B90  2BB7               	incf	(_i+1)& (0+255),f,b
  1695  002B92                     l2645:
  1696                           
  1697                           ; BSR set to: 0
  1698  002B92  516F               	movf	readI2C1@bytes& (0+255),w,b
  1699  002B94  5DB6               	subwf	_i& (0+255),w,b
  1700  002B96  5170               	movf	(readI2C1@bytes+1)& (0+255),w,b
  1701  002B98  59B7               	subwfb	(_i+1)& (0+255),w,b
  1702  002B9A  A0D8               	btfss	status,0,c
  1703  002B9C  D7E2               	goto	l2635
  1704                           
  1705                           ; BSR set to: 0
  1706                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 389: };PIC18F46K22_PCA9685_ROBOR_2R.c: 391: stopI2C();
  1707  002B9E  EC03  F018         	call	_stopI2C	;wreg free
  1708                           
  1709                           ; BSR set to: 0
  1710  002BA2  0012               	return		;funcret
  1711  002BA4                     __end_of_readI2C1:
  1712                           	callstack 0
  1713                           
  1714 ;; *************** function _stopI2C *****************
  1715 ;; Defined at:
  1716 ;;		line 302 in file "PIC18F46K22_PCA9685_ROBOR_2R.c"
  1717 ;; Parameters:    Size  Location     Type
  1718 ;;		None
  1719 ;; Auto vars:     Size  Location     Type
  1720 ;;		None
  1721 ;; Return value:  Size  Location     Type
  1722 ;;                  1    wreg      void 
  1723 ;; Registers used:
  1724 ;;		wreg, status,2, status,0, cstack
  1725 ;; Tracked objects:
  1726 ;;		On entry : 3F/0
  1727 ;;		On exit  : 3F/0
  1728 ;;		Unchanged: 0/0
  1729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1730 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1731 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1732 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1733 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1734 ;;Total ram usage:        0 bytes
  1735 ;; Hardware stack levels used: 1
  1736 ;; Hardware stack levels required when called: 6
  1737 ;; This function calls:
  1738 ;;		_readyI2C
  1739 ;; This function is called by:
  1740 ;;		_readI2C1
  1741 ;;		_writeI2C1
  1742 ;; This function uses a non-reentrant model
  1743 ;;
  1744                           
  1745                           	psect	text5
  1746  003006                     __ptext5:
  1747                           	callstack 0
  1748  003006                     _stopI2C:
  1749                           	callstack 22
  1750                           
  1751                           ; BSR set to: 0
  1752                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 303: readyI2C();
  1753                           
  1754                           ; BSR set to: 0
  1755                           ;incstack = 0
  1756  003006  ECE4  F017         	call	_readyI2C	;wreg free
  1757                           
  1758                           ; BSR set to: 0
  1759                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 304: SSP1CON2bits.PEN = 1;
  1760  00300A  84C5               	bsf	197,2,c	;volatile
  1761                           
  1762                           ; BSR set to: 0
  1763  00300C  0012               	return		;funcret
  1764  00300E                     __end_of_stopI2C:
  1765                           	callstack 0
  1766                           
  1767 ;; *************** function _startI2C *****************
  1768 ;; Defined at:
  1769 ;;		line 288 in file "PIC18F46K22_PCA9685_ROBOR_2R.c"
  1770 ;; Parameters:    Size  Location     Type
  1771 ;;		None
  1772 ;; Auto vars:     Size  Location     Type
  1773 ;;		None
  1774 ;; Return value:  Size  Location     Type
  1775 ;;                  1    wreg      void 
  1776 ;; Registers used:
  1777 ;;		wreg, status,2, status,0, cstack
  1778 ;; Tracked objects:
  1779 ;;		On entry : 0/0
  1780 ;;		On exit  : 3F/0
  1781 ;;		Unchanged: 0/0
  1782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1783 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1784 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1785 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1786 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1787 ;;Total ram usage:        0 bytes
  1788 ;; Hardware stack levels used: 1
  1789 ;; Hardware stack levels required when called: 6
  1790 ;; This function calls:
  1791 ;;		_readyI2C
  1792 ;; This function is called by:
  1793 ;;		_readI2C1
  1794 ;;		_writeI2C1
  1795 ;; This function uses a non-reentrant model
  1796 ;;
  1797                           
  1798                           	psect	text6
  1799  00300E                     __ptext6:
  1800                           	callstack 0
  1801  00300E                     _startI2C:
  1802                           	callstack 22
  1803                           
  1804                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 289: readyI2C();
  1805                           
  1806                           ; BSR set to: 0
  1807                           ;incstack = 0
  1808  00300E  ECE4  F017         	call	_readyI2C	;wreg free
  1809                           
  1810                           ; BSR set to: 0
  1811                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 290: SSP1CON2bits.SEN = 1;
  1812  003012  80C5               	bsf	197,0,c	;volatile
  1813                           
  1814                           ; BSR set to: 0
  1815  003014  0012               	return		;funcret
  1816  003016                     __end_of_startI2C:
  1817                           	callstack 0
  1818                           
  1819 ;; *************** function _sendI2C *****************
  1820 ;; Defined at:
  1821 ;;		line 297 in file "PIC18F46K22_PCA9685_ROBOR_2R.c"
  1822 ;; Parameters:    Size  Location     Type
  1823 ;;  data            1    wreg     unsigned char 
  1824 ;; Auto vars:     Size  Location     Type
  1825 ;;  data            1   10[BANK0 ] unsigned char 
  1826 ;; Return value:  Size  Location     Type
  1827 ;;                  1    wreg      void 
  1828 ;; Registers used:
  1829 ;;		wreg, status,2, status,0, cstack
  1830 ;; Tracked objects:
  1831 ;;		On entry : 3F/0
  1832 ;;		On exit  : 3F/0
  1833 ;;		Unchanged: 0/0
  1834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1835 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1836 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1837 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1838 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1839 ;;Total ram usage:        1 bytes
  1840 ;; Hardware stack levels used: 1
  1841 ;; Hardware stack levels required when called: 6
  1842 ;; This function calls:
  1843 ;;		_readyI2C
  1844 ;; This function is called by:
  1845 ;;		_readI2C1
  1846 ;;		_writeI2C1
  1847 ;; This function uses a non-reentrant model
  1848 ;;
  1849                           
  1850                           	psect	text7
  1851  002FEE                     __ptext7:
  1852                           	callstack 0
  1853  002FEE                     _sendI2C:
  1854                           	callstack 22
  1855                           
  1856                           ; BSR set to: 0
  1857                           ;incstack = 0
  1858                           ;sendI2C@data stored from wreg
  1859  002FEE  6F6A               	movwf	sendI2C@data& (0+255),b
  1860                           
  1861                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 298: readyI2C();
  1862  002FF0  ECE4  F017         	call	_readyI2C	;wreg free
  1863                           
  1864                           ; BSR set to: 0
  1865                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 299: SSP1BUF = data;
  1866  002FF4  C06A  FFC9         	movff	sendI2C@data,4041	;volatile
  1867                           
  1868                           ; BSR set to: 0
  1869  002FF8  0012               	return		;funcret
  1870  002FFA                     __end_of_sendI2C:
  1871                           	callstack 0
  1872                           
  1873 ;; *************** function _repeatedStart *****************
  1874 ;; Defined at:
  1875 ;;		line 329 in file "PIC18F46K22_PCA9685_ROBOR_2R.c"
  1876 ;; Parameters:    Size  Location     Type
  1877 ;;		None
  1878 ;; Auto vars:     Size  Location     Type
  1879 ;;		None
  1880 ;; Return value:  Size  Location     Type
  1881 ;;                  1    wreg      void 
  1882 ;; Registers used:
  1883 ;;		wreg, status,2, status,0, cstack
  1884 ;; Tracked objects:
  1885 ;;		On entry : 3F/0
  1886 ;;		On exit  : 3F/0
  1887 ;;		Unchanged: 0/0
  1888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1889 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1890 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1891 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1892 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1893 ;;Total ram usage:        0 bytes
  1894 ;; Hardware stack levels used: 1
  1895 ;; Hardware stack levels required when called: 6
  1896 ;; This function calls:
  1897 ;;		_readyI2C
  1898 ;; This function is called by:
  1899 ;;		_readI2C1
  1900 ;; This function uses a non-reentrant model
  1901 ;;
  1902                           
  1903                           	psect	text8
  1904  003016                     __ptext8:
  1905                           	callstack 0
  1906  003016                     _repeatedStart:
  1907                           	callstack 21
  1908                           
  1909                           ; BSR set to: 0
  1910                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 330: readyI2C();
  1911                           
  1912                           ; BSR set to: 0
  1913                           ;incstack = 0
  1914  003016  ECE4  F017         	call	_readyI2C	;wreg free
  1915                           
  1916                           ; BSR set to: 0
  1917                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 331: SSP1CON2bits.RSEN = 1;
  1918  00301A  82C5               	bsf	197,1,c	;volatile
  1919                           
  1920                           ; BSR set to: 0
  1921  00301C  0012               	return		;funcret
  1922  00301E                     __end_of_repeatedStart:
  1923                           	callstack 0
  1924                           
  1925 ;; *************** function _receiveI2C *****************
  1926 ;; Defined at:
  1927 ;;		line 334 in file "PIC18F46K22_PCA9685_ROBOR_2R.c"
  1928 ;; Parameters:    Size  Location     Type
  1929 ;;  flag            1    wreg     unsigned char 
  1930 ;; Auto vars:     Size  Location     Type
  1931 ;;  flag            1   11[BANK0 ] unsigned char 
  1932 ;;  buffer          1   12[BANK0 ] unsigned char 
  1933 ;; Return value:  Size  Location     Type
  1934 ;;                  1    wreg      unsigned char 
  1935 ;; Registers used:
  1936 ;;		wreg, status,2, status,0, cstack
  1937 ;; Tracked objects:
  1938 ;;		On entry : 3F/0
  1939 ;;		On exit  : 3F/0
  1940 ;;		Unchanged: 0/0
  1941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1942 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1943 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1944 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1945 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1946 ;;Total ram usage:        3 bytes
  1947 ;; Hardware stack levels used: 1
  1948 ;; Hardware stack levels required when called: 6
  1949 ;; This function calls:
  1950 ;;		_readyI2C
  1951 ;; This function is called by:
  1952 ;;		_readI2C1
  1953 ;; This function uses a non-reentrant model
  1954 ;;
  1955                           
  1956                           	psect	text9
  1957  002DCE                     __ptext9:
  1958                           	callstack 0
  1959  002DCE                     _receiveI2C:
  1960                           	callstack 21
  1961                           
  1962                           ; BSR set to: 0
  1963                           ;incstack = 0
  1964                           ;receiveI2C@flag stored from wreg
  1965  002DCE  6F6B               	movwf	receiveI2C@flag& (0+255),b
  1966                           
  1967                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 335: unsigned char buffer;;PIC18F46K22_PCA9685_ROBOR_2R
      +                          .c: 336: readyI2C();
  1968  002DD0  ECE4  F017         	call	_readyI2C	;wreg free
  1969                           
  1970                           ; BSR set to: 0
  1971                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 337: SSP1CON2bits.RCEN = 1;
  1972  002DD4  86C5               	bsf	197,3,c	;volatile
  1973                           
  1974                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 338: readyI2C();
  1975  002DD6  ECE4  F017         	call	_readyI2C	;wreg free
  1976                           
  1977                           ; BSR set to: 0
  1978                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 339: buffer = SSP1BUF;
  1979  002DDA  CFC9 F06C          	movff	4041,receiveI2C@buffer	;volatile
  1980                           
  1981                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 340: readyI2C();
  1982  002DDE  ECE4  F017         	call	_readyI2C	;wreg free
  1983                           
  1984                           ; BSR set to: 0
  1985                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 341: SSP1CON2bits.ACKDT = flag == 1 ? 1 : 0;
  1986  002DE2  056B               	decf	receiveI2C@flag& (0+255),w,b
  1987  002DE4  A4D8               	btfss	status,2,c
  1988  002DE6  D003               	goto	u1950
  1989  002DE8  6B6A               	clrf	??_receiveI2C& (0+255),b
  1990  002DEA  2B6A               	incf	??_receiveI2C& (0+255),f,b
  1991  002DEC  D002               	goto	u1968
  1992  002DEE                     u1950:
  1993  002DEE  0100               	movlb	0	; () banked
  1994  002DF0  6B6A               	clrf	??_receiveI2C& (0+255),b
  1995  002DF2                     u1968:
  1996  002DF2  3B6A               	swapf	??_receiveI2C& (0+255),f,b
  1997  002DF4  476A               	rlncf	??_receiveI2C& (0+255),f,b
  1998  002DF6  50C5               	movf	197,w,c	;volatile
  1999  002DF8  196A               	xorwf	??_receiveI2C& (0+255),w,b
  2000  002DFA  0BDF               	andlw	-33
  2001  002DFC  196A               	xorwf	??_receiveI2C& (0+255),w,b
  2002  002DFE  6EC5               	movwf	197,c	;volatile
  2003                           
  2004                           ; BSR set to: 0
  2005                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 342: SSP1CON2bits.ACKEN = 1;
  2006  002E00  88C5               	bsf	197,4,c	;volatile
  2007                           
  2008                           ; BSR set to: 0
  2009                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 343: readyI2C();
  2010  002E02  ECE4  F017         	call	_readyI2C	;wreg free
  2011                           
  2012                           ; BSR set to: 0
  2013                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 344: return buffer;
  2014  002E06  516C               	movf	receiveI2C@buffer& (0+255),w,b
  2015                           
  2016                           ; BSR set to: 0
  2017  002E08  0012               	return		;funcret
  2018  002E0A                     __end_of_receiveI2C:
  2019                           	callstack 0
  2020                           
  2021 ;; *************** function _readyI2C *****************
  2022 ;; Defined at:
  2023 ;;		line 293 in file "PIC18F46K22_PCA9685_ROBOR_2R.c"
  2024 ;; Parameters:    Size  Location     Type
  2025 ;;		None
  2026 ;; Auto vars:     Size  Location     Type
  2027 ;;		None
  2028 ;; Return value:  Size  Location     Type
  2029 ;;                  1    wreg      void 
  2030 ;; Registers used:
  2031 ;;		wreg, status,2, status,0
  2032 ;; Tracked objects:
  2033 ;;		On entry : 0/0
  2034 ;;		On exit  : 3F/0
  2035 ;;		Unchanged: 0/0
  2036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2037 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2038 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2039 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2040 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2041 ;;Total ram usage:        1 bytes
  2042 ;; Hardware stack levels used: 1
  2043 ;; Hardware stack levels required when called: 5
  2044 ;; This function calls:
  2045 ;;		Nothing
  2046 ;; This function is called by:
  2047 ;;		_startI2C
  2048 ;;		_sendI2C
  2049 ;;		_stopI2C
  2050 ;;		_repeatedStart
  2051 ;;		_receiveI2C
  2052 ;; This function uses a non-reentrant model
  2053 ;;
  2054                           
  2055                           	psect	text10
  2056  002FC8                     __ptext10:
  2057                           	callstack 0
  2058  002FC8                     _readyI2C:
  2059                           	callstack 22
  2060                           
  2061                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 294: while ((SSP1CON2 & 0x1F) || (SSP1STAT & 0x04));
  2062                           
  2063                           ; BSR set to: 0
  2064                           ;incstack = 0
  2065  002FC8  CFC5 F069          	movff	4037,??_readyI2C	;volatile
  2066  002FCC  0E1F               	movlw	31
  2067  002FCE  0100               	movlb	0	; () banked
  2068  002FD0  1769               	andwf	??_readyI2C& (0+255),f,b
  2069  002FD2  A4D8               	btfss	status,2,c
  2070  002FD4  D7F9               	goto	__ptext10
  2071                           
  2072                           ; BSR set to: 0
  2073  002FD6  A4C7               	btfss	199,2,c	;volatile
  2074  002FD8  0012               	return	
  2075  002FDA  D7F6               	goto	__ptext10
  2076  002FDC                     __end_of_readyI2C:
  2077                           	callstack 0
  2078                           
  2079 ;; *************** function ___lltoft *****************
  2080 ;; Defined at:
  2081 ;;		line 35 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\lltoft.c"
  2082 ;; Parameters:    Size  Location     Type
  2083 ;;  c               4   17[BANK0 ] unsigned long 
  2084 ;; Auto vars:     Size  Location     Type
  2085 ;;  exp             1   25[BANK0 ] unsigned char 
  2086 ;; Return value:  Size  Location     Type
  2087 ;;                  3   17[BANK0 ] float 
  2088 ;; Registers used:
  2089 ;;		wreg, status,2, status,0, cstack
  2090 ;; Tracked objects:
  2091 ;;		On entry : 3F/0
  2092 ;;		On exit  : 3F/0
  2093 ;;		Unchanged: 0/0
  2094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2095 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2096 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2097 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2098 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2099 ;;Total ram usage:        9 bytes
  2100 ;; Hardware stack levels used: 1
  2101 ;; Hardware stack levels required when called: 6
  2102 ;; This function calls:
  2103 ;;		___ftpack
  2104 ;; This function is called by:
  2105 ;;		_setPWMFreq
  2106 ;; This function uses a non-reentrant model
  2107 ;;
  2108                           
  2109                           	psect	text11
  2110  002C0A                     __ptext11:
  2111                           	callstack 0
  2112  002C0A                     ___lltoft:
  2113                           	callstack 22
  2114                           
  2115                           ; BSR set to: 0
  2116                           
  2117                           ; BSR set to: 0
  2118                           ;incstack = 0
  2119  002C0A  0E8E               	movlw	142
  2120  002C0C  6F79               	movwf	___lltoft@exp& (0+255),b
  2121  002C0E  D006               	goto	l3003
  2122  002C10                     l3001:
  2123                           
  2124                           ; BSR set to: 0
  2125  002C10  90D8               	bcf	status,0,c
  2126  002C12  3374               	rrcf	(___lltoft@c+3)& (0+255),f,b
  2127  002C14  3373               	rrcf	(___lltoft@c+2)& (0+255),f,b
  2128  002C16  3372               	rrcf	(___lltoft@c+1)& (0+255),f,b
  2129  002C18  3371               	rrcf	___lltoft@c& (0+255),f,b
  2130  002C1A  2B79               	incf	___lltoft@exp& (0+255),f,b
  2131  002C1C                     l3003:
  2132                           
  2133                           ; BSR set to: 0
  2134  002C1C  0E00               	movlw	0
  2135  002C1E  1571               	andwf	___lltoft@c& (0+255),w,b
  2136  002C20  6F75               	movwf	??___lltoft& (0+255),b
  2137  002C22  0E00               	movlw	0
  2138  002C24  1572               	andwf	(___lltoft@c+1)& (0+255),w,b
  2139  002C26  6F76               	movwf	(??___lltoft+1)& (0+255),b
  2140  002C28  0E00               	movlw	0
  2141  002C2A  1573               	andwf	(___lltoft@c+2)& (0+255),w,b
  2142  002C2C  6F77               	movwf	(??___lltoft+2)& (0+255),b
  2143  002C2E  0EFF               	movlw	255
  2144  002C30  1574               	andwf	(___lltoft@c+3)& (0+255),w,b
  2145  002C32  6F78               	movwf	(??___lltoft+3)& (0+255),b
  2146  002C34  5175               	movf	??___lltoft& (0+255),w,b
  2147  002C36  1176               	iorwf	(??___lltoft+1)& (0+255),w,b
  2148  002C38  1177               	iorwf	(??___lltoft+2)& (0+255),w,b
  2149  002C3A  1178               	iorwf	(??___lltoft+3)& (0+255),w,b
  2150  002C3C  A4D8               	btfss	status,2,c
  2151  002C3E  D7E8               	goto	l3001
  2152                           
  2153                           ; BSR set to: 0
  2154  002C40  C071  F069         	movff	___lltoft@c,___ftpack@arg
  2155  002C44  C072  F06A         	movff	___lltoft@c+1,___ftpack@arg+1
  2156  002C48  C073  F06B         	movff	___lltoft@c+2,___ftpack@arg+2
  2157  002C4C  C079  F06C         	movff	___lltoft@exp,___ftpack@exp
  2158  002C50  0E00               	movlw	0
  2159  002C52  6F6D               	movwf	___ftpack@sign& (0+255),b
  2160  002C54  EC18  F013         	call	___ftpack	;wreg free
  2161  002C58  C069  F071         	movff	?___ftpack,?___lltoft
  2162  002C5C  C06A  F072         	movff	?___ftpack+1,?___lltoft+1
  2163  002C60  C06B  F073         	movff	?___ftpack+2,?___lltoft+2
  2164                           
  2165                           ; BSR set to: 0
  2166  002C64  0012               	return		;funcret
  2167  002C66                     __end_of___lltoft:
  2168                           	callstack 0
  2169                           
  2170 ;; *************** function ___fttol *****************
  2171 ;; Defined at:
  2172 ;;		line 44 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\fttol.c"
  2173 ;; Parameters:    Size  Location     Type
  2174 ;;  f1              3   41[BANK0 ] float 
  2175 ;; Auto vars:     Size  Location     Type
  2176 ;;  lval            4   51[BANK0 ] unsigned long 
  2177 ;;  exp1            1   55[BANK0 ] unsigned char 
  2178 ;;  sign1           1   50[BANK0 ] unsigned char 
  2179 ;; Return value:  Size  Location     Type
  2180 ;;                  4   41[BANK0 ] long 
  2181 ;; Registers used:
  2182 ;;		wreg, status,2, status,0
  2183 ;; Tracked objects:
  2184 ;;		On entry : 3F/0
  2185 ;;		On exit  : 3F/0
  2186 ;;		Unchanged: 0/0
  2187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2188 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2189 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2190 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2191 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2192 ;;Total ram usage:       15 bytes
  2193 ;; Hardware stack levels used: 1
  2194 ;; Hardware stack levels required when called: 5
  2195 ;; This function calls:
  2196 ;;		Nothing
  2197 ;; This function is called by:
  2198 ;;		_setPWMFreq
  2199 ;; This function uses a non-reentrant model
  2200 ;;
  2201                           
  2202                           	psect	text12
  2203  00248A                     __ptext12:
  2204                           	callstack 0
  2205  00248A                     ___fttol:
  2206                           	callstack 23
  2207                           
  2208                           ; BSR set to: 0
  2209                           
  2210                           ; BSR set to: 0
  2211                           ;incstack = 0
  2212  00248A  C08B  F08D         	movff	___fttol@f1+2,??___fttol
  2213  00248E  6B8E               	clrf	(??___fttol+1)& (0+255),b
  2214  002490  6B8F               	clrf	(??___fttol+2)& (0+255),b
  2215  002492  358A               	rlcf	(___fttol@f1+1)& (0+255),w,b
  2216  002494  378D               	rlcf	??___fttol& (0+255),f,b
  2217  002496  E301               	bnc	u2621
  2218  002498  818E               	bsf	(??___fttol+1)& (0+255),0,b
  2219  00249A                     u2621:
  2220  00249A  518D               	movf	??___fttol& (0+255),w,b
  2221  00249C  6F97               	movwf	___fttol@exp1& (0+255),b
  2222  00249E  5197               	movf	___fttol@exp1& (0+255),w,b
  2223  0024A0  A4D8               	btfss	status,2,c
  2224  0024A2  D009               	goto	l2917
  2225  0024A4                     u2630:
  2226                           
  2227                           ; BSR set to: 0
  2228  0024A4  0E00               	movlw	0
  2229  0024A6  6F89               	movwf	?___fttol& (0+255),b
  2230  0024A8  0E00               	movlw	0
  2231  0024AA  6F8A               	movwf	(?___fttol+1)& (0+255),b
  2232  0024AC  0E00               	movlw	0
  2233  0024AE  6F8B               	movwf	(?___fttol+2)& (0+255),b
  2234  0024B0  0E00               	movlw	0
  2235  0024B2  6F8C               	movwf	(?___fttol+3)& (0+255),b
  2236  0024B4  0012               	return	
  2237  0024B6                     l2917:
  2238                           
  2239                           ; BSR set to: 0
  2240  0024B6  0E17               	movlw	23
  2241  0024B8  6F8D               	movwf	??___fttol& (0+255),b
  2242  0024BA  C089  F08E         	movff	___fttol@f1,??___fttol+1
  2243  0024BE  C08A  F08F         	movff	___fttol@f1+1,??___fttol+2
  2244  0024C2  C08B  F090         	movff	___fttol@f1+2,??___fttol+3
  2245  0024C6  298D               	incf	??___fttol& (0+255),w,b
  2246  0024C8  6F91               	movwf	(??___fttol+4)& (0+255),b
  2247  0024CA  D004               	goto	u2640
  2248  0024CC                     u2645:
  2249  0024CC  90D8               	bcf	status,0,c
  2250  0024CE  3390               	rrcf	(??___fttol+3)& (0+255),f,b
  2251  0024D0  338F               	rrcf	(??___fttol+2)& (0+255),f,b
  2252  0024D2  338E               	rrcf	(??___fttol+1)& (0+255),f,b
  2253  0024D4                     u2640:
  2254  0024D4  2F91               	decfsz	(??___fttol+4)& (0+255),f,b
  2255  0024D6  D7FA               	goto	u2645
  2256  0024D8  0100               	movlb	0	; () banked
  2257  0024DA  518E               	movf	(??___fttol+1)& (0+255),w,b
  2258  0024DC  6F92               	movwf	___fttol@sign1& (0+255),b
  2259                           
  2260                           ; BSR set to: 0
  2261  0024DE  8F8A               	bsf	(___fttol@f1+1)& (0+255),7,b
  2262                           
  2263                           ; BSR set to: 0
  2264  0024E0  0EFF               	movlw	255
  2265  0024E2  1789               	andwf	___fttol@f1& (0+255),f,b
  2266  0024E4  0EFF               	movlw	255
  2267  0024E6  178A               	andwf	(___fttol@f1+1)& (0+255),f,b
  2268  0024E8  0E00               	movlw	0
  2269  0024EA  178B               	andwf	(___fttol@f1+2)& (0+255),f,b
  2270                           
  2271                           ; BSR set to: 0
  2272  0024EC  5189               	movf	___fttol@f1& (0+255),w,b
  2273  0024EE  6F93               	movwf	___fttol@lval& (0+255),b
  2274  0024F0  518A               	movf	(___fttol@f1+1)& (0+255),w,b
  2275  0024F2  6F94               	movwf	(___fttol@lval+1)& (0+255),b
  2276  0024F4  518B               	movf	(___fttol@f1+2)& (0+255),w,b
  2277  0024F6  6F95               	movwf	(___fttol@lval+2)& (0+255),b
  2278  0024F8  6B96               	clrf	(___fttol@lval+3)& (0+255),b
  2279                           
  2280                           ; BSR set to: 0
  2281  0024FA  0E8E               	movlw	142
  2282  0024FC  5F97               	subwf	___fttol@exp1& (0+255),f,b
  2283                           
  2284                           ; BSR set to: 0
  2285  0024FE  AF97               	btfss	___fttol@exp1& (0+255),7,b
  2286  002500  D00D               	goto	l2939
  2287                           
  2288                           ; BSR set to: 0
  2289  002502  5197               	movf	___fttol@exp1& (0+255),w,b
  2290  002504  0A80               	xorlw	128
  2291  002506  0F8F               	addlw	143
  2292  002508  A0D8               	btfss	status,0,c
  2293  00250A  D7CC               	goto	u2630
  2294  00250C                     l2935:
  2295                           
  2296                           ; BSR set to: 0
  2297  00250C  90D8               	bcf	status,0,c
  2298  00250E  3396               	rrcf	(___fttol@lval+3)& (0+255),f,b
  2299  002510  3395               	rrcf	(___fttol@lval+2)& (0+255),f,b
  2300  002512  3394               	rrcf	(___fttol@lval+1)& (0+255),f,b
  2301  002514  3393               	rrcf	___fttol@lval& (0+255),f,b
  2302                           
  2303                           ; BSR set to: 0
  2304  002516  3F97               	incfsz	___fttol@exp1& (0+255),f,b
  2305  002518  D7F9               	goto	l2935
  2306  00251A  D00D               	goto	u2680
  2307  00251C                     l2939:
  2308                           
  2309                           ; BSR set to: 0
  2310  00251C  0E17               	movlw	23
  2311  00251E  6597               	cpfsgt	___fttol@exp1& (0+255),b
  2312  002520  D007               	goto	l2947
  2313  002522  D7C0               	goto	u2630
  2314  002524                     l2945:
  2315                           
  2316                           ; BSR set to: 0
  2317  002524  90D8               	bcf	status,0,c
  2318  002526  3793               	rlcf	___fttol@lval& (0+255),f,b
  2319  002528  3794               	rlcf	(___fttol@lval+1)& (0+255),f,b
  2320  00252A  3795               	rlcf	(___fttol@lval+2)& (0+255),f,b
  2321  00252C  3796               	rlcf	(___fttol@lval+3)& (0+255),f,b
  2322  00252E  0797               	decf	___fttol@exp1& (0+255),f,b
  2323  002530                     l2947:
  2324                           
  2325                           ; BSR set to: 0
  2326  002530  5197               	movf	___fttol@exp1& (0+255),w,b
  2327  002532  A4D8               	btfss	status,2,c
  2328  002534  D7F7               	goto	l2945
  2329  002536                     u2680:
  2330                           
  2331                           ; BSR set to: 0
  2332  002536  5192               	movf	___fttol@sign1& (0+255),w,b
  2333  002538  B4D8               	btfsc	status,2,c
  2334  00253A  D008               	goto	l2953
  2335                           
  2336                           ; BSR set to: 0
  2337  00253C  1F96               	comf	(___fttol@lval+3)& (0+255),f,b
  2338  00253E  1F95               	comf	(___fttol@lval+2)& (0+255),f,b
  2339  002540  1F94               	comf	(___fttol@lval+1)& (0+255),f,b
  2340  002542  6D93               	negf	___fttol@lval& (0+255),b
  2341  002544  0E00               	movlw	0
  2342  002546  2394               	addwfc	(___fttol@lval+1)& (0+255),f,b
  2343  002548  2395               	addwfc	(___fttol@lval+2)& (0+255),f,b
  2344  00254A  2396               	addwfc	(___fttol@lval+3)& (0+255),f,b
  2345  00254C                     l2953:
  2346                           
  2347                           ; BSR set to: 0
  2348  00254C  C093  F089         	movff	___fttol@lval,?___fttol
  2349  002550  C094  F08A         	movff	___fttol@lval+1,?___fttol+1
  2350  002554  C095  F08B         	movff	___fttol@lval+2,?___fttol+2
  2351  002558  C096  F08C         	movff	___fttol@lval+3,?___fttol+3
  2352                           
  2353                           ; BSR set to: 0
  2354  00255C  0012               	return		;funcret
  2355  00255E                     __end_of___fttol:
  2356                           	callstack 0
  2357                           
  2358 ;; *************** function ___ftge *****************
  2359 ;; Defined at:
  2360 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\ftge.c"
  2361 ;; Parameters:    Size  Location     Type
  2362 ;;  ff1             3    9[BANK0 ] float 
  2363 ;;  ff2             3   12[BANK0 ] float 
  2364 ;; Auto vars:     Size  Location     Type
  2365 ;;		None
  2366 ;; Return value:  Size  Location     Type
  2367 ;;		None               void
  2368 ;; Registers used:
  2369 ;;		wreg, status,2, status,0
  2370 ;; Tracked objects:
  2371 ;;		On entry : 3F/0
  2372 ;;		On exit  : 3F/0
  2373 ;;		Unchanged: 0/0
  2374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2375 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2376 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2377 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2378 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2379 ;;Total ram usage:        9 bytes
  2380 ;; Hardware stack levels used: 1
  2381 ;; Hardware stack levels required when called: 5
  2382 ;; This function calls:
  2383 ;;		Nothing
  2384 ;; This function is called by:
  2385 ;;		_setPWMFreq
  2386 ;; This function uses a non-reentrant model
  2387 ;;
  2388                           
  2389                           	psect	text13
  2390  0029E2                     __ptext13:
  2391                           	callstack 0
  2392  0029E2                     ___ftge:
  2393                           	callstack 23
  2394                           
  2395                           ; BSR set to: 0
  2396                           
  2397                           ; BSR set to: 0
  2398                           ;incstack = 0
  2399  0029E2  AF6B               	btfss	(___ftge@ff1+2)& (0+255),7,b
  2400  0029E4  D00F               	goto	l2897
  2401                           
  2402                           ; BSR set to: 0
  2403  0029E6  0E00               	movlw	0
  2404  0029E8  6F6F               	movwf	??___ftge& (0+255),b
  2405  0029EA  0E00               	movlw	0
  2406  0029EC  6F70               	movwf	(??___ftge+1)& (0+255),b
  2407  0029EE  0E80               	movlw	128
  2408  0029F0  6F71               	movwf	(??___ftge+2)& (0+255),b
  2409  0029F2  5169               	movf	___ftge@ff1& (0+255),w,b
  2410  0029F4  5D6F               	subwf	??___ftge& (0+255),w,b
  2411  0029F6  6F69               	movwf	___ftge@ff1& (0+255),b
  2412  0029F8  516A               	movf	(___ftge@ff1+1)& (0+255),w,b
  2413  0029FA  5970               	subwfb	(??___ftge+1)& (0+255),w,b
  2414  0029FC  6F6A               	movwf	(___ftge@ff1+1)& (0+255),b
  2415  0029FE  516B               	movf	(___ftge@ff1+2)& (0+255),w,b
  2416  002A00  5971               	subwfb	(??___ftge+2)& (0+255),w,b
  2417  002A02  6F6B               	movwf	(___ftge@ff1+2)& (0+255),b
  2418  002A04                     l2897:
  2419                           
  2420                           ; BSR set to: 0
  2421  002A04  AF6E               	btfss	(___ftge@ff2+2)& (0+255),7,b
  2422  002A06  D00F               	goto	l2901
  2423                           
  2424                           ; BSR set to: 0
  2425  002A08  0E00               	movlw	0
  2426  002A0A  6F6F               	movwf	??___ftge& (0+255),b
  2427  002A0C  0E00               	movlw	0
  2428  002A0E  6F70               	movwf	(??___ftge+1)& (0+255),b
  2429  002A10  0E80               	movlw	128
  2430  002A12  6F71               	movwf	(??___ftge+2)& (0+255),b
  2431  002A14  516C               	movf	___ftge@ff2& (0+255),w,b
  2432  002A16  5D6F               	subwf	??___ftge& (0+255),w,b
  2433  002A18  6F6C               	movwf	___ftge@ff2& (0+255),b
  2434  002A1A  516D               	movf	(___ftge@ff2+1)& (0+255),w,b
  2435  002A1C  5970               	subwfb	(??___ftge+1)& (0+255),w,b
  2436  002A1E  6F6D               	movwf	(___ftge@ff2+1)& (0+255),b
  2437  002A20  516E               	movf	(___ftge@ff2+2)& (0+255),w,b
  2438  002A22  5971               	subwfb	(??___ftge+2)& (0+255),w,b
  2439  002A24  6F6E               	movwf	(___ftge@ff2+2)& (0+255),b
  2440  002A26                     l2901:
  2441                           
  2442                           ; BSR set to: 0
  2443  002A26  0E00               	movlw	0
  2444  002A28  1B69               	xorwf	___ftge@ff1& (0+255),f,b
  2445  002A2A  0E00               	movlw	0
  2446  002A2C  1B6A               	xorwf	(___ftge@ff1+1)& (0+255),f,b
  2447  002A2E  0E80               	movlw	128
  2448  002A30  1B6B               	xorwf	(___ftge@ff1+2)& (0+255),f,b
  2449                           
  2450                           ; BSR set to: 0
  2451  002A32  0E00               	movlw	0
  2452  002A34  1B6C               	xorwf	___ftge@ff2& (0+255),f,b
  2453  002A36  0E00               	movlw	0
  2454  002A38  1B6D               	xorwf	(___ftge@ff2+1)& (0+255),f,b
  2455  002A3A  0E80               	movlw	128
  2456  002A3C  1B6E               	xorwf	(___ftge@ff2+2)& (0+255),f,b
  2457  002A3E  516C               	movf	___ftge@ff2& (0+255),w,b
  2458  002A40  5D69               	subwf	___ftge@ff1& (0+255),w,b
  2459  002A42  516D               	movf	(___ftge@ff2+1)& (0+255),w,b
  2460  002A44  596A               	subwfb	(___ftge@ff1+1)& (0+255),w,b
  2461  002A46  516E               	movf	(___ftge@ff2+2)& (0+255),w,b
  2462  002A48  596B               	subwfb	(___ftge@ff1+2)& (0+255),w,b
  2463  002A4A  B0D8               	btfsc	status,0,c
  2464  002A4C  D002               	goto	l2907
  2465                           
  2466                           ; BSR set to: 0
  2467  002A4E  90D8               	bcf	status,0,c
  2468  002A50  0012               	return	
  2469  002A52                     l2907:
  2470                           
  2471                           ; BSR set to: 0
  2472  002A52  80D8               	bsf	status,0,c
  2473                           
  2474                           ; BSR set to: 0
  2475  002A54  0012               	return		;funcret
  2476  002A56                     __end_of___ftge:
  2477                           	callstack 0
  2478                           
  2479 ;; *************** function ___ftdiv *****************
  2480 ;; Defined at:
  2481 ;;		line 54 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\ftdiv.c"
  2482 ;; Parameters:    Size  Location     Type
  2483 ;;  f1              3   26[BANK0 ] float 
  2484 ;;  f2              3   29[BANK0 ] float 
  2485 ;; Auto vars:     Size  Location     Type
  2486 ;;  f3              3   36[BANK0 ] float 
  2487 ;;  sign            1   40[BANK0 ] unsigned char 
  2488 ;;  exp             1   39[BANK0 ] unsigned char 
  2489 ;;  cntr            1   35[BANK0 ] unsigned char 
  2490 ;; Return value:  Size  Location     Type
  2491 ;;                  3   26[BANK0 ] float 
  2492 ;; Registers used:
  2493 ;;		wreg, status,2, status,0, cstack
  2494 ;; Tracked objects:
  2495 ;;		On entry : 3F/0
  2496 ;;		On exit  : 3F/0
  2497 ;;		Unchanged: 0/0
  2498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2499 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2500 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2501 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2502 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2503 ;;Total ram usage:       15 bytes
  2504 ;; Hardware stack levels used: 1
  2505 ;; Hardware stack levels required when called: 6
  2506 ;; This function calls:
  2507 ;;		___ftpack
  2508 ;; This function is called by:
  2509 ;;		_setPWMFreq
  2510 ;; This function uses a non-reentrant model
  2511 ;;
  2512                           
  2513                           	psect	text14
  2514  0022D0                     __ptext14:
  2515                           	callstack 0
  2516  0022D0                     ___ftdiv:
  2517                           	callstack 22
  2518                           
  2519                           ; BSR set to: 0
  2520                           
  2521                           ; BSR set to: 0
  2522                           ;incstack = 0
  2523  0022D0  C07C  F080         	movff	___ftdiv@f1+2,??___ftdiv
  2524  0022D4  6B81               	clrf	(??___ftdiv+1)& (0+255),b
  2525  0022D6  6B82               	clrf	(??___ftdiv+2)& (0+255),b
  2526  0022D8  357B               	rlcf	(___ftdiv@f1+1)& (0+255),w,b
  2527  0022DA  3780               	rlcf	??___ftdiv& (0+255),f,b
  2528  0022DC  E301               	bnc	u2361
  2529  0022DE  8181               	bsf	(??___ftdiv+1)& (0+255),0,b
  2530  0022E0                     u2361:
  2531  0022E0  5180               	movf	??___ftdiv& (0+255),w,b
  2532  0022E2  6F87               	movwf	___ftdiv@exp& (0+255),b
  2533  0022E4  5187               	movf	___ftdiv@exp& (0+255),w,b
  2534  0022E6  A4D8               	btfss	status,2,c
  2535  0022E8  D007               	goto	l2725
  2536                           
  2537                           ; BSR set to: 0
  2538  0022EA  0E00               	movlw	0
  2539  0022EC  6F7A               	movwf	?___ftdiv& (0+255),b
  2540  0022EE  0E00               	movlw	0
  2541  0022F0  6F7B               	movwf	(?___ftdiv+1)& (0+255),b
  2542  0022F2  0E00               	movlw	0
  2543  0022F4  6F7C               	movwf	(?___ftdiv+2)& (0+255),b
  2544  0022F6  0012               	return	
  2545  0022F8                     l2725:
  2546                           
  2547                           ; BSR set to: 0
  2548  0022F8  C07F  F080         	movff	___ftdiv@f2+2,??___ftdiv
  2549  0022FC  6B81               	clrf	(??___ftdiv+1)& (0+255),b
  2550  0022FE  6B82               	clrf	(??___ftdiv+2)& (0+255),b
  2551  002300  357E               	rlcf	(___ftdiv@f2+1)& (0+255),w,b
  2552  002302  3780               	rlcf	??___ftdiv& (0+255),f,b
  2553  002304  E301               	bnc	u2381
  2554  002306  8181               	bsf	(??___ftdiv+1)& (0+255),0,b
  2555  002308                     u2381:
  2556  002308  5180               	movf	??___ftdiv& (0+255),w,b
  2557  00230A  6F88               	movwf	___ftdiv@sign& (0+255),b
  2558  00230C  5188               	movf	___ftdiv@sign& (0+255),w,b
  2559  00230E  A4D8               	btfss	status,2,c
  2560  002310  D007               	goto	l2731
  2561                           
  2562                           ; BSR set to: 0
  2563  002312  0E00               	movlw	0
  2564  002314  6F7A               	movwf	?___ftdiv& (0+255),b
  2565  002316  0E00               	movlw	0
  2566  002318  6F7B               	movwf	(?___ftdiv+1)& (0+255),b
  2567  00231A  0E00               	movlw	0
  2568  00231C  6F7C               	movwf	(?___ftdiv+2)& (0+255),b
  2569  00231E  0012               	return	
  2570  002320                     l2731:
  2571                           
  2572                           ; BSR set to: 0
  2573  002320  0E00               	movlw	0
  2574  002322  6F84               	movwf	___ftdiv@f3& (0+255),b
  2575  002324  0E00               	movlw	0
  2576  002326  6F85               	movwf	(___ftdiv@f3+1)& (0+255),b
  2577  002328  0E00               	movlw	0
  2578  00232A  6F86               	movwf	(___ftdiv@f3+2)& (0+255),b
  2579                           
  2580                           ; BSR set to: 0
  2581  00232C  5188               	movf	___ftdiv@sign& (0+255),w,b
  2582  00232E  0F89               	addlw	137
  2583  002330  5F87               	subwf	___ftdiv@exp& (0+255),f,b
  2584                           
  2585                           ; BSR set to: 0
  2586  002332  C07C  F088         	movff	___ftdiv@f1+2,___ftdiv@sign
  2587                           
  2588                           ; BSR set to: 0
  2589  002336  517F               	movf	(___ftdiv@f2+2)& (0+255),w,b
  2590  002338  1B88               	xorwf	___ftdiv@sign& (0+255),f,b
  2591                           
  2592                           ; BSR set to: 0
  2593  00233A  0E80               	movlw	128
  2594  00233C  1788               	andwf	___ftdiv@sign& (0+255),f,b
  2595                           
  2596                           ; BSR set to: 0
  2597  00233E  8F7B               	bsf	(___ftdiv@f1+1)& (0+255),7,b
  2598                           
  2599                           ; BSR set to: 0
  2600  002340  0EFF               	movlw	255
  2601  002342  177A               	andwf	___ftdiv@f1& (0+255),f,b
  2602  002344  0EFF               	movlw	255
  2603  002346  177B               	andwf	(___ftdiv@f1+1)& (0+255),f,b
  2604  002348  0E00               	movlw	0
  2605  00234A  177C               	andwf	(___ftdiv@f1+2)& (0+255),f,b
  2606                           
  2607                           ; BSR set to: 0
  2608  00234C  8F7E               	bsf	(___ftdiv@f2+1)& (0+255),7,b
  2609                           
  2610                           ; BSR set to: 0
  2611  00234E  0EFF               	movlw	255
  2612  002350  177D               	andwf	___ftdiv@f2& (0+255),f,b
  2613  002352  0EFF               	movlw	255
  2614  002354  177E               	andwf	(___ftdiv@f2+1)& (0+255),f,b
  2615  002356  0E00               	movlw	0
  2616  002358  177F               	andwf	(___ftdiv@f2+2)& (0+255),f,b
  2617                           
  2618                           ; BSR set to: 0
  2619  00235A  0E18               	movlw	24
  2620  00235C  6F83               	movwf	___ftdiv@cntr& (0+255),b
  2621  00235E                     l2751:
  2622                           
  2623                           ; BSR set to: 0
  2624  00235E  90D8               	bcf	status,0,c
  2625  002360  3784               	rlcf	___ftdiv@f3& (0+255),f,b
  2626  002362  3785               	rlcf	(___ftdiv@f3+1)& (0+255),f,b
  2627  002364  3786               	rlcf	(___ftdiv@f3+2)& (0+255),f,b
  2628                           
  2629                           ; BSR set to: 0
  2630  002366  517D               	movf	___ftdiv@f2& (0+255),w,b
  2631  002368  5D7A               	subwf	___ftdiv@f1& (0+255),w,b
  2632  00236A  517E               	movf	(___ftdiv@f2+1)& (0+255),w,b
  2633  00236C  597B               	subwfb	(___ftdiv@f1+1)& (0+255),w,b
  2634  00236E  517F               	movf	(___ftdiv@f2+2)& (0+255),w,b
  2635  002370  597C               	subwfb	(___ftdiv@f1+2)& (0+255),w,b
  2636  002372  A0D8               	btfss	status,0,c
  2637  002374  D007               	goto	l681
  2638                           
  2639                           ; BSR set to: 0
  2640  002376  517D               	movf	___ftdiv@f2& (0+255),w,b
  2641  002378  5F7A               	subwf	___ftdiv@f1& (0+255),f,b
  2642  00237A  517E               	movf	(___ftdiv@f2+1)& (0+255),w,b
  2643  00237C  5B7B               	subwfb	(___ftdiv@f1+1)& (0+255),f,b
  2644  00237E  517F               	movf	(___ftdiv@f2+2)& (0+255),w,b
  2645  002380  5B7C               	subwfb	(___ftdiv@f1+2)& (0+255),f,b
  2646                           
  2647                           ; BSR set to: 0
  2648  002382  8184               	bsf	___ftdiv@f3& (0+255),0,b
  2649  002384                     l681:
  2650                           
  2651                           ; BSR set to: 0
  2652  002384  90D8               	bcf	status,0,c
  2653  002386  377A               	rlcf	___ftdiv@f1& (0+255),f,b
  2654  002388  377B               	rlcf	(___ftdiv@f1+1)& (0+255),f,b
  2655  00238A  377C               	rlcf	(___ftdiv@f1+2)& (0+255),f,b
  2656                           
  2657                           ; BSR set to: 0
  2658  00238C  2F83               	decfsz	___ftdiv@cntr& (0+255),f,b
  2659  00238E  D7E7               	goto	l2751
  2660                           
  2661                           ; BSR set to: 0
  2662  002390  C084  F069         	movff	___ftdiv@f3,___ftpack@arg
  2663  002394  C085  F06A         	movff	___ftdiv@f3+1,___ftpack@arg+1
  2664  002398  C086  F06B         	movff	___ftdiv@f3+2,___ftpack@arg+2
  2665  00239C  C087  F06C         	movff	___ftdiv@exp,___ftpack@exp
  2666  0023A0  C088  F06D         	movff	___ftdiv@sign,___ftpack@sign
  2667  0023A4  EC18  F013         	call	___ftpack	;wreg free
  2668  0023A8  C069  F07A         	movff	?___ftpack,?___ftdiv
  2669  0023AC  C06A  F07B         	movff	?___ftpack+1,?___ftdiv+1
  2670  0023B0  C06B  F07C         	movff	?___ftpack+2,?___ftdiv+2
  2671                           
  2672                           ; BSR set to: 0
  2673  0023B4  0012               	return		;funcret
  2674  0023B6                     __end_of___ftdiv:
  2675                           	callstack 0
  2676                           
  2677 ;; *************** function ___ftpack *****************
  2678 ;; Defined at:
  2679 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\float.c"
  2680 ;; Parameters:    Size  Location     Type
  2681 ;;  arg             3    9[BANK0 ] unsigned um
  2682 ;;  exp             1   12[BANK0 ] unsigned char 
  2683 ;;  sign            1   13[BANK0 ] unsigned char 
  2684 ;; Auto vars:     Size  Location     Type
  2685 ;;		None
  2686 ;; Return value:  Size  Location     Type
  2687 ;;                  3    9[BANK0 ] float 
  2688 ;; Registers used:
  2689 ;;		wreg, status,2, status,0
  2690 ;; Tracked objects:
  2691 ;;		On entry : 3F/0
  2692 ;;		On exit  : 3F/0
  2693 ;;		Unchanged: 0/0
  2694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2695 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2696 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2697 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2698 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2699 ;;Total ram usage:        8 bytes
  2700 ;; Hardware stack levels used: 1
  2701 ;; Hardware stack levels required when called: 5
  2702 ;; This function calls:
  2703 ;;		Nothing
  2704 ;; This function is called by:
  2705 ;;		___ftdiv
  2706 ;;		___lltoft
  2707 ;; This function uses a non-reentrant model
  2708 ;;
  2709                           
  2710                           	psect	text15
  2711  002630                     __ptext15:
  2712                           	callstack 0
  2713  002630                     ___ftpack:
  2714                           	callstack 22
  2715                           
  2716                           ; BSR set to: 0
  2717                           
  2718                           ; BSR set to: 0
  2719                           ;incstack = 0
  2720  002630  516C               	movf	___ftpack@exp& (0+255),w,b
  2721  002632  B4D8               	btfsc	status,2,c
  2722  002634  D005               	goto	u1980
  2723                           
  2724                           ; BSR set to: 0
  2725  002636  5169               	movf	___ftpack@arg& (0+255),w,b
  2726  002638  116A               	iorwf	(___ftpack@arg+1)& (0+255),w,b
  2727  00263A  116B               	iorwf	(___ftpack@arg+2)& (0+255),w,b
  2728  00263C  A4D8               	btfss	status,2,c
  2729  00263E  D00C               	goto	l2543
  2730  002640                     u1980:
  2731                           
  2732                           ; BSR set to: 0
  2733  002640  0E00               	movlw	0
  2734  002642  6F69               	movwf	?___ftpack& (0+255),b
  2735  002644  0E00               	movlw	0
  2736  002646  6F6A               	movwf	(?___ftpack+1)& (0+255),b
  2737  002648  0E00               	movlw	0
  2738  00264A  6F6B               	movwf	(?___ftpack+2)& (0+255),b
  2739  00264C  0012               	return	
  2740  00264E                     l2541:
  2741                           
  2742                           ; BSR set to: 0
  2743  00264E  2B6C               	incf	___ftpack@exp& (0+255),f,b
  2744  002650  90D8               	bcf	status,0,c
  2745  002652  336B               	rrcf	(___ftpack@arg+2)& (0+255),f,b
  2746  002654  336A               	rrcf	(___ftpack@arg+1)& (0+255),f,b
  2747  002656  3369               	rrcf	___ftpack@arg& (0+255),f,b
  2748  002658                     l2543:
  2749                           
  2750                           ; BSR set to: 0
  2751  002658  0E00               	movlw	0
  2752  00265A  1569               	andwf	___ftpack@arg& (0+255),w,b
  2753  00265C  6F6E               	movwf	??___ftpack& (0+255),b
  2754  00265E  0E00               	movlw	0
  2755  002660  156A               	andwf	(___ftpack@arg+1)& (0+255),w,b
  2756  002662  6F6F               	movwf	(??___ftpack+1)& (0+255),b
  2757  002664  0EFE               	movlw	254
  2758  002666  156B               	andwf	(___ftpack@arg+2)& (0+255),w,b
  2759  002668  6F70               	movwf	(??___ftpack+2)& (0+255),b
  2760  00266A  516E               	movf	??___ftpack& (0+255),w,b
  2761  00266C  116F               	iorwf	(??___ftpack+1)& (0+255),w,b
  2762  00266E  1170               	iorwf	(??___ftpack+2)& (0+255),w,b
  2763  002670  B4D8               	btfsc	status,2,c
  2764  002672  D00C               	goto	l2549
  2765  002674  D7EC               	goto	l2541
  2766  002676                     l2545:
  2767                           
  2768                           ; BSR set to: 0
  2769  002676  2B6C               	incf	___ftpack@exp& (0+255),f,b
  2770                           
  2771                           ; BSR set to: 0
  2772  002678  0E01               	movlw	1
  2773  00267A  2769               	addwf	___ftpack@arg& (0+255),f,b
  2774  00267C  0E00               	movlw	0
  2775  00267E  236A               	addwfc	(___ftpack@arg+1)& (0+255),f,b
  2776  002680  0E00               	movlw	0
  2777  002682  236B               	addwfc	(___ftpack@arg+2)& (0+255),f,b
  2778  002684  90D8               	bcf	status,0,c
  2779  002686  336B               	rrcf	(___ftpack@arg+2)& (0+255),f,b
  2780  002688  336A               	rrcf	(___ftpack@arg+1)& (0+255),f,b
  2781  00268A  3369               	rrcf	___ftpack@arg& (0+255),f,b
  2782  00268C                     l2549:
  2783                           
  2784                           ; BSR set to: 0
  2785  00268C  0E00               	movlw	0
  2786  00268E  1569               	andwf	___ftpack@arg& (0+255),w,b
  2787  002690  6F6E               	movwf	??___ftpack& (0+255),b
  2788  002692  0E00               	movlw	0
  2789  002694  156A               	andwf	(___ftpack@arg+1)& (0+255),w,b
  2790  002696  6F6F               	movwf	(??___ftpack+1)& (0+255),b
  2791  002698  0EFF               	movlw	255
  2792  00269A  156B               	andwf	(___ftpack@arg+2)& (0+255),w,b
  2793  00269C  6F70               	movwf	(??___ftpack+2)& (0+255),b
  2794  00269E  516E               	movf	??___ftpack& (0+255),w,b
  2795  0026A0  116F               	iorwf	(??___ftpack+1)& (0+255),w,b
  2796  0026A2  1170               	iorwf	(??___ftpack+2)& (0+255),w,b
  2797  0026A4  B4D8               	btfsc	status,2,c
  2798  0026A6  D006               	goto	l2553
  2799  0026A8  D7E6               	goto	l2545
  2800  0026AA                     l2551:
  2801                           
  2802                           ; BSR set to: 0
  2803  0026AA  076C               	decf	___ftpack@exp& (0+255),f,b
  2804  0026AC  90D8               	bcf	status,0,c
  2805  0026AE  3769               	rlcf	___ftpack@arg& (0+255),f,b
  2806  0026B0  376A               	rlcf	(___ftpack@arg+1)& (0+255),f,b
  2807  0026B2  376B               	rlcf	(___ftpack@arg+2)& (0+255),f,b
  2808  0026B4                     l2553:
  2809                           
  2810                           ; BSR set to: 0
  2811  0026B4  BF6A               	btfsc	(___ftpack@arg+1)& (0+255),7,b
  2812  0026B6  D003               	goto	u2020
  2813                           
  2814                           ; BSR set to: 0
  2815  0026B8  0E02               	movlw	2
  2816  0026BA  616C               	cpfslt	___ftpack@exp& (0+255),b
  2817  0026BC  D7F6               	goto	l2551
  2818  0026BE                     u2020:
  2819                           
  2820                           ; BSR set to: 0
  2821  0026BE  A16C               	btfss	___ftpack@exp& (0+255),0,b
  2822                           
  2823                           ; BSR set to: 0
  2824  0026C0  9F6A               	bcf	(___ftpack@arg+1)& (0+255),7,b
  2825                           
  2826                           ; BSR set to: 0
  2827  0026C2  90D8               	bcf	status,0,c
  2828  0026C4  336C               	rrcf	___ftpack@exp& (0+255),f,b
  2829  0026C6  516C               	movf	___ftpack@exp& (0+255),w,b
  2830  0026C8  136B               	iorwf	(___ftpack@arg+2)& (0+255),f,b
  2831                           
  2832                           ; BSR set to: 0
  2833  0026CA  516D               	movf	___ftpack@sign& (0+255),w,b
  2834  0026CC  A4D8               	btfss	status,2,c
  2835                           
  2836                           ; BSR set to: 0
  2837  0026CE  8F6B               	bsf	(___ftpack@arg+2)& (0+255),7,b
  2838                           
  2839                           ; BSR set to: 0
  2840  0026D0  C069  F069         	movff	___ftpack@arg,?___ftpack
  2841  0026D4  C06A  F06A         	movff	___ftpack@arg+1,?___ftpack+1
  2842  0026D8  C06B  F06B         	movff	___ftpack@arg+2,?___ftpack+2
  2843                           
  2844                           ; BSR set to: 0
  2845  0026DC  0012               	return		;funcret
  2846  0026DE                     __end_of___ftpack:
  2847                           	callstack 0
  2848                           
  2849 ;; *************** function _SettingsLCD *****************
  2850 ;; Defined at:
  2851 ;;		line 236 in file "PIC18F46K22_PCA9685_ROBOR_2R.c"
  2852 ;; Parameters:    Size  Location     Type
  2853 ;;  word            1    wreg     unsigned char 
  2854 ;; Auto vars:     Size  Location     Type
  2855 ;;  word            1   11[BANK0 ] unsigned char 
  2856 ;; Return value:  Size  Location     Type
  2857 ;;                  1    wreg      void 
  2858 ;; Registers used:
  2859 ;;		wreg, status,2, status,0, cstack
  2860 ;; Tracked objects:
  2861 ;;		On entry : 0/F
  2862 ;;		On exit  : 0/0
  2863 ;;		Unchanged: 0/0
  2864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2865 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2866 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2867 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2868 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2869 ;;Total ram usage:        1 bytes
  2870 ;; Hardware stack levels used: 1
  2871 ;; Hardware stack levels required when called: 6
  2872 ;; This function calls:
  2873 ;;		_LCD
  2874 ;; This function is called by:
  2875 ;;		_settings
  2876 ;; This function uses a non-reentrant model
  2877 ;;
  2878                           
  2879                           	psect	text16
  2880  002F80                     __ptext16:
  2881                           	callstack 0
  2882  002F80                     _SettingsLCD:
  2883                           	callstack 23
  2884                           
  2885                           ; BSR set to: 0
  2886                           ;incstack = 0
  2887                           ;SettingsLCD@word stored from wreg
  2888  002F80  0100               	movlb	0	; () banked
  2889  002F82  6F6B               	movwf	SettingsLCD@word& (0+255),b
  2890                           
  2891                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 237: LATEbits.LATE1 = 0;
  2892  002F84  928D               	bcf	141,1,c	;volatile
  2893                           
  2894                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 238: LCD(word >> 4);
  2895  002F86  0100               	movlb	0	; () banked
  2896  002F88  396B               	swapf	SettingsLCD@word& (0+255),w,b
  2897  002F8A  0B0F               	andlw	15
  2898  002F8C  ECC6  F013         	call	_LCD
  2899                           
  2900                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 239: LCD(word & 0x0F);
  2901  002F90  0100               	movlb	0	; () banked
  2902  002F92  516B               	movf	SettingsLCD@word& (0+255),w,b
  2903  002F94  0B0F               	andlw	15
  2904  002F96  ECC6  F013         	call	_LCD
  2905  002F9A  0012               	return		;funcret
  2906  002F9C                     __end_of_SettingsLCD:
  2907                           	callstack 0
  2908                           
  2909 ;; *************** function _LCD *****************
  2910 ;; Defined at:
  2911 ;;		line 248 in file "PIC18F46K22_PCA9685_ROBOR_2R.c"
  2912 ;; Parameters:    Size  Location     Type
  2913 ;;  data            1    wreg     unsigned char 
  2914 ;; Auto vars:     Size  Location     Type
  2915 ;;  data            1   10[BANK0 ] unsigned char 
  2916 ;; Return value:  Size  Location     Type
  2917 ;;                  1    wreg      void 
  2918 ;; Registers used:
  2919 ;;		wreg, status,2, status,0, cstack
  2920 ;; Tracked objects:
  2921 ;;		On entry : 3F/0
  2922 ;;		On exit  : 0/0
  2923 ;;		Unchanged: 0/0
  2924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2925 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2926 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2927 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2928 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2929 ;;Total ram usage:        2 bytes
  2930 ;; Hardware stack levels used: 1
  2931 ;; Hardware stack levels required when called: 5
  2932 ;; This function calls:
  2933 ;;		Nothing
  2934 ;; This function is called by:
  2935 ;;		_SettingsLCD
  2936 ;; This function uses a non-reentrant model
  2937 ;;
  2938                           
  2939                           	psect	text17
  2940  00278C                     __ptext17:
  2941                           	callstack 0
  2942  00278C                     _LCD:
  2943                           	callstack 23
  2944                           
  2945                           ;incstack = 0
  2946                           ;LCD@data stored from wreg
  2947  00278C  6F6A               	movwf	LCD@data& (0+255),b
  2948                           
  2949                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 249: LATEbits.LATE0 = 1;
  2950  00278E  808D               	bsf	141,0,c	;volatile
  2951                           
  2952                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 250: _delay((unsigned long)((10)*(16000000/4000000.0)))
      +                          ;
  2953  002790  0E0D               	movlw	13
  2954  002792                     u3887:
  2955  002792  2EE8               	decfsz	wreg,f,c
  2956  002794  D7FE               	bra	u3887
  2957  002796  F000               	nop	
  2958                           
  2959                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 251: LATDbits.LATD0 = (data & 0x01);
  2960  002798  C06A  F069         	movff	LCD@data,??_LCD
  2961  00279C  0E01               	movlw	1
  2962  00279E  0100               	movlb	0	; () banked
  2963  0027A0  1769               	andwf	??_LCD& (0+255),f,b
  2964  0027A2  508C               	movf	140,w,c	;volatile
  2965  0027A4  1969               	xorwf	??_LCD& (0+255),w,b
  2966  0027A6  0BFE               	andlw	-2
  2967  0027A8  1969               	xorwf	??_LCD& (0+255),w,b
  2968  0027AA  6E8C               	movwf	140,c	;volatile
  2969                           
  2970                           ; BSR set to: 0
  2971                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 252: _delay((unsigned long)((10)*(16000000/4000000.0)))
      +                          ;
  2972  0027AC  0E0D               	movlw	13
  2973  0027AE                     u3897:
  2974  0027AE  2EE8               	decfsz	wreg,f,c
  2975  0027B0  D7FE               	bra	u3897
  2976  0027B2  F000               	nop	
  2977                           
  2978                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 253: LATDbits.LATD1 = (data & 0x02) >> 1;
  2979  0027B4  C06A  F069         	movff	LCD@data,??_LCD
  2980  0027B8  0100               	movlb	0	; () banked
  2981  0027BA  90D8               	bcf	status,0,c
  2982  0027BC  3369               	rrcf	??_LCD& (0+255),f,b
  2983  0027BE  0E01               	movlw	1
  2984  0027C0  1769               	andwf	??_LCD& (0+255),f,b
  2985  0027C2  4769               	rlncf	??_LCD& (0+255),f,b
  2986  0027C4  508C               	movf	140,w,c	;volatile
  2987  0027C6  1969               	xorwf	??_LCD& (0+255),w,b
  2988  0027C8  0BFD               	andlw	-3
  2989  0027CA  1969               	xorwf	??_LCD& (0+255),w,b
  2990  0027CC  6E8C               	movwf	140,c	;volatile
  2991                           
  2992                           ; BSR set to: 0
  2993                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 254: _delay((unsigned long)((10)*(16000000/4000000.0)))
      +                          ;
  2994  0027CE  0E0D               	movlw	13
  2995  0027D0                     u3907:
  2996  0027D0  2EE8               	decfsz	wreg,f,c
  2997  0027D2  D7FE               	bra	u3907
  2998  0027D4  F000               	nop	
  2999                           
  3000                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 255: LATDbits.LATD2 = (data & 0x04) >> 2;
  3001  0027D6  C06A  F069         	movff	LCD@data,??_LCD
  3002  0027DA  0100               	movlb	0	; () banked
  3003  0027DC  90D8               	bcf	status,0,c
  3004  0027DE  3369               	rrcf	??_LCD& (0+255),f,b
  3005  0027E0  90D8               	bcf	status,0,c
  3006  0027E2  3369               	rrcf	??_LCD& (0+255),f,b
  3007  0027E4  0E01               	movlw	1
  3008  0027E6  1769               	andwf	??_LCD& (0+255),f,b
  3009  0027E8  4769               	rlncf	??_LCD& (0+255),f,b
  3010  0027EA  4769               	rlncf	??_LCD& (0+255),f,b
  3011  0027EC  508C               	movf	140,w,c	;volatile
  3012  0027EE  1969               	xorwf	??_LCD& (0+255),w,b
  3013  0027F0  0BFB               	andlw	-5
  3014  0027F2  1969               	xorwf	??_LCD& (0+255),w,b
  3015  0027F4  6E8C               	movwf	140,c	;volatile
  3016                           
  3017                           ; BSR set to: 0
  3018                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 256: _delay((unsigned long)((10)*(16000000/4000000.0)))
      +                          ;
  3019  0027F6  0E0D               	movlw	13
  3020  0027F8                     u3917:
  3021  0027F8  2EE8               	decfsz	wreg,f,c
  3022  0027FA  D7FE               	bra	u3917
  3023  0027FC  F000               	nop	
  3024                           
  3025                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 257: LATDbits.LATD3 = (data & 0x08) >> 3;
  3026  0027FE  C06A  F069         	movff	LCD@data,??_LCD
  3027  002802  0100               	movlb	0	; () banked
  3028  002804  90D8               	bcf	status,0,c
  3029  002806  3369               	rrcf	??_LCD& (0+255),f,b
  3030  002808  90D8               	bcf	status,0,c
  3031  00280A  3369               	rrcf	??_LCD& (0+255),f,b
  3032  00280C  90D8               	bcf	status,0,c
  3033  00280E  3369               	rrcf	??_LCD& (0+255),f,b
  3034  002810  0E01               	movlw	1
  3035  002812  1769               	andwf	??_LCD& (0+255),f,b
  3036  002814  4769               	rlncf	??_LCD& (0+255),f,b
  3037  002816  4769               	rlncf	??_LCD& (0+255),f,b
  3038  002818  4769               	rlncf	??_LCD& (0+255),f,b
  3039  00281A  508C               	movf	140,w,c	;volatile
  3040  00281C  1969               	xorwf	??_LCD& (0+255),w,b
  3041  00281E  0BF7               	andlw	-9
  3042  002820  1969               	xorwf	??_LCD& (0+255),w,b
  3043  002822  6E8C               	movwf	140,c	;volatile
  3044                           
  3045                           ; BSR set to: 0
  3046                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 258: _delay((unsigned long)((10)*(16000000/4000000.0)))
      +                          ;
  3047  002824  0E0D               	movlw	13
  3048  002826                     u3927:
  3049  002826  2EE8               	decfsz	wreg,f,c
  3050  002828  D7FE               	bra	u3927
  3051  00282A  F000               	nop	
  3052                           
  3053                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 259: LATEbits.LATE0 = 0;
  3054  00282C  908D               	bcf	141,0,c	;volatile
  3055                           
  3056                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 260: _delay((unsigned long)((10)*(16000000/4000000.0)))
      +                          ;
  3057  00282E  0E0D               	movlw	13
  3058  002830                     u3937:
  3059  002830  2EE8               	decfsz	wreg,f,c
  3060  002832  D7FE               	bra	u3937
  3061  002834  F000               	nop	
  3062  002836  0012               	return		;funcret
  3063  002838                     __end_of_LCD:
  3064                           	callstack 0
  3065                           
  3066 ;; *************** function _TMR1_ISR *****************
  3067 ;; Defined at:
  3068 ;;		line 155 in file "PIC18F46K22_PCA9685_ROBOR_2R.c"
  3069 ;; Parameters:    Size  Location     Type
  3070 ;;		None
  3071 ;; Auto vars:     Size  Location     Type
  3072 ;;  d               1    8[BANK0 ] unsigned char 
  3073 ;; Return value:  Size  Location     Type
  3074 ;;                  1    wreg      void 
  3075 ;; Registers used:
  3076 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3077 ;; Tracked objects:
  3078 ;;		On entry : 0/0
  3079 ;;		On exit  : 0/0
  3080 ;;		Unchanged: 0/0
  3081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3082 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3083 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3084 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3085 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3086 ;;Total ram usage:        9 bytes
  3087 ;; Hardware stack levels used: 1
  3088 ;; Hardware stack levels required when called: 4
  3089 ;; This function calls:
  3090 ;;		_DataLCD
  3091 ;;		___awtoft
  3092 ;;		___ftadd
  3093 ;;		___ftmul
  3094 ;;		_map
  3095 ;;		_sprintf
  3096 ;;		_writeI2C
  3097 ;;		i2_SettingsLCD
  3098 ;;		i2___fttol
  3099 ;; This function is called by:
  3100 ;;		Interrupt level 2
  3101 ;; This function uses a non-reentrant model
  3102 ;;
  3103                           
  3104                           	psect	intcode
  3105  000008                     __pintcode:
  3106                           	callstack 0
  3107  000008                     _TMR1_ISR:
  3108                           	callstack 21
  3109                           
  3110                           ;incstack = 0
  3111  000008  825F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  3112  00000A  CFD9 F060          	movff	fsr2l,??_TMR1_ISR
  3113  00000E  CFDA F061          	movff	fsr2h,??_TMR1_ISR+1
  3114  000012  CFF3 F062          	movff	prodl,??_TMR1_ISR+2
  3115  000016  CFF4 F063          	movff	prodh,??_TMR1_ISR+3
  3116  00001A  CFF6 F064          	movff	tblptrl,??_TMR1_ISR+4
  3117  00001E  CFF7 F065          	movff	tblptrh,??_TMR1_ISR+5
  3118  000022  CFF8 F066          	movff	tblptru,??_TMR1_ISR+6
  3119  000026  CFF5 F067          	movff	tablat,??_TMR1_ISR+7
  3120                           
  3121                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 156: unsigned char d;;PIC18F46K22_PCA9685_ROBOR_2R.c: 1
      +                          58: if (RC1IF) {
  3122  00002A  AA9E               	btfss	3998,5,c	;volatile
  3123  00002C  D1B3               	goto	i2l158
  3124                           
  3125                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 159: d = RCREG1;
  3126  00002E  CFAE F068          	movff	4014,TMR1_ISR@d	;volatile
  3127                           
  3128                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 161: if (d == 'A' || d == 'B'){
  3129  000032  0E41               	movlw	65
  3130  000034  0100               	movlb	0	; () banked
  3131  000036  1968               	xorwf	TMR1_ISR@d& (0+255),w,b
  3132  000038  B4D8               	btfsc	status,2,c
  3133  00003A  D004               	goto	i2u365_40
  3134                           
  3135                           ; BSR set to: 0
  3136  00003C  0E42               	movlw	66
  3137  00003E  1968               	xorwf	TMR1_ISR@d& (0+255),w,b
  3138  000040  A4D8               	btfss	status,2,c
  3139  000042  D003               	goto	i2l3739
  3140  000044                     i2u365_40:
  3141                           
  3142                           ; BSR set to: 0
  3143                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 162: servo = d;
  3144  000044  C068  F0B9         	movff	TMR1_ISR@d,_servo
  3145                           
  3146                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 163: }
  3147  000048  D1A5               	goto	i2l158
  3148  00004A                     i2l3739:
  3149                           
  3150                           ; BSR set to: 0
  3151                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 165: else if (d == '0' || d == '1' || d == '2' || d == 
      +                          '3' || d == '4' || d == '5' || d == '6' || d == '7' || d == '8' || d == '9') {
  3152  00004A  0E30               	movlw	48
  3153  00004C  1968               	xorwf	TMR1_ISR@d& (0+255),w,b
  3154  00004E  B4D8               	btfsc	status,2,c
  3155  000050  D024               	goto	i2u375_40
  3156                           
  3157                           ; BSR set to: 0
  3158  000052  0E31               	movlw	49
  3159  000054  1968               	xorwf	TMR1_ISR@d& (0+255),w,b
  3160  000056  B4D8               	btfsc	status,2,c
  3161  000058  D020               	goto	i2u375_40
  3162                           
  3163                           ; BSR set to: 0
  3164  00005A  0E32               	movlw	50
  3165  00005C  1968               	xorwf	TMR1_ISR@d& (0+255),w,b
  3166  00005E  B4D8               	btfsc	status,2,c
  3167  000060  D01C               	goto	i2u375_40
  3168                           
  3169                           ; BSR set to: 0
  3170  000062  0E33               	movlw	51
  3171  000064  1968               	xorwf	TMR1_ISR@d& (0+255),w,b
  3172  000066  B4D8               	btfsc	status,2,c
  3173  000068  D018               	goto	i2u375_40
  3174                           
  3175                           ; BSR set to: 0
  3176  00006A  0E34               	movlw	52
  3177  00006C  1968               	xorwf	TMR1_ISR@d& (0+255),w,b
  3178  00006E  B4D8               	btfsc	status,2,c
  3179  000070  D014               	goto	i2u375_40
  3180                           
  3181                           ; BSR set to: 0
  3182  000072  0E35               	movlw	53
  3183  000074  1968               	xorwf	TMR1_ISR@d& (0+255),w,b
  3184  000076  B4D8               	btfsc	status,2,c
  3185  000078  D010               	goto	i2u375_40
  3186                           
  3187                           ; BSR set to: 0
  3188  00007A  0E36               	movlw	54
  3189  00007C  1968               	xorwf	TMR1_ISR@d& (0+255),w,b
  3190  00007E  B4D8               	btfsc	status,2,c
  3191  000080  D00C               	goto	i2u375_40
  3192                           
  3193                           ; BSR set to: 0
  3194  000082  0E37               	movlw	55
  3195  000084  1968               	xorwf	TMR1_ISR@d& (0+255),w,b
  3196  000086  B4D8               	btfsc	status,2,c
  3197  000088  D008               	goto	i2u375_40
  3198                           
  3199                           ; BSR set to: 0
  3200  00008A  0E38               	movlw	56
  3201  00008C  1968               	xorwf	TMR1_ISR@d& (0+255),w,b
  3202  00008E  B4D8               	btfsc	status,2,c
  3203  000090  D004               	goto	i2u375_40
  3204                           
  3205                           ; BSR set to: 0
  3206  000092  0E39               	movlw	57
  3207  000094  1968               	xorwf	TMR1_ISR@d& (0+255),w,b
  3208  000096  A4D8               	btfss	status,2,c
  3209  000098  D0B0               	goto	i2l3781
  3210  00009A                     i2u375_40:
  3211                           
  3212                           ; BSR set to: 0
  3213                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 166: if (flag == 1) {
  3214  00009A  05D6               	decf	_flag& (0+255),w,b
  3215  00009C  11D7               	iorwf	(_flag+1)& (0+255),w,b
  3216  00009E  A4D8               	btfss	status,2,c
  3217  0000A0  D013               	goto	i2l3765
  3218                           
  3219                           ; BSR set to: 0
  3220                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 167: a = d - 48;
  3221  0000A2  0ED0               	movlw	208
  3222  0000A4  2568               	addwf	TMR1_ISR@d& (0+255),w,b
  3223  0000A6  6E09               	movwf	___awtoft@c^0,c
  3224  0000A8  6A0A               	clrf	(___awtoft@c+1)^0,c
  3225  0000AA  0EFF               	movlw	255
  3226  0000AC  220A               	addwfc	(___awtoft@c+1)^0,f,c
  3227  0000AE  EC22  F017         	call	___awtoft	;wreg free
  3228  0000B2  C009  F0A9         	movff	?___awtoft,_a
  3229  0000B6  C00A  F0AA         	movff	?___awtoft+1,_a+1
  3230  0000BA  C00B  F0AB         	movff	?___awtoft+2,_a+2
  3231                           
  3232                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 168: flag = 2;
  3233  0000BE  0E00               	movlw	0
  3234  0000C0  0100               	movlb	0	; () banked
  3235  0000C2  6FD7               	movwf	(_flag+1)& (0+255),b
  3236  0000C4  0E02               	movlw	2
  3237  0000C6  D0A0               	goto	L4
  3238  0000C8                     i2l3765:
  3239                           
  3240                           ; BSR set to: 0
  3241                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 170: else if(flag == 2){
  3242  0000C8  0E02               	movlw	2
  3243  0000CA  19D6               	xorwf	_flag& (0+255),w,b
  3244  0000CC  11D7               	iorwf	(_flag+1)& (0+255),w,b
  3245  0000CE  A4D8               	btfss	status,2,c
  3246  0000D0  D02C               	goto	i2l3769
  3247                           
  3248                           ; BSR set to: 0
  3249                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 171: a = (a * 10) + (d - 48);
  3250  0000D2  0E00               	movlw	0
  3251  0000D4  6E12               	movwf	___ftmul@f2^0,c
  3252  0000D6  0E20               	movlw	32
  3253  0000D8  6E13               	movwf	(___ftmul@f2+1)^0,c
  3254  0000DA  0E41               	movlw	65
  3255  0000DC  6E14               	movwf	(___ftmul@f2+2)^0,c
  3256  0000DE  C0A9  F00F         	movff	_a,___ftmul@f1
  3257  0000E2  C0AA  F010         	movff	_a+1,___ftmul@f1+1
  3258  0000E6  C0AB  F011         	movff	_a+2,___ftmul@f1+2
  3259  0000EA  EC74  F010         	call	___ftmul	;wreg free
  3260  0000EE  C00F  F02C         	movff	?___ftmul,___ftadd@f1
  3261  0000F2  C010  F02D         	movff	?___ftmul+1,___ftadd@f1+1
  3262  0000F6  C011  F02E         	movff	?___ftmul+2,___ftadd@f1+2
  3263  0000FA  0ED0               	movlw	208
  3264  0000FC  0100               	movlb	0	; () banked
  3265  0000FE  2568               	addwf	TMR1_ISR@d& (0+255),w,b
  3266  000100  6E09               	movwf	___awtoft@c^0,c
  3267  000102  6A0A               	clrf	(___awtoft@c+1)^0,c
  3268  000104  0EFF               	movlw	255
  3269  000106  220A               	addwfc	(___awtoft@c+1)^0,f,c
  3270  000108  EC22  F017         	call	___awtoft	;wreg free
  3271  00010C  C009  F02F         	movff	?___awtoft,___ftadd@f2
  3272  000110  C00A  F030         	movff	?___awtoft+1,___ftadd@f2+1
  3273  000114  C00B  F031         	movff	?___awtoft+2,___ftadd@f2+2
  3274  000118  EC5D  F00E         	call	___ftadd	;wreg free
  3275  00011C  C02C  F0A9         	movff	?___ftadd,_a
  3276  000120  C02D  F0AA         	movff	?___ftadd+1,_a+1
  3277  000124  C02E  F0AB         	movff	?___ftadd+2,_a+2
  3278                           
  3279                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 172: }
  3280  000128  D135               	goto	i2l158
  3281  00012A                     i2l3769:
  3282                           
  3283                           ; BSR set to: 0
  3284                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 174: else if(flag == 3){
  3285  00012A  0E03               	movlw	3
  3286  00012C  19D6               	xorwf	_flag& (0+255),w,b
  3287  00012E  11D7               	iorwf	(_flag+1)& (0+255),w,b
  3288  000130  A4D8               	btfss	status,2,c
  3289  000132  D02F               	goto	i2l3775
  3290                           
  3291                           ; BSR set to: 0
  3292                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 175: a = a + (d-48)*0.1;
  3293  000134  0ECD               	movlw	205
  3294  000136  6E12               	movwf	___ftmul@f2^0,c
  3295  000138  0ECC               	movlw	204
  3296  00013A  6E13               	movwf	(___ftmul@f2+1)^0,c
  3297  00013C  0E3D               	movlw	61
  3298  00013E  6E14               	movwf	(___ftmul@f2+2)^0,c
  3299  000140  0ED0               	movlw	208
  3300  000142  2568               	addwf	TMR1_ISR@d& (0+255),w,b
  3301  000144  6E09               	movwf	___awtoft@c^0,c
  3302  000146  6A0A               	clrf	(___awtoft@c+1)^0,c
  3303  000148  0EFF               	movlw	255
  3304  00014A  220A               	addwfc	(___awtoft@c+1)^0,f,c
  3305  00014C  EC22  F017         	call	___awtoft	;wreg free
  3306  000150  C009  F00F         	movff	?___awtoft,___ftmul@f1
  3307  000154  C00A  F010         	movff	?___awtoft+1,___ftmul@f1+1
  3308  000158  C00B  F011         	movff	?___awtoft+2,___ftmul@f1+2
  3309  00015C  EC74  F010         	call	___ftmul	;wreg free
  3310  000160  C00F  F02C         	movff	?___ftmul,___ftadd@f1
  3311  000164  C010  F02D         	movff	?___ftmul+1,___ftadd@f1+1
  3312  000168  C011  F02E         	movff	?___ftmul+2,___ftadd@f1+2
  3313  00016C  C0A9  F02F         	movff	_a,___ftadd@f2
  3314  000170  C0AA  F030         	movff	_a+1,___ftadd@f2+1
  3315  000174  C0AB  F031         	movff	_a+2,___ftadd@f2+2
  3316  000178  EC5D  F00E         	call	___ftadd	;wreg free
  3317  00017C  C02C  F0A9         	movff	?___ftadd,_a
  3318  000180  C02D  F0AA         	movff	?___ftadd+1,_a+1
  3319  000184  C02E  F0AB         	movff	?___ftadd+2,_a+2
  3320                           
  3321                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 176: flag = 4;
  3322  000188  0E00               	movlw	0
  3323  00018A  0100               	movlb	0	; () banked
  3324  00018C  6FD7               	movwf	(_flag+1)& (0+255),b
  3325  00018E  0E04               	movlw	4
  3326  000190  D03B               	goto	L4
  3327  000192                     i2l3775:
  3328                           
  3329                           ; BSR set to: 0
  3330                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 178: else if(flag == 4){
  3331  000192  0E04               	movlw	4
  3332  000194  19D6               	xorwf	_flag& (0+255),w,b
  3333  000196  11D7               	iorwf	(_flag+1)& (0+255),w,b
  3334  000198  A4D8               	btfss	status,2,c
  3335  00019A  D0FC               	goto	i2l158
  3336                           
  3337                           ; BSR set to: 0
  3338                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 179: a = a + (d-48)*0.01;
  3339  00019C  0ED7               	movlw	215
  3340  00019E  6E12               	movwf	___ftmul@f2^0,c
  3341  0001A0  0E23               	movlw	35
  3342  0001A2  6E13               	movwf	(___ftmul@f2+1)^0,c
  3343  0001A4  0E3C               	movlw	60
  3344  0001A6  6E14               	movwf	(___ftmul@f2+2)^0,c
  3345  0001A8  0ED0               	movlw	208
  3346  0001AA  2568               	addwf	TMR1_ISR@d& (0+255),w,b
  3347  0001AC  6E09               	movwf	___awtoft@c^0,c
  3348  0001AE  6A0A               	clrf	(___awtoft@c+1)^0,c
  3349  0001B0  0EFF               	movlw	255
  3350  0001B2  220A               	addwfc	(___awtoft@c+1)^0,f,c
  3351  0001B4  EC22  F017         	call	___awtoft	;wreg free
  3352  0001B8  C009  F00F         	movff	?___awtoft,___ftmul@f1
  3353  0001BC  C00A  F010         	movff	?___awtoft+1,___ftmul@f1+1
  3354  0001C0  C00B  F011         	movff	?___awtoft+2,___ftmul@f1+2
  3355  0001C4  EC74  F010         	call	___ftmul	;wreg free
  3356  0001C8  C00F  F02C         	movff	?___ftmul,___ftadd@f1
  3357  0001CC  C010  F02D         	movff	?___ftmul+1,___ftadd@f1+1
  3358  0001D0  C011  F02E         	movff	?___ftmul+2,___ftadd@f1+2
  3359  0001D4  C0A9  F02F         	movff	_a,___ftadd@f2
  3360  0001D8  C0AA  F030         	movff	_a+1,___ftadd@f2+1
  3361  0001DC  C0AB  F031         	movff	_a+2,___ftadd@f2+2
  3362  0001E0  EC5D  F00E         	call	___ftadd	;wreg free
  3363  0001E4  C02C  F0A9         	movff	?___ftadd,_a
  3364  0001E8  C02D  F0AA         	movff	?___ftadd+1,_a+1
  3365  0001EC  C02E  F0AB         	movff	?___ftadd+2,_a+2
  3366                           
  3367                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 180: flag = 5;
  3368  0001F0  0E00               	movlw	0
  3369  0001F2  0100               	movlb	0	; () banked
  3370  0001F4  6FD7               	movwf	(_flag+1)& (0+255),b
  3371  0001F6  0E05               	movlw	5
  3372  0001F8  D007               	goto	L4
  3373  0001FA                     i2l3781:
  3374                           
  3375                           ; BSR set to: 0
  3376                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 184: else if(d == '.'){
  3377  0001FA  0E2E               	movlw	46
  3378  0001FC  1968               	xorwf	TMR1_ISR@d& (0+255),w,b
  3379  0001FE  A4D8               	btfss	status,2,c
  3380  000200  D005               	goto	i2l3785
  3381                           
  3382                           ; BSR set to: 0
  3383                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 185: flag = 3;
  3384  000202  0E00               	movlw	0
  3385  000204  6FD7               	movwf	(_flag+1)& (0+255),b
  3386  000206  0E03               	movlw	3
  3387  000208                     L4:
  3388  000208  6FD6               	movwf	_flag& (0+255),b
  3389                           
  3390                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 186: }
  3391  00020A  D0C4               	goto	i2l158
  3392  00020C                     i2l3785:
  3393                           
  3394                           ; BSR set to: 0
  3395                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 188: else if (d == 'O') {
  3396  00020C  0E4F               	movlw	79
  3397  00020E  1968               	xorwf	TMR1_ISR@d& (0+255),w,b
  3398  000210  A4D8               	btfss	status,2,c
  3399  000212  D020               	goto	i2l3797
  3400                           
  3401                           ; BSR set to: 0
  3402                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 189: if (servo == 'A'){
  3403  000214  0E41               	movlw	65
  3404  000216  19B9               	xorwf	_servo& (0+255),w,b
  3405  000218  A4D8               	btfss	status,2,c
  3406  00021A  D007               	goto	i2l3791
  3407                           
  3408                           ; BSR set to: 0
  3409                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 190: b = a;
  3410  00021C  C0A9  F0A6         	movff	_a,_b
  3411  000220  C0AA  F0A7         	movff	_a+1,_b+1
  3412  000224  C0AB  F0A8         	movff	_a+2,_b+2
  3413                           
  3414                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 191: }
  3415  000228  D00A               	goto	i2l3795
  3416  00022A                     i2l3791:
  3417                           
  3418                           ; BSR set to: 0
  3419                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 192: else if(servo == 'B'){
  3420  00022A  0E42               	movlw	66
  3421  00022C  19B9               	xorwf	_servo& (0+255),w,b
  3422  00022E  A4D8               	btfss	status,2,c
  3423  000230  D006               	goto	i2l3795
  3424                           
  3425                           ; BSR set to: 0
  3426                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 193: c = a;
  3427  000232  C0A9  F0A3         	movff	_a,_c
  3428  000236  C0AA  F0A4         	movff	_a+1,_c+1
  3429  00023A  C0AB  F0A5         	movff	_a+2,_c+2
  3430  00023E                     i2l3795:
  3431                           
  3432                           ; BSR set to: 0
  3433                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 194: };PIC18F46K22_PCA9685_ROBOR_2R.c: 195: flag = 1;
  3434  00023E  0E00               	movlw	0
  3435  000240  6FD7               	movwf	(_flag+1)& (0+255),b
  3436  000242  0E01               	movlw	1
  3437  000244  6FD6               	movwf	_flag& (0+255),b
  3438                           
  3439                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 196: a = 0.0;
  3440  000246  0E00               	movlw	0
  3441  000248  6FA9               	movwf	_a& (0+255),b
  3442  00024A  0E00               	movlw	0
  3443  00024C  6FAA               	movwf	(_a+1)& (0+255),b
  3444  00024E  0E00               	movlw	0
  3445  000250  6FAB               	movwf	(_a+2)& (0+255),b
  3446                           
  3447                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 197: }
  3448  000252  D0A0               	goto	i2l158
  3449  000254                     i2l3797:
  3450                           
  3451                           ; BSR set to: 0
  3452                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 200: else if (d == 'K'){
  3453  000254  0E4B               	movlw	75
  3454  000256  1968               	xorwf	TMR1_ISR@d& (0+255),w,b
  3455  000258  A4D8               	btfss	status,2,c
  3456  00025A  D09C               	goto	i2l158
  3457                           
  3458                           ; BSR set to: 0
  3459                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 202: SettingsLCD(0x01);
  3460  00025C  0E01               	movlw	1
  3461  00025E  ECCE  F017         	call	i2_SettingsLCD
  3462                           
  3463                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 203: SettingsLCD(0x80);
  3464  000262  0E80               	movlw	128
  3465  000264  ECCE  F017         	call	i2_SettingsLCD
  3466                           
  3467                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 204: sprintf(text,"Servo 1:%.2f",b);
  3468  000268  0EBA               	movlw	low _text
  3469  00026A  6E3E               	movwf	sprintf@sp^0,c
  3470  00026C  0E77               	movlw	low STR_1
  3471  00026E  6E3F               	movwf	sprintf@f^0,c
  3472  000270  C0A6  F040         	movff	_b,?_sprintf+2
  3473  000274  C0A7  F041         	movff	_b+1,?_sprintf+3
  3474  000278  C0A8  F042         	movff	_b+2,?_sprintf+4
  3475  00027C  EC49  F008         	call	_sprintf	;wreg free
  3476                           
  3477                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 205: DataLCD();
  3478  000280  EC61  F016         	call	_DataLCD	;wreg free
  3479                           
  3480                           ; BSR set to: 0
  3481                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 208: SettingsLCD(0xC0);
  3482  000284  0EC0               	movlw	192
  3483  000286  ECCE  F017         	call	i2_SettingsLCD
  3484                           
  3485                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 209: sprintf(text,"Servo 2:%.2f",c);
  3486  00028A  0EBA               	movlw	low _text
  3487  00028C  6E3E               	movwf	sprintf@sp^0,c
  3488  00028E  0E84               	movlw	low STR_2
  3489  000290  6E3F               	movwf	sprintf@f^0,c
  3490  000292  C0A3  F040         	movff	_c,?_sprintf+2
  3491  000296  C0A4  F041         	movff	_c+1,?_sprintf+3
  3492  00029A  C0A5  F042         	movff	_c+2,?_sprintf+4
  3493  00029E  EC49  F008         	call	_sprintf	;wreg free
  3494                           
  3495                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 210: DataLCD();
  3496  0002A2  EC61  F016         	call	_DataLCD	;wreg free
  3497                           
  3498                           ; BSR set to: 0
  3499                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 212: data2[0] = 0;
  3500  0002A6  0E00               	movlw	0
  3501  0002A8  6FD2               	movwf	_data2& (0+255),b
  3502                           
  3503                           ; BSR set to: 0
  3504                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 213: data2[1] = 0;
  3505  0002AA  0E00               	movlw	0
  3506  0002AC  6FD3               	movwf	(_data2+1)& (0+255),b
  3507                           
  3508                           ; BSR set to: 0
  3509                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 215: DriverPin1 = 0;
  3510  0002AE  0E00               	movlw	0
  3511  0002B0  6FB1               	movwf	(_DriverPin1+1)& (0+255),b
  3512  0002B2  0E00               	movlw	0
  3513  0002B4  6FB0               	movwf	_DriverPin1& (0+255),b
  3514                           
  3515                           ; BSR set to: 0
  3516                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 216: pos = map(b, 0, 180, 110, 510);
  3517  0002B6  C0A6  F029         	movff	_b,i2___fttol@f1
  3518  0002BA  C0A7  F02A         	movff	_b+1,i2___fttol@f1+1
  3519  0002BE  C0A8  F02B         	movff	_b+2,i2___fttol@f1+2
  3520  0002C2  ECAF  F012         	call	i2___fttol	;wreg free
  3521  0002C6  C029  F038         	movff	?i2___fttol,map@x
  3522  0002CA  C02A  F039         	movff	?i2___fttol+1,map@x+1
  3523  0002CE  0E00               	movlw	0
  3524  0002D0  6E3B               	movwf	(map@In_Min+1)^0,c
  3525  0002D2  0E00               	movlw	0
  3526  0002D4  6E3A               	movwf	map@In_Min^0,c
  3527  0002D6  0E00               	movlw	0
  3528  0002D8  6E3D               	movwf	(map@In_Max+1)^0,c
  3529  0002DA  0EB4               	movlw	180
  3530  0002DC  6E3C               	movwf	map@In_Max^0,c
  3531  0002DE  0E00               	movlw	0
  3532  0002E0  6E3F               	movwf	(map@Out_Min+1)^0,c
  3533  0002E2  0E6E               	movlw	110
  3534  0002E4  6E3E               	movwf	map@Out_Min^0,c
  3535  0002E6  0E01               	movlw	1
  3536  0002E8  6E41               	movwf	(map@Out_Max+1)^0,c
  3537  0002EA  0EFE               	movlw	254
  3538  0002EC  6E40               	movwf	map@Out_Max^0,c
  3539  0002EE  ECA6  F016         	call	_map	;wreg free
  3540  0002F2  C038  F0B2         	movff	?_map,_pos
  3541  0002F6  C039  F0B3         	movff	?_map+1,_pos+1
  3542                           
  3543                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 217: data2[2] = pos;
  3544  0002FA  C0B2  F0D4         	movff	_pos,_data2+2
  3545                           
  3546                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 218: data2[3] = pos >> 8;
  3547  0002FE  0100               	movlb	0	; () banked
  3548  000300  51B3               	movf	(_pos+1)& (0+255),w,b
  3549  000302  6FD5               	movwf	(_data2+3)& (0+255),b
  3550                           
  3551                           ; BSR set to: 0
  3552                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 224: DriverPin2 = 1;
  3553  000304  0E00               	movlw	0
  3554  000306  6FAF               	movwf	(_DriverPin2+1)& (0+255),b
  3555  000308  0E01               	movlw	1
  3556  00030A  6FAE               	movwf	_DriverPin2& (0+255),b
  3557                           
  3558                           ; BSR set to: 0
  3559                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 225: pos = map(c, 0, 180, 110, 510);
  3560  00030C  C0A3  F029         	movff	_c,i2___fttol@f1
  3561  000310  C0A4  F02A         	movff	_c+1,i2___fttol@f1+1
  3562  000314  C0A5  F02B         	movff	_c+2,i2___fttol@f1+2
  3563  000318  ECAF  F012         	call	i2___fttol	;wreg free
  3564  00031C  C029  F038         	movff	?i2___fttol,map@x
  3565  000320  C02A  F039         	movff	?i2___fttol+1,map@x+1
  3566  000324  0E00               	movlw	0
  3567  000326  6E3B               	movwf	(map@In_Min+1)^0,c
  3568  000328  0E00               	movlw	0
  3569  00032A  6E3A               	movwf	map@In_Min^0,c
  3570  00032C  0E00               	movlw	0
  3571  00032E  6E3D               	movwf	(map@In_Max+1)^0,c
  3572  000330  0EB4               	movlw	180
  3573  000332  6E3C               	movwf	map@In_Max^0,c
  3574  000334  0E00               	movlw	0
  3575  000336  6E3F               	movwf	(map@Out_Min+1)^0,c
  3576  000338  0E6E               	movlw	110
  3577  00033A  6E3E               	movwf	map@Out_Min^0,c
  3578  00033C  0E01               	movlw	1
  3579  00033E  6E41               	movwf	(map@Out_Max+1)^0,c
  3580  000340  0EFE               	movlw	254
  3581  000342  6E40               	movwf	map@Out_Max^0,c
  3582  000344  ECA6  F016         	call	_map	;wreg free
  3583  000348  C038  F0B2         	movff	?_map,_pos
  3584  00034C  C039  F0B3         	movff	?_map+1,_pos+1
  3585                           
  3586                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 226: data3[2] = pos;
  3587  000350  C0B2  F0D0         	movff	_pos,_data3+2
  3588                           
  3589                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 227: data3[3] = pos >> 8;
  3590  000354  0100               	movlb	0	; () banked
  3591  000356  51B3               	movf	(_pos+1)& (0+255),w,b
  3592  000358  6FD1               	movwf	(_data3+3)& (0+255),b
  3593                           
  3594                           ; BSR set to: 0
  3595                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 229: writeI2C(0x80, 0x06 + (4 * DriverPin1), data2, 4);
  3596  00035A  51B0               	movf	_DriverPin1& (0+255),w,b
  3597  00035C  0D04               	mullw	4
  3598  00035E  50F3               	movf	243,w,c
  3599  000360  0F06               	addlw	6
  3600  000362  6E03               	movwf	writeI2C@Register^0,c
  3601  000364  0ED2               	movlw	low _data2
  3602  000366  6E04               	movwf	writeI2C@Data^0,c
  3603  000368  0E00               	movlw	0
  3604  00036A  6E06               	movwf	(writeI2C@bytes+1)^0,c
  3605  00036C  0E04               	movlw	4
  3606  00036E  6E05               	movwf	writeI2C@bytes^0,c
  3607  000370  0E80               	movlw	128
  3608  000372  EC84  F016         	call	_writeI2C
  3609                           
  3610                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 230: writeI2C(0x80, 0x06 + (4 * DriverPin2), data3, 4);
  3611  000376  0100               	movlb	0	; () banked
  3612  000378  51AE               	movf	_DriverPin2& (0+255),w,b
  3613  00037A  0D04               	mullw	4
  3614  00037C  50F3               	movf	243,w,c
  3615  00037E  0F06               	addlw	6
  3616  000380  6E03               	movwf	writeI2C@Register^0,c
  3617  000382  0ECE               	movlw	low _data3
  3618  000384  6E04               	movwf	writeI2C@Data^0,c
  3619  000386  0E00               	movlw	0
  3620  000388  6E06               	movwf	(writeI2C@bytes+1)^0,c
  3621  00038A  0E04               	movlw	4
  3622  00038C  6E05               	movwf	writeI2C@bytes^0,c
  3623  00038E  0E80               	movlw	128
  3624  000390  EC84  F016         	call	_writeI2C
  3625  000394                     i2l158:
  3626  000394  C067  FFF5         	movff	??_TMR1_ISR+7,tablat
  3627  000398  C066  FFF8         	movff	??_TMR1_ISR+6,tblptru
  3628  00039C  C065  FFF7         	movff	??_TMR1_ISR+5,tblptrh
  3629  0003A0  C064  FFF6         	movff	??_TMR1_ISR+4,tblptrl
  3630  0003A4  C063  FFF4         	movff	??_TMR1_ISR+3,prodh
  3631  0003A8  C062  FFF3         	movff	??_TMR1_ISR+2,prodl
  3632  0003AC  C061  FFDA         	movff	??_TMR1_ISR+1,fsr2h
  3633  0003B0  C060  FFD9         	movff	??_TMR1_ISR,fsr2l
  3634  0003B4  925F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  3635  0003B6  0011               	retfie		f
  3636  0003B8                     __end_of_TMR1_ISR:
  3637                           	callstack 0
  3638                           
  3639 ;; *************** function i2_SettingsLCD *****************
  3640 ;; Defined at:
  3641 ;;		line 236 in file "PIC18F46K22_PCA9685_ROBOR_2R.c"
  3642 ;; Parameters:    Size  Location     Type
  3643 ;;  word            1    wreg     unsigned char 
  3644 ;; Auto vars:     Size  Location     Type
  3645 ;;  word            1    2[COMRAM] unsigned char 
  3646 ;; Return value:  Size  Location     Type
  3647 ;;                  1    wreg      void 
  3648 ;; Registers used:
  3649 ;;		wreg, status,2, status,0, cstack
  3650 ;; Tracked objects:
  3651 ;;		On entry : 0/0
  3652 ;;		On exit  : 0/0
  3653 ;;		Unchanged: 0/0
  3654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3655 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3656 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3657 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3658 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3659 ;;Total ram usage:        1 bytes
  3660 ;; Hardware stack levels used: 1
  3661 ;; Hardware stack levels required when called: 1
  3662 ;; This function calls:
  3663 ;;		i2_LCD
  3664 ;; This function is called by:
  3665 ;;		_TMR1_ISR
  3666 ;; This function uses a non-reentrant model
  3667 ;;
  3668                           
  3669                           	psect	text19
  3670  002F9C                     __ptext19:
  3671                           	callstack 0
  3672  002F9C                     i2_SettingsLCD:
  3673                           	callstack 23
  3674                           
  3675                           ;incstack = 0
  3676                           ;i2SettingsLCD@word stored from wreg
  3677  002F9C  6E03               	movwf	i2SettingsLCD@word^0,c
  3678                           
  3679                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 237: LATEbits.LATE1 = 0;
  3680  002F9E  928D               	bcf	141,1,c	;volatile
  3681                           
  3682                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 238: LCD(word >> 4);
  3683  002FA0  3803               	swapf	i2SettingsLCD@word^0,w,c
  3684  002FA2  0B0F               	andlw	15
  3685  002FA4  EC1C  F014         	call	i2_LCD
  3686                           
  3687                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 239: LCD(word & 0x0F);
  3688  002FA8  5003               	movf	i2SettingsLCD@word^0,w,c
  3689  002FAA  0B0F               	andlw	15
  3690  002FAC  EC1C  F014         	call	i2_LCD
  3691  002FB0  0012               	return		;funcret
  3692  002FB2                     __end_ofi2_SettingsLCD:
  3693                           	callstack 0
  3694                           
  3695 ;; *************** function _writeI2C *****************
  3696 ;; Defined at:
  3697 ;;		line 276 in file "PIC18F46K22_PCA9685_ROBOR_2R.c"
  3698 ;; Parameters:    Size  Location     Type
  3699 ;;  Address         1    wreg     unsigned char 
  3700 ;;  Register        1    2[COMRAM] unsigned char 
  3701 ;;  Data            1    3[COMRAM] PTR unsigned char 
  3702 ;;		 -> data3(4), data2(4), 
  3703 ;;  bytes           2    4[COMRAM] int 
  3704 ;; Auto vars:     Size  Location     Type
  3705 ;;  Address         1    6[COMRAM] unsigned char 
  3706 ;; Return value:  Size  Location     Type
  3707 ;;                  1    wreg      void 
  3708 ;; Registers used:
  3709 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3710 ;; Tracked objects:
  3711 ;;		On entry : 3F/0
  3712 ;;		On exit  : 0/0
  3713 ;;		Unchanged: 0/0
  3714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3715 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3716 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3717 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3718 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3719 ;;Total ram usage:        5 bytes
  3720 ;; Hardware stack levels used: 1
  3721 ;; Hardware stack levels required when called: 2
  3722 ;; This function calls:
  3723 ;;		i2_sendI2C
  3724 ;;		i2_startI2C
  3725 ;;		i2_stopI2C
  3726 ;; This function is called by:
  3727 ;;		_TMR1_ISR
  3728 ;; This function uses a non-reentrant model
  3729 ;;
  3730                           
  3731                           	psect	text20
  3732  002D08                     __ptext20:
  3733                           	callstack 0
  3734  002D08                     _writeI2C:
  3735                           	callstack 22
  3736                           
  3737                           ;incstack = 0
  3738                           ;writeI2C@Address stored from wreg
  3739  002D08  6E07               	movwf	writeI2C@Address^0,c
  3740                           
  3741                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 277: startI2C();
  3742  002D0A  EC13  F018         	call	i2_startI2C	;wreg free
  3743                           
  3744                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 278: sendI2C(Address);
  3745  002D0E  5007               	movf	writeI2C@Address^0,w,c
  3746  002D10  ECFD  F017         	call	i2_sendI2C
  3747                           
  3748                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 279: sendI2C(Register);
  3749  002D14  5003               	movf	writeI2C@Register^0,w,c
  3750  002D16  ECFD  F017         	call	i2_sendI2C
  3751                           
  3752                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 280: for (i = 0; i < bytes; i++) {
  3753  002D1A  0E00               	movlw	0
  3754  002D1C  0100               	movlb	0	; () banked
  3755  002D1E  6FB7               	movwf	(_i+1)& (0+255),b
  3756  002D20  0E00               	movlw	0
  3757  002D22  6FB6               	movwf	_i& (0+255),b
  3758  002D24  D00A               	goto	i2l3709
  3759  002D26                     i2l3703:
  3760                           
  3761                           ; BSR set to: 0
  3762                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 281: sendI2C(*Data);
  3763  002D26  5004               	movf	writeI2C@Data^0,w,c
  3764  002D28  6ED9               	movwf	fsr2l,c
  3765  002D2A  6ADA               	clrf	fsr2h,c
  3766  002D2C  50DF               	movf	indf2,w,c
  3767  002D2E  ECFD  F017         	call	i2_sendI2C
  3768                           
  3769                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 282: Data++;
  3770  002D32  2A04               	incf	writeI2C@Data^0,f,c
  3771  002D34  0100               	movlb	0	; () banked
  3772  002D36  4BB6               	infsnz	_i& (0+255),f,b
  3773  002D38  2BB7               	incf	(_i+1)& (0+255),f,b
  3774  002D3A                     i2l3709:
  3775                           
  3776                           ; BSR set to: 0
  3777  002D3A  5005               	movf	writeI2C@bytes^0,w,c
  3778  002D3C  5DB6               	subwf	_i& (0+255),w,b
  3779  002D3E  5006               	movf	(writeI2C@bytes+1)^0,w,c
  3780  002D40  59B7               	subwfb	(_i+1)& (0+255),w,b
  3781  002D42  A0D8               	btfss	status,0,c
  3782  002D44  D7F0               	goto	i2l3703
  3783                           
  3784                           ; BSR set to: 0
  3785                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 283: };PIC18F46K22_PCA9685_ROBOR_2R.c: 284: stopI2C();
  3786  002D46  EC0F  F018         	call	i2_stopI2C	;wreg free
  3787  002D4A  0012               	return		;funcret
  3788  002D4C                     __end_of_writeI2C:
  3789                           	callstack 0
  3790                           
  3791 ;; *************** function i2_stopI2C *****************
  3792 ;; Defined at:
  3793 ;;		line 302 in file "PIC18F46K22_PCA9685_ROBOR_2R.c"
  3794 ;; Parameters:    Size  Location     Type
  3795 ;;		None
  3796 ;; Auto vars:     Size  Location     Type
  3797 ;;		None
  3798 ;; Return value:  Size  Location     Type
  3799 ;;                  1    wreg      void 
  3800 ;; Registers used:
  3801 ;;		wreg, status,2, status,0, cstack
  3802 ;; Tracked objects:
  3803 ;;		On entry : 3F/0
  3804 ;;		On exit  : 0/0
  3805 ;;		Unchanged: 0/0
  3806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3807 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3808 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3809 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3810 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3811 ;;Total ram usage:        0 bytes
  3812 ;; Hardware stack levels used: 1
  3813 ;; Hardware stack levels required when called: 1
  3814 ;; This function calls:
  3815 ;;		i2_readyI2C
  3816 ;; This function is called by:
  3817 ;;		_writeI2C
  3818 ;; This function uses a non-reentrant model
  3819 ;;
  3820                           
  3821                           	psect	text21
  3822  00301E                     __ptext21:
  3823                           	callstack 0
  3824  00301E                     i2_stopI2C:
  3825                           	callstack 22
  3826                           
  3827                           ; BSR set to: 0
  3828                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 303: readyI2C();
  3829                           
  3830                           ;incstack = 0
  3831  00301E  ECEE  F017         	call	i2_readyI2C	;wreg free
  3832                           
  3833                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 304: SSP1CON2bits.PEN = 1;
  3834  003022  84C5               	bsf	197,2,c	;volatile
  3835  003024  0012               	return		;funcret
  3836  003026                     __end_ofi2_stopI2C:
  3837                           	callstack 0
  3838                           
  3839 ;; *************** function i2_startI2C *****************
  3840 ;; Defined at:
  3841 ;;		line 288 in file "PIC18F46K22_PCA9685_ROBOR_2R.c"
  3842 ;; Parameters:    Size  Location     Type
  3843 ;;		None
  3844 ;; Auto vars:     Size  Location     Type
  3845 ;;		None
  3846 ;; Return value:  Size  Location     Type
  3847 ;;                  1    wreg      void 
  3848 ;; Registers used:
  3849 ;;		wreg, status,2, status,0, cstack
  3850 ;; Tracked objects:
  3851 ;;		On entry : 0/0
  3852 ;;		On exit  : 0/0
  3853 ;;		Unchanged: 0/0
  3854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3855 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3856 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3857 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3858 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3859 ;;Total ram usage:        0 bytes
  3860 ;; Hardware stack levels used: 1
  3861 ;; Hardware stack levels required when called: 1
  3862 ;; This function calls:
  3863 ;;		i2_readyI2C
  3864 ;; This function is called by:
  3865 ;;		_writeI2C
  3866 ;; This function uses a non-reentrant model
  3867 ;;
  3868                           
  3869                           	psect	text22
  3870  003026                     __ptext22:
  3871                           	callstack 0
  3872  003026                     i2_startI2C:
  3873                           	callstack 22
  3874                           
  3875                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 289: readyI2C();
  3876                           
  3877                           ;incstack = 0
  3878  003026  ECEE  F017         	call	i2_readyI2C	;wreg free
  3879                           
  3880                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 290: SSP1CON2bits.SEN = 1;
  3881  00302A  80C5               	bsf	197,0,c	;volatile
  3882  00302C  0012               	return		;funcret
  3883  00302E                     __end_ofi2_startI2C:
  3884                           	callstack 0
  3885                           
  3886 ;; *************** function i2_sendI2C *****************
  3887 ;; Defined at:
  3888 ;;		line 297 in file "PIC18F46K22_PCA9685_ROBOR_2R.c"
  3889 ;; Parameters:    Size  Location     Type
  3890 ;;  data            1    wreg     unsigned char 
  3891 ;; Auto vars:     Size  Location     Type
  3892 ;;  data            1    1[COMRAM] unsigned char 
  3893 ;; Return value:  Size  Location     Type
  3894 ;;                  1    wreg      void 
  3895 ;; Registers used:
  3896 ;;		wreg, status,2, status,0, cstack
  3897 ;; Tracked objects:
  3898 ;;		On entry : 0/0
  3899 ;;		On exit  : 0/0
  3900 ;;		Unchanged: 0/0
  3901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3902 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3903 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3904 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3905 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3906 ;;Total ram usage:        1 bytes
  3907 ;; Hardware stack levels used: 1
  3908 ;; Hardware stack levels required when called: 1
  3909 ;; This function calls:
  3910 ;;		i2_readyI2C
  3911 ;; This function is called by:
  3912 ;;		_writeI2C
  3913 ;; This function uses a non-reentrant model
  3914 ;;
  3915                           
  3916                           	psect	text23
  3917  002FFA                     __ptext23:
  3918                           	callstack 0
  3919  002FFA                     i2_sendI2C:
  3920                           	callstack 22
  3921                           
  3922                           ;incstack = 0
  3923                           ;i2sendI2C@data stored from wreg
  3924  002FFA  6E02               	movwf	i2sendI2C@data^0,c
  3925                           
  3926                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 298: readyI2C();
  3927  002FFC  ECEE  F017         	call	i2_readyI2C	;wreg free
  3928                           
  3929                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 299: SSP1BUF = data;
  3930  003000  C002  FFC9         	movff	i2sendI2C@data,4041	;volatile
  3931  003004  0012               	return		;funcret
  3932  003006                     __end_ofi2_sendI2C:
  3933                           	callstack 0
  3934                           
  3935 ;; *************** function i2_readyI2C *****************
  3936 ;; Defined at:
  3937 ;;		line 293 in file "PIC18F46K22_PCA9685_ROBOR_2R.c"
  3938 ;; Parameters:    Size  Location     Type
  3939 ;;		None
  3940 ;; Auto vars:     Size  Location     Type
  3941 ;;		None
  3942 ;; Return value:  Size  Location     Type
  3943 ;;                  1    wreg      void 
  3944 ;; Registers used:
  3945 ;;		wreg, status,2, status,0
  3946 ;; Tracked objects:
  3947 ;;		On entry : 0/0
  3948 ;;		On exit  : 0/0
  3949 ;;		Unchanged: 0/0
  3950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3951 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3952 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3953 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3954 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3955 ;;Total ram usage:        1 bytes
  3956 ;; Hardware stack levels used: 1
  3957 ;; This function calls:
  3958 ;;		Nothing
  3959 ;; This function is called by:
  3960 ;;		i2_startI2C
  3961 ;;		i2_sendI2C
  3962 ;;		i2_stopI2C
  3963 ;; This function uses a non-reentrant model
  3964 ;;
  3965                           
  3966                           	psect	text24
  3967  002FDC                     __ptext24:
  3968                           	callstack 0
  3969  002FDC                     i2_readyI2C:
  3970                           	callstack 22
  3971                           
  3972                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 294: while ((SSP1CON2 & 0x1F) || (SSP1STAT & 0x04));
  3973                           
  3974                           ;incstack = 0
  3975  002FDC  CFC5 F001          	movff	4037,??i2_readyI2C	;volatile
  3976  002FE0  0E1F               	movlw	31
  3977  002FE2  1601               	andwf	??i2_readyI2C^0,f,c
  3978  002FE4  A4D8               	btfss	status,2,c
  3979  002FE6  D7FA               	goto	__ptext24
  3980  002FE8  A4C7               	btfss	199,2,c	;volatile
  3981  002FEA  0012               	return	
  3982  002FEC  D7F7               	goto	__ptext24
  3983  002FEE                     __end_ofi2_readyI2C:
  3984                           	callstack 0
  3985                           
  3986 ;; *************** function _sprintf *****************
  3987 ;; Defined at:
  3988 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c"
  3989 ;; Parameters:    Size  Location     Type
  3990 ;;  sp              1   61[COMRAM] PTR unsigned char 
  3991 ;;		 -> text(20), 
  3992 ;;  f               1   62[COMRAM] PTR const unsigned char 
  3993 ;;		 -> STR_2(13), STR_1(13), 
  3994 ;; Auto vars:     Size  Location     Type
  3995 ;;  tmpval          4   84[COMRAM] struct .
  3996 ;;  val             4   78[COMRAM] unsigned long 
  3997 ;;  fval            3   90[COMRAM] unsigned long 
  3998 ;;  cp              3    0        PTR const unsigned char 
  3999 ;;  prec            2   88[COMRAM] int 
  4000 ;;  eexp            2   82[COMRAM] int 
  4001 ;;  flag            2   76[COMRAM] unsigned short 
  4002 ;;  len             2    0        unsigned int 
  4003 ;;  width           2    0        int 
  4004 ;;  c               1   93[COMRAM] unsigned char 
  4005 ;;  ap              1   75[COMRAM] PTR void [1]
  4006 ;;		 -> ?_sprintf(2), 
  4007 ;;  d               1    0        unsigned char 
  4008 ;; Return value:  Size  Location     Type
  4009 ;;                  2   61[COMRAM] int 
  4010 ;; Registers used:
  4011 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4012 ;; Tracked objects:
  4013 ;;		On entry : 0/0
  4014 ;;		On exit  : 0/0
  4015 ;;		Unchanged: 0/0
  4016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4017 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4018 ;;      Locals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4019 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4020 ;;      Totals:        33       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4021 ;;Total ram usage:       33 bytes
  4022 ;; Hardware stack levels used: 1
  4023 ;; Hardware stack levels required when called: 3
  4024 ;; This function calls:
  4025 ;;		___awdiv
  4026 ;;		___ftadd
  4027 ;;		___ftmul
  4028 ;;		___ftneg
  4029 ;;		___ftsub
  4030 ;;		___lldiv
  4031 ;;		___llmod
  4032 ;;		___wmul
  4033 ;;		__div_to_l_
  4034 ;;		__tdiv_to_l_
  4035 ;;		_fround
  4036 ;;		_isdigit
  4037 ;;		_scale
  4038 ;;		i2___ftge
  4039 ;;		i2___fttol
  4040 ;;		i2___lltoft
  4041 ;; This function is called by:
  4042 ;;		_TMR1_ISR
  4043 ;; This function uses a non-reentrant model
  4044 ;;
  4045                           
  4046                           	psect	text25
  4047  001092                     __ptext25:
  4048                           	callstack 0
  4049  001092                     _sprintf:
  4050                           	callstack 21
  4051                           
  4052                           ;doprnt.c: 507: va_list ap;;doprnt.c: 512: char c;;doprnt.c: 514: int width;;doprnt.c: 5
      +                          17: int prec;;doprnt.c: 525: unsigned short flag;;doprnt.c: 532: char d;;doprnt.c: 533: 
      +                          double fval;;doprnt.c: 534: int eexp;;doprnt.c: 540: union {;doprnt.c: 541: unsigned lon
      +                          g vd;;doprnt.c: 542: double integ;;doprnt.c: 543: } tmpval;;doprnt.c: 545: unsigned long
      +                           val;;doprnt.c: 546: unsigned len;;doprnt.c: 547: const char * cp;;doprnt.c: 550: *ap = 
      +                          __va_start();
  4053                           
  4054                           ;incstack = 0
  4055  001092  0E40               	movlw	low (?_sprintf+2)
  4056  001094  6E4C               	movwf	sprintf@ap^0,c
  4057                           
  4058                           ;doprnt.c: 553: while((c = *f++)) {
  4059  001096  D344               	goto	i2l3681
  4060  001098                     i2l3481:
  4061                           
  4062                           ;doprnt.c: 555: if(c != '%')
  4063  001098  0E25               	movlw	37
  4064  00109A  185E               	xorwf	sprintf@c^0,w,c
  4065  00109C  B4D8               	btfsc	status,2,c
  4066  00109E  D007               	goto	i2l3487
  4067                           
  4068                           ;doprnt.c: 557: {;doprnt.c: 558: ((*sp++ = (c)));
  4069  0010A0  503E               	movf	sprintf@sp^0,w,c
  4070  0010A2  6ED9               	movwf	fsr2l,c
  4071  0010A4  6ADA               	clrf	fsr2h,c
  4072  0010A6  C05E  FFDF         	movff	sprintf@c,indf2
  4073  0010AA                     i2l3485:
  4074  0010AA  2A3E               	incf	sprintf@sp^0,f,c
  4075                           
  4076                           ;doprnt.c: 559: continue;
  4077  0010AC  D339               	goto	i2l3681
  4078  0010AE                     i2l3487:
  4079                           
  4080                           ;doprnt.c: 560: };doprnt.c: 565: flag = 0;
  4081  0010AE  0E00               	movlw	0
  4082  0010B0  6E4E               	movwf	(sprintf@flag+1)^0,c
  4083  0010B2  0E00               	movlw	0
  4084  0010B4  6E4D               	movwf	sprintf@flag^0,c
  4085                           
  4086                           ;doprnt.c: 628: if(*f == '.') {
  4087  0010B6  C03F  FFF6         	movff	sprintf@f,tblptrl
  4088  0010BA                     	if	1	;There is more than 1 active tblptr byte
  4089  0010BA  0E10               	movlw	high __smallconst
  4090  0010BC  6EF7               	movwf	tblptrh,c
  4091  0010BE                     	endif
  4092  0010BE                     	if	0	;tblptru may be non-zero
  4093  0010BE                     	endif
  4094  0010BE                     	if	0	;tblptru may be non-zero
  4095  0010BE                     	endif
  4096  0010BE  0008               	tblrd		*
  4097  0010C0  50F5               	movf	tablat,w,c
  4098  0010C2  0A2E               	xorlw	46
  4099  0010C4  A4D8               	btfss	status,2,c
  4100  0010C6  D035               	goto	i2l3503
  4101                           
  4102                           ;doprnt.c: 629: flag |= 0x4000;
  4103  0010C8  8C4E               	bsf	(sprintf@flag+1)^0,6,c
  4104                           
  4105                           ;doprnt.c: 630: f++;
  4106  0010CA  2A3F               	incf	sprintf@f^0,f,c
  4107                           
  4108                           ;doprnt.c: 644: {;doprnt.c: 645: prec = 0;
  4109  0010CC  0E00               	movlw	0
  4110  0010CE  6E5A               	movwf	(sprintf@prec+1)^0,c
  4111  0010D0  0E00               	movlw	0
  4112  0010D2  6E59               	movwf	sprintf@prec^0,c
  4113                           
  4114                           ;doprnt.c: 646: while(isdigit((unsigned)*f)) {
  4115  0010D4  D023               	goto	i2l3501
  4116  0010D6                     i2l3495:
  4117                           
  4118                           ;doprnt.c: 647: prec *= 10;
  4119  0010D6  C059  F00F         	movff	sprintf@prec,___wmul@multiplier
  4120  0010DA  C05A  F010         	movff	sprintf@prec+1,___wmul@multiplier+1
  4121  0010DE  0E00               	movlw	0
  4122  0010E0  6E12               	movwf	(___wmul@multiplicand+1)^0,c
  4123  0010E2  0E0A               	movlw	10
  4124  0010E4  6E11               	movwf	___wmul@multiplicand^0,c
  4125  0010E6  EC6C  F017         	call	___wmul	;wreg free
  4126  0010EA  C00F  F059         	movff	?___wmul,sprintf@prec
  4127  0010EE  C010  F05A         	movff	?___wmul+1,sprintf@prec+1
  4128                           
  4129                           ;doprnt.c: 648: prec += *f++ - '0';
  4130  0010F2  0ED0               	movlw	208
  4131  0010F4  6E43               	movwf	??_sprintf^0,c
  4132  0010F6  0EFF               	movlw	255
  4133  0010F8  6E44               	movwf	(??_sprintf+1)^0,c
  4134  0010FA  C03F  FFF6         	movff	sprintf@f,tblptrl
  4135  0010FE                     	if	1	;There is more than 1 active tblptr byte
  4136  0010FE  0E10               	movlw	high __smallconst
  4137  001100  6EF7               	movwf	tblptrh,c
  4138  001102                     	endif
  4139  001102                     	if	0	;tblptru may be non-zero
  4140  001102                     	endif
  4141  001102                     	if	0	;tblptru may be non-zero
  4142  001102                     	endif
  4143  001102  0008               	tblrd		*
  4144  001104  50F5               	movf	tablat,w,c
  4145  001106  6E45               	movwf	(??_sprintf+2)^0,c
  4146  001108  6A46               	clrf	(??_sprintf+3)^0,c
  4147  00110A  5043               	movf	??_sprintf^0,w,c
  4148  00110C  2645               	addwf	(??_sprintf+2)^0,f,c
  4149  00110E  5044               	movf	(??_sprintf+1)^0,w,c
  4150  001110  2246               	addwfc	(??_sprintf+3)^0,f,c
  4151  001112  5045               	movf	(??_sprintf+2)^0,w,c
  4152  001114  2659               	addwf	sprintf@prec^0,f,c
  4153  001116  5046               	movf	(??_sprintf+3)^0,w,c
  4154  001118  225A               	addwfc	(sprintf@prec+1)^0,f,c
  4155  00111A  2A3F               	incf	sprintf@f^0,f,c
  4156  00111C                     i2l3501:
  4157  00111C  C03F  FFF6         	movff	sprintf@f,tblptrl
  4158  001120                     	if	1	;There is more than 1 active tblptr byte
  4159  001120  0E10               	movlw	high __smallconst
  4160  001122  6EF7               	movwf	tblptrh,c
  4161  001124                     	endif
  4162  001124                     	if	0	;tblptru may be non-zero
  4163  001124                     	endif
  4164  001124                     	if	0	;tblptru may be non-zero
  4165  001124                     	endif
  4166  001124  0008               	tblrd		*
  4167  001126  50F5               	movf	tablat,w,c
  4168  001128  ECB1  F017         	call	_isdigit
  4169  00112C  A0D8               	btfss	status,0,c
  4170  00112E  D009               	goto	i2l3511
  4171  001130  D7D2               	goto	i2l3495
  4172  001132                     i2l3503:
  4173                           
  4174                           ;doprnt.c: 652: prec = 0;
  4175  001132  0E00               	movlw	0
  4176  001134  6E5A               	movwf	(sprintf@prec+1)^0,c
  4177  001136  0E00               	movlw	0
  4178  001138  6E59               	movwf	sprintf@prec^0,c
  4179                           
  4180                           ;doprnt.c: 654: flag |= 0x1000;
  4181  00113A  884E               	bsf	(sprintf@flag+1)^0,4,c
  4182  00113C  D002               	goto	i2l3511
  4183  00113E                     i2l3507:
  4184                           
  4185                           ;doprnt.c: 689: flag |= 0x400;
  4186  00113E  844E               	bsf	(sprintf@flag+1)^0,2,c
  4187                           
  4188                           ;doprnt.c: 690: break;
  4189  001140  D012               	goto	i2l3513
  4190  001142                     i2l3511:
  4191  001142  2A3F               	incf	sprintf@f^0,f,c
  4192  001144  043F               	decf	sprintf@f^0,w,c
  4193  001146  6E43               	movwf	??_sprintf^0,c
  4194  001148  C043  FFF6         	movff	??_sprintf,tblptrl
  4195  00114C                     	if	1	;There is more than 1 active tblptr byte
  4196  00114C  0E10               	movlw	high __smallconst
  4197  00114E  6EF7               	movwf	tblptrh,c
  4198  001150                     	endif
  4199  001150                     	if	0	;tblptru may be non-zero
  4200  001150                     	endif
  4201  001150                     	if	0	;tblptru may be non-zero
  4202  001150                     	endif
  4203  001150  0008               	tblrd		*
  4204  001152  CFF5 F05E          	movff	tablat,sprintf@c
  4205  001156  505E               	movf	sprintf@c^0,w,c
  4206                           
  4207                           ; Switch size 1, requested type "simple"
  4208                           ; Number of cases is 2, Range of values is 0 to 102
  4209                           ; switch strategies available:
  4210                           ; Name         Instructions Cycles
  4211                           ; simple_byte            7     4 (average)
  4212                           ;	Chosen strategy is simple_byte
  4213  001158  0A00               	xorlw	0	; case 0
  4214  00115A  B4D8               	btfsc	status,2,c
  4215  00115C  D2EE               	goto	i2u359_40
  4216  00115E  0A66               	xorlw	102	; case 102
  4217  001160  B4D8               	btfsc	status,2,c
  4218  001162  D7ED               	goto	i2l3507
  4219  001164  D2DD               	goto	i2l3681
  4220  001166                     i2l3513:
  4221                           
  4222                           ;doprnt.c: 851: if(flag & (0x700)) {
  4223  001166  0E07               	movlw	7
  4224  001168  144E               	andwf	(sprintf@flag+1)^0,w,c
  4225  00116A  B4D8               	btfsc	status,2,c
  4226  00116C  D2A9               	goto	i2l3661
  4227                           
  4228                           ;doprnt.c: 853: if(flag & 0x1000)
  4229  00116E  A84E               	btfss	(sprintf@flag+1)^0,4,c
  4230  001170  D004               	goto	i2l3519
  4231                           
  4232                           ;doprnt.c: 855: prec = 6;
  4233  001172  0E00               	movlw	0
  4234  001174  6E5A               	movwf	(sprintf@prec+1)^0,c
  4235  001176  0E06               	movlw	6
  4236  001178  6E59               	movwf	sprintf@prec^0,c
  4237  00117A                     i2l3519:
  4238                           
  4239                           ;doprnt.c: 856: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  4240  00117A  504C               	movf	sprintf@ap^0,w,c
  4241  00117C  6ED9               	movwf	fsr2l,c
  4242  00117E  6ADA               	clrf	fsr2h,c
  4243  001180  CFDE F05B          	movff	postinc2,sprintf@fval
  4244  001184  CFDE F05C          	movff	postinc2,sprintf@fval+1
  4245  001188  CFDD F05D          	movff	postdec2,sprintf@fval+2
  4246  00118C  0E03               	movlw	3
  4247  00118E  264C               	addwf	sprintf@ap^0,f,c
  4248                           
  4249                           ;doprnt.c: 857: if(fval < 0.0) {
  4250  001190  AE5D               	btfss	(sprintf@fval+2)^0,7,c
  4251  001192  D010               	goto	i2l3529
  4252                           
  4253                           ;doprnt.c: 858: fval = -fval;
  4254  001194  C05B  F001         	movff	sprintf@fval,___ftneg@f1
  4255  001198  C05C  F002         	movff	sprintf@fval+1,___ftneg@f1+1
  4256  00119C  C05D  F003         	movff	sprintf@fval+2,___ftneg@f1+2
  4257  0011A0  EC7F  F017         	call	___ftneg	;wreg free
  4258  0011A4  C001  F05B         	movff	?___ftneg,sprintf@fval
  4259  0011A8  C002  F05C         	movff	?___ftneg+1,sprintf@fval+1
  4260  0011AC  C003  F05D         	movff	?___ftneg+2,sprintf@fval+2
  4261                           
  4262                           ;doprnt.c: 859: flag |= 0x03;
  4263  0011B0  0E03               	movlw	3
  4264  0011B2  124D               	iorwf	sprintf@flag^0,f,c
  4265  0011B4                     i2l3529:
  4266                           
  4267                           ;doprnt.c: 860: };doprnt.c: 861: eexp = 0;
  4268  0011B4  0E00               	movlw	0
  4269  0011B6  6E54               	movwf	(sprintf@eexp+1)^0,c
  4270  0011B8  0E00               	movlw	0
  4271  0011BA  6E53               	movwf	sprintf@eexp^0,c
  4272                           
  4273                           ;doprnt.c: 862: if( fval!=0) {
  4274  0011BC  505B               	movf	sprintf@fval^0,w,c
  4275  0011BE  105C               	iorwf	(sprintf@fval+1)^0,w,c
  4276  0011C0  105D               	iorwf	(sprintf@fval+2)^0,w,c
  4277  0011C2  B4D8               	btfsc	status,2,c
  4278  0011C4  D083               	goto	i2l3557
  4279                           
  4280                           ;doprnt.c: 863: (void)(*(&eexp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
  4281  0011C6  0E82               	movlw	130
  4282  0011C8  6E43               	movwf	??_sprintf^0,c
  4283  0011CA  0EFF               	movlw	255
  4284  0011CC  6E44               	movwf	(??_sprintf+1)^0,c
  4285  0011CE  C05B  F045         	movff	sprintf@fval,??_sprintf+2
  4286  0011D2  C05C  F046         	movff	sprintf@fval+1,??_sprintf+3
  4287  0011D6  C05D  F047         	movff	sprintf@fval+2,??_sprintf+4
  4288  0011DA  C05E  F048         	movff	sprintf@fval+3,??_sprintf+5
  4289  0011DE  0E10               	movlw	16
  4290  0011E0  D005               	goto	i2u335_40
  4291  0011E2                     i2u335_45:
  4292  0011E2  90D8               	bcf	status,0,c
  4293  0011E4  3248               	rrcf	(??_sprintf+5)^0,f,c
  4294  0011E6  3247               	rrcf	(??_sprintf+4)^0,f,c
  4295  0011E8  3246               	rrcf	(??_sprintf+3)^0,f,c
  4296  0011EA  3245               	rrcf	(??_sprintf+2)^0,f,c
  4297  0011EC                     i2u335_40:
  4298  0011EC  2EE8               	decfsz	wreg,f,c
  4299  0011EE  D7F9               	goto	i2u335_45
  4300  0011F0  5045               	movf	(??_sprintf+2)^0,w,c
  4301  0011F2  2443               	addwf	??_sprintf^0,w,c
  4302  0011F4  6E53               	movwf	sprintf@eexp^0,c
  4303  0011F6  0E00               	movlw	0
  4304  0011F8  2044               	addwfc	(??_sprintf+1)^0,w,c
  4305  0011FA  6E54               	movwf	(sprintf@eexp+1)^0,c
  4306                           
  4307                           ;doprnt.c: 864: eexp--;
  4308  0011FC  0653               	decf	sprintf@eexp^0,f,c
  4309  0011FE  A0D8               	btfss	status,0,c
  4310  001200  0654               	decf	(sprintf@eexp+1)^0,f,c
  4311                           
  4312                           ;doprnt.c: 865: eexp *= 3;
  4313  001202  C053  F00F         	movff	sprintf@eexp,___wmul@multiplier
  4314  001206  C054  F010         	movff	sprintf@eexp+1,___wmul@multiplier+1
  4315  00120A  0E00               	movlw	0
  4316  00120C  6E12               	movwf	(___wmul@multiplicand+1)^0,c
  4317  00120E  0E03               	movlw	3
  4318  001210  6E11               	movwf	___wmul@multiplicand^0,c
  4319  001212  EC6C  F017         	call	___wmul	;wreg free
  4320  001216  C00F  F053         	movff	?___wmul,sprintf@eexp
  4321  00121A  C010  F054         	movff	?___wmul+1,sprintf@eexp+1
  4322                           
  4323                           ;doprnt.c: 866: eexp /= 10;
  4324  00121E  C053  F007         	movff	sprintf@eexp,___awdiv@dividend
  4325  001222  C054  F008         	movff	sprintf@eexp+1,___awdiv@dividend+1
  4326  001226  0E00               	movlw	0
  4327  001228  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  4328  00122A  0E0A               	movlw	10
  4329  00122C  6E09               	movwf	___awdiv@divisor^0,c
  4330  00122E  EC6E  F014         	call	___awdiv	;wreg free
  4331  001232  C007  F053         	movff	?___awdiv,sprintf@eexp
  4332  001236  C008  F054         	movff	?___awdiv+1,sprintf@eexp+1
  4333                           
  4334                           ;doprnt.c: 867: if(eexp < 0)
  4335  00123A  AE54               	btfss	(sprintf@eexp+1)^0,7,c
  4336  00123C  D003               	goto	i2l3545
  4337                           
  4338                           ;doprnt.c: 868: eexp--;
  4339  00123E  0653               	decf	sprintf@eexp^0,f,c
  4340  001240  A0D8               	btfss	status,0,c
  4341  001242  0654               	decf	(sprintf@eexp+1)^0,f,c
  4342  001244                     i2l3545:
  4343                           
  4344                           ;doprnt.c: 872: tmpval.integ = scale(-eexp);
  4345  001244  5053               	movf	sprintf@eexp^0,w,c
  4346  001246  0800               	sublw	0
  4347  001248  ECA3  F00B         	call	_scale
  4348  00124C  C01E  F055         	movff	?_scale,sprintf@tmpval
  4349  001250  C01F  F056         	movff	?_scale+1,sprintf@tmpval+1
  4350  001254  C020  F057         	movff	?_scale+2,sprintf@tmpval+2
  4351                           
  4352                           ;doprnt.c: 873: tmpval.integ *= fval;
  4353  001258  C055  F00F         	movff	sprintf@tmpval,___ftmul@f1
  4354  00125C  C056  F010         	movff	sprintf@tmpval+1,___ftmul@f1+1
  4355  001260  C057  F011         	movff	sprintf@tmpval+2,___ftmul@f1+2
  4356  001264  C05B  F012         	movff	sprintf@fval,___ftmul@f2
  4357  001268  C05C  F013         	movff	sprintf@fval+1,___ftmul@f2+1
  4358  00126C  C05D  F014         	movff	sprintf@fval+2,___ftmul@f2+2
  4359  001270  EC74  F010         	call	___ftmul	;wreg free
  4360  001274  C00F  F055         	movff	?___ftmul,sprintf@tmpval
  4361  001278  C010  F056         	movff	?___ftmul+1,sprintf@tmpval+1
  4362  00127C  C011  F057         	movff	?___ftmul+2,sprintf@tmpval+2
  4363                           
  4364                           ;doprnt.c: 874: if(tmpval.integ < 1.0)
  4365  001280  C055  F001         	movff	sprintf@tmpval,i2___ftge@ff1
  4366  001284  C056  F002         	movff	sprintf@tmpval+1,i2___ftge@ff1+1
  4367  001288  C057  F003         	movff	sprintf@tmpval+2,i2___ftge@ff1+2
  4368  00128C  0E00               	movlw	0
  4369  00128E  6E04               	movwf	i2___ftge@ff2^0,c
  4370  001290  0E80               	movlw	128
  4371  001292  6E05               	movwf	(i2___ftge@ff2+1)^0,c
  4372  001294  0E3F               	movlw	63
  4373  001296  6E06               	movwf	(i2___ftge@ff2+2)^0,c
  4374  001298  EC2B  F015         	call	i2___ftge	;wreg free
  4375  00129C  B0D8               	btfsc	status,0,c
  4376  00129E  D004               	goto	i2l3553
  4377                           
  4378                           ;doprnt.c: 875: eexp--;
  4379  0012A0  0653               	decf	sprintf@eexp^0,f,c
  4380  0012A2  A0D8               	btfss	status,0,c
  4381  0012A4  0654               	decf	(sprintf@eexp+1)^0,f,c
  4382  0012A6  D012               	goto	i2l3557
  4383  0012A8                     i2l3553:
  4384                           
  4385                           ;doprnt.c: 876: else if(tmpval.integ >= 10.0)
  4386  0012A8  C055  F001         	movff	sprintf@tmpval,i2___ftge@ff1
  4387  0012AC  C056  F002         	movff	sprintf@tmpval+1,i2___ftge@ff1+1
  4388  0012B0  C057  F003         	movff	sprintf@tmpval+2,i2___ftge@ff1+2
  4389  0012B4  0E00               	movlw	0
  4390  0012B6  6E04               	movwf	i2___ftge@ff2^0,c
  4391  0012B8  0E20               	movlw	32
  4392  0012BA  6E05               	movwf	(i2___ftge@ff2+1)^0,c
  4393  0012BC  0E41               	movlw	65
  4394  0012BE  6E06               	movwf	(i2___ftge@ff2+2)^0,c
  4395  0012C0  EC2B  F015         	call	i2___ftge	;wreg free
  4396  0012C4  A0D8               	btfss	status,0,c
  4397  0012C6  D002               	goto	i2l3557
  4398                           
  4399                           ;doprnt.c: 877: eexp++;
  4400  0012C8  4A53               	infsnz	sprintf@eexp^0,f,c
  4401  0012CA  2A54               	incf	(sprintf@eexp+1)^0,f,c
  4402  0012CC                     i2l3557:
  4403                           
  4404                           ;doprnt.c: 878: };doprnt.c: 1138: if(prec <= 12)
  4405  0012CC  BE5A               	btfsc	(sprintf@prec+1)^0,7,c
  4406  0012CE  D006               	goto	i2u339_40
  4407  0012D0  505A               	movf	(sprintf@prec+1)^0,w,c
  4408  0012D2  E11B               	bnz	i2l3561
  4409  0012D4  0E0D               	movlw	13
  4410  0012D6  5C59               	subwf	sprintf@prec^0,w,c
  4411  0012D8  B0D8               	btfsc	status,0,c
  4412  0012DA  D017               	goto	i2l3561
  4413  0012DC                     i2u339_40:
  4414                           
  4415                           ;doprnt.c: 1139: fval += fround((unsigned int)prec);
  4416  0012DC  C05B  F02C         	movff	sprintf@fval,___ftadd@f1
  4417  0012E0  C05C  F02D         	movff	sprintf@fval+1,___ftadd@f1+1
  4418  0012E4  C05D  F02E         	movff	sprintf@fval+2,___ftadd@f1+2
  4419  0012E8  5059               	movf	sprintf@prec^0,w,c
  4420  0012EA  EC6F  F00D         	call	_fround
  4421  0012EE  C01E  F02F         	movff	?_fround,___ftadd@f2
  4422  0012F2  C01F  F030         	movff	?_fround+1,___ftadd@f2+1
  4423  0012F6  C020  F031         	movff	?_fround+2,___ftadd@f2+2
  4424  0012FA  EC5D  F00E         	call	___ftadd	;wreg free
  4425  0012FE  C02C  F05B         	movff	?___ftadd,sprintf@fval
  4426  001302  C02D  F05C         	movff	?___ftadd+1,sprintf@fval+1
  4427  001306  C02E  F05D         	movff	?___ftadd+2,sprintf@fval+2
  4428  00130A                     i2l3561:
  4429                           
  4430                           ;doprnt.c: 1142: if((eexp > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  4431  00130A  BE54               	btfsc	(sprintf@eexp+1)^0,7,c
  4432  00130C  D006               	goto	i2u340_40
  4433  00130E  5054               	movf	(sprintf@eexp+1)^0,w,c
  4434  001310  E11E               	bnz	i2l3569
  4435  001312  0E0A               	movlw	10
  4436  001314  5C53               	subwf	sprintf@eexp^0,w,c
  4437  001316  B0D8               	btfsc	status,0,c
  4438  001318  D01A               	goto	i2u343_40
  4439  00131A                     i2u340_40:
  4440  00131A  505B               	movf	sprintf@fval^0,w,c
  4441  00131C  105C               	iorwf	(sprintf@fval+1)^0,w,c
  4442  00131E  105D               	iorwf	(sprintf@fval+2)^0,w,c
  4443  001320  B4D8               	btfsc	status,2,c
  4444  001322  D051               	goto	i2l3583
  4445  001324  C05B  F029         	movff	sprintf@fval,i2___fttol@f1
  4446  001328  C05C  F02A         	movff	sprintf@fval+1,i2___fttol@f1+1
  4447  00132C  C05D  F02B         	movff	sprintf@fval+2,i2___fttol@f1+2
  4448  001330  ECAF  F012         	call	i2___fttol	;wreg free
  4449  001334  5029               	movf	?i2___fttol^0,w,c
  4450  001336  102A               	iorwf	(?i2___fttol+1)^0,w,c
  4451  001338  102B               	iorwf	(?i2___fttol+2)^0,w,c
  4452  00133A  102C               	iorwf	(?i2___fttol+3)^0,w,c
  4453  00133C  B4D8               	btfsc	status,2,c
  4454  00133E  BE54               	btfsc	(sprintf@eexp+1)^0,7,c
  4455  001340  D042               	goto	i2l3583
  4456  001342  5054               	movf	(sprintf@eexp+1)^0,w,c
  4457  001344  E104               	bnz	i2u343_40
  4458  001346  0E02               	movlw	2
  4459  001348  5C53               	subwf	sprintf@eexp^0,w,c
  4460  00134A  A0D8               	btfss	status,0,c
  4461  00134C  D03C               	goto	i2l3583
  4462  00134E                     i2u343_40:
  4463  00134E                     i2l3569:
  4464                           
  4465                           ;doprnt.c: 1146: if(tmpval.integ < 4.294967296){
  4466  00134E  C055  F001         	movff	sprintf@tmpval,i2___ftge@ff1
  4467  001352  C056  F002         	movff	sprintf@tmpval+1,i2___ftge@ff1+1
  4468  001356  C057  F003         	movff	sprintf@tmpval+2,i2___ftge@ff1+2
  4469  00135A  0E70               	movlw	112
  4470  00135C  6E04               	movwf	i2___ftge@ff2^0,c
  4471  00135E  0E89               	movlw	137
  4472  001360  6E05               	movwf	(i2___ftge@ff2+1)^0,c
  4473  001362  0E40               	movlw	64
  4474  001364  6E06               	movwf	(i2___ftge@ff2+2)^0,c
  4475  001366  EC2B  F015         	call	i2___ftge	;wreg free
  4476  00136A  B0D8               	btfsc	status,0,c
  4477  00136C  D002               	goto	i2l3573
  4478                           
  4479                           ;doprnt.c: 1147: eexp -= (sizeof dpowers/sizeof dpowers[0])-1;
  4480  00136E  0EF7               	movlw	247
  4481  001370  D001               	goto	L5
  4482  001372                     i2l3573:
  4483                           
  4484                           ;doprnt.c: 1149: eexp -= (sizeof dpowers/sizeof dpowers[0])-2;
  4485  001372  0EF8               	movlw	248
  4486  001374                     L5:
  4487  001374  2653               	addwf	sprintf@eexp^0,f,c
  4488  001376  0EFF               	movlw	255
  4489  001378  2254               	addwfc	(sprintf@eexp+1)^0,f,c
  4490                           
  4491                           ;doprnt.c: 1150: };doprnt.c: 1151: tmpval.integ = scale(eexp);
  4492  00137A  5053               	movf	sprintf@eexp^0,w,c
  4493  00137C  ECA3  F00B         	call	_scale
  4494  001380  C01E  F055         	movff	?_scale,sprintf@tmpval
  4495  001384  C01F  F056         	movff	?_scale+1,sprintf@tmpval+1
  4496  001388  C020  F057         	movff	?_scale+2,sprintf@tmpval+2
  4497                           
  4498                           ;doprnt.c: 1152: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  4499  00138C  C05B  F001         	movff	sprintf@fval,__tdiv_to_l_@f1
  4500  001390  C05C  F002         	movff	sprintf@fval+1,__tdiv_to_l_@f1+1
  4501  001394  C05D  F003         	movff	sprintf@fval+2,__tdiv_to_l_@f1+2
  4502  001398  C055  F004         	movff	sprintf@tmpval,__tdiv_to_l_@f2
  4503  00139C  C056  F005         	movff	sprintf@tmpval+1,__tdiv_to_l_@f2+1
  4504  0013A0  C057  F006         	movff	sprintf@tmpval+2,__tdiv_to_l_@f2+2
  4505  0013A4  ECF5  F00F         	call	__tdiv_to_l_	;wreg free
  4506  0013A8  C001  F04F         	movff	?__tdiv_to_l_,sprintf@val
  4507  0013AC  C002  F050         	movff	?__tdiv_to_l_+1,sprintf@val+1
  4508  0013B0  C003  F051         	movff	?__tdiv_to_l_+2,sprintf@val+2
  4509  0013B4  C004  F052         	movff	?__tdiv_to_l_+3,sprintf@val+3
  4510                           
  4511                           ;doprnt.c: 1155: fval = 0.0;
  4512  0013B8  0E00               	movlw	0
  4513  0013BA  6E5B               	movwf	sprintf@fval^0,c
  4514  0013BC  0E00               	movlw	0
  4515  0013BE  6E5C               	movwf	(sprintf@fval+1)^0,c
  4516  0013C0  0E00               	movlw	0
  4517  0013C2  6E5D               	movwf	(sprintf@fval+2)^0,c
  4518                           
  4519                           ;doprnt.c: 1156: } else {
  4520  0013C4  D032               	goto	i2l3587
  4521  0013C6                     i2l3583:
  4522                           
  4523                           ;doprnt.c: 1157: val = (unsigned long)fval;
  4524  0013C6  C05B  F029         	movff	sprintf@fval,i2___fttol@f1
  4525  0013CA  C05C  F02A         	movff	sprintf@fval+1,i2___fttol@f1+1
  4526  0013CE  C05D  F02B         	movff	sprintf@fval+2,i2___fttol@f1+2
  4527  0013D2  ECAF  F012         	call	i2___fttol	;wreg free
  4528  0013D6  C029  F04F         	movff	?i2___fttol,sprintf@val
  4529  0013DA  C02A  F050         	movff	?i2___fttol+1,sprintf@val+1
  4530  0013DE  C02B  F051         	movff	?i2___fttol+2,sprintf@val+2
  4531  0013E2  C02C  F052         	movff	?i2___fttol+3,sprintf@val+3
  4532                           
  4533                           ;doprnt.c: 1158: fval -= (double)val;
  4534  0013E6  C05B  F038         	movff	sprintf@fval,___ftsub@f1
  4535  0013EA  C05C  F039         	movff	sprintf@fval+1,___ftsub@f1+1
  4536  0013EE  C05D  F03A         	movff	sprintf@fval+2,___ftsub@f1+2
  4537  0013F2  C04F  F009         	movff	sprintf@val,i2___lltoft@c
  4538  0013F6  C050  F00A         	movff	sprintf@val+1,i2___lltoft@c+1
  4539  0013FA  C051  F00B         	movff	sprintf@val+2,i2___lltoft@c+2
  4540  0013FE  C052  F00C         	movff	sprintf@val+3,i2___lltoft@c+3
  4541  001402  EC33  F016         	call	i2___lltoft	;wreg free
  4542  001406  C009  F03B         	movff	?i2___lltoft,___ftsub@f2
  4543  00140A  C00A  F03C         	movff	?i2___lltoft+1,___ftsub@f2+1
  4544  00140E  C00B  F03D         	movff	?i2___lltoft+2,___ftsub@f2+2
  4545  001412  ECC7  F016         	call	___ftsub	;wreg free
  4546  001416  C038  F05B         	movff	?___ftsub,sprintf@fval
  4547  00141A  C039  F05C         	movff	?___ftsub+1,sprintf@fval+1
  4548  00141E  C03A  F05D         	movff	?___ftsub+2,sprintf@fval+2
  4549                           
  4550                           ;doprnt.c: 1159: eexp = 0;
  4551  001422  0E00               	movlw	0
  4552  001424  6E54               	movwf	(sprintf@eexp+1)^0,c
  4553  001426  0E00               	movlw	0
  4554  001428  6E53               	movwf	sprintf@eexp^0,c
  4555  00142A                     i2l3587:
  4556                           
  4557                           ;doprnt.c: 1160: };doprnt.c: 1162: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ;
      +                           c++)
  4558  00142A  0E01               	movlw	1
  4559  00142C  6E5E               	movwf	sprintf@c^0,c
  4560  00142E                     i2l3593:
  4561                           
  4562                           ;doprnt.c: 1163: if(val < dpowers[c])
  4563  00142E  505E               	movf	sprintf@c^0,w,c
  4564  001430  0D04               	mullw	4
  4565  001432  50F3               	movf	243,w,c
  4566  001434  0F4F               	addlw	low _dpowers
  4567  001436  6E43               	movwf	??_sprintf^0,c
  4568  001438  C043  FFF6         	movff	??_sprintf,tblptrl
  4569  00143C                     	if	1	;There is more than 1 active tblptr byte
  4570  00143C  0E10               	movlw	high __smallconst
  4571  00143E  6EF7               	movwf	tblptrh,c
  4572  001440                     	endif
  4573  001440                     	if	0	;tblptru may be non-zero
  4574  001440                     	endif
  4575  001440                     	if	0	;tblptru may be non-zero
  4576  001440                     	endif
  4577  001440  0009               	tblrd		*+
  4578  001442  50F5               	movf	tablat,w,c
  4579  001444  5C4F               	subwf	sprintf@val^0,w,c
  4580  001446  0009               	tblrd		*+
  4581  001448  50F5               	movf	tablat,w,c
  4582  00144A  5850               	subwfb	(sprintf@val+1)^0,w,c
  4583  00144C  0009               	tblrd		*+
  4584  00144E  50F5               	movf	tablat,w,c
  4585  001450  5851               	subwfb	(sprintf@val+2)^0,w,c
  4586  001452  0009               	tblrd		*+
  4587  001454  50F5               	movf	tablat,w,c
  4588  001456  5852               	subwfb	(sprintf@val+3)^0,w,c
  4589  001458  A0D8               	btfss	status,0,c
  4590  00145A  D005               	goto	i2u346_40
  4591  00145C  2A5E               	incf	sprintf@c^0,f,c
  4592  00145E  0E0A               	movlw	10
  4593  001460  185E               	xorwf	sprintf@c^0,w,c
  4594  001462  A4D8               	btfss	status,2,c
  4595  001464  D7E4               	goto	i2l3593
  4596  001466                     i2u346_40:
  4597                           
  4598                           ;doprnt.c: 1201: {;doprnt.c: 1214: if(flag & 0x03)
  4599  001466  C04D  F043         	movff	sprintf@flag,??_sprintf
  4600  00146A  0E03               	movlw	3
  4601  00146C  1643               	andwf	??_sprintf^0,f,c
  4602  00146E  B4D8               	btfsc	status,2,c
  4603  001470  D04E               	goto	i2l3615
  4604                           
  4605                           ;doprnt.c: 1216: ((*sp++ = ('-')));
  4606  001472  503E               	movf	sprintf@sp^0,w,c
  4607  001474  6ED9               	movwf	fsr2l,c
  4608  001476  6ADA               	clrf	fsr2h,c
  4609  001478  0E2D               	movlw	45
  4610  00147A  6EDF               	movwf	indf2,c
  4611  00147C  2A3E               	incf	sprintf@sp^0,f,c
  4612  00147E  D047               	goto	i2l3615
  4613  001480                     i2l3607:
  4614                           
  4615                           ;doprnt.c: 1226: {;doprnt.c: 1227: tmpval.vd = val/dpowers[c];
  4616  001480  C04F  F001         	movff	sprintf@val,___lldiv@dividend
  4617  001484  C050  F002         	movff	sprintf@val+1,___lldiv@dividend+1
  4618  001488  C051  F003         	movff	sprintf@val+2,___lldiv@dividend+2
  4619  00148C  C052  F004         	movff	sprintf@val+3,___lldiv@dividend+3
  4620  001490  505E               	movf	sprintf@c^0,w,c
  4621  001492  0D04               	mullw	4
  4622  001494  50F3               	movf	243,w,c
  4623  001496  0F4F               	addlw	low _dpowers
  4624  001498  6E43               	movwf	??_sprintf^0,c
  4625  00149A  C043  FFF6         	movff	??_sprintf,tblptrl
  4626  00149E                     	if	1	;There is more than 1 active tblptr byte
  4627  00149E  0E10               	movlw	high __smallconst
  4628  0014A0  6EF7               	movwf	tblptrh,c
  4629  0014A2                     	endif
  4630  0014A2                     	if	0	;tblptru may be non-zero
  4631  0014A2                     	endif
  4632  0014A2                     	if	0	;tblptru may be non-zero
  4633  0014A2                     	endif
  4634  0014A2  0009               	tblrd		*+
  4635  0014A4  CFF5 F005          	movff	tablat,___lldiv@divisor
  4636  0014A8  0009               	tblrd		*+
  4637  0014AA  CFF5 F006          	movff	tablat,___lldiv@divisor+1
  4638  0014AE  0009               	tblrd		*+
  4639  0014B0  CFF5 F007          	movff	tablat,___lldiv@divisor+2
  4640  0014B4  000A               	tblrd		*-
  4641  0014B6  CFF5 F008          	movff	tablat,___lldiv@divisor+3
  4642  0014BA  ECB0  F014         	call	___lldiv	;wreg free
  4643  0014BE  C001  F055         	movff	?___lldiv,sprintf@tmpval
  4644  0014C2  C002  F056         	movff	?___lldiv+1,sprintf@tmpval+1
  4645  0014C6  C003  F057         	movff	?___lldiv+2,sprintf@tmpval+2
  4646  0014CA  C004  F058         	movff	?___lldiv+3,sprintf@tmpval+3
  4647                           
  4648                           ;doprnt.c: 1228: tmpval.vd %= 10;
  4649  0014CE  C055  F001         	movff	sprintf@tmpval,___llmod@dividend
  4650  0014D2  C056  F002         	movff	sprintf@tmpval+1,___llmod@dividend+1
  4651  0014D6  C057  F003         	movff	sprintf@tmpval+2,___llmod@dividend+2
  4652  0014DA  C058  F004         	movff	sprintf@tmpval+3,___llmod@dividend+3
  4653  0014DE  0E0A               	movlw	10
  4654  0014E0  6E05               	movwf	___llmod@divisor^0,c
  4655  0014E2  0E00               	movlw	0
  4656  0014E4  6E06               	movwf	(___llmod@divisor+1)^0,c
  4657  0014E6  0E00               	movlw	0
  4658  0014E8  6E07               	movwf	(___llmod@divisor+2)^0,c
  4659  0014EA  0E00               	movlw	0
  4660  0014EC  6E08               	movwf	(___llmod@divisor+3)^0,c
  4661  0014EE  ECD2  F015         	call	___llmod	;wreg free
  4662  0014F2  C001  F055         	movff	?___llmod,sprintf@tmpval
  4663  0014F6  C002  F056         	movff	?___llmod+1,sprintf@tmpval+1
  4664  0014FA  C003  F057         	movff	?___llmod+2,sprintf@tmpval+2
  4665  0014FE  C004  F058         	movff	?___llmod+3,sprintf@tmpval+3
  4666                           
  4667                           ;doprnt.c: 1229: ((*sp++ = ('0' + tmpval.vd)));
  4668  001502  503E               	movf	sprintf@sp^0,w,c
  4669  001504  6ED9               	movwf	fsr2l,c
  4670  001506  6ADA               	clrf	fsr2h,c
  4671  001508  5055               	movf	sprintf@tmpval^0,w,c
  4672  00150A  0F30               	addlw	48
  4673  00150C  D7B6               	goto	L6
  4674  00150E                     i2l3615:
  4675  00150E  065E               	decf	sprintf@c^0,f,c
  4676  001510  285E               	incf	sprintf@c^0,w,c
  4677  001512  B4D8               	btfsc	status,2,c
  4678  001514  D00A               	goto	i2l3623
  4679  001516  D7B4               	goto	i2l3607
  4680  001518                     i2l3617:
  4681                           
  4682                           ;doprnt.c: 1234: ((*sp++ = ('0')));
  4683  001518  503E               	movf	sprintf@sp^0,w,c
  4684  00151A  6ED9               	movwf	fsr2l,c
  4685  00151C  6ADA               	clrf	fsr2h,c
  4686  00151E  0E30               	movlw	48
  4687  001520  6EDF               	movwf	indf2,c
  4688  001522  2A3E               	incf	sprintf@sp^0,f,c
  4689                           
  4690                           ;doprnt.c: 1235: eexp--;
  4691  001524  0653               	decf	sprintf@eexp^0,f,c
  4692  001526  A0D8               	btfss	status,0,c
  4693  001528  0654               	decf	(sprintf@eexp+1)^0,f,c
  4694  00152A                     i2l3623:
  4695  00152A  BE54               	btfsc	(sprintf@eexp+1)^0,7,c
  4696  00152C  D005               	goto	i2u349_40
  4697  00152E  5054               	movf	(sprintf@eexp+1)^0,w,c
  4698  001530  E1F3               	bnz	i2l3617
  4699  001532  0453               	decf	sprintf@eexp^0,w,c
  4700  001534  B0D8               	btfsc	status,0,c
  4701  001536  D7F0               	goto	i2l3617
  4702  001538                     i2u349_40:
  4703                           
  4704                           ;doprnt.c: 1236: };doprnt.c: 1237: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2)
      +                          )
  4705  001538  BE5A               	btfsc	(sprintf@prec+1)^0,7,c
  4706  00153A  D009               	goto	i2l305
  4707  00153C  505A               	movf	(sprintf@prec+1)^0,w,c
  4708  00153E  E104               	bnz	i2u350_40
  4709  001540  0E09               	movlw	9
  4710  001542  5C59               	subwf	sprintf@prec^0,w,c
  4711  001544  A0D8               	btfss	status,0,c
  4712  001546  D003               	goto	i2l305
  4713  001548                     i2u350_40:
  4714                           
  4715                           ;doprnt.c: 1238: c = (sizeof dpowers/sizeof dpowers[0])-2;
  4716  001548  0E08               	movlw	8
  4717  00154A  6E5E               	movwf	sprintf@c^0,c
  4718  00154C  D002               	goto	i2l3629
  4719  00154E                     i2l305:
  4720                           
  4721                           ;doprnt.c: 1239: else;doprnt.c: 1240: c = (char)prec;
  4722  00154E  C059  F05E         	movff	sprintf@prec,sprintf@c
  4723  001552                     i2l3629:
  4724                           
  4725                           ;doprnt.c: 1241: prec -= (int)c;
  4726  001552  505E               	movf	sprintf@c^0,w,c
  4727  001554  5E59               	subwf	sprintf@prec^0,f,c
  4728  001556  0E00               	movlw	0
  4729  001558  5A5A               	subwfb	(sprintf@prec+1)^0,f,c
  4730                           
  4731                           ;doprnt.c: 1245: if(c)
  4732  00155A  505E               	movf	sprintf@c^0,w,c
  4733  00155C  B4D8               	btfsc	status,2,c
  4734  00155E  D006               	goto	i2l3637
  4735                           
  4736                           ;doprnt.c: 1247: ((*sp++ = ('.')));
  4737  001560  503E               	movf	sprintf@sp^0,w,c
  4738  001562  6ED9               	movwf	fsr2l,c
  4739  001564  6ADA               	clrf	fsr2h,c
  4740  001566  0E2E               	movlw	46
  4741  001568  6EDF               	movwf	indf2,c
  4742  00156A  2A3E               	incf	sprintf@sp^0,f,c
  4743  00156C                     i2l3637:
  4744                           
  4745                           ;doprnt.c: 1253: val = (unsigned long)(fval * scale((signed char)c));
  4746  00156C  505E               	movf	sprintf@c^0,w,c
  4747  00156E  ECA3  F00B         	call	_scale
  4748  001572  C01E  F049         	movff	?_scale,_sprintf$1116
  4749  001576  C01F  F04A         	movff	?_scale+1,_sprintf$1116+1
  4750  00157A  C020  F04B         	movff	?_scale+2,_sprintf$1116+2
  4751                           
  4752                           ;doprnt.c: 1253: val = (unsigned long)(fval * scale((signed char)c));
  4753  00157E  C05B  F012         	movff	sprintf@fval,___ftmul@f2
  4754  001582  C05C  F013         	movff	sprintf@fval+1,___ftmul@f2+1
  4755  001586  C05D  F014         	movff	sprintf@fval+2,___ftmul@f2+2
  4756  00158A  C049  F00F         	movff	_sprintf$1116,___ftmul@f1
  4757  00158E  C04A  F010         	movff	_sprintf$1116+1,___ftmul@f1+1
  4758  001592  C04B  F011         	movff	_sprintf$1116+2,___ftmul@f1+2
  4759  001596  EC74  F010         	call	___ftmul	;wreg free
  4760  00159A  C00F  F029         	movff	?___ftmul,i2___fttol@f1
  4761  00159E  C010  F02A         	movff	?___ftmul+1,i2___fttol@f1+1
  4762  0015A2  C011  F02B         	movff	?___ftmul+2,i2___fttol@f1+2
  4763  0015A6  ECAF  F012         	call	i2___fttol	;wreg free
  4764  0015AA  C029  F04F         	movff	?i2___fttol,sprintf@val
  4765  0015AE  C02A  F050         	movff	?i2___fttol+1,sprintf@val+1
  4766  0015B2  C02B  F051         	movff	?i2___fttol+2,sprintf@val+2
  4767  0015B6  C02C  F052         	movff	?i2___fttol+3,sprintf@val+3
  4768                           
  4769                           ;doprnt.c: 1254: while(c--) {
  4770  0015BA  D06F               	goto	i2l3651
  4771  0015BC                     i2l3641:
  4772                           
  4773                           ;doprnt.c: 1255: tmpval.vd = val/dpowers[c];
  4774  0015BC  C04F  F001         	movff	sprintf@val,___lldiv@dividend
  4775  0015C0  C050  F002         	movff	sprintf@val+1,___lldiv@dividend+1
  4776  0015C4  C051  F003         	movff	sprintf@val+2,___lldiv@dividend+2
  4777  0015C8  C052  F004         	movff	sprintf@val+3,___lldiv@dividend+3
  4778  0015CC  505E               	movf	sprintf@c^0,w,c
  4779  0015CE  0D04               	mullw	4
  4780  0015D0  50F3               	movf	243,w,c
  4781  0015D2  0F4F               	addlw	low _dpowers
  4782  0015D4  6E43               	movwf	??_sprintf^0,c
  4783  0015D6  C043  FFF6         	movff	??_sprintf,tblptrl
  4784  0015DA                     	if	1	;There is more than 1 active tblptr byte
  4785  0015DA  0E10               	movlw	high __smallconst
  4786  0015DC  6EF7               	movwf	tblptrh,c
  4787  0015DE                     	endif
  4788  0015DE                     	if	0	;tblptru may be non-zero
  4789  0015DE                     	endif
  4790  0015DE                     	if	0	;tblptru may be non-zero
  4791  0015DE                     	endif
  4792  0015DE  0009               	tblrd		*+
  4793  0015E0  CFF5 F005          	movff	tablat,___lldiv@divisor
  4794  0015E4  0009               	tblrd		*+
  4795  0015E6  CFF5 F006          	movff	tablat,___lldiv@divisor+1
  4796  0015EA  0009               	tblrd		*+
  4797  0015EC  CFF5 F007          	movff	tablat,___lldiv@divisor+2
  4798  0015F0  000A               	tblrd		*-
  4799  0015F2  CFF5 F008          	movff	tablat,___lldiv@divisor+3
  4800  0015F6  ECB0  F014         	call	___lldiv	;wreg free
  4801  0015FA  C001  F055         	movff	?___lldiv,sprintf@tmpval
  4802  0015FE  C002  F056         	movff	?___lldiv+1,sprintf@tmpval+1
  4803  001602  C003  F057         	movff	?___lldiv+2,sprintf@tmpval+2
  4804  001606  C004  F058         	movff	?___lldiv+3,sprintf@tmpval+3
  4805                           
  4806                           ;doprnt.c: 1256: tmpval.vd %= 10;
  4807  00160A  C055  F001         	movff	sprintf@tmpval,___llmod@dividend
  4808  00160E  C056  F002         	movff	sprintf@tmpval+1,___llmod@dividend+1
  4809  001612  C057  F003         	movff	sprintf@tmpval+2,___llmod@dividend+2
  4810  001616  C058  F004         	movff	sprintf@tmpval+3,___llmod@dividend+3
  4811  00161A  0E0A               	movlw	10
  4812  00161C  6E05               	movwf	___llmod@divisor^0,c
  4813  00161E  0E00               	movlw	0
  4814  001620  6E06               	movwf	(___llmod@divisor+1)^0,c
  4815  001622  0E00               	movlw	0
  4816  001624  6E07               	movwf	(___llmod@divisor+2)^0,c
  4817  001626  0E00               	movlw	0
  4818  001628  6E08               	movwf	(___llmod@divisor+3)^0,c
  4819  00162A  ECD2  F015         	call	___llmod	;wreg free
  4820  00162E  C001  F055         	movff	?___llmod,sprintf@tmpval
  4821  001632  C002  F056         	movff	?___llmod+1,sprintf@tmpval+1
  4822  001636  C003  F057         	movff	?___llmod+2,sprintf@tmpval+2
  4823  00163A  C004  F058         	movff	?___llmod+3,sprintf@tmpval+3
  4824                           
  4825                           ;doprnt.c: 1257: ((*sp++ = ('0' + tmpval.vd)));
  4826  00163E  503E               	movf	sprintf@sp^0,w,c
  4827  001640  6ED9               	movwf	fsr2l,c
  4828  001642  6ADA               	clrf	fsr2h,c
  4829  001644  5055               	movf	sprintf@tmpval^0,w,c
  4830  001646  0F30               	addlw	48
  4831  001648  6EDF               	movwf	indf2,c
  4832  00164A  2A3E               	incf	sprintf@sp^0,f,c
  4833                           
  4834                           ;doprnt.c: 1258: val %= dpowers[c];
  4835  00164C  C04F  F001         	movff	sprintf@val,___llmod@dividend
  4836  001650  C050  F002         	movff	sprintf@val+1,___llmod@dividend+1
  4837  001654  C051  F003         	movff	sprintf@val+2,___llmod@dividend+2
  4838  001658  C052  F004         	movff	sprintf@val+3,___llmod@dividend+3
  4839  00165C  505E               	movf	sprintf@c^0,w,c
  4840  00165E  0D04               	mullw	4
  4841  001660  50F3               	movf	243,w,c
  4842  001662  0F4F               	addlw	low _dpowers
  4843  001664  6E43               	movwf	??_sprintf^0,c
  4844  001666  C043  FFF6         	movff	??_sprintf,tblptrl
  4845  00166A                     	if	1	;There is more than 1 active tblptr byte
  4846  00166A  0E10               	movlw	high __smallconst
  4847  00166C  6EF7               	movwf	tblptrh,c
  4848  00166E                     	endif
  4849  00166E                     	if	0	;tblptru may be non-zero
  4850  00166E                     	endif
  4851  00166E                     	if	0	;tblptru may be non-zero
  4852  00166E                     	endif
  4853  00166E  0009               	tblrd		*+
  4854  001670  CFF5 F005          	movff	tablat,___llmod@divisor
  4855  001674  0009               	tblrd		*+
  4856  001676  CFF5 F006          	movff	tablat,___llmod@divisor+1
  4857  00167A  0009               	tblrd		*+
  4858  00167C  CFF5 F007          	movff	tablat,___llmod@divisor+2
  4859  001680  000A               	tblrd		*-
  4860  001682  CFF5 F008          	movff	tablat,___llmod@divisor+3
  4861  001686  ECD2  F015         	call	___llmod	;wreg free
  4862  00168A  C001  F04F         	movff	?___llmod,sprintf@val
  4863  00168E  C002  F050         	movff	?___llmod+1,sprintf@val+1
  4864  001692  C003  F051         	movff	?___llmod+2,sprintf@val+2
  4865  001696  C004  F052         	movff	?___llmod+3,sprintf@val+3
  4866  00169A                     i2l3651:
  4867  00169A  065E               	decf	sprintf@c^0,f,c
  4868  00169C  285E               	incf	sprintf@c^0,w,c
  4869  00169E  B4D8               	btfsc	status,2,c
  4870  0016A0  D00A               	goto	i2l3659
  4871  0016A2  D78C               	goto	i2l3641
  4872  0016A4                     i2l3653:
  4873                           
  4874                           ;doprnt.c: 1262: ((*sp++ = ('0')));
  4875  0016A4  503E               	movf	sprintf@sp^0,w,c
  4876  0016A6  6ED9               	movwf	fsr2l,c
  4877  0016A8  6ADA               	clrf	fsr2h,c
  4878  0016AA  0E30               	movlw	48
  4879  0016AC  6EDF               	movwf	indf2,c
  4880  0016AE  2A3E               	incf	sprintf@sp^0,f,c
  4881                           
  4882                           ;doprnt.c: 1263: prec--;
  4883  0016B0  0659               	decf	sprintf@prec^0,f,c
  4884  0016B2  A0D8               	btfss	status,0,c
  4885  0016B4  065A               	decf	(sprintf@prec+1)^0,f,c
  4886  0016B6                     i2l3659:
  4887  0016B6  5059               	movf	sprintf@prec^0,w,c
  4888  0016B8  105A               	iorwf	(sprintf@prec+1)^0,w,c
  4889  0016BA  B4D8               	btfsc	status,2,c
  4890  0016BC  D031               	goto	i2l3681
  4891  0016BE  D7F2               	goto	i2l3653
  4892  0016C0                     i2l3661:
  4893                           
  4894                           ;doprnt.c: 1272: };doprnt.c: 1316: if(prec == 0 && val == 0)
  4895  0016C0  5059               	movf	sprintf@prec^0,w,c
  4896  0016C2  105A               	iorwf	(sprintf@prec+1)^0,w,c
  4897  0016C4  A4D8               	btfss	status,2,c
  4898  0016C6  D008               	goto	i2l3667
  4899  0016C8  504F               	movf	sprintf@val^0,w,c
  4900  0016CA  1050               	iorwf	(sprintf@val+1)^0,w,c
  4901  0016CC  1051               	iorwf	(sprintf@val+2)^0,w,c
  4902  0016CE  1052               	iorwf	(sprintf@val+3)^0,w,c
  4903  0016D0  A4D8               	btfss	status,2,c
  4904  0016D2  D002               	goto	i2l3667
  4905                           
  4906                           ;doprnt.c: 1317: prec++;
  4907  0016D4  4A59               	infsnz	sprintf@prec^0,f,c
  4908  0016D6  2A5A               	incf	(sprintf@prec+1)^0,f,c
  4909  0016D8                     i2l3667:
  4910                           
  4911                           ;doprnt.c: 1365: if(c < prec)
  4912  0016D8  505E               	movf	sprintf@c^0,w,c
  4913  0016DA  6E43               	movwf	??_sprintf^0,c
  4914  0016DC  6A44               	clrf	(??_sprintf+1)^0,c
  4915  0016DE  5059               	movf	sprintf@prec^0,w,c
  4916  0016E0  5C43               	subwf	??_sprintf^0,w,c
  4917  0016E2  5044               	movf	(??_sprintf+1)^0,w,c
  4918  0016E4  0A80               	xorlw	128
  4919  0016E6  6E45               	movwf	(??_sprintf+2)^0,c
  4920  0016E8  505A               	movf	(sprintf@prec+1)^0,w,c
  4921  0016EA  0A80               	xorlw	128
  4922  0016EC  5845               	subwfb	(??_sprintf+2)^0,w,c
  4923  0016EE  A0D8               	btfss	status,0,c
  4924  0016F0  D00B               	goto	i2u357_41
  4925                           
  4926                           ;doprnt.c: 1367: else if(prec < c)
  4927  0016F2  505E               	movf	sprintf@c^0,w,c
  4928  0016F4  6E43               	movwf	??_sprintf^0,c
  4929  0016F6  6A44               	clrf	(??_sprintf+1)^0,c
  4930  0016F8  5043               	movf	??_sprintf^0,w,c
  4931  0016FA  5C59               	subwf	sprintf@prec^0,w,c
  4932  0016FC  505A               	movf	(sprintf@prec+1)^0,w,c
  4933  0016FE  0A80               	xorlw	128
  4934  001700  6E45               	movwf	(??_sprintf+2)^0,c
  4935  001702  5044               	movf	(??_sprintf+1)^0,w,c
  4936  001704  0A80               	xorlw	128
  4937  001706  5845               	subwfb	(??_sprintf+2)^0,w,c
  4938  001708                     i2u357_41:
  4939                           
  4940                           ;doprnt.c: 1448: {;doprnt.c: 1464: if(flag & 0x03)
  4941  001708  C04D  F043         	movff	sprintf@flag,??_sprintf
  4942  00170C  0E03               	movlw	3
  4943  00170E  1643               	andwf	??_sprintf^0,f,c
  4944  001710  B4D8               	btfsc	status,2,c
  4945  001712  D006               	goto	i2l3681
  4946                           
  4947                           ;doprnt.c: 1465: ((*sp++ = ('-')));
  4948  001714  503E               	movf	sprintf@sp^0,w,c
  4949  001716  6ED9               	movwf	fsr2l,c
  4950  001718  6ADA               	clrf	fsr2h,c
  4951  00171A  0E2D               	movlw	45
  4952  00171C  6EDF               	movwf	indf2,c
  4953  00171E  D4C5               	goto	i2l3485
  4954  001720                     i2l3681:
  4955  001720  2A3F               	incf	sprintf@f^0,f,c
  4956  001722  043F               	decf	sprintf@f^0,w,c
  4957  001724  6E43               	movwf	??_sprintf^0,c
  4958  001726  C043  FFF6         	movff	??_sprintf,tblptrl
  4959  00172A                     	if	1	;There is more than 1 active tblptr byte
  4960  00172A  0E10               	movlw	high __smallconst
  4961  00172C  6EF7               	movwf	tblptrh,c
  4962  00172E                     	endif
  4963  00172E                     	if	0	;tblptru may be non-zero
  4964  00172E                     	endif
  4965  00172E                     	if	0	;tblptru may be non-zero
  4966  00172E                     	endif
  4967  00172E  0008               	tblrd		*
  4968  001730  CFF5 F05E          	movff	tablat,sprintf@c
  4969  001734  505E               	movf	sprintf@c^0,w,c
  4970  001736  A4D8               	btfss	status,2,c
  4971  001738  D4AF               	goto	i2l3481
  4972  00173A                     i2u359_40:
  4973                           
  4974                           ;doprnt.c: 1564: *sp = 0;
  4975  00173A  503E               	movf	sprintf@sp^0,w,c
  4976  00173C  6ED9               	movwf	fsr2l,c
  4977  00173E  6ADA               	clrf	fsr2h,c
  4978  001740  0E00               	movlw	0
  4979  001742  6EDF               	movwf	indf2,c
  4980  001744  0012               	return		;funcret
  4981  001746                     __end_of_sprintf:
  4982                           	callstack 0
  4983                           
  4984 ;; *************** function i2___lltoft *****************
  4985 ;; Defined at:
  4986 ;;		line 35 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\lltoft.c"
  4987 ;; Parameters:    Size  Location     Type
  4988 ;;  c               4    8[COMRAM] unsigned long 
  4989 ;; Auto vars:     Size  Location     Type
  4990 ;;  exp             1   16[COMRAM] unsigned char 
  4991 ;; Return value:  Size  Location     Type
  4992 ;;                  3    8[COMRAM] float 
  4993 ;; Registers used:
  4994 ;;		wreg, status,2, status,0, cstack
  4995 ;; Tracked objects:
  4996 ;;		On entry : 0/0
  4997 ;;		On exit  : 0/0
  4998 ;;		Unchanged: 0/0
  4999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5000 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5001 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5002 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5003 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5004 ;;Total ram usage:        9 bytes
  5005 ;; Hardware stack levels used: 1
  5006 ;; Hardware stack levels required when called: 1
  5007 ;; This function calls:
  5008 ;;		i2___ftpack
  5009 ;; This function is called by:
  5010 ;;		_sprintf
  5011 ;; This function uses a non-reentrant model
  5012 ;;
  5013                           
  5014                           	psect	text26
  5015  002C66                     __ptext26:
  5016                           	callstack 0
  5017  002C66                     i2___lltoft:
  5018                           	callstack 22
  5019                           
  5020                           ;incstack = 0
  5021  002C66  0E8E               	movlw	142
  5022  002C68  6E11               	movwf	i2___lltoft@exp^0,c
  5023  002C6A  D006               	goto	i2l3415
  5024  002C6C                     i2l3413:
  5025  002C6C  90D8               	bcf	status,0,c
  5026  002C6E  320C               	rrcf	(i2___lltoft@c+3)^0,f,c
  5027  002C70  320B               	rrcf	(i2___lltoft@c+2)^0,f,c
  5028  002C72  320A               	rrcf	(i2___lltoft@c+1)^0,f,c
  5029  002C74  3209               	rrcf	i2___lltoft@c^0,f,c
  5030  002C76  2A11               	incf	i2___lltoft@exp^0,f,c
  5031  002C78                     i2l3415:
  5032  002C78  0E00               	movlw	0
  5033  002C7A  1409               	andwf	i2___lltoft@c^0,w,c
  5034  002C7C  6E0D               	movwf	??i2___lltoft^0,c
  5035  002C7E  0E00               	movlw	0
  5036  002C80  140A               	andwf	(i2___lltoft@c+1)^0,w,c
  5037  002C82  6E0E               	movwf	(??i2___lltoft+1)^0,c
  5038  002C84  0E00               	movlw	0
  5039  002C86  140B               	andwf	(i2___lltoft@c+2)^0,w,c
  5040  002C88  6E0F               	movwf	(??i2___lltoft+2)^0,c
  5041  002C8A  0EFF               	movlw	255
  5042  002C8C  140C               	andwf	(i2___lltoft@c+3)^0,w,c
  5043  002C8E  6E10               	movwf	(??i2___lltoft+3)^0,c
  5044  002C90  500D               	movf	??i2___lltoft^0,w,c
  5045  002C92  100E               	iorwf	(??i2___lltoft+1)^0,w,c
  5046  002C94  100F               	iorwf	(??i2___lltoft+2)^0,w,c
  5047  002C96  1010               	iorwf	(??i2___lltoft+3)^0,w,c
  5048  002C98  A4D8               	btfss	status,2,c
  5049  002C9A  D7E8               	goto	i2l3413
  5050  002C9C  C009  F001         	movff	i2___lltoft@c,i2___ftpack@arg
  5051  002CA0  C00A  F002         	movff	i2___lltoft@c+1,i2___ftpack@arg+1
  5052  002CA4  C00B  F003         	movff	i2___lltoft@c+2,i2___ftpack@arg+2
  5053  002CA8  C011  F004         	movff	i2___lltoft@exp,i2___ftpack@exp
  5054  002CAC  0E00               	movlw	0
  5055  002CAE  6E05               	movwf	i2___ftpack@sign^0,c
  5056  002CB0  EC6F  F013         	call	i2___ftpack	;wreg free
  5057  002CB4  C001  F009         	movff	?i2___ftpack,?i2___lltoft
  5058  002CB8  C002  F00A         	movff	?i2___ftpack+1,?i2___lltoft+1
  5059  002CBC  C003  F00B         	movff	?i2___ftpack+2,?i2___lltoft+2
  5060  002CC0  0012               	return		;funcret
  5061  002CC2                     __end_ofi2___lltoft:
  5062                           	callstack 0
  5063                           
  5064 ;; *************** function i2___fttol *****************
  5065 ;; Defined at:
  5066 ;;		line 44 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\fttol.c"
  5067 ;; Parameters:    Size  Location     Type
  5068 ;;  f1              3   40[COMRAM] float 
  5069 ;; Auto vars:     Size  Location     Type
  5070 ;;  lval            4   50[COMRAM] unsigned long 
  5071 ;;  exp1            1   54[COMRAM] unsigned char 
  5072 ;;  sign1           1   49[COMRAM] unsigned char 
  5073 ;; Return value:  Size  Location     Type
  5074 ;;                  4   40[COMRAM] long 
  5075 ;; Registers used:
  5076 ;;		wreg, status,2, status,0
  5077 ;; Tracked objects:
  5078 ;;		On entry : 0/0
  5079 ;;		On exit  : 0/0
  5080 ;;		Unchanged: 0/0
  5081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5082 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5083 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5084 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5085 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5086 ;;Total ram usage:       15 bytes
  5087 ;; Hardware stack levels used: 1
  5088 ;; This function calls:
  5089 ;;		Nothing
  5090 ;; This function is called by:
  5091 ;;		_TMR1_ISR
  5092 ;;		_sprintf
  5093 ;; This function uses a non-reentrant model
  5094 ;;
  5095                           
  5096                           	psect	text27
  5097  00255E                     __ptext27:
  5098                           	callstack 0
  5099  00255E                     i2___fttol:
  5100                           	callstack 24
  5101                           
  5102                           ;incstack = 0
  5103  00255E  C02B  F02D         	movff	i2___fttol@f1+2,??i2___fttol
  5104  002562  6A2E               	clrf	(??i2___fttol+1)^0,c
  5105  002564  6A2F               	clrf	(??i2___fttol+2)^0,c
  5106  002566  342A               	rlcf	(i2___fttol@f1+1)^0,w,c
  5107  002568  362D               	rlcf	??i2___fttol^0,f,c
  5108  00256A  E301               	bnc	u319_41
  5109  00256C  802E               	bsf	(??i2___fttol+1)^0,0,c
  5110  00256E                     u319_41:
  5111  00256E  502D               	movf	??i2___fttol^0,w,c
  5112  002570  6E37               	movwf	i2___fttol@exp1^0,c
  5113  002572  5037               	movf	i2___fttol@exp1^0,w,c
  5114  002574  A4D8               	btfss	status,2,c
  5115  002576  D009               	goto	i2l3371
  5116  002578                     i2u320_40:
  5117  002578  0E00               	movlw	0
  5118  00257A  6E29               	movwf	?i2___fttol^0,c
  5119  00257C  0E00               	movlw	0
  5120  00257E  6E2A               	movwf	(?i2___fttol+1)^0,c
  5121  002580  0E00               	movlw	0
  5122  002582  6E2B               	movwf	(?i2___fttol+2)^0,c
  5123  002584  0E00               	movlw	0
  5124  002586  6E2C               	movwf	(?i2___fttol+3)^0,c
  5125  002588  0012               	return	
  5126  00258A                     i2l3371:
  5127  00258A  0E17               	movlw	23
  5128  00258C  6E2D               	movwf	??i2___fttol^0,c
  5129  00258E  C029  F02E         	movff	i2___fttol@f1,??i2___fttol+1
  5130  002592  C02A  F02F         	movff	i2___fttol@f1+1,??i2___fttol+2
  5131  002596  C02B  F030         	movff	i2___fttol@f1+2,??i2___fttol+3
  5132  00259A  282D               	incf	??i2___fttol^0,w,c
  5133  00259C  6E31               	movwf	(??i2___fttol+4)^0,c
  5134  00259E  D004               	goto	i2u321_40
  5135  0025A0                     i2u321_45:
  5136  0025A0  90D8               	bcf	status,0,c
  5137  0025A2  3230               	rrcf	(??i2___fttol+3)^0,f,c
  5138  0025A4  322F               	rrcf	(??i2___fttol+2)^0,f,c
  5139  0025A6  322E               	rrcf	(??i2___fttol+1)^0,f,c
  5140  0025A8                     i2u321_40:
  5141  0025A8  2E31               	decfsz	(??i2___fttol+4)^0,f,c
  5142  0025AA  D7FA               	goto	i2u321_45
  5143  0025AC  502E               	movf	(??i2___fttol+1)^0,w,c
  5144  0025AE  6E32               	movwf	i2___fttol@sign1^0,c
  5145  0025B0  8E2A               	bsf	(i2___fttol@f1+1)^0,7,c
  5146  0025B2  0EFF               	movlw	255
  5147  0025B4  1629               	andwf	i2___fttol@f1^0,f,c
  5148  0025B6  0EFF               	movlw	255
  5149  0025B8  162A               	andwf	(i2___fttol@f1+1)^0,f,c
  5150  0025BA  0E00               	movlw	0
  5151  0025BC  162B               	andwf	(i2___fttol@f1+2)^0,f,c
  5152  0025BE  5029               	movf	i2___fttol@f1^0,w,c
  5153  0025C0  6E33               	movwf	i2___fttol@lval^0,c
  5154  0025C2  502A               	movf	(i2___fttol@f1+1)^0,w,c
  5155  0025C4  6E34               	movwf	(i2___fttol@lval+1)^0,c
  5156  0025C6  502B               	movf	(i2___fttol@f1+2)^0,w,c
  5157  0025C8  6E35               	movwf	(i2___fttol@lval+2)^0,c
  5158  0025CA  6A36               	clrf	(i2___fttol@lval+3)^0,c
  5159  0025CC  0E8E               	movlw	142
  5160  0025CE  5E37               	subwf	i2___fttol@exp1^0,f,c
  5161  0025D0  AE37               	btfss	i2___fttol@exp1^0,7,c
  5162  0025D2  D00D               	goto	i2l3393
  5163  0025D4  5037               	movf	i2___fttol@exp1^0,w,c
  5164  0025D6  0A80               	xorlw	128
  5165  0025D8  0F8F               	addlw	143
  5166  0025DA  A0D8               	btfss	status,0,c
  5167  0025DC  D7CD               	goto	i2u320_40
  5168  0025DE                     i2l3389:
  5169  0025DE  90D8               	bcf	status,0,c
  5170  0025E0  3236               	rrcf	(i2___fttol@lval+3)^0,f,c
  5171  0025E2  3235               	rrcf	(i2___fttol@lval+2)^0,f,c
  5172  0025E4  3234               	rrcf	(i2___fttol@lval+1)^0,f,c
  5173  0025E6  3233               	rrcf	i2___fttol@lval^0,f,c
  5174  0025E8  3E37               	incfsz	i2___fttol@exp1^0,f,c
  5175  0025EA  D7F9               	goto	i2l3389
  5176  0025EC  D00D               	goto	i2u325_40
  5177  0025EE                     i2l3393:
  5178  0025EE  0E17               	movlw	23
  5179  0025F0  6437               	cpfsgt	i2___fttol@exp1^0,c
  5180  0025F2  D007               	goto	i2l3401
  5181  0025F4  D7C1               	goto	i2u320_40
  5182  0025F6                     i2l3399:
  5183  0025F6  90D8               	bcf	status,0,c
  5184  0025F8  3633               	rlcf	i2___fttol@lval^0,f,c
  5185  0025FA  3634               	rlcf	(i2___fttol@lval+1)^0,f,c
  5186  0025FC  3635               	rlcf	(i2___fttol@lval+2)^0,f,c
  5187  0025FE  3636               	rlcf	(i2___fttol@lval+3)^0,f,c
  5188  002600  0637               	decf	i2___fttol@exp1^0,f,c
  5189  002602                     i2l3401:
  5190  002602  5037               	movf	i2___fttol@exp1^0,w,c
  5191  002604  A4D8               	btfss	status,2,c
  5192  002606  D7F7               	goto	i2l3399
  5193  002608                     i2u325_40:
  5194  002608  5032               	movf	i2___fttol@sign1^0,w,c
  5195  00260A  B4D8               	btfsc	status,2,c
  5196  00260C  D008               	goto	i2l3407
  5197  00260E  1E36               	comf	(i2___fttol@lval+3)^0,f,c
  5198  002610  1E35               	comf	(i2___fttol@lval+2)^0,f,c
  5199  002612  1E34               	comf	(i2___fttol@lval+1)^0,f,c
  5200  002614  6C33               	negf	i2___fttol@lval^0,c
  5201  002616  0E00               	movlw	0
  5202  002618  2234               	addwfc	(i2___fttol@lval+1)^0,f,c
  5203  00261A  2235               	addwfc	(i2___fttol@lval+2)^0,f,c
  5204  00261C  2236               	addwfc	(i2___fttol@lval+3)^0,f,c
  5205  00261E                     i2l3407:
  5206  00261E  C033  F029         	movff	i2___fttol@lval,?i2___fttol
  5207  002622  C034  F02A         	movff	i2___fttol@lval+1,?i2___fttol+1
  5208  002626  C035  F02B         	movff	i2___fttol@lval+2,?i2___fttol+2
  5209  00262A  C036  F02C         	movff	i2___fttol@lval+3,?i2___fttol+3
  5210  00262E  0012               	return		;funcret
  5211  002630                     __end_ofi2___fttol:
  5212                           	callstack 0
  5213                           
  5214 ;; *************** function i2___ftge *****************
  5215 ;; Defined at:
  5216 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\ftge.c"
  5217 ;; Parameters:    Size  Location     Type
  5218 ;;  ff1             3    0[COMRAM] float 
  5219 ;;  ff2             3    3[COMRAM] float 
  5220 ;; Auto vars:     Size  Location     Type
  5221 ;;		None
  5222 ;; Return value:  Size  Location     Type
  5223 ;;		None               void
  5224 ;; Registers used:
  5225 ;;		wreg, status,2, status,0
  5226 ;; Tracked objects:
  5227 ;;		On entry : 0/0
  5228 ;;		On exit  : 0/0
  5229 ;;		Unchanged: 0/0
  5230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5231 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5232 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5233 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5234 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5235 ;;Total ram usage:        9 bytes
  5236 ;; Hardware stack levels used: 1
  5237 ;; This function calls:
  5238 ;;		Nothing
  5239 ;; This function is called by:
  5240 ;;		_sprintf
  5241 ;; This function uses a non-reentrant model
  5242 ;;
  5243                           
  5244                           	psect	text28
  5245  002A56                     __ptext28:
  5246                           	callstack 0
  5247  002A56                     i2___ftge:
  5248                           	callstack 23
  5249                           
  5250                           ;incstack = 0
  5251  002A56  AE03               	btfss	(i2___ftge@ff1+2)^0,7,c
  5252  002A58  D00F               	goto	i2l3351
  5253  002A5A  0E00               	movlw	0
  5254  002A5C  6E07               	movwf	??i2___ftge^0,c
  5255  002A5E  0E00               	movlw	0
  5256  002A60  6E08               	movwf	(??i2___ftge+1)^0,c
  5257  002A62  0E80               	movlw	128
  5258  002A64  6E09               	movwf	(??i2___ftge+2)^0,c
  5259  002A66  5001               	movf	i2___ftge@ff1^0,w,c
  5260  002A68  5C07               	subwf	??i2___ftge^0,w,c
  5261  002A6A  6E01               	movwf	i2___ftge@ff1^0,c
  5262  002A6C  5002               	movf	(i2___ftge@ff1+1)^0,w,c
  5263  002A6E  5808               	subwfb	(??i2___ftge+1)^0,w,c
  5264  002A70  6E02               	movwf	(i2___ftge@ff1+1)^0,c
  5265  002A72  5003               	movf	(i2___ftge@ff1+2)^0,w,c
  5266  002A74  5809               	subwfb	(??i2___ftge+2)^0,w,c
  5267  002A76  6E03               	movwf	(i2___ftge@ff1+2)^0,c
  5268  002A78                     i2l3351:
  5269  002A78  AE06               	btfss	(i2___ftge@ff2+2)^0,7,c
  5270  002A7A  D00F               	goto	i2l3355
  5271  002A7C  0E00               	movlw	0
  5272  002A7E  6E07               	movwf	??i2___ftge^0,c
  5273  002A80  0E00               	movlw	0
  5274  002A82  6E08               	movwf	(??i2___ftge+1)^0,c
  5275  002A84  0E80               	movlw	128
  5276  002A86  6E09               	movwf	(??i2___ftge+2)^0,c
  5277  002A88  5004               	movf	i2___ftge@ff2^0,w,c
  5278  002A8A  5C07               	subwf	??i2___ftge^0,w,c
  5279  002A8C  6E04               	movwf	i2___ftge@ff2^0,c
  5280  002A8E  5005               	movf	(i2___ftge@ff2+1)^0,w,c
  5281  002A90  5808               	subwfb	(??i2___ftge+1)^0,w,c
  5282  002A92  6E05               	movwf	(i2___ftge@ff2+1)^0,c
  5283  002A94  5006               	movf	(i2___ftge@ff2+2)^0,w,c
  5284  002A96  5809               	subwfb	(??i2___ftge+2)^0,w,c
  5285  002A98  6E06               	movwf	(i2___ftge@ff2+2)^0,c
  5286  002A9A                     i2l3355:
  5287  002A9A  0E00               	movlw	0
  5288  002A9C  1A01               	xorwf	i2___ftge@ff1^0,f,c
  5289  002A9E  0E00               	movlw	0
  5290  002AA0  1A02               	xorwf	(i2___ftge@ff1+1)^0,f,c
  5291  002AA2  0E80               	movlw	128
  5292  002AA4  1A03               	xorwf	(i2___ftge@ff1+2)^0,f,c
  5293  002AA6  0E00               	movlw	0
  5294  002AA8  1A04               	xorwf	i2___ftge@ff2^0,f,c
  5295  002AAA  0E00               	movlw	0
  5296  002AAC  1A05               	xorwf	(i2___ftge@ff2+1)^0,f,c
  5297  002AAE  0E80               	movlw	128
  5298  002AB0  1A06               	xorwf	(i2___ftge@ff2+2)^0,f,c
  5299  002AB2  5004               	movf	i2___ftge@ff2^0,w,c
  5300  002AB4  5C01               	subwf	i2___ftge@ff1^0,w,c
  5301  002AB6  5005               	movf	(i2___ftge@ff2+1)^0,w,c
  5302  002AB8  5802               	subwfb	(i2___ftge@ff1+1)^0,w,c
  5303  002ABA  5006               	movf	(i2___ftge@ff2+2)^0,w,c
  5304  002ABC  5803               	subwfb	(i2___ftge@ff1+2)^0,w,c
  5305  002ABE  B0D8               	btfsc	status,0,c
  5306  002AC0  D002               	goto	i2l3361
  5307  002AC2  90D8               	bcf	status,0,c
  5308  002AC4  0012               	return	
  5309  002AC6                     i2l3361:
  5310  002AC6  80D8               	bsf	status,0,c
  5311  002AC8  0012               	return		;funcret
  5312  002ACA                     __end_ofi2___ftge:
  5313                           	callstack 0
  5314                           
  5315 ;; *************** function _scale *****************
  5316 ;; Defined at:
  5317 ;;		line 433 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c"
  5318 ;; Parameters:    Size  Location     Type
  5319 ;;  scl             1    wreg     char 
  5320 ;; Auto vars:     Size  Location     Type
  5321 ;;  scl             1   39[COMRAM] char 
  5322 ;; Return value:  Size  Location     Type
  5323 ;;                  3   29[COMRAM] char 
  5324 ;; Registers used:
  5325 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5326 ;; Tracked objects:
  5327 ;;		On entry : 0/0
  5328 ;;		On exit  : 0/0
  5329 ;;		Unchanged: 0/0
  5330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5331 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5332 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5333 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5334 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5335 ;;Total ram usage:       11 bytes
  5336 ;; Hardware stack levels used: 1
  5337 ;; Hardware stack levels required when called: 2
  5338 ;; This function calls:
  5339 ;;		___awdiv
  5340 ;;		___awmod
  5341 ;;		___ftmul
  5342 ;; This function is called by:
  5343 ;;		_sprintf
  5344 ;; This function uses a non-reentrant model
  5345 ;;
  5346                           
  5347                           	psect	text29
  5348  001746                     __ptext29:
  5349                           	callstack 0
  5350  001746                     _scale:
  5351                           	callstack 21
  5352                           
  5353                           ;incstack = 0
  5354                           ;scale@scl stored from wreg
  5355  001746  6E28               	movwf	scale@scl^0,c
  5356                           
  5357                           ;doprnt.c: 436: if(scl < 0) {
  5358  001748  AE28               	btfss	scale@scl^0,7,c
  5359  00174A  D0E5               	goto	i2l3133
  5360                           
  5361                           ;doprnt.c: 437: scl = -scl;
  5362  00174C  6C28               	negf	scale@scl^0,c
  5363                           
  5364                           ;doprnt.c: 438: if(scl>=110)
  5365  00174E  5028               	movf	scale@scl^0,w,c
  5366  001750  0A80               	xorlw	128
  5367  001752  0F12               	addlw	-238
  5368  001754  A0D8               	btfss	status,0,c
  5369  001756  D080               	goto	i2l3123
  5370                           
  5371                           ;doprnt.c: 439: return _npowers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char
      +                          )((scl%100)/10+9)] * _npowers_[(unsigned char)(scl%10)];
  5372  001758  0E00               	movlw	0
  5373  00175A  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  5374  00175C  0E0A               	movlw	10
  5375  00175E  6E09               	movwf	___awdiv@divisor^0,c
  5376  001760  0E00               	movlw	0
  5377  001762  6E04               	movwf	(___awmod@divisor+1)^0,c
  5378  001764  0E64               	movlw	100
  5379  001766  6E03               	movwf	___awmod@divisor^0,c
  5380  001768  5028               	movf	scale@scl^0,w,c
  5381  00176A  6E01               	movwf	___awmod@dividend^0,c
  5382  00176C  6A02               	clrf	(___awmod@dividend+1)^0,c
  5383  00176E  BE01               	btfsc	___awmod@dividend^0,7,c
  5384  001770  0602               	decf	(___awmod@dividend+1)^0,f,c
  5385  001772  EC65  F015         	call	___awmod	;wreg free
  5386  001776  C001  F007         	movff	?___awmod,___awdiv@dividend
  5387  00177A  C002  F008         	movff	?___awmod+1,___awdiv@dividend+1
  5388  00177E  EC6E  F014         	call	___awdiv	;wreg free
  5389  001782  5007               	movf	?___awdiv^0,w,c
  5390  001784  0D03               	mullw	3
  5391  001786  CFF3 F021          	movff	prodl,??_scale
  5392  00178A  0E1B               	movlw	27
  5393  00178C  2621               	addwf	??_scale^0,f,c
  5394  00178E  5021               	movf	??_scale^0,w,c
  5395  001790  0F28               	addlw	low __npowers_
  5396  001792  6E22               	movwf	(??_scale+1)^0,c
  5397  001794  C022  FFF6         	movff	??_scale+1,tblptrl
  5398  001798                     	if	1	;There is more than 1 active tblptr byte
  5399  001798  0E10               	movlw	high __smallconst
  5400  00179A  6EF7               	movwf	tblptrh,c
  5401  00179C                     	endif
  5402  00179C                     	if	0	;tblptru may be non-zero
  5403  00179C                     	endif
  5404  00179C                     	if	0	;tblptru may be non-zero
  5405  00179C                     	endif
  5406  00179C  0009               	tblrd		*+
  5407  00179E  CFF5 F012          	movff	tablat,___ftmul@f2
  5408  0017A2  0009               	tblrd		*+
  5409  0017A4  CFF5 F013          	movff	tablat,___ftmul@f2+1
  5410  0017A8  000A               	tblrd		*-
  5411  0017AA  CFF5 F014          	movff	tablat,___ftmul@f2+2
  5412  0017AE  0E00               	movlw	0
  5413  0017B0  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  5414  0017B2  0E64               	movlw	100
  5415  0017B4  6E09               	movwf	___awdiv@divisor^0,c
  5416  0017B6  5028               	movf	scale@scl^0,w,c
  5417  0017B8  6E07               	movwf	___awdiv@dividend^0,c
  5418  0017BA  6A08               	clrf	(___awdiv@dividend+1)^0,c
  5419  0017BC  BE07               	btfsc	___awdiv@dividend^0,7,c
  5420  0017BE  0608               	decf	(___awdiv@dividend+1)^0,f,c
  5421  0017C0  EC6E  F014         	call	___awdiv	;wreg free
  5422  0017C4  5007               	movf	?___awdiv^0,w,c
  5423  0017C6  0D03               	mullw	3
  5424  0017C8  CFF3 F023          	movff	prodl,??_scale+2
  5425  0017CC  0E36               	movlw	54
  5426  0017CE  2623               	addwf	(??_scale+2)^0,f,c
  5427  0017D0  5023               	movf	(??_scale+2)^0,w,c
  5428  0017D2  0F28               	addlw	low __npowers_
  5429  0017D4  6E24               	movwf	(??_scale+3)^0,c
  5430  0017D6  C024  FFF6         	movff	??_scale+3,tblptrl
  5431  0017DA                     	if	1	;There is more than 1 active tblptr byte
  5432  0017DA  0E10               	movlw	high __smallconst
  5433  0017DC  6EF7               	movwf	tblptrh,c
  5434  0017DE                     	endif
  5435  0017DE                     	if	0	;tblptru may be non-zero
  5436  0017DE                     	endif
  5437  0017DE                     	if	0	;tblptru may be non-zero
  5438  0017DE                     	endif
  5439  0017DE  0009               	tblrd		*+
  5440  0017E0  CFF5 F00F          	movff	tablat,___ftmul@f1
  5441  0017E4  0009               	tblrd		*+
  5442  0017E6  CFF5 F010          	movff	tablat,___ftmul@f1+1
  5443  0017EA  000A               	tblrd		*-
  5444  0017EC  CFF5 F011          	movff	tablat,___ftmul@f1+2
  5445  0017F0  EC74  F010         	call	___ftmul	;wreg free
  5446  0017F4  C00F  F025         	movff	?___ftmul,_scale$1115
  5447  0017F8  C010  F026         	movff	?___ftmul+1,_scale$1115+1
  5448  0017FC  C011  F027         	movff	?___ftmul+2,_scale$1115+2
  5449                           
  5450                           ;doprnt.c: 439: return _npowers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char
      +                          )((scl%100)/10+9)] * _npowers_[(unsigned char)(scl%10)];
  5451  001800  C025  F00F         	movff	_scale$1115,___ftmul@f1
  5452  001804  C026  F010         	movff	_scale$1115+1,___ftmul@f1+1
  5453  001808  C027  F011         	movff	_scale$1115+2,___ftmul@f1+2
  5454  00180C  0E00               	movlw	0
  5455  00180E  6E04               	movwf	(___awmod@divisor+1)^0,c
  5456  001810  0E0A               	movlw	10
  5457  001812  6E03               	movwf	___awmod@divisor^0,c
  5458  001814  5028               	movf	scale@scl^0,w,c
  5459  001816  6E01               	movwf	___awmod@dividend^0,c
  5460  001818  6A02               	clrf	(___awmod@dividend+1)^0,c
  5461  00181A  BE01               	btfsc	___awmod@dividend^0,7,c
  5462  00181C  0602               	decf	(___awmod@dividend+1)^0,f,c
  5463  00181E  EC65  F015         	call	___awmod	;wreg free
  5464  001822  5001               	movf	?___awmod^0,w,c
  5465  001824  0D03               	mullw	3
  5466  001826  50F3               	movf	243,w,c
  5467  001828  0F28               	addlw	low __npowers_
  5468  00182A  6E21               	movwf	??_scale^0,c
  5469  00182C  C021  FFF6         	movff	??_scale,tblptrl
  5470  001830                     	if	1	;There is more than 1 active tblptr byte
  5471  001830  0E10               	movlw	high __smallconst
  5472  001832  6EF7               	movwf	tblptrh,c
  5473  001834                     	endif
  5474  001834                     	if	0	;tblptru may be non-zero
  5475  001834                     	endif
  5476  001834                     	if	0	;tblptru may be non-zero
  5477  001834                     	endif
  5478  001834  0009               	tblrd		*+
  5479  001836  CFF5 F012          	movff	tablat,___ftmul@f2
  5480  00183A  0009               	tblrd		*+
  5481  00183C  CFF5 F013          	movff	tablat,___ftmul@f2+1
  5482  001840  000A               	tblrd		*-
  5483  001842  CFF5 F014          	movff	tablat,___ftmul@f2+2
  5484  001846  EC74  F010         	call	___ftmul	;wreg free
  5485  00184A  C00F  F01E         	movff	?___ftmul,?_scale
  5486  00184E  C010  F01F         	movff	?___ftmul+1,?_scale+1
  5487  001852  C011  F020         	movff	?___ftmul+2,?_scale+2
  5488  001856  0012               	return	
  5489  001858                     i2l3123:
  5490                           
  5491                           ;doprnt.c: 440: else if(scl > 10)
  5492  001858  5028               	movf	scale@scl^0,w,c
  5493  00185A  0A80               	xorlw	128
  5494  00185C  0F75               	addlw	-139
  5495  00185E  A0D8               	btfss	status,0,c
  5496  001860  D047               	goto	i2l3129
  5497                           
  5498                           ;doprnt.c: 441: return _npowers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(
      +                          scl%10)];
  5499  001862  0E00               	movlw	0
  5500  001864  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  5501  001866  0E0A               	movlw	10
  5502  001868  6E09               	movwf	___awdiv@divisor^0,c
  5503  00186A  5028               	movf	scale@scl^0,w,c
  5504  00186C  6E07               	movwf	___awdiv@dividend^0,c
  5505  00186E  6A08               	clrf	(___awdiv@dividend+1)^0,c
  5506  001870  BE07               	btfsc	___awdiv@dividend^0,7,c
  5507  001872  0608               	decf	(___awdiv@dividend+1)^0,f,c
  5508  001874  EC6E  F014         	call	___awdiv	;wreg free
  5509  001878  5007               	movf	?___awdiv^0,w,c
  5510  00187A  0D03               	mullw	3
  5511  00187C  CFF3 F021          	movff	prodl,??_scale
  5512  001880  0E1B               	movlw	27
  5513  001882  2621               	addwf	??_scale^0,f,c
  5514  001884  5021               	movf	??_scale^0,w,c
  5515  001886  0F28               	addlw	low __npowers_
  5516  001888  6E22               	movwf	(??_scale+1)^0,c
  5517  00188A  C022  FFF6         	movff	??_scale+1,tblptrl
  5518  00188E                     	if	1	;There is more than 1 active tblptr byte
  5519  00188E  0E10               	movlw	high __smallconst
  5520  001890  6EF7               	movwf	tblptrh,c
  5521  001892                     	endif
  5522  001892                     	if	0	;tblptru may be non-zero
  5523  001892                     	endif
  5524  001892                     	if	0	;tblptru may be non-zero
  5525  001892                     	endif
  5526  001892  0009               	tblrd		*+
  5527  001894  CFF5 F00F          	movff	tablat,___ftmul@f1
  5528  001898  0009               	tblrd		*+
  5529  00189A  CFF5 F010          	movff	tablat,___ftmul@f1+1
  5530  00189E  000A               	tblrd		*-
  5531  0018A0  CFF5 F011          	movff	tablat,___ftmul@f1+2
  5532  0018A4  0E00               	movlw	0
  5533  0018A6  6E04               	movwf	(___awmod@divisor+1)^0,c
  5534  0018A8  0E0A               	movlw	10
  5535  0018AA  6E03               	movwf	___awmod@divisor^0,c
  5536  0018AC  5028               	movf	scale@scl^0,w,c
  5537  0018AE  6E01               	movwf	___awmod@dividend^0,c
  5538  0018B0  6A02               	clrf	(___awmod@dividend+1)^0,c
  5539  0018B2  BE01               	btfsc	___awmod@dividend^0,7,c
  5540  0018B4  0602               	decf	(___awmod@dividend+1)^0,f,c
  5541  0018B6  EC65  F015         	call	___awmod	;wreg free
  5542  0018BA  5001               	movf	?___awmod^0,w,c
  5543  0018BC  0D03               	mullw	3
  5544  0018BE  50F3               	movf	243,w,c
  5545  0018C0  0F28               	addlw	low __npowers_
  5546  0018C2  6E23               	movwf	(??_scale+2)^0,c
  5547  0018C4  C023  FFF6         	movff	??_scale+2,tblptrl
  5548  0018C8                     	if	1	;There is more than 1 active tblptr byte
  5549  0018C8  0E10               	movlw	high __smallconst
  5550  0018CA  6EF7               	movwf	tblptrh,c
  5551  0018CC                     	endif
  5552  0018CC                     	if	0	;tblptru may be non-zero
  5553  0018CC                     	endif
  5554  0018CC                     	if	0	;tblptru may be non-zero
  5555  0018CC                     	endif
  5556  0018CC  0009               	tblrd		*+
  5557  0018CE  CFF5 F012          	movff	tablat,___ftmul@f2
  5558  0018D2  0009               	tblrd		*+
  5559  0018D4  CFF5 F013          	movff	tablat,___ftmul@f2+1
  5560  0018D8  000A               	tblrd		*-
  5561  0018DA  CFF5 F014          	movff	tablat,___ftmul@f2+2
  5562  0018DE  EC74  F010         	call	___ftmul	;wreg free
  5563  0018E2  C00F  F01E         	movff	?___ftmul,?_scale
  5564  0018E6  C010  F01F         	movff	?___ftmul+1,?_scale+1
  5565  0018EA  C011  F020         	movff	?___ftmul+2,?_scale+2
  5566  0018EE  0012               	return	
  5567  0018F0                     i2l3129:
  5568                           
  5569                           ;doprnt.c: 442: return _npowers_[(unsigned char)scl];
  5570  0018F0  5028               	movf	scale@scl^0,w,c
  5571  0018F2  0D03               	mullw	3
  5572  0018F4  50F3               	movf	243,w,c
  5573  0018F6  0F28               	addlw	low __npowers_
  5574  0018F8  6E21               	movwf	??_scale^0,c
  5575  0018FA  C021  FFF6         	movff	??_scale,tblptrl
  5576  0018FE                     	if	1	;There is more than 1 active tblptr byte
  5577  0018FE  0E10               	movlw	high __smallconst
  5578  001900  6EF7               	movwf	tblptrh,c
  5579  001902                     	endif
  5580  001902                     	if	0	;tblptru may be non-zero
  5581  001902                     	endif
  5582  001902                     	if	0	;tblptru may be non-zero
  5583  001902                     	endif
  5584  001902  0009               	tblrd		*+
  5585  001904  CFF5 F01E          	movff	tablat,?_scale
  5586  001908  0009               	tblrd		*+
  5587  00190A  CFF5 F01F          	movff	tablat,?_scale+1
  5588  00190E  000A               	tblrd		*-
  5589  001910  CFF5 F020          	movff	tablat,?_scale+2
  5590  001914  0012               	return	
  5591  001916                     i2l3133:
  5592                           
  5593                           ;doprnt.c: 443: };doprnt.c: 444: if(scl>=110)
  5594  001916  5028               	movf	scale@scl^0,w,c
  5595  001918  0A80               	xorlw	128
  5596  00191A  0F12               	addlw	-238
  5597  00191C  A0D8               	btfss	status,0,c
  5598  00191E  D080               	goto	i2l3141
  5599                           
  5600                           ;doprnt.c: 445: return _powers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)(
      +                          (scl%100)/10+9)] * _powers_[(unsigned char)(scl%10)];
  5601  001920  0E00               	movlw	0
  5602  001922  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  5603  001924  0E0A               	movlw	10
  5604  001926  6E09               	movwf	___awdiv@divisor^0,c
  5605  001928  0E00               	movlw	0
  5606  00192A  6E04               	movwf	(___awmod@divisor+1)^0,c
  5607  00192C  0E64               	movlw	100
  5608  00192E  6E03               	movwf	___awmod@divisor^0,c
  5609  001930  5028               	movf	scale@scl^0,w,c
  5610  001932  6E01               	movwf	___awmod@dividend^0,c
  5611  001934  6A02               	clrf	(___awmod@dividend+1)^0,c
  5612  001936  BE01               	btfsc	___awmod@dividend^0,7,c
  5613  001938  0602               	decf	(___awmod@dividend+1)^0,f,c
  5614  00193A  EC65  F015         	call	___awmod	;wreg free
  5615  00193E  C001  F007         	movff	?___awmod,___awdiv@dividend
  5616  001942  C002  F008         	movff	?___awmod+1,___awdiv@dividend+1
  5617  001946  EC6E  F014         	call	___awdiv	;wreg free
  5618  00194A  5007               	movf	?___awdiv^0,w,c
  5619  00194C  0D03               	mullw	3
  5620  00194E  CFF3 F021          	movff	prodl,??_scale
  5621  001952  0E1B               	movlw	27
  5622  001954  2621               	addwf	??_scale^0,f,c
  5623  001956  5021               	movf	??_scale^0,w,c
  5624  001958  0F01               	addlw	low __powers_
  5625  00195A  6E22               	movwf	(??_scale+1)^0,c
  5626  00195C  C022  FFF6         	movff	??_scale+1,tblptrl
  5627  001960                     	if	1	;There is more than 1 active tblptr byte
  5628  001960  0E10               	movlw	high __smallconst
  5629  001962  6EF7               	movwf	tblptrh,c
  5630  001964                     	endif
  5631  001964                     	if	0	;tblptru may be non-zero
  5632  001964                     	endif
  5633  001964                     	if	0	;tblptru may be non-zero
  5634  001964                     	endif
  5635  001964  0009               	tblrd		*+
  5636  001966  CFF5 F012          	movff	tablat,___ftmul@f2
  5637  00196A  0009               	tblrd		*+
  5638  00196C  CFF5 F013          	movff	tablat,___ftmul@f2+1
  5639  001970  000A               	tblrd		*-
  5640  001972  CFF5 F014          	movff	tablat,___ftmul@f2+2
  5641  001976  0E00               	movlw	0
  5642  001978  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  5643  00197A  0E64               	movlw	100
  5644  00197C  6E09               	movwf	___awdiv@divisor^0,c
  5645  00197E  5028               	movf	scale@scl^0,w,c
  5646  001980  6E07               	movwf	___awdiv@dividend^0,c
  5647  001982  6A08               	clrf	(___awdiv@dividend+1)^0,c
  5648  001984  BE07               	btfsc	___awdiv@dividend^0,7,c
  5649  001986  0608               	decf	(___awdiv@dividend+1)^0,f,c
  5650  001988  EC6E  F014         	call	___awdiv	;wreg free
  5651  00198C  5007               	movf	?___awdiv^0,w,c
  5652  00198E  0D03               	mullw	3
  5653  001990  CFF3 F023          	movff	prodl,??_scale+2
  5654  001994  0E36               	movlw	54
  5655  001996  2623               	addwf	(??_scale+2)^0,f,c
  5656  001998  5023               	movf	(??_scale+2)^0,w,c
  5657  00199A  0F01               	addlw	low __powers_
  5658  00199C  6E24               	movwf	(??_scale+3)^0,c
  5659  00199E  C024  FFF6         	movff	??_scale+3,tblptrl
  5660  0019A2                     	if	1	;There is more than 1 active tblptr byte
  5661  0019A2  0E10               	movlw	high __smallconst
  5662  0019A4  6EF7               	movwf	tblptrh,c
  5663  0019A6                     	endif
  5664  0019A6                     	if	0	;tblptru may be non-zero
  5665  0019A6                     	endif
  5666  0019A6                     	if	0	;tblptru may be non-zero
  5667  0019A6                     	endif
  5668  0019A6  0009               	tblrd		*+
  5669  0019A8  CFF5 F00F          	movff	tablat,___ftmul@f1
  5670  0019AC  0009               	tblrd		*+
  5671  0019AE  CFF5 F010          	movff	tablat,___ftmul@f1+1
  5672  0019B2  000A               	tblrd		*-
  5673  0019B4  CFF5 F011          	movff	tablat,___ftmul@f1+2
  5674  0019B8  EC74  F010         	call	___ftmul	;wreg free
  5675  0019BC  C00F  F025         	movff	?___ftmul,_scale$1115
  5676  0019C0  C010  F026         	movff	?___ftmul+1,_scale$1115+1
  5677  0019C4  C011  F027         	movff	?___ftmul+2,_scale$1115+2
  5678                           
  5679                           ;doprnt.c: 445: return _powers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)(
      +                          (scl%100)/10+9)] * _powers_[(unsigned char)(scl%10)];
  5680  0019C8  C025  F00F         	movff	_scale$1115,___ftmul@f1
  5681  0019CC  C026  F010         	movff	_scale$1115+1,___ftmul@f1+1
  5682  0019D0  C027  F011         	movff	_scale$1115+2,___ftmul@f1+2
  5683  0019D4  0E00               	movlw	0
  5684  0019D6  6E04               	movwf	(___awmod@divisor+1)^0,c
  5685  0019D8  0E0A               	movlw	10
  5686  0019DA  6E03               	movwf	___awmod@divisor^0,c
  5687  0019DC  5028               	movf	scale@scl^0,w,c
  5688  0019DE  6E01               	movwf	___awmod@dividend^0,c
  5689  0019E0  6A02               	clrf	(___awmod@dividend+1)^0,c
  5690  0019E2  BE01               	btfsc	___awmod@dividend^0,7,c
  5691  0019E4  0602               	decf	(___awmod@dividend+1)^0,f,c
  5692  0019E6  EC65  F015         	call	___awmod	;wreg free
  5693  0019EA  5001               	movf	?___awmod^0,w,c
  5694  0019EC  0D03               	mullw	3
  5695  0019EE  50F3               	movf	243,w,c
  5696  0019F0  0F01               	addlw	low __powers_
  5697  0019F2  6E21               	movwf	??_scale^0,c
  5698  0019F4  C021  FFF6         	movff	??_scale,tblptrl
  5699  0019F8                     	if	1	;There is more than 1 active tblptr byte
  5700  0019F8  0E10               	movlw	high __smallconst
  5701  0019FA  6EF7               	movwf	tblptrh,c
  5702  0019FC                     	endif
  5703  0019FC                     	if	0	;tblptru may be non-zero
  5704  0019FC                     	endif
  5705  0019FC                     	if	0	;tblptru may be non-zero
  5706  0019FC                     	endif
  5707  0019FC  0009               	tblrd		*+
  5708  0019FE  CFF5 F012          	movff	tablat,___ftmul@f2
  5709  001A02  0009               	tblrd		*+
  5710  001A04  CFF5 F013          	movff	tablat,___ftmul@f2+1
  5711  001A08  000A               	tblrd		*-
  5712  001A0A  CFF5 F014          	movff	tablat,___ftmul@f2+2
  5713  001A0E  EC74  F010         	call	___ftmul	;wreg free
  5714  001A12  C00F  F01E         	movff	?___ftmul,?_scale
  5715  001A16  C010  F01F         	movff	?___ftmul+1,?_scale+1
  5716  001A1A  C011  F020         	movff	?___ftmul+2,?_scale+2
  5717  001A1E  0012               	return	
  5718  001A20                     i2l3141:
  5719                           
  5720                           ;doprnt.c: 446: else if(scl > 10)
  5721  001A20  5028               	movf	scale@scl^0,w,c
  5722  001A22  0A80               	xorlw	128
  5723  001A24  0F75               	addlw	-139
  5724  001A26  A0D8               	btfss	status,0,c
  5725  001A28  D047               	goto	i2l3147
  5726                           
  5727                           ;doprnt.c: 447: return _powers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(sc
      +                          l%10)];
  5728  001A2A  0E00               	movlw	0
  5729  001A2C  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  5730  001A2E  0E0A               	movlw	10
  5731  001A30  6E09               	movwf	___awdiv@divisor^0,c
  5732  001A32  5028               	movf	scale@scl^0,w,c
  5733  001A34  6E07               	movwf	___awdiv@dividend^0,c
  5734  001A36  6A08               	clrf	(___awdiv@dividend+1)^0,c
  5735  001A38  BE07               	btfsc	___awdiv@dividend^0,7,c
  5736  001A3A  0608               	decf	(___awdiv@dividend+1)^0,f,c
  5737  001A3C  EC6E  F014         	call	___awdiv	;wreg free
  5738  001A40  5007               	movf	?___awdiv^0,w,c
  5739  001A42  0D03               	mullw	3
  5740  001A44  CFF3 F021          	movff	prodl,??_scale
  5741  001A48  0E1B               	movlw	27
  5742  001A4A  2621               	addwf	??_scale^0,f,c
  5743  001A4C  5021               	movf	??_scale^0,w,c
  5744  001A4E  0F01               	addlw	low __powers_
  5745  001A50  6E22               	movwf	(??_scale+1)^0,c
  5746  001A52  C022  FFF6         	movff	??_scale+1,tblptrl
  5747  001A56                     	if	1	;There is more than 1 active tblptr byte
  5748  001A56  0E10               	movlw	high __smallconst
  5749  001A58  6EF7               	movwf	tblptrh,c
  5750  001A5A                     	endif
  5751  001A5A                     	if	0	;tblptru may be non-zero
  5752  001A5A                     	endif
  5753  001A5A                     	if	0	;tblptru may be non-zero
  5754  001A5A                     	endif
  5755  001A5A  0009               	tblrd		*+
  5756  001A5C  CFF5 F00F          	movff	tablat,___ftmul@f1
  5757  001A60  0009               	tblrd		*+
  5758  001A62  CFF5 F010          	movff	tablat,___ftmul@f1+1
  5759  001A66  000A               	tblrd		*-
  5760  001A68  CFF5 F011          	movff	tablat,___ftmul@f1+2
  5761  001A6C  0E00               	movlw	0
  5762  001A6E  6E04               	movwf	(___awmod@divisor+1)^0,c
  5763  001A70  0E0A               	movlw	10
  5764  001A72  6E03               	movwf	___awmod@divisor^0,c
  5765  001A74  5028               	movf	scale@scl^0,w,c
  5766  001A76  6E01               	movwf	___awmod@dividend^0,c
  5767  001A78  6A02               	clrf	(___awmod@dividend+1)^0,c
  5768  001A7A  BE01               	btfsc	___awmod@dividend^0,7,c
  5769  001A7C  0602               	decf	(___awmod@dividend+1)^0,f,c
  5770  001A7E  EC65  F015         	call	___awmod	;wreg free
  5771  001A82  5001               	movf	?___awmod^0,w,c
  5772  001A84  0D03               	mullw	3
  5773  001A86  50F3               	movf	243,w,c
  5774  001A88  0F01               	addlw	low __powers_
  5775  001A8A  6E23               	movwf	(??_scale+2)^0,c
  5776  001A8C  C023  FFF6         	movff	??_scale+2,tblptrl
  5777  001A90                     	if	1	;There is more than 1 active tblptr byte
  5778  001A90  0E10               	movlw	high __smallconst
  5779  001A92  6EF7               	movwf	tblptrh,c
  5780  001A94                     	endif
  5781  001A94                     	if	0	;tblptru may be non-zero
  5782  001A94                     	endif
  5783  001A94                     	if	0	;tblptru may be non-zero
  5784  001A94                     	endif
  5785  001A94  0009               	tblrd		*+
  5786  001A96  CFF5 F012          	movff	tablat,___ftmul@f2
  5787  001A9A  0009               	tblrd		*+
  5788  001A9C  CFF5 F013          	movff	tablat,___ftmul@f2+1
  5789  001AA0  000A               	tblrd		*-
  5790  001AA2  CFF5 F014          	movff	tablat,___ftmul@f2+2
  5791  001AA6  EC74  F010         	call	___ftmul	;wreg free
  5792  001AAA  C00F  F01E         	movff	?___ftmul,?_scale
  5793  001AAE  C010  F01F         	movff	?___ftmul+1,?_scale+1
  5794  001AB2  C011  F020         	movff	?___ftmul+2,?_scale+2
  5795  001AB6  0012               	return	
  5796  001AB8                     i2l3147:
  5797                           
  5798                           ;doprnt.c: 448: return _powers_[(unsigned char)scl];
  5799  001AB8  5028               	movf	scale@scl^0,w,c
  5800  001ABA  0D03               	mullw	3
  5801  001ABC  50F3               	movf	243,w,c
  5802  001ABE  0F01               	addlw	low __powers_
  5803  001AC0  6E21               	movwf	??_scale^0,c
  5804  001AC2  C021  FFF6         	movff	??_scale,tblptrl
  5805  001AC6                     	if	1	;There is more than 1 active tblptr byte
  5806  001AC6  0E10               	movlw	high __smallconst
  5807  001AC8  6EF7               	movwf	tblptrh,c
  5808  001ACA                     	endif
  5809  001ACA                     	if	0	;tblptru may be non-zero
  5810  001ACA                     	endif
  5811  001ACA                     	if	0	;tblptru may be non-zero
  5812  001ACA                     	endif
  5813  001ACA  0009               	tblrd		*+
  5814  001ACC  CFF5 F01E          	movff	tablat,?_scale
  5815  001AD0  0009               	tblrd		*+
  5816  001AD2  CFF5 F01F          	movff	tablat,?_scale+1
  5817  001AD6  000A               	tblrd		*-
  5818  001AD8  CFF5 F020          	movff	tablat,?_scale+2
  5819  001ADC  0012               	return		;funcret
  5820  001ADE                     __end_of_scale:
  5821                           	callstack 0
  5822                           
  5823 ;; *************** function ___awmod *****************
  5824 ;; Defined at:
  5825 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\awmod.c"
  5826 ;; Parameters:    Size  Location     Type
  5827 ;;  dividend        2    0[COMRAM] int 
  5828 ;;  divisor         2    2[COMRAM] int 
  5829 ;; Auto vars:     Size  Location     Type
  5830 ;;  sign            1    5[COMRAM] unsigned char 
  5831 ;;  counter         1    4[COMRAM] unsigned char 
  5832 ;; Return value:  Size  Location     Type
  5833 ;;                  2    0[COMRAM] int 
  5834 ;; Registers used:
  5835 ;;		wreg, status,2, status,0
  5836 ;; Tracked objects:
  5837 ;;		On entry : 0/0
  5838 ;;		On exit  : 0/0
  5839 ;;		Unchanged: 0/0
  5840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5841 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5842 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5843 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5844 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5845 ;;Total ram usage:        6 bytes
  5846 ;; Hardware stack levels used: 1
  5847 ;; This function calls:
  5848 ;;		Nothing
  5849 ;; This function is called by:
  5850 ;;		_scale
  5851 ;; This function uses a non-reentrant model
  5852 ;;
  5853                           
  5854                           	psect	text30
  5855  002ACA                     __ptext30:
  5856                           	callstack 0
  5857  002ACA                     ___awmod:
  5858                           	callstack 22
  5859                           
  5860                           ;incstack = 0
  5861  002ACA  0E00               	movlw	0
  5862  002ACC  6E06               	movwf	___awmod@sign^0,c
  5863  002ACE  AE02               	btfss	(___awmod@dividend+1)^0,7,c
  5864  002AD0  D006               	goto	i2l2865
  5865  002AD2  6C01               	negf	___awmod@dividend^0,c
  5866  002AD4  1E02               	comf	(___awmod@dividend+1)^0,f,c
  5867  002AD6  B0D8               	btfsc	status,0,c
  5868  002AD8  2A02               	incf	(___awmod@dividend+1)^0,f,c
  5869  002ADA  0E01               	movlw	1
  5870  002ADC  6E06               	movwf	___awmod@sign^0,c
  5871  002ADE                     i2l2865:
  5872  002ADE  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  5873  002AE0  D004               	goto	i2l2869
  5874  002AE2  6C03               	negf	___awmod@divisor^0,c
  5875  002AE4  1E04               	comf	(___awmod@divisor+1)^0,f,c
  5876  002AE6  B0D8               	btfsc	status,0,c
  5877  002AE8  2A04               	incf	(___awmod@divisor+1)^0,f,c
  5878  002AEA                     i2l2869:
  5879  002AEA  5003               	movf	___awmod@divisor^0,w,c
  5880  002AEC  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  5881  002AEE  B4D8               	btfsc	status,2,c
  5882  002AF0  D018               	goto	i2l2885
  5883  002AF2  0E01               	movlw	1
  5884  002AF4  6E05               	movwf	___awmod@counter^0,c
  5885  002AF6  D004               	goto	i2l2875
  5886  002AF8                     i2l2873:
  5887  002AF8  90D8               	bcf	status,0,c
  5888  002AFA  3603               	rlcf	___awmod@divisor^0,f,c
  5889  002AFC  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  5890  002AFE  2A05               	incf	___awmod@counter^0,f,c
  5891  002B00                     i2l2875:
  5892  002B00  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  5893  002B02  D7FA               	goto	i2l2873
  5894  002B04                     i2u256_40:
  5895  002B04  5003               	movf	___awmod@divisor^0,w,c
  5896  002B06  5C01               	subwf	___awmod@dividend^0,w,c
  5897  002B08  5004               	movf	(___awmod@divisor+1)^0,w,c
  5898  002B0A  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  5899  002B0C  A0D8               	btfss	status,0,c
  5900  002B0E  D004               	goto	i2l2881
  5901  002B10  5003               	movf	___awmod@divisor^0,w,c
  5902  002B12  5E01               	subwf	___awmod@dividend^0,f,c
  5903  002B14  5004               	movf	(___awmod@divisor+1)^0,w,c
  5904  002B16  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  5905  002B18                     i2l2881:
  5906  002B18  90D8               	bcf	status,0,c
  5907  002B1A  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  5908  002B1C  3203               	rrcf	___awmod@divisor^0,f,c
  5909  002B1E  2E05               	decfsz	___awmod@counter^0,f,c
  5910  002B20  D7F1               	goto	i2u256_40
  5911  002B22                     i2l2885:
  5912  002B22  5006               	movf	___awmod@sign^0,w,c
  5913  002B24  B4D8               	btfsc	status,2,c
  5914  002B26  D004               	goto	i2l2889
  5915  002B28  6C01               	negf	___awmod@dividend^0,c
  5916  002B2A  1E02               	comf	(___awmod@dividend+1)^0,f,c
  5917  002B2C  B0D8               	btfsc	status,0,c
  5918  002B2E  2A02               	incf	(___awmod@dividend+1)^0,f,c
  5919  002B30                     i2l2889:
  5920  002B30  C001  F001         	movff	___awmod@dividend,?___awmod
  5921  002B34  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  5922  002B38  0012               	return		;funcret
  5923  002B3A                     __end_of___awmod:
  5924                           	callstack 0
  5925                           
  5926 ;; *************** function _isdigit *****************
  5927 ;; Defined at:
  5928 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\isdigit.c"
  5929 ;; Parameters:    Size  Location     Type
  5930 ;;  c               1    wreg     unsigned char 
  5931 ;; Auto vars:     Size  Location     Type
  5932 ;;  c               1    2[COMRAM] unsigned char 
  5933 ;; Return value:  Size  Location     Type
  5934 ;;		None               void
  5935 ;; Registers used:
  5936 ;;		wreg, status,2, status,0
  5937 ;; Tracked objects:
  5938 ;;		On entry : 0/0
  5939 ;;		On exit  : 0/0
  5940 ;;		Unchanged: 0/0
  5941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5942 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5943 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5944 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5945 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5946 ;;Total ram usage:        3 bytes
  5947 ;; Hardware stack levels used: 1
  5948 ;; This function calls:
  5949 ;;		Nothing
  5950 ;; This function is called by:
  5951 ;;		_sprintf
  5952 ;; This function uses a non-reentrant model
  5953 ;;
  5954                           
  5955                           	psect	text31
  5956  002F62                     __ptext31:
  5957                           	callstack 0
  5958  002F62                     _isdigit:
  5959                           	callstack 23
  5960                           
  5961                           ;incstack = 0
  5962                           ;isdigit@c stored from wreg
  5963  002F62  6E03               	movwf	isdigit@c^0,c
  5964  002F64  0E00               	movlw	0
  5965  002F66  6E02               	movwf	_isdigit$922^0,c
  5966  002F68  0E3A               	movlw	58
  5967  002F6A  6003               	cpfslt	isdigit@c^0,c
  5968  002F6C  D005               	goto	i2l3159
  5969  002F6E  0E2F               	movlw	47
  5970  002F70  6403               	cpfsgt	isdigit@c^0,c
  5971  002F72  D002               	goto	i2l3159
  5972  002F74  0E01               	movlw	1
  5973  002F76  6E02               	movwf	_isdigit$922^0,c
  5974  002F78                     i2l3159:
  5975  002F78  C002  F001         	movff	_isdigit$922,??_isdigit
  5976  002F7C  3001               	rrcf	??_isdigit^0,w,c
  5977  002F7E  0012               	return		;funcret
  5978  002F80                     __end_of_isdigit:
  5979                           	callstack 0
  5980                           
  5981 ;; *************** function _fround *****************
  5982 ;; Defined at:
  5983 ;;		line 417 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c"
  5984 ;; Parameters:    Size  Location     Type
  5985 ;;  prec            1    wreg     unsigned char 
  5986 ;; Auto vars:     Size  Location     Type
  5987 ;;  prec            1   42[COMRAM] unsigned char 
  5988 ;; Return value:  Size  Location     Type
  5989 ;;                  3   29[COMRAM] unsigned char 
  5990 ;; Registers used:
  5991 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5992 ;; Tracked objects:
  5993 ;;		On entry : 0/0
  5994 ;;		On exit  : 0/0
  5995 ;;		Unchanged: 0/0
  5996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5997 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5998 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5999 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6000 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6001 ;;Total ram usage:       14 bytes
  6002 ;; Hardware stack levels used: 1
  6003 ;; Hardware stack levels required when called: 2
  6004 ;; This function calls:
  6005 ;;		___ftmul
  6006 ;;		___lbdiv
  6007 ;;		___lbmod
  6008 ;; This function is called by:
  6009 ;;		_sprintf
  6010 ;; This function uses a non-reentrant model
  6011 ;;
  6012                           
  6013                           	psect	text32
  6014  001ADE                     __ptext32:
  6015                           	callstack 0
  6016  001ADE                     _fround:
  6017                           	callstack 21
  6018                           
  6019                           ;incstack = 0
  6020                           ;fround@prec stored from wreg
  6021  001ADE  6E2B               	movwf	fround@prec^0,c
  6022                           
  6023                           ;doprnt.c: 421: if(prec>=110)
  6024  001AE0  0E6D               	movlw	109
  6025  001AE2  642B               	cpfsgt	fround@prec^0,c
  6026  001AE4  D079               	goto	i2l3101
  6027                           
  6028                           ;doprnt.c: 422: return 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * 
      +                          _npowers_[prec%10U];
  6029  001AE6  0E0A               	movlw	10
  6030  001AE8  6E05               	movwf	___lbdiv@divisor^0,c
  6031  001AEA  0E64               	movlw	100
  6032  001AEC  6E01               	movwf	___lbmod@divisor^0,c
  6033  001AEE  502B               	movf	fround@prec^0,w,c
  6034  001AF0  EC57  F017         	call	___lbmod
  6035  001AF4  EC05  F017         	call	___lbdiv
  6036  001AF8  0D03               	mullw	3
  6037  001AFA  CFF3 F021          	movff	prodl,??_fround
  6038  001AFE  0E1B               	movlw	27
  6039  001B00  2621               	addwf	??_fround^0,f,c
  6040  001B02  5021               	movf	??_fround^0,w,c
  6041  001B04  0F28               	addlw	low __npowers_
  6042  001B06  6E22               	movwf	(??_fround+1)^0,c
  6043  001B08  C022  FFF6         	movff	??_fround+1,tblptrl
  6044  001B0C                     	if	1	;There is more than 1 active tblptr byte
  6045  001B0C  0E10               	movlw	high __smallconst
  6046  001B0E  6EF7               	movwf	tblptrh,c
  6047  001B10                     	endif
  6048  001B10                     	if	0	;tblptru may be non-zero
  6049  001B10                     	endif
  6050  001B10                     	if	0	;tblptru may be non-zero
  6051  001B10                     	endif
  6052  001B10  0009               	tblrd		*+
  6053  001B12  CFF5 F012          	movff	tablat,___ftmul@f2
  6054  001B16  0009               	tblrd		*+
  6055  001B18  CFF5 F013          	movff	tablat,___ftmul@f2+1
  6056  001B1C  000A               	tblrd		*-
  6057  001B1E  CFF5 F014          	movff	tablat,___ftmul@f2+2
  6058  001B22  0E64               	movlw	100
  6059  001B24  6E05               	movwf	___lbdiv@divisor^0,c
  6060  001B26  502B               	movf	fround@prec^0,w,c
  6061  001B28  EC05  F017         	call	___lbdiv
  6062  001B2C  0D03               	mullw	3
  6063  001B2E  CFF3 F023          	movff	prodl,??_fround+2
  6064  001B32  0E36               	movlw	54
  6065  001B34  2623               	addwf	(??_fround+2)^0,f,c
  6066  001B36  5023               	movf	(??_fround+2)^0,w,c
  6067  001B38  0F28               	addlw	low __npowers_
  6068  001B3A  6E24               	movwf	(??_fround+3)^0,c
  6069  001B3C  C024  FFF6         	movff	??_fround+3,tblptrl
  6070  001B40                     	if	1	;There is more than 1 active tblptr byte
  6071  001B40  0E10               	movlw	high __smallconst
  6072  001B42  6EF7               	movwf	tblptrh,c
  6073  001B44                     	endif
  6074  001B44                     	if	0	;tblptru may be non-zero
  6075  001B44                     	endif
  6076  001B44                     	if	0	;tblptru may be non-zero
  6077  001B44                     	endif
  6078  001B44  0009               	tblrd		*+
  6079  001B46  CFF5 F00F          	movff	tablat,___ftmul@f1
  6080  001B4A  0009               	tblrd		*+
  6081  001B4C  CFF5 F010          	movff	tablat,___ftmul@f1+1
  6082  001B50  000A               	tblrd		*-
  6083  001B52  CFF5 F011          	movff	tablat,___ftmul@f1+2
  6084  001B56  EC74  F010         	call	___ftmul	;wreg free
  6085  001B5A  C00F  F028         	movff	?___ftmul,_fround$1113
  6086  001B5E  C010  F029         	movff	?___ftmul+1,_fround$1113+1
  6087  001B62  C011  F02A         	movff	?___ftmul+2,_fround$1113+2
  6088                           
  6089                           ;doprnt.c: 422: return 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * 
      +                          _npowers_[prec%10U];
  6090  001B66  0E0A               	movlw	10
  6091  001B68  6E01               	movwf	___lbmod@divisor^0,c
  6092  001B6A  502B               	movf	fround@prec^0,w,c
  6093  001B6C  EC57  F017         	call	___lbmod
  6094  001B70  0D03               	mullw	3
  6095  001B72  50F3               	movf	243,w,c
  6096  001B74  0F28               	addlw	low __npowers_
  6097  001B76  6E21               	movwf	??_fround^0,c
  6098  001B78  C021  FFF6         	movff	??_fround,tblptrl
  6099  001B7C                     	if	1	;There is more than 1 active tblptr byte
  6100  001B7C  0E10               	movlw	high __smallconst
  6101  001B7E  6EF7               	movwf	tblptrh,c
  6102  001B80                     	endif
  6103  001B80                     	if	0	;tblptru may be non-zero
  6104  001B80                     	endif
  6105  001B80                     	if	0	;tblptru may be non-zero
  6106  001B80                     	endif
  6107  001B80  0009               	tblrd		*+
  6108  001B82  CFF5 F012          	movff	tablat,___ftmul@f2
  6109  001B86  0009               	tblrd		*+
  6110  001B88  CFF5 F013          	movff	tablat,___ftmul@f2+1
  6111  001B8C  000A               	tblrd		*-
  6112  001B8E  CFF5 F014          	movff	tablat,___ftmul@f2+2
  6113  001B92  C028  F00F         	movff	_fround$1113,___ftmul@f1
  6114  001B96  C029  F010         	movff	_fround$1113+1,___ftmul@f1+1
  6115  001B9A  C02A  F011         	movff	_fround$1113+2,___ftmul@f1+2
  6116  001B9E  EC74  F010         	call	___ftmul	;wreg free
  6117  001BA2  C00F  F025         	movff	?___ftmul,_fround$1114
  6118  001BA6  C010  F026         	movff	?___ftmul+1,_fround$1114+1
  6119  001BAA  C011  F027         	movff	?___ftmul+2,_fround$1114+2
  6120                           
  6121                           ;doprnt.c: 422: return 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * 
      +                          _npowers_[prec%10U];
  6122  001BAE  C025  F00F         	movff	_fround$1114,___ftmul@f1
  6123  001BB2  C026  F010         	movff	_fround$1114+1,___ftmul@f1+1
  6124  001BB6  C027  F011         	movff	_fround$1114+2,___ftmul@f1+2
  6125  001BBA  0E00               	movlw	0
  6126  001BBC  6E12               	movwf	___ftmul@f2^0,c
  6127  001BBE  0E00               	movlw	0
  6128  001BC0  6E13               	movwf	(___ftmul@f2+1)^0,c
  6129  001BC2  0E3F               	movlw	63
  6130  001BC4  6E14               	movwf	(___ftmul@f2+2)^0,c
  6131  001BC6  EC74  F010         	call	___ftmul	;wreg free
  6132  001BCA  C00F  F01E         	movff	?___ftmul,?_fround
  6133  001BCE  C010  F01F         	movff	?___ftmul+1,?_fround+1
  6134  001BD2  C011  F020         	movff	?___ftmul+2,?_fround+2
  6135  001BD6  0012               	return	
  6136  001BD8                     i2l3101:
  6137                           
  6138                           ;doprnt.c: 423: else if(prec > 10)
  6139  001BD8  0E0A               	movlw	10
  6140  001BDA  642B               	cpfsgt	fround@prec^0,c
  6141  001BDC  D04D               	goto	i2l3109
  6142                           
  6143                           ;doprnt.c: 424: return 0.5 * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  6144  001BDE  0E0A               	movlw	10
  6145  001BE0  6E01               	movwf	___lbmod@divisor^0,c
  6146  001BE2  502B               	movf	fround@prec^0,w,c
  6147  001BE4  EC57  F017         	call	___lbmod
  6148  001BE8  0D03               	mullw	3
  6149  001BEA  50F3               	movf	243,w,c
  6150  001BEC  0F28               	addlw	low __npowers_
  6151  001BEE  6E21               	movwf	??_fround^0,c
  6152  001BF0  C021  FFF6         	movff	??_fround,tblptrl
  6153  001BF4                     	if	1	;There is more than 1 active tblptr byte
  6154  001BF4  0E10               	movlw	high __smallconst
  6155  001BF6  6EF7               	movwf	tblptrh,c
  6156  001BF8                     	endif
  6157  001BF8                     	if	0	;tblptru may be non-zero
  6158  001BF8                     	endif
  6159  001BF8                     	if	0	;tblptru may be non-zero
  6160  001BF8                     	endif
  6161  001BF8  0009               	tblrd		*+
  6162  001BFA  CFF5 F012          	movff	tablat,___ftmul@f2
  6163  001BFE  0009               	tblrd		*+
  6164  001C00  CFF5 F013          	movff	tablat,___ftmul@f2+1
  6165  001C04  000A               	tblrd		*-
  6166  001C06  CFF5 F014          	movff	tablat,___ftmul@f2+2
  6167  001C0A  0E0A               	movlw	10
  6168  001C0C  6E05               	movwf	___lbdiv@divisor^0,c
  6169  001C0E  502B               	movf	fround@prec^0,w,c
  6170  001C10  EC05  F017         	call	___lbdiv
  6171  001C14  0D03               	mullw	3
  6172  001C16  CFF3 F022          	movff	prodl,??_fround+1
  6173  001C1A  0E1B               	movlw	27
  6174  001C1C  2622               	addwf	(??_fround+1)^0,f,c
  6175  001C1E  5022               	movf	(??_fround+1)^0,w,c
  6176  001C20  0F28               	addlw	low __npowers_
  6177  001C22  6E23               	movwf	(??_fround+2)^0,c
  6178  001C24  C023  FFF6         	movff	??_fround+2,tblptrl
  6179  001C28                     	if	1	;There is more than 1 active tblptr byte
  6180  001C28  0E10               	movlw	high __smallconst
  6181  001C2A  6EF7               	movwf	tblptrh,c
  6182  001C2C                     	endif
  6183  001C2C                     	if	0	;tblptru may be non-zero
  6184  001C2C                     	endif
  6185  001C2C                     	if	0	;tblptru may be non-zero
  6186  001C2C                     	endif
  6187  001C2C  0009               	tblrd		*+
  6188  001C2E  CFF5 F00F          	movff	tablat,___ftmul@f1
  6189  001C32  0009               	tblrd		*+
  6190  001C34  CFF5 F010          	movff	tablat,___ftmul@f1+1
  6191  001C38  000A               	tblrd		*-
  6192  001C3A  CFF5 F011          	movff	tablat,___ftmul@f1+2
  6193  001C3E  EC74  F010         	call	___ftmul	;wreg free
  6194  001C42  C00F  F028         	movff	?___ftmul,_fround$1113
  6195  001C46  C010  F029         	movff	?___ftmul+1,_fround$1113+1
  6196  001C4A  C011  F02A         	movff	?___ftmul+2,_fround$1113+2
  6197                           
  6198                           ;doprnt.c: 424: return 0.5 * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  6199  001C4E  C028  F00F         	movff	_fround$1113,___ftmul@f1
  6200  001C52  C029  F010         	movff	_fround$1113+1,___ftmul@f1+1
  6201  001C56  C02A  F011         	movff	_fround$1113+2,___ftmul@f1+2
  6202  001C5A  0E00               	movlw	0
  6203  001C5C  6E12               	movwf	___ftmul@f2^0,c
  6204  001C5E  0E00               	movlw	0
  6205  001C60  6E13               	movwf	(___ftmul@f2+1)^0,c
  6206  001C62  0E3F               	movlw	63
  6207  001C64  6E14               	movwf	(___ftmul@f2+2)^0,c
  6208  001C66  EC74  F010         	call	___ftmul	;wreg free
  6209  001C6A  C00F  F01E         	movff	?___ftmul,?_fround
  6210  001C6E  C010  F01F         	movff	?___ftmul+1,?_fround+1
  6211  001C72  C011  F020         	movff	?___ftmul+2,?_fround+2
  6212  001C76  0012               	return	
  6213  001C78                     i2l3109:
  6214                           
  6215                           ;doprnt.c: 425: return 0.5 * _npowers_[prec];
  6216  001C78  502B               	movf	fround@prec^0,w,c
  6217  001C7A  0D03               	mullw	3
  6218  001C7C  50F3               	movf	243,w,c
  6219  001C7E  0F28               	addlw	low __npowers_
  6220  001C80  6E21               	movwf	??_fround^0,c
  6221  001C82  C021  FFF6         	movff	??_fround,tblptrl
  6222  001C86                     	if	1	;There is more than 1 active tblptr byte
  6223  001C86  0E10               	movlw	high __smallconst
  6224  001C88  6EF7               	movwf	tblptrh,c
  6225  001C8A                     	endif
  6226  001C8A                     	if	0	;tblptru may be non-zero
  6227  001C8A                     	endif
  6228  001C8A                     	if	0	;tblptru may be non-zero
  6229  001C8A                     	endif
  6230  001C8A  0009               	tblrd		*+
  6231  001C8C  CFF5 F00F          	movff	tablat,___ftmul@f1
  6232  001C90  0009               	tblrd		*+
  6233  001C92  CFF5 F010          	movff	tablat,___ftmul@f1+1
  6234  001C96  000A               	tblrd		*-
  6235  001C98  CFF5 F011          	movff	tablat,___ftmul@f1+2
  6236  001C9C  0E00               	movlw	0
  6237  001C9E  6E12               	movwf	___ftmul@f2^0,c
  6238  001CA0  0E00               	movlw	0
  6239  001CA2  6E13               	movwf	(___ftmul@f2+1)^0,c
  6240  001CA4  0E3F               	movlw	63
  6241  001CA6  6E14               	movwf	(___ftmul@f2+2)^0,c
  6242  001CA8  EC74  F010         	call	___ftmul	;wreg free
  6243  001CAC  C00F  F01E         	movff	?___ftmul,?_fround
  6244  001CB0  C010  F01F         	movff	?___ftmul+1,?_fround+1
  6245  001CB4  C011  F020         	movff	?___ftmul+2,?_fround+2
  6246  001CB8  0012               	return		;funcret
  6247  001CBA                     __end_of_fround:
  6248                           	callstack 0
  6249                           
  6250 ;; *************** function ___lbmod *****************
  6251 ;; Defined at:
  6252 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\lbmod.c"
  6253 ;; Parameters:    Size  Location     Type
  6254 ;;  dividend        1    wreg     unsigned char 
  6255 ;;  divisor         1    0[COMRAM] unsigned char 
  6256 ;; Auto vars:     Size  Location     Type
  6257 ;;  dividend        1    1[COMRAM] unsigned char 
  6258 ;;  rem             1    3[COMRAM] unsigned char 
  6259 ;;  counter         1    2[COMRAM] unsigned char 
  6260 ;; Return value:  Size  Location     Type
  6261 ;;                  1    wreg      unsigned char 
  6262 ;; Registers used:
  6263 ;;		wreg, status,2, status,0
  6264 ;; Tracked objects:
  6265 ;;		On entry : 0/0
  6266 ;;		On exit  : 0/0
  6267 ;;		Unchanged: 0/0
  6268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6269 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6270 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6271 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6272 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6273 ;;Total ram usage:        4 bytes
  6274 ;; Hardware stack levels used: 1
  6275 ;; This function calls:
  6276 ;;		Nothing
  6277 ;; This function is called by:
  6278 ;;		_fround
  6279 ;; This function uses a non-reentrant model
  6280 ;;
  6281                           
  6282                           	psect	text33
  6283  002EAE                     __ptext33:
  6284                           	callstack 0
  6285  002EAE                     ___lbmod:
  6286                           	callstack 22
  6287                           
  6288                           ;incstack = 0
  6289                           ;___lbmod@dividend stored from wreg
  6290  002EAE  6E02               	movwf	___lbmod@dividend^0,c
  6291  002EB0  0E08               	movlw	8
  6292  002EB2  6E03               	movwf	___lbmod@counter^0,c
  6293  002EB4  0E00               	movlw	0
  6294  002EB6  6E04               	movwf	___lbmod@rem^0,c
  6295  002EB8                     i2l2985:
  6296  002EB8  90D8               	bcf	status,0,c
  6297  002EBA  3402               	rlcf	___lbmod@dividend^0,w,c
  6298  002EBC  3404               	rlcf	___lbmod@rem^0,w,c
  6299  002EBE  6E04               	movwf	___lbmod@rem^0,c
  6300  002EC0  90D8               	bcf	status,0,c
  6301  002EC2  3602               	rlcf	___lbmod@dividend^0,f,c
  6302  002EC4  5001               	movf	___lbmod@divisor^0,w,c
  6303  002EC6  5C04               	subwf	___lbmod@rem^0,w,c
  6304  002EC8  A0D8               	btfss	status,0,c
  6305  002ECA  D002               	goto	i2l2993
  6306  002ECC  5001               	movf	___lbmod@divisor^0,w,c
  6307  002ECE  5E04               	subwf	___lbmod@rem^0,f,c
  6308  002ED0                     i2l2993:
  6309  002ED0  2E03               	decfsz	___lbmod@counter^0,f,c
  6310  002ED2  D7F2               	goto	i2l2985
  6311  002ED4  5004               	movf	___lbmod@rem^0,w,c
  6312  002ED6  0012               	return		;funcret
  6313  002ED8                     __end_of___lbmod:
  6314                           	callstack 0
  6315                           
  6316 ;; *************** function ___lbdiv *****************
  6317 ;; Defined at:
  6318 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\lbdiv.c"
  6319 ;; Parameters:    Size  Location     Type
  6320 ;;  dividend        1    wreg     unsigned char 
  6321 ;;  divisor         1    4[COMRAM] unsigned char 
  6322 ;; Auto vars:     Size  Location     Type
  6323 ;;  dividend        1    5[COMRAM] unsigned char 
  6324 ;;  quotient        1    7[COMRAM] unsigned char 
  6325 ;;  counter         1    6[COMRAM] unsigned char 
  6326 ;; Return value:  Size  Location     Type
  6327 ;;                  1    wreg      unsigned char 
  6328 ;; Registers used:
  6329 ;;		wreg, status,2, status,0
  6330 ;; Tracked objects:
  6331 ;;		On entry : 0/0
  6332 ;;		On exit  : 0/0
  6333 ;;		Unchanged: 0/0
  6334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6335 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6336 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6337 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6338 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6339 ;;Total ram usage:        4 bytes
  6340 ;; Hardware stack levels used: 1
  6341 ;; This function calls:
  6342 ;;		Nothing
  6343 ;; This function is called by:
  6344 ;;		_fround
  6345 ;; This function uses a non-reentrant model
  6346 ;;
  6347                           
  6348                           	psect	text34
  6349  002E0A                     __ptext34:
  6350                           	callstack 0
  6351  002E0A                     ___lbdiv:
  6352                           	callstack 22
  6353                           
  6354                           ;incstack = 0
  6355                           ;___lbdiv@dividend stored from wreg
  6356  002E0A  6E06               	movwf	___lbdiv@dividend^0,c
  6357  002E0C  0E00               	movlw	0
  6358  002E0E  6E08               	movwf	___lbdiv@quotient^0,c
  6359  002E10  5005               	movf	___lbdiv@divisor^0,w,c
  6360  002E12  B4D8               	btfsc	status,2,c
  6361  002E14  D015               	goto	i2l2979
  6362  002E16  0E01               	movlw	1
  6363  002E18  6E07               	movwf	___lbdiv@counter^0,c
  6364  002E1A  D003               	goto	i2l2967
  6365  002E1C                     i2l2963:
  6366  002E1C  90D8               	bcf	status,0,c
  6367  002E1E  3605               	rlcf	___lbdiv@divisor^0,f,c
  6368  002E20  2A07               	incf	___lbdiv@counter^0,f,c
  6369  002E22                     i2l2967:
  6370  002E22  AE05               	btfss	___lbdiv@divisor^0,7,c
  6371  002E24  D7FB               	goto	i2l2963
  6372  002E26                     i2u271_40:
  6373  002E26  90D8               	bcf	status,0,c
  6374  002E28  3608               	rlcf	___lbdiv@quotient^0,f,c
  6375  002E2A  5005               	movf	___lbdiv@divisor^0,w,c
  6376  002E2C  5C06               	subwf	___lbdiv@dividend^0,w,c
  6377  002E2E  A0D8               	btfss	status,0,c
  6378  002E30  D003               	goto	i2l2975
  6379  002E32  5005               	movf	___lbdiv@divisor^0,w,c
  6380  002E34  5E06               	subwf	___lbdiv@dividend^0,f,c
  6381  002E36  8008               	bsf	___lbdiv@quotient^0,0,c
  6382  002E38                     i2l2975:
  6383  002E38  90D8               	bcf	status,0,c
  6384  002E3A  3205               	rrcf	___lbdiv@divisor^0,f,c
  6385  002E3C  2E07               	decfsz	___lbdiv@counter^0,f,c
  6386  002E3E  D7F3               	goto	i2u271_40
  6387  002E40                     i2l2979:
  6388  002E40  5008               	movf	___lbdiv@quotient^0,w,c
  6389  002E42  0012               	return		;funcret
  6390  002E44                     __end_of___lbdiv:
  6391                           	callstack 0
  6392                           
  6393 ;; *************** function ___ftmul *****************
  6394 ;; Defined at:
  6395 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\ftmul.c"
  6396 ;; Parameters:    Size  Location     Type
  6397 ;;  f1              3   14[COMRAM] float 
  6398 ;;  f2              3   17[COMRAM] float 
  6399 ;; Auto vars:     Size  Location     Type
  6400 ;;  f3_as_produc    3   24[COMRAM] unsigned um
  6401 ;;  sign            1   28[COMRAM] unsigned char 
  6402 ;;  cntr            1   27[COMRAM] unsigned char 
  6403 ;;  exp             1   23[COMRAM] unsigned char 
  6404 ;; Return value:  Size  Location     Type
  6405 ;;                  3   14[COMRAM] float 
  6406 ;; Registers used:
  6407 ;;		wreg, status,2, status,0, cstack
  6408 ;; Tracked objects:
  6409 ;;		On entry : 0/0
  6410 ;;		On exit  : 0/0
  6411 ;;		Unchanged: 0/0
  6412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6413 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6414 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6415 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6416 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6417 ;;Total ram usage:       15 bytes
  6418 ;; Hardware stack levels used: 1
  6419 ;; Hardware stack levels required when called: 1
  6420 ;; This function calls:
  6421 ;;		i2___ftpack
  6422 ;; This function is called by:
  6423 ;;		_TMR1_ISR
  6424 ;;		_fround
  6425 ;;		_scale
  6426 ;;		_sprintf
  6427 ;; This function uses a non-reentrant model
  6428 ;;
  6429                           
  6430                           	psect	text35
  6431  0020E8                     __ptext35:
  6432                           	callstack 0
  6433  0020E8                     ___ftmul:
  6434                           	callstack 21
  6435                           
  6436                           ;incstack = 0
  6437  0020E8  C011  F015         	movff	___ftmul@f1+2,??___ftmul
  6438  0020EC  6A16               	clrf	(??___ftmul+1)^0,c
  6439  0020EE  6A17               	clrf	(??___ftmul+2)^0,c
  6440  0020F0  3410               	rlcf	(___ftmul@f1+1)^0,w,c
  6441  0020F2  3615               	rlcf	??___ftmul^0,f,c
  6442  0020F4  E301               	bnc	u241_41
  6443  0020F6  8016               	bsf	(??___ftmul+1)^0,0,c
  6444  0020F8                     u241_41:
  6445  0020F8  5015               	movf	??___ftmul^0,w,c
  6446  0020FA  6E18               	movwf	___ftmul@exp^0,c
  6447  0020FC  5018               	movf	___ftmul@exp^0,w,c
  6448  0020FE  A4D8               	btfss	status,2,c
  6449  002100  D007               	goto	i2l2771
  6450  002102  0E00               	movlw	0
  6451  002104  6E0F               	movwf	?___ftmul^0,c
  6452  002106  0E00               	movlw	0
  6453  002108  6E10               	movwf	(?___ftmul+1)^0,c
  6454  00210A  0E00               	movlw	0
  6455  00210C  6E11               	movwf	(?___ftmul+2)^0,c
  6456  00210E  0012               	return	
  6457  002110                     i2l2771:
  6458  002110  C014  F015         	movff	___ftmul@f2+2,??___ftmul
  6459  002114  6A16               	clrf	(??___ftmul+1)^0,c
  6460  002116  6A17               	clrf	(??___ftmul+2)^0,c
  6461  002118  3413               	rlcf	(___ftmul@f2+1)^0,w,c
  6462  00211A  3615               	rlcf	??___ftmul^0,f,c
  6463  00211C  E301               	bnc	u243_41
  6464  00211E  8016               	bsf	(??___ftmul+1)^0,0,c
  6465  002120                     u243_41:
  6466  002120  5015               	movf	??___ftmul^0,w,c
  6467  002122  6E1D               	movwf	___ftmul@sign^0,c
  6468  002124  501D               	movf	___ftmul@sign^0,w,c
  6469  002126  A4D8               	btfss	status,2,c
  6470  002128  D007               	goto	i2l2777
  6471  00212A  0E00               	movlw	0
  6472  00212C  6E0F               	movwf	?___ftmul^0,c
  6473  00212E  0E00               	movlw	0
  6474  002130  6E10               	movwf	(?___ftmul+1)^0,c
  6475  002132  0E00               	movlw	0
  6476  002134  6E11               	movwf	(?___ftmul+2)^0,c
  6477  002136  0012               	return	
  6478  002138                     i2l2777:
  6479  002138  501D               	movf	___ftmul@sign^0,w,c
  6480  00213A  0F7B               	addlw	123
  6481  00213C  2618               	addwf	___ftmul@exp^0,f,c
  6482  00213E  C011  F01D         	movff	___ftmul@f1+2,___ftmul@sign
  6483  002142  5014               	movf	(___ftmul@f2+2)^0,w,c
  6484  002144  1A1D               	xorwf	___ftmul@sign^0,f,c
  6485  002146  0E80               	movlw	128
  6486  002148  161D               	andwf	___ftmul@sign^0,f,c
  6487  00214A  8E10               	bsf	(___ftmul@f1+1)^0,7,c
  6488  00214C  8E13               	bsf	(___ftmul@f2+1)^0,7,c
  6489  00214E  0EFF               	movlw	255
  6490  002150  1612               	andwf	___ftmul@f2^0,f,c
  6491  002152  0EFF               	movlw	255
  6492  002154  1613               	andwf	(___ftmul@f2+1)^0,f,c
  6493  002156  0E00               	movlw	0
  6494  002158  1614               	andwf	(___ftmul@f2+2)^0,f,c
  6495  00215A  0E00               	movlw	0
  6496  00215C  6E19               	movwf	___ftmul@f3_as_product^0,c
  6497  00215E  0E00               	movlw	0
  6498  002160  6E1A               	movwf	(___ftmul@f3_as_product+1)^0,c
  6499  002162  0E00               	movlw	0
  6500  002164  6E1B               	movwf	(___ftmul@f3_as_product+2)^0,c
  6501  002166  0E07               	movlw	7
  6502  002168  6E1C               	movwf	___ftmul@cntr^0,c
  6503  00216A                     i2l2791:
  6504  00216A  A00F               	btfss	___ftmul@f1^0,0,c
  6505  00216C  D006               	goto	i2l2795
  6506  00216E  5012               	movf	___ftmul@f2^0,w,c
  6507  002170  2619               	addwf	___ftmul@f3_as_product^0,f,c
  6508  002172  5013               	movf	(___ftmul@f2+1)^0,w,c
  6509  002174  221A               	addwfc	(___ftmul@f3_as_product+1)^0,f,c
  6510  002176  5014               	movf	(___ftmul@f2+2)^0,w,c
  6511  002178  221B               	addwfc	(___ftmul@f3_as_product+2)^0,f,c
  6512  00217A                     i2l2795:
  6513  00217A  90D8               	bcf	status,0,c
  6514  00217C  3211               	rrcf	(___ftmul@f1+2)^0,f,c
  6515  00217E  3210               	rrcf	(___ftmul@f1+1)^0,f,c
  6516  002180  320F               	rrcf	___ftmul@f1^0,f,c
  6517  002182  90D8               	bcf	status,0,c
  6518  002184  3612               	rlcf	___ftmul@f2^0,f,c
  6519  002186  3613               	rlcf	(___ftmul@f2+1)^0,f,c
  6520  002188  3614               	rlcf	(___ftmul@f2+2)^0,f,c
  6521  00218A  2E1C               	decfsz	___ftmul@cntr^0,f,c
  6522  00218C  D7EE               	goto	i2l2791
  6523  00218E  0E09               	movlw	9
  6524  002190  6E1C               	movwf	___ftmul@cntr^0,c
  6525  002192                     i2l2801:
  6526  002192  A00F               	btfss	___ftmul@f1^0,0,c
  6527  002194  D006               	goto	i2l2805
  6528  002196  5012               	movf	___ftmul@f2^0,w,c
  6529  002198  2619               	addwf	___ftmul@f3_as_product^0,f,c
  6530  00219A  5013               	movf	(___ftmul@f2+1)^0,w,c
  6531  00219C  221A               	addwfc	(___ftmul@f3_as_product+1)^0,f,c
  6532  00219E  5014               	movf	(___ftmul@f2+2)^0,w,c
  6533  0021A0  221B               	addwfc	(___ftmul@f3_as_product+2)^0,f,c
  6534  0021A2                     i2l2805:
  6535  0021A2  90D8               	bcf	status,0,c
  6536  0021A4  3211               	rrcf	(___ftmul@f1+2)^0,f,c
  6537  0021A6  3210               	rrcf	(___ftmul@f1+1)^0,f,c
  6538  0021A8  320F               	rrcf	___ftmul@f1^0,f,c
  6539  0021AA  90D8               	bcf	status,0,c
  6540  0021AC  321B               	rrcf	(___ftmul@f3_as_product+2)^0,f,c
  6541  0021AE  321A               	rrcf	(___ftmul@f3_as_product+1)^0,f,c
  6542  0021B0  3219               	rrcf	___ftmul@f3_as_product^0,f,c
  6543  0021B2  2E1C               	decfsz	___ftmul@cntr^0,f,c
  6544  0021B4  D7EE               	goto	i2l2801
  6545  0021B6  C019  F001         	movff	___ftmul@f3_as_product,i2___ftpack@arg
  6546  0021BA  C01A  F002         	movff	___ftmul@f3_as_product+1,i2___ftpack@arg+1
  6547  0021BE  C01B  F003         	movff	___ftmul@f3_as_product+2,i2___ftpack@arg+2
  6548  0021C2  C018  F004         	movff	___ftmul@exp,i2___ftpack@exp
  6549  0021C6  C01D  F005         	movff	___ftmul@sign,i2___ftpack@sign
  6550  0021CA  EC6F  F013         	call	i2___ftpack	;wreg free
  6551  0021CE  C001  F00F         	movff	?i2___ftpack,?___ftmul
  6552  0021D2  C002  F010         	movff	?i2___ftpack+1,?___ftmul+1
  6553  0021D6  C003  F011         	movff	?i2___ftpack+2,?___ftmul+2
  6554  0021DA  0012               	return		;funcret
  6555  0021DC                     __end_of___ftmul:
  6556                           	callstack 0
  6557                           
  6558 ;; *************** function __tdiv_to_l_ *****************
  6559 ;; Defined at:
  6560 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\ftdivl.c"
  6561 ;; Parameters:    Size  Location     Type
  6562 ;;  f1              3    0[COMRAM] float 
  6563 ;;  f2              3    3[COMRAM] float 
  6564 ;; Auto vars:     Size  Location     Type
  6565 ;;  quot            4    9[COMRAM] unsigned long 
  6566 ;;  exp1            1   14[COMRAM] unsigned char 
  6567 ;;  cntr            1   13[COMRAM] unsigned char 
  6568 ;; Return value:  Size  Location     Type
  6569 ;;                  4    0[COMRAM] unsigned long 
  6570 ;; Registers used:
  6571 ;;		wreg, status,2, status,0
  6572 ;; Tracked objects:
  6573 ;;		On entry : 0/0
  6574 ;;		On exit  : 0/0
  6575 ;;		Unchanged: 0/0
  6576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6577 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6578 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6579 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6580 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6581 ;;Total ram usage:       15 bytes
  6582 ;; Hardware stack levels used: 1
  6583 ;; This function calls:
  6584 ;;		Nothing
  6585 ;; This function is called by:
  6586 ;;		_sprintf
  6587 ;; This function uses a non-reentrant model
  6588 ;;
  6589                           
  6590                           	psect	text36
  6591  001FEA                     __ptext36:
  6592                           	callstack 0
  6593  001FEA                     __tdiv_to_l_:
  6594                           	callstack 23
  6595                           
  6596                           ;incstack = 0
  6597  001FEA  C003  F007         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
  6598  001FEE  6A08               	clrf	(??__tdiv_to_l_+1)^0,c
  6599  001FF0  6A09               	clrf	(??__tdiv_to_l_+2)^0,c
  6600  001FF2  3402               	rlcf	(__tdiv_to_l_@f1+1)^0,w,c
  6601  001FF4  3607               	rlcf	??__tdiv_to_l_^0,f,c
  6602  001FF6  E301               	bnc	u292_41
  6603  001FF8  8008               	bsf	(??__tdiv_to_l_+1)^0,0,c
  6604  001FFA                     u292_41:
  6605  001FFA  5007               	movf	??__tdiv_to_l_^0,w,c
  6606  001FFC  6E0F               	movwf	__tdiv_to_l_@exp1^0,c
  6607  001FFE  500F               	movf	__tdiv_to_l_@exp1^0,w,c
  6608  002000  A4D8               	btfss	status,2,c
  6609  002002  D009               	goto	i2l3169
  6610  002004                     i2u293_40:
  6611  002004  0E00               	movlw	0
  6612  002006  6E01               	movwf	?__tdiv_to_l_^0,c
  6613  002008  0E00               	movlw	0
  6614  00200A  6E02               	movwf	(?__tdiv_to_l_+1)^0,c
  6615  00200C  0E00               	movlw	0
  6616  00200E  6E03               	movwf	(?__tdiv_to_l_+2)^0,c
  6617  002010  0E00               	movlw	0
  6618  002012  6E04               	movwf	(?__tdiv_to_l_+3)^0,c
  6619  002014  0012               	return	
  6620  002016                     i2l3169:
  6621  002016  C006  F007         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
  6622  00201A  6A08               	clrf	(??__tdiv_to_l_+1)^0,c
  6623  00201C  6A09               	clrf	(??__tdiv_to_l_+2)^0,c
  6624  00201E  3405               	rlcf	(__tdiv_to_l_@f2+1)^0,w,c
  6625  002020  3607               	rlcf	??__tdiv_to_l_^0,f,c
  6626  002022  E301               	bnc	u294_41
  6627  002024  8008               	bsf	(??__tdiv_to_l_+1)^0,0,c
  6628  002026                     u294_41:
  6629  002026  5007               	movf	??__tdiv_to_l_^0,w,c
  6630  002028  6E0E               	movwf	__tdiv_to_l_@cntr^0,c
  6631  00202A  500E               	movf	__tdiv_to_l_@cntr^0,w,c
  6632  00202C  B4D8               	btfsc	status,2,c
  6633  00202E  D7EA               	goto	i2u293_40
  6634  002030  8E02               	bsf	(__tdiv_to_l_@f1+1)^0,7,c
  6635  002032  0EFF               	movlw	255
  6636  002034  1601               	andwf	__tdiv_to_l_@f1^0,f,c
  6637  002036  0EFF               	movlw	255
  6638  002038  1602               	andwf	(__tdiv_to_l_@f1+1)^0,f,c
  6639  00203A  0E00               	movlw	0
  6640  00203C  1603               	andwf	(__tdiv_to_l_@f1+2)^0,f,c
  6641  00203E  8E05               	bsf	(__tdiv_to_l_@f2+1)^0,7,c
  6642  002040  0EFF               	movlw	255
  6643  002042  1604               	andwf	__tdiv_to_l_@f2^0,f,c
  6644  002044  0EFF               	movlw	255
  6645  002046  1605               	andwf	(__tdiv_to_l_@f2+1)^0,f,c
  6646  002048  0E00               	movlw	0
  6647  00204A  1606               	andwf	(__tdiv_to_l_@f2+2)^0,f,c
  6648  00204C  0E00               	movlw	0
  6649  00204E  6E0A               	movwf	__tdiv_to_l_@quot^0,c
  6650  002050  0E00               	movlw	0
  6651  002052  6E0B               	movwf	(__tdiv_to_l_@quot+1)^0,c
  6652  002054  0E00               	movlw	0
  6653  002056  6E0C               	movwf	(__tdiv_to_l_@quot+2)^0,c
  6654  002058  0E00               	movlw	0
  6655  00205A  6E0D               	movwf	(__tdiv_to_l_@quot+3)^0,c
  6656  00205C  0E7F               	movlw	127
  6657  00205E  5E0F               	subwf	__tdiv_to_l_@exp1^0,f,c
  6658  002060  500E               	movf	__tdiv_to_l_@cntr^0,w,c
  6659  002062  0F98               	addlw	152
  6660  002064  5E0F               	subwf	__tdiv_to_l_@exp1^0,f,c
  6661  002066  0E18               	movlw	24
  6662  002068  6E0E               	movwf	__tdiv_to_l_@cntr^0,c
  6663  00206A                     i2l688:
  6664  00206A  90D8               	bcf	status,0,c
  6665  00206C  360A               	rlcf	__tdiv_to_l_@quot^0,f,c
  6666  00206E  360B               	rlcf	(__tdiv_to_l_@quot+1)^0,f,c
  6667  002070  360C               	rlcf	(__tdiv_to_l_@quot+2)^0,f,c
  6668  002072  360D               	rlcf	(__tdiv_to_l_@quot+3)^0,f,c
  6669  002074  5004               	movf	__tdiv_to_l_@f2^0,w,c
  6670  002076  5C01               	subwf	__tdiv_to_l_@f1^0,w,c
  6671  002078  5005               	movf	(__tdiv_to_l_@f2+1)^0,w,c
  6672  00207A  5802               	subwfb	(__tdiv_to_l_@f1+1)^0,w,c
  6673  00207C  5006               	movf	(__tdiv_to_l_@f2+2)^0,w,c
  6674  00207E  5803               	subwfb	(__tdiv_to_l_@f1+2)^0,w,c
  6675  002080  A0D8               	btfss	status,0,c
  6676  002082  D007               	goto	i2l689
  6677  002084  5004               	movf	__tdiv_to_l_@f2^0,w,c
  6678  002086  5E01               	subwf	__tdiv_to_l_@f1^0,f,c
  6679  002088  5005               	movf	(__tdiv_to_l_@f2+1)^0,w,c
  6680  00208A  5A02               	subwfb	(__tdiv_to_l_@f1+1)^0,f,c
  6681  00208C  5006               	movf	(__tdiv_to_l_@f2+2)^0,w,c
  6682  00208E  5A03               	subwfb	(__tdiv_to_l_@f1+2)^0,f,c
  6683  002090  800A               	bsf	__tdiv_to_l_@quot^0,0,c
  6684  002092                     i2l689:
  6685  002092  90D8               	bcf	status,0,c
  6686  002094  3601               	rlcf	__tdiv_to_l_@f1^0,f,c
  6687  002096  3602               	rlcf	(__tdiv_to_l_@f1+1)^0,f,c
  6688  002098  3603               	rlcf	(__tdiv_to_l_@f1+2)^0,f,c
  6689  00209A  2E0E               	decfsz	__tdiv_to_l_@cntr^0,f,c
  6690  00209C  D7E6               	goto	i2l688
  6691  00209E  AE0F               	btfss	__tdiv_to_l_@exp1^0,7,c
  6692  0020A0  D00D               	goto	i2l3209
  6693  0020A2  500F               	movf	__tdiv_to_l_@exp1^0,w,c
  6694  0020A4  0A80               	xorlw	128
  6695  0020A6  0F97               	addlw	151
  6696  0020A8  A0D8               	btfss	status,0,c
  6697  0020AA  D7AC               	goto	i2u293_40
  6698  0020AC                     i2l3205:
  6699  0020AC  90D8               	bcf	status,0,c
  6700  0020AE  320D               	rrcf	(__tdiv_to_l_@quot+3)^0,f,c
  6701  0020B0  320C               	rrcf	(__tdiv_to_l_@quot+2)^0,f,c
  6702  0020B2  320B               	rrcf	(__tdiv_to_l_@quot+1)^0,f,c
  6703  0020B4  320A               	rrcf	__tdiv_to_l_@quot^0,f,c
  6704  0020B6  3E0F               	incfsz	__tdiv_to_l_@exp1^0,f,c
  6705  0020B8  D7F9               	goto	i2l3205
  6706  0020BA  D00D               	goto	i2u300_40
  6707  0020BC                     i2l3209:
  6708  0020BC  0E17               	movlw	23
  6709  0020BE  640F               	cpfsgt	__tdiv_to_l_@exp1^0,c
  6710  0020C0  D007               	goto	i2l3217
  6711  0020C2  D7A0               	goto	i2u293_40
  6712  0020C4                     i2l3215:
  6713  0020C4  90D8               	bcf	status,0,c
  6714  0020C6  360A               	rlcf	__tdiv_to_l_@quot^0,f,c
  6715  0020C8  360B               	rlcf	(__tdiv_to_l_@quot+1)^0,f,c
  6716  0020CA  360C               	rlcf	(__tdiv_to_l_@quot+2)^0,f,c
  6717  0020CC  360D               	rlcf	(__tdiv_to_l_@quot+3)^0,f,c
  6718  0020CE  060F               	decf	__tdiv_to_l_@exp1^0,f,c
  6719  0020D0                     i2l3217:
  6720  0020D0  500F               	movf	__tdiv_to_l_@exp1^0,w,c
  6721  0020D2  A4D8               	btfss	status,2,c
  6722  0020D4  D7F7               	goto	i2l3215
  6723  0020D6                     i2u300_40:
  6724  0020D6  C00A  F001         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
  6725  0020DA  C00B  F002         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
  6726  0020DE  C00C  F003         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
  6727  0020E2  C00D  F004         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
  6728  0020E6  0012               	return		;funcret
  6729  0020E8                     __end_of__tdiv_to_l_:
  6730                           	callstack 0
  6731                           
  6732 ;; *************** function __div_to_l_ *****************
  6733 ;; Defined at:
  6734 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\fldivl.c"
  6735 ;; Parameters:    Size  Location     Type
  6736 ;;  f1              3    0[COMRAM] unsigned long 
  6737 ;;  f2              3    3[COMRAM] unsigned long 
  6738 ;; Auto vars:     Size  Location     Type
  6739 ;;  quot            4    6[COMRAM] unsigned long 
  6740 ;;  exp1            1   11[COMRAM] unsigned char 
  6741 ;;  cntr            1   10[COMRAM] unsigned char 
  6742 ;; Return value:  Size  Location     Type
  6743 ;;                  4    0[COMRAM] unsigned long 
  6744 ;; Registers used:
  6745 ;;		wreg, status,2, status,0
  6746 ;; Tracked objects:
  6747 ;;		On entry : 0/0
  6748 ;;		On exit  : 0/0
  6749 ;;		Unchanged: 0/0
  6750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6751 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6752 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6753 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6754 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6755 ;;Total ram usage:       12 bytes
  6756 ;; Hardware stack levels used: 1
  6757 ;; This function calls:
  6758 ;;		Nothing
  6759 ;; This function is called by:
  6760 ;;		_sprintf
  6761 ;; This function uses a non-reentrant model
  6762 ;;
  6763                           
  6764                           	psect	text37
  6765  0021DC                     __ptext37:
  6766                           	callstack 0
  6767  0021DC                     __div_to_l_:
  6768                           	callstack 23
  6769                           
  6770                           ;incstack = 0
  6771  0021DC  3403               	rlcf	(__div_to_l_@f1+2)^0,w,c
  6772  0021DE  3404               	rlcf	(__div_to_l_@f1+3)^0,w,c
  6773  0021E0  6E0C               	movwf	__div_to_l_@exp1^0,c
  6774  0021E2  500C               	movf	__div_to_l_@exp1^0,w,c
  6775  0021E4  A4D8               	btfss	status,2,c
  6776  0021E6  D009               	goto	i2l3225
  6777  0021E8                     i2u301_40:
  6778  0021E8  0E00               	movlw	0
  6779  0021EA  6E01               	movwf	?__div_to_l_^0,c
  6780  0021EC  0E00               	movlw	0
  6781  0021EE  6E02               	movwf	(?__div_to_l_+1)^0,c
  6782  0021F0  0E00               	movlw	0
  6783  0021F2  6E03               	movwf	(?__div_to_l_+2)^0,c
  6784  0021F4  0E00               	movlw	0
  6785  0021F6  6E04               	movwf	(?__div_to_l_+3)^0,c
  6786  0021F8  0012               	return	
  6787  0021FA                     i2l3225:
  6788  0021FA  3406               	rlcf	(__div_to_l_@f2+2)^0,w,c
  6789  0021FC  3407               	rlcf	(__div_to_l_@f2+3)^0,w,c
  6790  0021FE  6E0B               	movwf	__div_to_l_@cntr^0,c
  6791  002200  500B               	movf	__div_to_l_@cntr^0,w,c
  6792  002202  B4D8               	btfsc	status,2,c
  6793  002204  D7F1               	goto	i2u301_40
  6794  002206  8E03               	bsf	(__div_to_l_@f1+2)^0,7,c
  6795  002208  0EFF               	movlw	255
  6796  00220A  1601               	andwf	__div_to_l_@f1^0,f,c
  6797  00220C  0EFF               	movlw	255
  6798  00220E  1602               	andwf	(__div_to_l_@f1+1)^0,f,c
  6799  002210  0EFF               	movlw	255
  6800  002212  1603               	andwf	(__div_to_l_@f1+2)^0,f,c
  6801  002214  0E00               	movlw	0
  6802  002216  1604               	andwf	(__div_to_l_@f1+3)^0,f,c
  6803  002218  8E06               	bsf	(__div_to_l_@f2+2)^0,7,c
  6804  00221A  0EFF               	movlw	255
  6805  00221C  1604               	andwf	__div_to_l_@f2^0,f,c
  6806  00221E  0EFF               	movlw	255
  6807  002220  1605               	andwf	(__div_to_l_@f2+1)^0,f,c
  6808  002222  0EFF               	movlw	255
  6809  002224  1606               	andwf	(__div_to_l_@f2+2)^0,f,c
  6810  002226  0E00               	movlw	0
  6811  002228  1607               	andwf	(__div_to_l_@f2+3)^0,f,c
  6812  00222A  0E00               	movlw	0
  6813  00222C  6E07               	movwf	__div_to_l_@quot^0,c
  6814  00222E  0E00               	movlw	0
  6815  002230  6E08               	movwf	(__div_to_l_@quot+1)^0,c
  6816  002232  0E00               	movlw	0
  6817  002234  6E09               	movwf	(__div_to_l_@quot+2)^0,c
  6818  002236  0E00               	movlw	0
  6819  002238  6E0A               	movwf	(__div_to_l_@quot+3)^0,c
  6820  00223A  0E7F               	movlw	127
  6821  00223C  5E0C               	subwf	__div_to_l_@exp1^0,f,c
  6822  00223E  500B               	movf	__div_to_l_@cntr^0,w,c
  6823  002240  0FA0               	addlw	160
  6824  002242  5E0C               	subwf	__div_to_l_@exp1^0,f,c
  6825  002244  0E20               	movlw	32
  6826  002246  6E0B               	movwf	__div_to_l_@cntr^0,c
  6827  002248                     i2l3245:
  6828  002248  90D8               	bcf	status,0,c
  6829  00224A  3607               	rlcf	__div_to_l_@quot^0,f,c
  6830  00224C  3608               	rlcf	(__div_to_l_@quot+1)^0,f,c
  6831  00224E  3609               	rlcf	(__div_to_l_@quot+2)^0,f,c
  6832  002250  360A               	rlcf	(__div_to_l_@quot+3)^0,f,c
  6833  002252  5004               	movf	__div_to_l_@f2^0,w,c
  6834  002254  5C01               	subwf	__div_to_l_@f1^0,w,c
  6835  002256  5005               	movf	(__div_to_l_@f2+1)^0,w,c
  6836  002258  5802               	subwfb	(__div_to_l_@f1+1)^0,w,c
  6837  00225A  5006               	movf	(__div_to_l_@f2+2)^0,w,c
  6838  00225C  5803               	subwfb	(__div_to_l_@f1+2)^0,w,c
  6839  00225E  5007               	movf	(__div_to_l_@f2+3)^0,w,c
  6840  002260  5804               	subwfb	(__div_to_l_@f1+3)^0,w,c
  6841  002262  A0D8               	btfss	status,0,c
  6842  002264  D009               	goto	i2l3253
  6843  002266  5004               	movf	__div_to_l_@f2^0,w,c
  6844  002268  5E01               	subwf	__div_to_l_@f1^0,f,c
  6845  00226A  5005               	movf	(__div_to_l_@f2+1)^0,w,c
  6846  00226C  5A02               	subwfb	(__div_to_l_@f1+1)^0,f,c
  6847  00226E  5006               	movf	(__div_to_l_@f2+2)^0,w,c
  6848  002270  5A03               	subwfb	(__div_to_l_@f1+2)^0,f,c
  6849  002272  5007               	movf	(__div_to_l_@f2+3)^0,w,c
  6850  002274  5A04               	subwfb	(__div_to_l_@f1+3)^0,f,c
  6851  002276  8007               	bsf	__div_to_l_@quot^0,0,c
  6852  002278                     i2l3253:
  6853  002278  90D8               	bcf	status,0,c
  6854  00227A  3601               	rlcf	__div_to_l_@f1^0,f,c
  6855  00227C  3602               	rlcf	(__div_to_l_@f1+1)^0,f,c
  6856  00227E  3603               	rlcf	(__div_to_l_@f1+2)^0,f,c
  6857  002280  3604               	rlcf	(__div_to_l_@f1+3)^0,f,c
  6858  002282  2E0B               	decfsz	__div_to_l_@cntr^0,f,c
  6859  002284  D7E1               	goto	i2l3245
  6860  002286  AE0C               	btfss	__div_to_l_@exp1^0,7,c
  6861  002288  D00D               	goto	i2l3269
  6862  00228A  500C               	movf	__div_to_l_@exp1^0,w,c
  6863  00228C  0A80               	xorlw	128
  6864  00228E  0F9F               	addlw	159
  6865  002290  A0D8               	btfss	status,0,c
  6866  002292  D7AA               	goto	i2u301_40
  6867  002294                     i2l3265:
  6868  002294  90D8               	bcf	status,0,c
  6869  002296  320A               	rrcf	(__div_to_l_@quot+3)^0,f,c
  6870  002298  3209               	rrcf	(__div_to_l_@quot+2)^0,f,c
  6871  00229A  3208               	rrcf	(__div_to_l_@quot+1)^0,f,c
  6872  00229C  3207               	rrcf	__div_to_l_@quot^0,f,c
  6873  00229E  3E0C               	incfsz	__div_to_l_@exp1^0,f,c
  6874  0022A0  D7F9               	goto	i2l3265
  6875  0022A2  D00D               	goto	i2u307_40
  6876  0022A4                     i2l3269:
  6877  0022A4  0E1F               	movlw	31
  6878  0022A6  640C               	cpfsgt	__div_to_l_@exp1^0,c
  6879  0022A8  D007               	goto	i2l3277
  6880  0022AA  D79E               	goto	i2u301_40
  6881  0022AC                     i2l3275:
  6882  0022AC  90D8               	bcf	status,0,c
  6883  0022AE  3607               	rlcf	__div_to_l_@quot^0,f,c
  6884  0022B0  3608               	rlcf	(__div_to_l_@quot+1)^0,f,c
  6885  0022B2  3609               	rlcf	(__div_to_l_@quot+2)^0,f,c
  6886  0022B4  360A               	rlcf	(__div_to_l_@quot+3)^0,f,c
  6887  0022B6  060C               	decf	__div_to_l_@exp1^0,f,c
  6888  0022B8                     i2l3277:
  6889  0022B8  500C               	movf	__div_to_l_@exp1^0,w,c
  6890  0022BA  A4D8               	btfss	status,2,c
  6891  0022BC  D7F7               	goto	i2l3275
  6892  0022BE                     i2u307_40:
  6893  0022BE  C007  F001         	movff	__div_to_l_@quot,?__div_to_l_
  6894  0022C2  C008  F002         	movff	__div_to_l_@quot+1,?__div_to_l_+1
  6895  0022C6  C009  F003         	movff	__div_to_l_@quot+2,?__div_to_l_+2
  6896  0022CA  C00A  F004         	movff	__div_to_l_@quot+3,?__div_to_l_+3
  6897  0022CE  0012               	return		;funcret
  6898  0022D0                     __end_of__div_to_l_:
  6899                           	callstack 0
  6900                           
  6901 ;; *************** function ___llmod *****************
  6902 ;; Defined at:
  6903 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\llmod.c"
  6904 ;; Parameters:    Size  Location     Type
  6905 ;;  dividend        4    0[COMRAM] unsigned long 
  6906 ;;  divisor         4    4[COMRAM] unsigned long 
  6907 ;; Auto vars:     Size  Location     Type
  6908 ;;  counter         1    8[COMRAM] unsigned char 
  6909 ;; Return value:  Size  Location     Type
  6910 ;;                  4    0[COMRAM] unsigned long 
  6911 ;; Registers used:
  6912 ;;		wreg, status,2, status,0
  6913 ;; Tracked objects:
  6914 ;;		On entry : 0/0
  6915 ;;		On exit  : 0/0
  6916 ;;		Unchanged: 0/0
  6917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6918 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6919 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6920 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6921 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6922 ;;Total ram usage:        9 bytes
  6923 ;; Hardware stack levels used: 1
  6924 ;; This function calls:
  6925 ;;		Nothing
  6926 ;; This function is called by:
  6927 ;;		_sprintf
  6928 ;; This function uses a non-reentrant model
  6929 ;;
  6930                           
  6931                           	psect	text38
  6932  002BA4                     __ptext38:
  6933                           	callstack 0
  6934  002BA4                     ___llmod:
  6935                           	callstack 23
  6936                           
  6937                           ;incstack = 0
  6938  002BA4  5005               	movf	___llmod@divisor^0,w,c
  6939  002BA6  1006               	iorwf	(___llmod@divisor+1)^0,w,c
  6940  002BA8  1007               	iorwf	(___llmod@divisor+2)^0,w,c
  6941  002BAA  1008               	iorwf	(___llmod@divisor+3)^0,w,c
  6942  002BAC  B4D8               	btfsc	status,2,c
  6943  002BAE  D024               	goto	i2l765
  6944  002BB0  0E01               	movlw	1
  6945  002BB2  6E09               	movwf	___llmod@counter^0,c
  6946  002BB4  D006               	goto	i2l3325
  6947  002BB6                     i2l3323:
  6948  002BB6  90D8               	bcf	status,0,c
  6949  002BB8  3605               	rlcf	___llmod@divisor^0,f,c
  6950  002BBA  3606               	rlcf	(___llmod@divisor+1)^0,f,c
  6951  002BBC  3607               	rlcf	(___llmod@divisor+2)^0,f,c
  6952  002BBE  3608               	rlcf	(___llmod@divisor+3)^0,f,c
  6953  002BC0  2A09               	incf	___llmod@counter^0,f,c
  6954  002BC2                     i2l3325:
  6955  002BC2  AE08               	btfss	(___llmod@divisor+3)^0,7,c
  6956  002BC4  D7F8               	goto	i2l3323
  6957  002BC6                     i2u314_40:
  6958  002BC6  5005               	movf	___llmod@divisor^0,w,c
  6959  002BC8  5C01               	subwf	___llmod@dividend^0,w,c
  6960  002BCA  5006               	movf	(___llmod@divisor+1)^0,w,c
  6961  002BCC  5802               	subwfb	(___llmod@dividend+1)^0,w,c
  6962  002BCE  5007               	movf	(___llmod@divisor+2)^0,w,c
  6963  002BD0  5803               	subwfb	(___llmod@dividend+2)^0,w,c
  6964  002BD2  5008               	movf	(___llmod@divisor+3)^0,w,c
  6965  002BD4  5804               	subwfb	(___llmod@dividend+3)^0,w,c
  6966  002BD6  A0D8               	btfss	status,0,c
  6967  002BD8  D008               	goto	i2l3331
  6968  002BDA  5005               	movf	___llmod@divisor^0,w,c
  6969  002BDC  5E01               	subwf	___llmod@dividend^0,f,c
  6970  002BDE  5006               	movf	(___llmod@divisor+1)^0,w,c
  6971  002BE0  5A02               	subwfb	(___llmod@dividend+1)^0,f,c
  6972  002BE2  5007               	movf	(___llmod@divisor+2)^0,w,c
  6973  002BE4  5A03               	subwfb	(___llmod@dividend+2)^0,f,c
  6974  002BE6  5008               	movf	(___llmod@divisor+3)^0,w,c
  6975  002BE8  5A04               	subwfb	(___llmod@dividend+3)^0,f,c
  6976  002BEA                     i2l3331:
  6977  002BEA  90D8               	bcf	status,0,c
  6978  002BEC  3208               	rrcf	(___llmod@divisor+3)^0,f,c
  6979  002BEE  3207               	rrcf	(___llmod@divisor+2)^0,f,c
  6980  002BF0  3206               	rrcf	(___llmod@divisor+1)^0,f,c
  6981  002BF2  3205               	rrcf	___llmod@divisor^0,f,c
  6982  002BF4  2E09               	decfsz	___llmod@counter^0,f,c
  6983  002BF6  D7E7               	goto	i2u314_40
  6984  002BF8                     i2l765:
  6985  002BF8  C001  F001         	movff	___llmod@dividend,?___llmod
  6986  002BFC  C002  F002         	movff	___llmod@dividend+1,?___llmod+1
  6987  002C00  C003  F003         	movff	___llmod@dividend+2,?___llmod+2
  6988  002C04  C004  F004         	movff	___llmod@dividend+3,?___llmod+3
  6989  002C08  0012               	return		;funcret
  6990  002C0A                     __end_of___llmod:
  6991                           	callstack 0
  6992                           
  6993 ;; *************** function ___lldiv *****************
  6994 ;; Defined at:
  6995 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\__lldiv.c"
  6996 ;; Parameters:    Size  Location     Type
  6997 ;;  dividend        4    0[COMRAM] unsigned long 
  6998 ;;  divisor         4    4[COMRAM] unsigned long 
  6999 ;; Auto vars:     Size  Location     Type
  7000 ;;  quotient        4    8[COMRAM] unsigned long 
  7001 ;;  counter         1   12[COMRAM] unsigned char 
  7002 ;; Return value:  Size  Location     Type
  7003 ;;                  4    0[COMRAM] unsigned long 
  7004 ;; Registers used:
  7005 ;;		wreg, status,2, status,0
  7006 ;; Tracked objects:
  7007 ;;		On entry : 0/0
  7008 ;;		On exit  : 0/0
  7009 ;;		Unchanged: 0/0
  7010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7011 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7012 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7013 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7014 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7015 ;;Total ram usage:       13 bytes
  7016 ;; Hardware stack levels used: 1
  7017 ;; This function calls:
  7018 ;;		Nothing
  7019 ;; This function is called by:
  7020 ;;		_sprintf
  7021 ;; This function uses a non-reentrant model
  7022 ;;
  7023                           
  7024                           	psect	text39
  7025  002960                     __ptext39:
  7026                           	callstack 0
  7027  002960                     ___lldiv:
  7028                           	callstack 23
  7029                           
  7030                           ;incstack = 0
  7031  002960  0E00               	movlw	0
  7032  002962  6E09               	movwf	___lldiv@quotient^0,c
  7033  002964  0E00               	movlw	0
  7034  002966  6E0A               	movwf	(___lldiv@quotient+1)^0,c
  7035  002968  0E00               	movlw	0
  7036  00296A  6E0B               	movwf	(___lldiv@quotient+2)^0,c
  7037  00296C  0E00               	movlw	0
  7038  00296E  6E0C               	movwf	(___lldiv@quotient+3)^0,c
  7039  002970  5005               	movf	___lldiv@divisor^0,w,c
  7040  002972  1006               	iorwf	(___lldiv@divisor+1)^0,w,c
  7041  002974  1007               	iorwf	(___lldiv@divisor+2)^0,w,c
  7042  002976  1008               	iorwf	(___lldiv@divisor+3)^0,w,c
  7043  002978  B4D8               	btfsc	status,2,c
  7044  00297A  D02A               	goto	i2l350
  7045  00297C  0E01               	movlw	1
  7046  00297E  6E0D               	movwf	___lldiv@counter^0,c
  7047  002980  D006               	goto	i2l3293
  7048  002982                     i2l3291:
  7049  002982  90D8               	bcf	status,0,c
  7050  002984  3605               	rlcf	___lldiv@divisor^0,f,c
  7051  002986  3606               	rlcf	(___lldiv@divisor+1)^0,f,c
  7052  002988  3607               	rlcf	(___lldiv@divisor+2)^0,f,c
  7053  00298A  3608               	rlcf	(___lldiv@divisor+3)^0,f,c
  7054  00298C  2A0D               	incf	___lldiv@counter^0,f,c
  7055  00298E                     i2l3293:
  7056  00298E  AE08               	btfss	(___lldiv@divisor+3)^0,7,c
  7057  002990  D7F8               	goto	i2l3291
  7058  002992                     i2u309_40:
  7059  002992  90D8               	bcf	status,0,c
  7060  002994  3609               	rlcf	___lldiv@quotient^0,f,c
  7061  002996  360A               	rlcf	(___lldiv@quotient+1)^0,f,c
  7062  002998  360B               	rlcf	(___lldiv@quotient+2)^0,f,c
  7063  00299A  360C               	rlcf	(___lldiv@quotient+3)^0,f,c
  7064  00299C  5005               	movf	___lldiv@divisor^0,w,c
  7065  00299E  5C01               	subwf	___lldiv@dividend^0,w,c
  7066  0029A0  5006               	movf	(___lldiv@divisor+1)^0,w,c
  7067  0029A2  5802               	subwfb	(___lldiv@dividend+1)^0,w,c
  7068  0029A4  5007               	movf	(___lldiv@divisor+2)^0,w,c
  7069  0029A6  5803               	subwfb	(___lldiv@dividend+2)^0,w,c
  7070  0029A8  5008               	movf	(___lldiv@divisor+3)^0,w,c
  7071  0029AA  5804               	subwfb	(___lldiv@dividend+3)^0,w,c
  7072  0029AC  A0D8               	btfss	status,0,c
  7073  0029AE  D009               	goto	i2l3303
  7074  0029B0  5005               	movf	___lldiv@divisor^0,w,c
  7075  0029B2  5E01               	subwf	___lldiv@dividend^0,f,c
  7076  0029B4  5006               	movf	(___lldiv@divisor+1)^0,w,c
  7077  0029B6  5A02               	subwfb	(___lldiv@dividend+1)^0,f,c
  7078  0029B8  5007               	movf	(___lldiv@divisor+2)^0,w,c
  7079  0029BA  5A03               	subwfb	(___lldiv@dividend+2)^0,f,c
  7080  0029BC  5008               	movf	(___lldiv@divisor+3)^0,w,c
  7081  0029BE  5A04               	subwfb	(___lldiv@dividend+3)^0,f,c
  7082  0029C0  8009               	bsf	___lldiv@quotient^0,0,c
  7083  0029C2                     i2l3303:
  7084  0029C2  90D8               	bcf	status,0,c
  7085  0029C4  3208               	rrcf	(___lldiv@divisor+3)^0,f,c
  7086  0029C6  3207               	rrcf	(___lldiv@divisor+2)^0,f,c
  7087  0029C8  3206               	rrcf	(___lldiv@divisor+1)^0,f,c
  7088  0029CA  3205               	rrcf	___lldiv@divisor^0,f,c
  7089  0029CC  2E0D               	decfsz	___lldiv@counter^0,f,c
  7090  0029CE  D7E1               	goto	i2u309_40
  7091  0029D0                     i2l350:
  7092  0029D0  C009  F001         	movff	___lldiv@quotient,?___lldiv
  7093  0029D4  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
  7094  0029D8  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
  7095  0029DC  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
  7096  0029E0  0012               	return		;funcret
  7097  0029E2                     __end_of___lldiv:
  7098                           	callstack 0
  7099                           
  7100 ;; *************** function ___ftsub *****************
  7101 ;; Defined at:
  7102 ;;		line 19 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\ftsub.c"
  7103 ;; Parameters:    Size  Location     Type
  7104 ;;  f1              3   55[COMRAM] float 
  7105 ;;  f2              3   58[COMRAM] float 
  7106 ;; Auto vars:     Size  Location     Type
  7107 ;;		None
  7108 ;; Return value:  Size  Location     Type
  7109 ;;                  3   55[COMRAM] float 
  7110 ;; Registers used:
  7111 ;;		wreg, status,2, status,0, cstack
  7112 ;; Tracked objects:
  7113 ;;		On entry : 0/0
  7114 ;;		On exit  : 0/0
  7115 ;;		Unchanged: 0/0
  7116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7117 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7118 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7120 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7121 ;;Total ram usage:        6 bytes
  7122 ;; Hardware stack levels used: 1
  7123 ;; Hardware stack levels required when called: 2
  7124 ;; This function calls:
  7125 ;;		___ftadd
  7126 ;; This function is called by:
  7127 ;;		_sprintf
  7128 ;; This function uses a non-reentrant model
  7129 ;;
  7130                           
  7131                           	psect	text40
  7132  002D8E                     __ptext40:
  7133                           	callstack 0
  7134  002D8E                     ___ftsub:
  7135                           	callstack 21
  7136                           
  7137                           ;incstack = 0
  7138  002D8E  503B               	movf	___ftsub@f2^0,w,c
  7139  002D90  103C               	iorwf	(___ftsub@f2+1)^0,w,c
  7140  002D92  103D               	iorwf	(___ftsub@f2+2)^0,w,c
  7141  002D94  B4D8               	btfsc	status,2,c
  7142  002D96  D006               	goto	i2l3311
  7143  002D98  0E00               	movlw	0
  7144  002D9A  1A3B               	xorwf	___ftsub@f2^0,f,c
  7145  002D9C  0E00               	movlw	0
  7146  002D9E  1A3C               	xorwf	(___ftsub@f2+1)^0,f,c
  7147  002DA0  0E80               	movlw	128
  7148  002DA2  1A3D               	xorwf	(___ftsub@f2+2)^0,f,c
  7149  002DA4                     i2l3311:
  7150  002DA4  C038  F02C         	movff	___ftsub@f1,___ftadd@f1
  7151  002DA8  C039  F02D         	movff	___ftsub@f1+1,___ftadd@f1+1
  7152  002DAC  C03A  F02E         	movff	___ftsub@f1+2,___ftadd@f1+2
  7153  002DB0  C03B  F02F         	movff	___ftsub@f2,___ftadd@f2
  7154  002DB4  C03C  F030         	movff	___ftsub@f2+1,___ftadd@f2+1
  7155  002DB8  C03D  F031         	movff	___ftsub@f2+2,___ftadd@f2+2
  7156  002DBC  EC5D  F00E         	call	___ftadd	;wreg free
  7157  002DC0  C02C  F038         	movff	?___ftadd,?___ftsub
  7158  002DC4  C02D  F039         	movff	?___ftadd+1,?___ftsub+1
  7159  002DC8  C02E  F03A         	movff	?___ftadd+2,?___ftsub+2
  7160  002DCC  0012               	return		;funcret
  7161  002DCE                     __end_of___ftsub:
  7162                           	callstack 0
  7163                           
  7164 ;; *************** function ___ftadd *****************
  7165 ;; Defined at:
  7166 ;;		line 86 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\ftadd.c"
  7167 ;; Parameters:    Size  Location     Type
  7168 ;;  f1              3   43[COMRAM] float 
  7169 ;;  f2              3   46[COMRAM] float 
  7170 ;; Auto vars:     Size  Location     Type
  7171 ;;  exp1            1   54[COMRAM] unsigned char 
  7172 ;;  exp2            1   53[COMRAM] unsigned char 
  7173 ;;  sign            1   52[COMRAM] unsigned char 
  7174 ;; Return value:  Size  Location     Type
  7175 ;;                  3   43[COMRAM] float 
  7176 ;; Registers used:
  7177 ;;		wreg, status,2, status,0, cstack
  7178 ;; Tracked objects:
  7179 ;;		On entry : 0/0
  7180 ;;		On exit  : 0/0
  7181 ;;		Unchanged: 0/0
  7182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7183 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7184 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7185 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7186 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7187 ;;Total ram usage:       12 bytes
  7188 ;; Hardware stack levels used: 1
  7189 ;; Hardware stack levels required when called: 1
  7190 ;; This function calls:
  7191 ;;		i2___ftpack
  7192 ;; This function is called by:
  7193 ;;		_TMR1_ISR
  7194 ;;		_sprintf
  7195 ;;		___ftsub
  7196 ;; This function uses a non-reentrant model
  7197 ;;
  7198                           
  7199                           	psect	text41
  7200  001CBA                     __ptext41:
  7201                           	callstack 0
  7202  001CBA                     ___ftadd:
  7203                           	callstack 21
  7204                           
  7205                           ;incstack = 0
  7206  001CBA  C02E  F032         	movff	___ftadd@f1+2,??___ftadd
  7207  001CBE  6A33               	clrf	(??___ftadd+1)^0,c
  7208  001CC0  6A34               	clrf	(??___ftadd+2)^0,c
  7209  001CC2  342D               	rlcf	(___ftadd@f1+1)^0,w,c
  7210  001CC4  3632               	rlcf	??___ftadd^0,f,c
  7211  001CC6  E301               	bnc	u215_41
  7212  001CC8  8033               	bsf	(??___ftadd+1)^0,0,c
  7213  001CCA                     u215_41:
  7214  001CCA  5032               	movf	??___ftadd^0,w,c
  7215  001CCC  6E37               	movwf	___ftadd@exp1^0,c
  7216  001CCE  C031  F032         	movff	___ftadd@f2+2,??___ftadd
  7217  001CD2  6A33               	clrf	(??___ftadd+1)^0,c
  7218  001CD4  6A34               	clrf	(??___ftadd+2)^0,c
  7219  001CD6  3430               	rlcf	(___ftadd@f2+1)^0,w,c
  7220  001CD8  3632               	rlcf	??___ftadd^0,f,c
  7221  001CDA  E301               	bnc	u216_41
  7222  001CDC  8033               	bsf	(??___ftadd+1)^0,0,c
  7223  001CDE                     u216_41:
  7224  001CDE  5032               	movf	??___ftadd^0,w,c
  7225  001CE0  6E36               	movwf	___ftadd@exp2^0,c
  7226  001CE2  5037               	movf	___ftadd@exp1^0,w,c
  7227  001CE4  B4D8               	btfsc	status,2,c
  7228  001CE6  D00A               	goto	i2u219_40
  7229  001CE8  5036               	movf	___ftadd@exp2^0,w,c
  7230  001CEA  5C37               	subwf	___ftadd@exp1^0,w,c
  7231  001CEC  B0D8               	btfsc	status,0,c
  7232  001CEE  D00D               	goto	i2l2657
  7233  001CF0  5037               	movf	___ftadd@exp1^0,w,c
  7234  001CF2  5C36               	subwf	___ftadd@exp2^0,w,c
  7235  001CF4  6E32               	movwf	??___ftadd^0,c
  7236  001CF6  0E18               	movlw	24
  7237  001CF8  6432               	cpfsgt	??___ftadd^0,c
  7238  001CFA  D007               	goto	i2l2657
  7239  001CFC                     i2u219_40:
  7240  001CFC  C02F  F02C         	movff	___ftadd@f2,?___ftadd
  7241  001D00  C030  F02D         	movff	___ftadd@f2+1,?___ftadd+1
  7242  001D04  C031  F02E         	movff	___ftadd@f2+2,?___ftadd+2
  7243  001D08  0012               	return	
  7244  001D0A                     i2l2657:
  7245  001D0A  5036               	movf	___ftadd@exp2^0,w,c
  7246  001D0C  B4D8               	btfsc	status,2,c
  7247  001D0E  D00A               	goto	i2u222_40
  7248  001D10  5037               	movf	___ftadd@exp1^0,w,c
  7249  001D12  5C36               	subwf	___ftadd@exp2^0,w,c
  7250  001D14  B0D8               	btfsc	status,0,c
  7251  001D16  D00D               	goto	i2l2663
  7252  001D18  5036               	movf	___ftadd@exp2^0,w,c
  7253  001D1A  5C37               	subwf	___ftadd@exp1^0,w,c
  7254  001D1C  6E32               	movwf	??___ftadd^0,c
  7255  001D1E  0E18               	movlw	24
  7256  001D20  6432               	cpfsgt	??___ftadd^0,c
  7257  001D22  D007               	goto	i2l2663
  7258  001D24                     i2u222_40:
  7259  001D24  C02C  F02C         	movff	___ftadd@f1,?___ftadd
  7260  001D28  C02D  F02D         	movff	___ftadd@f1+1,?___ftadd+1
  7261  001D2C  C02E  F02E         	movff	___ftadd@f1+2,?___ftadd+2
  7262  001D30  0012               	return	
  7263  001D32                     i2l2663:
  7264  001D32  0E06               	movlw	6
  7265  001D34  6E35               	movwf	___ftadd@sign^0,c
  7266  001D36  BE2E               	btfsc	(___ftadd@f1+2)^0,7,c
  7267  001D38  8E35               	bsf	___ftadd@sign^0,7,c
  7268  001D3A  BE31               	btfsc	(___ftadd@f2+2)^0,7,c
  7269  001D3C  8C35               	bsf	___ftadd@sign^0,6,c
  7270  001D3E  8E2D               	bsf	(___ftadd@f1+1)^0,7,c
  7271  001D40  0EFF               	movlw	255
  7272  001D42  162C               	andwf	___ftadd@f1^0,f,c
  7273  001D44  0EFF               	movlw	255
  7274  001D46  162D               	andwf	(___ftadd@f1+1)^0,f,c
  7275  001D48  0E00               	movlw	0
  7276  001D4A  162E               	andwf	(___ftadd@f1+2)^0,f,c
  7277  001D4C  8E30               	bsf	(___ftadd@f2+1)^0,7,c
  7278  001D4E  0EFF               	movlw	255
  7279  001D50  162F               	andwf	___ftadd@f2^0,f,c
  7280  001D52  0EFF               	movlw	255
  7281  001D54  1630               	andwf	(___ftadd@f2+1)^0,f,c
  7282  001D56  0E00               	movlw	0
  7283  001D58  1631               	andwf	(___ftadd@f2+2)^0,f,c
  7284  001D5A  5036               	movf	___ftadd@exp2^0,w,c
  7285  001D5C  5C37               	subwf	___ftadd@exp1^0,w,c
  7286  001D5E  B0D8               	btfsc	status,0,c
  7287  001D60  D01B               	goto	i2l2689
  7288  001D62                     i2u225_40:
  7289  001D62  90D8               	bcf	status,0,c
  7290  001D64  362F               	rlcf	___ftadd@f2^0,f,c
  7291  001D66  3630               	rlcf	(___ftadd@f2+1)^0,f,c
  7292  001D68  3631               	rlcf	(___ftadd@f2+2)^0,f,c
  7293  001D6A  0636               	decf	___ftadd@exp2^0,f,c
  7294  001D6C  5037               	movf	___ftadd@exp1^0,w,c
  7295  001D6E  1836               	xorwf	___ftadd@exp2^0,w,c
  7296  001D70  B4D8               	btfsc	status,2,c
  7297  001D72  D00D               	goto	i2l2687
  7298  001D74  0635               	decf	___ftadd@sign^0,f,c
  7299  001D76  C035  F032         	movff	___ftadd@sign,??___ftadd
  7300  001D7A  0E07               	movlw	7
  7301  001D7C  1632               	andwf	??___ftadd^0,f,c
  7302  001D7E  B4D8               	btfsc	status,2,c
  7303  001D80  D006               	goto	i2l2687
  7304  001D82  D7EF               	goto	i2u225_40
  7305  001D84                     i2l2685:
  7306  001D84  90D8               	bcf	status,0,c
  7307  001D86  322E               	rrcf	(___ftadd@f1+2)^0,f,c
  7308  001D88  322D               	rrcf	(___ftadd@f1+1)^0,f,c
  7309  001D8A  322C               	rrcf	___ftadd@f1^0,f,c
  7310  001D8C  2A37               	incf	___ftadd@exp1^0,f,c
  7311  001D8E                     i2l2687:
  7312  001D8E  5036               	movf	___ftadd@exp2^0,w,c
  7313  001D90  1837               	xorwf	___ftadd@exp1^0,w,c
  7314  001D92  B4D8               	btfsc	status,2,c
  7315  001D94  D01F               	goto	i2u232_40
  7316  001D96  D7F6               	goto	i2l2685
  7317  001D98                     i2l2689:
  7318  001D98  5037               	movf	___ftadd@exp1^0,w,c
  7319  001D9A  5C36               	subwf	___ftadd@exp2^0,w,c
  7320  001D9C  B0D8               	btfsc	status,0,c
  7321  001D9E  D01A               	goto	i2u232_40
  7322  001DA0                     i2u229_40:
  7323  001DA0  90D8               	bcf	status,0,c
  7324  001DA2  362C               	rlcf	___ftadd@f1^0,f,c
  7325  001DA4  362D               	rlcf	(___ftadd@f1+1)^0,f,c
  7326  001DA6  362E               	rlcf	(___ftadd@f1+2)^0,f,c
  7327  001DA8  0637               	decf	___ftadd@exp1^0,f,c
  7328  001DAA  5037               	movf	___ftadd@exp1^0,w,c
  7329  001DAC  1836               	xorwf	___ftadd@exp2^0,w,c
  7330  001DAE  B4D8               	btfsc	status,2,c
  7331  001DB0  D00D               	goto	i2l2699
  7332  001DB2  0635               	decf	___ftadd@sign^0,f,c
  7333  001DB4  C035  F032         	movff	___ftadd@sign,??___ftadd
  7334  001DB8  0E07               	movlw	7
  7335  001DBA  1632               	andwf	??___ftadd^0,f,c
  7336  001DBC  B4D8               	btfsc	status,2,c
  7337  001DBE  D006               	goto	i2l2699
  7338  001DC0  D7EF               	goto	i2u229_40
  7339  001DC2                     i2l2697:
  7340  001DC2  90D8               	bcf	status,0,c
  7341  001DC4  3231               	rrcf	(___ftadd@f2+2)^0,f,c
  7342  001DC6  3230               	rrcf	(___ftadd@f2+1)^0,f,c
  7343  001DC8  322F               	rrcf	___ftadd@f2^0,f,c
  7344  001DCA  2A36               	incf	___ftadd@exp2^0,f,c
  7345  001DCC                     i2l2699:
  7346  001DCC  5036               	movf	___ftadd@exp2^0,w,c
  7347  001DCE  1837               	xorwf	___ftadd@exp1^0,w,c
  7348  001DD0  A4D8               	btfss	status,2,c
  7349  001DD2  D7F7               	goto	i2l2697
  7350  001DD4                     i2u232_40:
  7351  001DD4  AE35               	btfss	___ftadd@sign^0,7,c
  7352  001DD6  D00C               	goto	i2l670
  7353  001DD8  0EFF               	movlw	255
  7354  001DDA  1A2C               	xorwf	___ftadd@f1^0,f,c
  7355  001DDC  0EFF               	movlw	255
  7356  001DDE  1A2D               	xorwf	(___ftadd@f1+1)^0,f,c
  7357  001DE0  0EFF               	movlw	255
  7358  001DE2  1A2E               	xorwf	(___ftadd@f1+2)^0,f,c
  7359  001DE4  0E01               	movlw	1
  7360  001DE6  262C               	addwf	___ftadd@f1^0,f,c
  7361  001DE8  0E00               	movlw	0
  7362  001DEA  222D               	addwfc	(___ftadd@f1+1)^0,f,c
  7363  001DEC  0E00               	movlw	0
  7364  001DEE  222E               	addwfc	(___ftadd@f1+2)^0,f,c
  7365  001DF0                     i2l670:
  7366  001DF0  AC35               	btfss	___ftadd@sign^0,6,c
  7367  001DF2  D00C               	goto	i2l2705
  7368  001DF4  0EFF               	movlw	255
  7369  001DF6  1A2F               	xorwf	___ftadd@f2^0,f,c
  7370  001DF8  0EFF               	movlw	255
  7371  001DFA  1A30               	xorwf	(___ftadd@f2+1)^0,f,c
  7372  001DFC  0EFF               	movlw	255
  7373  001DFE  1A31               	xorwf	(___ftadd@f2+2)^0,f,c
  7374  001E00  0E01               	movlw	1
  7375  001E02  262F               	addwf	___ftadd@f2^0,f,c
  7376  001E04  0E00               	movlw	0
  7377  001E06  2230               	addwfc	(___ftadd@f2+1)^0,f,c
  7378  001E08  0E00               	movlw	0
  7379  001E0A  2231               	addwfc	(___ftadd@f2+2)^0,f,c
  7380  001E0C                     i2l2705:
  7381  001E0C  0E00               	movlw	0
  7382  001E0E  6E35               	movwf	___ftadd@sign^0,c
  7383  001E10  502C               	movf	___ftadd@f1^0,w,c
  7384  001E12  262F               	addwf	___ftadd@f2^0,f,c
  7385  001E14  502D               	movf	(___ftadd@f1+1)^0,w,c
  7386  001E16  2230               	addwfc	(___ftadd@f2+1)^0,f,c
  7387  001E18  502E               	movf	(___ftadd@f1+2)^0,w,c
  7388  001E1A  2231               	addwfc	(___ftadd@f2+2)^0,f,c
  7389  001E1C  AE31               	btfss	(___ftadd@f2+2)^0,7,c
  7390  001E1E  D00E               	goto	i2l2715
  7391  001E20  0EFF               	movlw	255
  7392  001E22  1A2F               	xorwf	___ftadd@f2^0,f,c
  7393  001E24  0EFF               	movlw	255
  7394  001E26  1A30               	xorwf	(___ftadd@f2+1)^0,f,c
  7395  001E28  0EFF               	movlw	255
  7396  001E2A  1A31               	xorwf	(___ftadd@f2+2)^0,f,c
  7397  001E2C  0E01               	movlw	1
  7398  001E2E  262F               	addwf	___ftadd@f2^0,f,c
  7399  001E30  0E00               	movlw	0
  7400  001E32  2230               	addwfc	(___ftadd@f2+1)^0,f,c
  7401  001E34  0E00               	movlw	0
  7402  001E36  2231               	addwfc	(___ftadd@f2+2)^0,f,c
  7403  001E38  0E01               	movlw	1
  7404  001E3A  6E35               	movwf	___ftadd@sign^0,c
  7405  001E3C                     i2l2715:
  7406  001E3C  C02F  F001         	movff	___ftadd@f2,i2___ftpack@arg
  7407  001E40  C030  F002         	movff	___ftadd@f2+1,i2___ftpack@arg+1
  7408  001E44  C031  F003         	movff	___ftadd@f2+2,i2___ftpack@arg+2
  7409  001E48  C037  F004         	movff	___ftadd@exp1,i2___ftpack@exp
  7410  001E4C  C035  F005         	movff	___ftadd@sign,i2___ftpack@sign
  7411  001E50  EC6F  F013         	call	i2___ftpack	;wreg free
  7412  001E54  C001  F02C         	movff	?i2___ftpack,?___ftadd
  7413  001E58  C002  F02D         	movff	?i2___ftpack+1,?___ftadd+1
  7414  001E5C  C003  F02E         	movff	?i2___ftpack+2,?___ftadd+2
  7415  001E60  0012               	return		;funcret
  7416  001E62                     __end_of___ftadd:
  7417                           	callstack 0
  7418                           
  7419 ;; *************** function ___ftneg *****************
  7420 ;; Defined at:
  7421 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\ftneg.c"
  7422 ;; Parameters:    Size  Location     Type
  7423 ;;  f1              3    0[COMRAM] float 
  7424 ;; Auto vars:     Size  Location     Type
  7425 ;;		None
  7426 ;; Return value:  Size  Location     Type
  7427 ;;                  3    0[COMRAM] float 
  7428 ;; Registers used:
  7429 ;;		wreg, status,2, status,0
  7430 ;; Tracked objects:
  7431 ;;		On entry : 0/0
  7432 ;;		On exit  : 0/0
  7433 ;;		Unchanged: 0/0
  7434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7435 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7436 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7437 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7438 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7439 ;;Total ram usage:        3 bytes
  7440 ;; Hardware stack levels used: 1
  7441 ;; This function calls:
  7442 ;;		Nothing
  7443 ;; This function is called by:
  7444 ;;		_sprintf
  7445 ;; This function uses a non-reentrant model
  7446 ;;
  7447                           
  7448                           	psect	text42
  7449  002EFE                     __ptext42:
  7450                           	callstack 0
  7451  002EFE                     ___ftneg:
  7452                           	callstack 23
  7453                           
  7454                           ;incstack = 0
  7455  002EFE  5001               	movf	___ftneg@f1^0,w,c
  7456  002F00  1002               	iorwf	(___ftneg@f1+1)^0,w,c
  7457  002F02  1003               	iorwf	(___ftneg@f1+2)^0,w,c
  7458  002F04  B4D8               	btfsc	status,2,c
  7459  002F06  D006               	goto	i2l720
  7460  002F08  0E00               	movlw	0
  7461  002F0A  1A01               	xorwf	___ftneg@f1^0,f,c
  7462  002F0C  0E00               	movlw	0
  7463  002F0E  1A02               	xorwf	(___ftneg@f1+1)^0,f,c
  7464  002F10  0E80               	movlw	128
  7465  002F12  1A03               	xorwf	(___ftneg@f1+2)^0,f,c
  7466  002F14                     i2l720:
  7467  002F14  C001  F001         	movff	___ftneg@f1,?___ftneg
  7468  002F18  C002  F002         	movff	___ftneg@f1+1,?___ftneg+1
  7469  002F1C  C003  F003         	movff	___ftneg@f1+2,?___ftneg+2
  7470  002F20  0012               	return		;funcret
  7471  002F22                     __end_of___ftneg:
  7472                           	callstack 0
  7473                           
  7474 ;; *************** function _map *****************
  7475 ;; Defined at:
  7476 ;;		line 404 in file "PIC18F46K22_PCA9685_ROBOR_2R.c"
  7477 ;; Parameters:    Size  Location     Type
  7478 ;;  x               2   55[COMRAM] int 
  7479 ;;  In_Min          2   57[COMRAM] int 
  7480 ;;  In_Max          2   59[COMRAM] int 
  7481 ;;  Out_Min         2   61[COMRAM] int 
  7482 ;;  Out_Max         2   63[COMRAM] int 
  7483 ;; Auto vars:     Size  Location     Type
  7484 ;;		None
  7485 ;; Return value:  Size  Location     Type
  7486 ;;                  2   55[COMRAM] int 
  7487 ;; Registers used:
  7488 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7489 ;; Tracked objects:
  7490 ;;		On entry : 0/0
  7491 ;;		On exit  : 0/0
  7492 ;;		Unchanged: 0/0
  7493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7494 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7495 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7496 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7497 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7498 ;;Total ram usage:       10 bytes
  7499 ;; Hardware stack levels used: 1
  7500 ;; Hardware stack levels required when called: 1
  7501 ;; This function calls:
  7502 ;;		___awdiv
  7503 ;;		___wmul
  7504 ;; This function is called by:
  7505 ;;		_TMR1_ISR
  7506 ;; This function uses a non-reentrant model
  7507 ;;
  7508                           
  7509                           	psect	text43
  7510  002D4C                     __ptext43:
  7511                           	callstack 0
  7512  002D4C                     _map:
  7513                           	callstack 23
  7514                           
  7515                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 405: return ((x - In_Min) * ((Out_Max - Out_Min) / (In_
      +                          Max - In_Min))) +Out_Min;
  7516                           
  7517                           ;incstack = 0
  7518  002D4C  503A               	movf	map@In_Min^0,w,c
  7519  002D4E  5C38               	subwf	map@x^0,w,c
  7520  002D50  6E0F               	movwf	___wmul@multiplier^0,c
  7521  002D52  503B               	movf	(map@In_Min+1)^0,w,c
  7522  002D54  5839               	subwfb	(map@x+1)^0,w,c
  7523  002D56  6E10               	movwf	(___wmul@multiplier+1)^0,c
  7524  002D58  503A               	movf	map@In_Min^0,w,c
  7525  002D5A  5C3C               	subwf	map@In_Max^0,w,c
  7526  002D5C  6E09               	movwf	___awdiv@divisor^0,c
  7527  002D5E  503B               	movf	(map@In_Min+1)^0,w,c
  7528  002D60  583D               	subwfb	(map@In_Max+1)^0,w,c
  7529  002D62  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  7530  002D64  503E               	movf	map@Out_Min^0,w,c
  7531  002D66  5C40               	subwf	map@Out_Max^0,w,c
  7532  002D68  6E07               	movwf	___awdiv@dividend^0,c
  7533  002D6A  503F               	movf	(map@Out_Min+1)^0,w,c
  7534  002D6C  5841               	subwfb	(map@Out_Max+1)^0,w,c
  7535  002D6E  6E08               	movwf	(___awdiv@dividend+1)^0,c
  7536  002D70  EC6E  F014         	call	___awdiv	;wreg free
  7537  002D74  C007  F011         	movff	?___awdiv,___wmul@multiplicand
  7538  002D78  C008  F012         	movff	?___awdiv+1,___wmul@multiplicand+1
  7539  002D7C  EC6C  F017         	call	___wmul	;wreg free
  7540  002D80  503E               	movf	map@Out_Min^0,w,c
  7541  002D82  240F               	addwf	?___wmul^0,w,c
  7542  002D84  6E38               	movwf	?_map^0,c
  7543  002D86  503F               	movf	(map@Out_Min+1)^0,w,c
  7544  002D88  2010               	addwfc	(?___wmul+1)^0,w,c
  7545  002D8A  6E39               	movwf	(?_map+1)^0,c
  7546  002D8C  0012               	return		;funcret
  7547  002D8E                     __end_of_map:
  7548                           	callstack 0
  7549                           
  7550 ;; *************** function ___wmul *****************
  7551 ;; Defined at:
  7552 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\Umul16.c"
  7553 ;; Parameters:    Size  Location     Type
  7554 ;;  multiplier      2   14[COMRAM] unsigned int 
  7555 ;;  multiplicand    2   16[COMRAM] unsigned int 
  7556 ;; Auto vars:     Size  Location     Type
  7557 ;;  product         2   18[COMRAM] unsigned int 
  7558 ;; Return value:  Size  Location     Type
  7559 ;;                  2   14[COMRAM] unsigned int 
  7560 ;; Registers used:
  7561 ;;		wreg, status,2, status,0, prodl, prodh
  7562 ;; Tracked objects:
  7563 ;;		On entry : 0/0
  7564 ;;		On exit  : 0/0
  7565 ;;		Unchanged: 0/0
  7566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7567 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7568 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7569 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7570 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7571 ;;Total ram usage:        6 bytes
  7572 ;; Hardware stack levels used: 1
  7573 ;; This function calls:
  7574 ;;		Nothing
  7575 ;; This function is called by:
  7576 ;;		_map
  7577 ;;		_sprintf
  7578 ;; This function uses a non-reentrant model
  7579 ;;
  7580                           
  7581                           	psect	text44
  7582  002ED8                     __ptext44:
  7583                           	callstack 0
  7584  002ED8                     ___wmul:
  7585                           	callstack 23
  7586                           
  7587                           ;incstack = 0
  7588  002ED8  500F               	movf	___wmul@multiplier^0,w,c
  7589  002EDA  0211               	mulwf	___wmul@multiplicand^0,c
  7590  002EDC  CFF3 F013          	movff	prodl,___wmul@product
  7591  002EE0  CFF4 F014          	movff	prodh,___wmul@product+1
  7592  002EE4  500F               	movf	___wmul@multiplier^0,w,c
  7593  002EE6  0212               	mulwf	(___wmul@multiplicand+1)^0,c
  7594  002EE8  50F3               	movf	243,w,c
  7595  002EEA  2614               	addwf	(___wmul@product+1)^0,f,c
  7596  002EEC  5010               	movf	(___wmul@multiplier+1)^0,w,c
  7597  002EEE  0211               	mulwf	___wmul@multiplicand^0,c
  7598  002EF0  50F3               	movf	243,w,c
  7599  002EF2  2614               	addwf	(___wmul@product+1)^0,f,c
  7600  002EF4  C013  F00F         	movff	___wmul@product,?___wmul
  7601  002EF8  C014  F010         	movff	___wmul@product+1,?___wmul+1
  7602  002EFC  0012               	return		;funcret
  7603  002EFE                     __end_of___wmul:
  7604                           	callstack 0
  7605                           
  7606 ;; *************** function ___awdiv *****************
  7607 ;; Defined at:
  7608 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\awdiv.c"
  7609 ;; Parameters:    Size  Location     Type
  7610 ;;  dividend        2    6[COMRAM] int 
  7611 ;;  divisor         2    8[COMRAM] int 
  7612 ;; Auto vars:     Size  Location     Type
  7613 ;;  quotient        2   12[COMRAM] int 
  7614 ;;  sign            1   11[COMRAM] unsigned char 
  7615 ;;  counter         1   10[COMRAM] unsigned char 
  7616 ;; Return value:  Size  Location     Type
  7617 ;;                  2    6[COMRAM] int 
  7618 ;; Registers used:
  7619 ;;		wreg, status,2, status,0
  7620 ;; Tracked objects:
  7621 ;;		On entry : 0/0
  7622 ;;		On exit  : 0/0
  7623 ;;		Unchanged: 0/0
  7624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7625 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7626 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7627 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7628 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7629 ;;Total ram usage:        8 bytes
  7630 ;; Hardware stack levels used: 1
  7631 ;; This function calls:
  7632 ;;		Nothing
  7633 ;; This function is called by:
  7634 ;;		_map
  7635 ;;		_scale
  7636 ;;		_sprintf
  7637 ;; This function uses a non-reentrant model
  7638 ;;
  7639                           
  7640                           	psect	text45
  7641  0028DC                     __ptext45:
  7642                           	callstack 0
  7643  0028DC                     ___awdiv:
  7644                           	callstack 22
  7645                           
  7646                           ;incstack = 0
  7647  0028DC  0E00               	movlw	0
  7648  0028DE  6E0C               	movwf	___awdiv@sign^0,c
  7649  0028E0  AE0A               	btfss	(___awdiv@divisor+1)^0,7,c
  7650  0028E2  D006               	goto	i2l2821
  7651  0028E4  6C09               	negf	___awdiv@divisor^0,c
  7652  0028E6  1E0A               	comf	(___awdiv@divisor+1)^0,f,c
  7653  0028E8  B0D8               	btfsc	status,0,c
  7654  0028EA  2A0A               	incf	(___awdiv@divisor+1)^0,f,c
  7655  0028EC  0E01               	movlw	1
  7656  0028EE  6E0C               	movwf	___awdiv@sign^0,c
  7657  0028F0                     i2l2821:
  7658  0028F0  AE08               	btfss	(___awdiv@dividend+1)^0,7,c
  7659  0028F2  D006               	goto	i2l2827
  7660  0028F4  6C07               	negf	___awdiv@dividend^0,c
  7661  0028F6  1E08               	comf	(___awdiv@dividend+1)^0,f,c
  7662  0028F8  B0D8               	btfsc	status,0,c
  7663  0028FA  2A08               	incf	(___awdiv@dividend+1)^0,f,c
  7664  0028FC  0E01               	movlw	1
  7665  0028FE  1A0C               	xorwf	___awdiv@sign^0,f,c
  7666  002900                     i2l2827:
  7667  002900  0E00               	movlw	0
  7668  002902  6E0E               	movwf	(___awdiv@quotient+1)^0,c
  7669  002904  0E00               	movlw	0
  7670  002906  6E0D               	movwf	___awdiv@quotient^0,c
  7671  002908  5009               	movf	___awdiv@divisor^0,w,c
  7672  00290A  100A               	iorwf	(___awdiv@divisor+1)^0,w,c
  7673  00290C  B4D8               	btfsc	status,2,c
  7674  00290E  D01C               	goto	i2l2849
  7675  002910  0E01               	movlw	1
  7676  002912  6E0B               	movwf	___awdiv@counter^0,c
  7677  002914  D004               	goto	i2l2835
  7678  002916                     i2l2833:
  7679  002916  90D8               	bcf	status,0,c
  7680  002918  3609               	rlcf	___awdiv@divisor^0,f,c
  7681  00291A  360A               	rlcf	(___awdiv@divisor+1)^0,f,c
  7682  00291C  2A0B               	incf	___awdiv@counter^0,f,c
  7683  00291E                     i2l2835:
  7684  00291E  AE0A               	btfss	(___awdiv@divisor+1)^0,7,c
  7685  002920  D7FA               	goto	i2l2833
  7686  002922                     i2u250_40:
  7687  002922  90D8               	bcf	status,0,c
  7688  002924  360D               	rlcf	___awdiv@quotient^0,f,c
  7689  002926  360E               	rlcf	(___awdiv@quotient+1)^0,f,c
  7690  002928  5009               	movf	___awdiv@divisor^0,w,c
  7691  00292A  5C07               	subwf	___awdiv@dividend^0,w,c
  7692  00292C  500A               	movf	(___awdiv@divisor+1)^0,w,c
  7693  00292E  5808               	subwfb	(___awdiv@dividend+1)^0,w,c
  7694  002930  A0D8               	btfss	status,0,c
  7695  002932  D005               	goto	i2l2845
  7696  002934  5009               	movf	___awdiv@divisor^0,w,c
  7697  002936  5E07               	subwf	___awdiv@dividend^0,f,c
  7698  002938  500A               	movf	(___awdiv@divisor+1)^0,w,c
  7699  00293A  5A08               	subwfb	(___awdiv@dividend+1)^0,f,c
  7700  00293C  800D               	bsf	___awdiv@quotient^0,0,c
  7701  00293E                     i2l2845:
  7702  00293E  90D8               	bcf	status,0,c
  7703  002940  320A               	rrcf	(___awdiv@divisor+1)^0,f,c
  7704  002942  3209               	rrcf	___awdiv@divisor^0,f,c
  7705  002944  2E0B               	decfsz	___awdiv@counter^0,f,c
  7706  002946  D7ED               	goto	i2u250_40
  7707  002948                     i2l2849:
  7708  002948  500C               	movf	___awdiv@sign^0,w,c
  7709  00294A  B4D8               	btfsc	status,2,c
  7710  00294C  D004               	goto	i2l2853
  7711  00294E  6C0D               	negf	___awdiv@quotient^0,c
  7712  002950  1E0E               	comf	(___awdiv@quotient+1)^0,f,c
  7713  002952  B0D8               	btfsc	status,0,c
  7714  002954  2A0E               	incf	(___awdiv@quotient+1)^0,f,c
  7715  002956                     i2l2853:
  7716  002956  C00D  F007         	movff	___awdiv@quotient,?___awdiv
  7717  00295A  C00E  F008         	movff	___awdiv@quotient+1,?___awdiv+1
  7718  00295E  0012               	return		;funcret
  7719  002960                     __end_of___awdiv:
  7720                           	callstack 0
  7721                           
  7722 ;; *************** function ___awtoft *****************
  7723 ;; Defined at:
  7724 ;;		line 32 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\awtoft.c"
  7725 ;; Parameters:    Size  Location     Type
  7726 ;;  c               2    8[COMRAM] int 
  7727 ;; Auto vars:     Size  Location     Type
  7728 ;;  sign            1   11[COMRAM] unsigned char 
  7729 ;; Return value:  Size  Location     Type
  7730 ;;                  3    8[COMRAM] float 
  7731 ;; Registers used:
  7732 ;;		wreg, status,2, status,0, cstack
  7733 ;; Tracked objects:
  7734 ;;		On entry : 3F/0
  7735 ;;		On exit  : 0/0
  7736 ;;		Unchanged: 0/0
  7737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7738 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7739 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7740 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7741 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7742 ;;Total ram usage:        4 bytes
  7743 ;; Hardware stack levels used: 1
  7744 ;; Hardware stack levels required when called: 1
  7745 ;; This function calls:
  7746 ;;		i2___ftpack
  7747 ;; This function is called by:
  7748 ;;		_TMR1_ISR
  7749 ;; This function uses a non-reentrant model
  7750 ;;
  7751                           
  7752                           	psect	text46
  7753  002E44                     __ptext46:
  7754                           	callstack 0
  7755  002E44                     ___awtoft:
  7756                           	callstack 23
  7757                           
  7758                           ; BSR set to: 0
  7759                           
  7760                           ;incstack = 0
  7761  002E44  0E00               	movlw	0
  7762  002E46  6E0C               	movwf	___awtoft@sign^0,c
  7763                           
  7764                           ; BSR set to: 0
  7765  002E48  AE0A               	btfss	(___awtoft@c+1)^0,7,c
  7766  002E4A  D006               	goto	i2l3721
  7767                           
  7768                           ; BSR set to: 0
  7769  002E4C  6C09               	negf	___awtoft@c^0,c
  7770  002E4E  1E0A               	comf	(___awtoft@c+1)^0,f,c
  7771  002E50  B0D8               	btfsc	status,0,c
  7772  002E52  2A0A               	incf	(___awtoft@c+1)^0,f,c
  7773                           
  7774                           ; BSR set to: 0
  7775  002E54  0E01               	movlw	1
  7776  002E56  6E0C               	movwf	___awtoft@sign^0,c
  7777  002E58                     i2l3721:
  7778                           
  7779                           ; BSR set to: 0
  7780  002E58  C009  F001         	movff	___awtoft@c,i2___ftpack@arg
  7781  002E5C  C00A  F002         	movff	___awtoft@c+1,i2___ftpack@arg+1
  7782  002E60  6A03               	clrf	(i2___ftpack@arg+2)^0,c
  7783  002E62  0E8E               	movlw	142
  7784  002E64  6E04               	movwf	i2___ftpack@exp^0,c
  7785  002E66  C00C  F005         	movff	___awtoft@sign,i2___ftpack@sign
  7786  002E6A  EC6F  F013         	call	i2___ftpack	;wreg free
  7787  002E6E  C001  F009         	movff	?i2___ftpack,?___awtoft
  7788  002E72  C002  F00A         	movff	?i2___ftpack+1,?___awtoft+1
  7789  002E76  C003  F00B         	movff	?i2___ftpack+2,?___awtoft+2
  7790  002E7A  0012               	return		;funcret
  7791  002E7C                     __end_of___awtoft:
  7792                           	callstack 0
  7793                           
  7794 ;; *************** function i2___ftpack *****************
  7795 ;; Defined at:
  7796 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\float.c"
  7797 ;; Parameters:    Size  Location     Type
  7798 ;;  arg             3    0[COMRAM] unsigned um
  7799 ;;  exp             1    3[COMRAM] unsigned char 
  7800 ;;  sign            1    4[COMRAM] unsigned char 
  7801 ;; Auto vars:     Size  Location     Type
  7802 ;;		None
  7803 ;; Return value:  Size  Location     Type
  7804 ;;                  3    0[COMRAM] float 
  7805 ;; Registers used:
  7806 ;;		wreg, status,2, status,0
  7807 ;; Tracked objects:
  7808 ;;		On entry : 0/0
  7809 ;;		On exit  : 0/0
  7810 ;;		Unchanged: 0/0
  7811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7812 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7813 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7814 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7815 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7816 ;;Total ram usage:        8 bytes
  7817 ;; Hardware stack levels used: 1
  7818 ;; This function calls:
  7819 ;;		Nothing
  7820 ;; This function is called by:
  7821 ;;		___awtoft
  7822 ;;		___ftadd
  7823 ;;		___ftmul
  7824 ;;		i2___lltoft
  7825 ;; This function uses a non-reentrant model
  7826 ;;
  7827                           
  7828                           	psect	text47
  7829  0026DE                     __ptext47:
  7830                           	callstack 0
  7831  0026DE                     i2___ftpack:
  7832                           	callstack 22
  7833                           
  7834                           ;incstack = 0
  7835  0026DE  5004               	movf	i2___ftpack@exp^0,w,c
  7836  0026E0  B4D8               	btfsc	status,2,c
  7837  0026E2  D005               	goto	i2u206_40
  7838  0026E4  5001               	movf	i2___ftpack@arg^0,w,c
  7839  0026E6  1002               	iorwf	(i2___ftpack@arg+1)^0,w,c
  7840  0026E8  1003               	iorwf	(i2___ftpack@arg+2)^0,w,c
  7841  0026EA  A4D8               	btfss	status,2,c
  7842  0026EC  D00C               	goto	i2l2579
  7843  0026EE                     i2u206_40:
  7844  0026EE  0E00               	movlw	0
  7845  0026F0  6E01               	movwf	?i2___ftpack^0,c
  7846  0026F2  0E00               	movlw	0
  7847  0026F4  6E02               	movwf	(?i2___ftpack+1)^0,c
  7848  0026F6  0E00               	movlw	0
  7849  0026F8  6E03               	movwf	(?i2___ftpack+2)^0,c
  7850  0026FA  0012               	return	
  7851  0026FC                     i2l2577:
  7852  0026FC  2A04               	incf	i2___ftpack@exp^0,f,c
  7853  0026FE  90D8               	bcf	status,0,c
  7854  002700  3203               	rrcf	(i2___ftpack@arg+2)^0,f,c
  7855  002702  3202               	rrcf	(i2___ftpack@arg+1)^0,f,c
  7856  002704  3201               	rrcf	i2___ftpack@arg^0,f,c
  7857  002706                     i2l2579:
  7858  002706  0E00               	movlw	0
  7859  002708  1401               	andwf	i2___ftpack@arg^0,w,c
  7860  00270A  6E06               	movwf	??i2___ftpack^0,c
  7861  00270C  0E00               	movlw	0
  7862  00270E  1402               	andwf	(i2___ftpack@arg+1)^0,w,c
  7863  002710  6E07               	movwf	(??i2___ftpack+1)^0,c
  7864  002712  0EFE               	movlw	254
  7865  002714  1403               	andwf	(i2___ftpack@arg+2)^0,w,c
  7866  002716  6E08               	movwf	(??i2___ftpack+2)^0,c
  7867  002718  5006               	movf	??i2___ftpack^0,w,c
  7868  00271A  1007               	iorwf	(??i2___ftpack+1)^0,w,c
  7869  00271C  1008               	iorwf	(??i2___ftpack+2)^0,w,c
  7870  00271E  B4D8               	btfsc	status,2,c
  7871  002720  D00C               	goto	i2l2585
  7872  002722  D7EC               	goto	i2l2577
  7873  002724                     i2l2581:
  7874  002724  2A04               	incf	i2___ftpack@exp^0,f,c
  7875  002726  0E01               	movlw	1
  7876  002728  2601               	addwf	i2___ftpack@arg^0,f,c
  7877  00272A  0E00               	movlw	0
  7878  00272C  2202               	addwfc	(i2___ftpack@arg+1)^0,f,c
  7879  00272E  0E00               	movlw	0
  7880  002730  2203               	addwfc	(i2___ftpack@arg+2)^0,f,c
  7881  002732  90D8               	bcf	status,0,c
  7882  002734  3203               	rrcf	(i2___ftpack@arg+2)^0,f,c
  7883  002736  3202               	rrcf	(i2___ftpack@arg+1)^0,f,c
  7884  002738  3201               	rrcf	i2___ftpack@arg^0,f,c
  7885  00273A                     i2l2585:
  7886  00273A  0E00               	movlw	0
  7887  00273C  1401               	andwf	i2___ftpack@arg^0,w,c
  7888  00273E  6E06               	movwf	??i2___ftpack^0,c
  7889  002740  0E00               	movlw	0
  7890  002742  1402               	andwf	(i2___ftpack@arg+1)^0,w,c
  7891  002744  6E07               	movwf	(??i2___ftpack+1)^0,c
  7892  002746  0EFF               	movlw	255
  7893  002748  1403               	andwf	(i2___ftpack@arg+2)^0,w,c
  7894  00274A  6E08               	movwf	(??i2___ftpack+2)^0,c
  7895  00274C  5006               	movf	??i2___ftpack^0,w,c
  7896  00274E  1007               	iorwf	(??i2___ftpack+1)^0,w,c
  7897  002750  1008               	iorwf	(??i2___ftpack+2)^0,w,c
  7898  002752  B4D8               	btfsc	status,2,c
  7899  002754  D006               	goto	i2l2589
  7900  002756  D7E6               	goto	i2l2581
  7901  002758                     i2l2587:
  7902  002758  0604               	decf	i2___ftpack@exp^0,f,c
  7903  00275A  90D8               	bcf	status,0,c
  7904  00275C  3601               	rlcf	i2___ftpack@arg^0,f,c
  7905  00275E  3602               	rlcf	(i2___ftpack@arg+1)^0,f,c
  7906  002760  3603               	rlcf	(i2___ftpack@arg+2)^0,f,c
  7907  002762                     i2l2589:
  7908  002762  BE02               	btfsc	(i2___ftpack@arg+1)^0,7,c
  7909  002764  D003               	goto	i2u210_40
  7910  002766  0E02               	movlw	2
  7911  002768  6004               	cpfslt	i2___ftpack@exp^0,c
  7912  00276A  D7F6               	goto	i2l2587
  7913  00276C                     i2u210_40:
  7914  00276C  A004               	btfss	i2___ftpack@exp^0,0,c
  7915  00276E  9E02               	bcf	(i2___ftpack@arg+1)^0,7,c
  7916  002770  90D8               	bcf	status,0,c
  7917  002772  3204               	rrcf	i2___ftpack@exp^0,f,c
  7918  002774  5004               	movf	i2___ftpack@exp^0,w,c
  7919  002776  1203               	iorwf	(i2___ftpack@arg+2)^0,f,c
  7920  002778  5005               	movf	i2___ftpack@sign^0,w,c
  7921  00277A  A4D8               	btfss	status,2,c
  7922  00277C  8E03               	bsf	(i2___ftpack@arg+2)^0,7,c
  7923  00277E  C001  F001         	movff	i2___ftpack@arg,?i2___ftpack
  7924  002782  C002  F002         	movff	i2___ftpack@arg+1,?i2___ftpack+1
  7925  002786  C003  F003         	movff	i2___ftpack@arg+2,?i2___ftpack+2
  7926  00278A  0012               	return		;funcret
  7927  00278C                     __end_ofi2___ftpack:
  7928                           	callstack 0
  7929                           
  7930 ;; *************** function _DataLCD *****************
  7931 ;; Defined at:
  7932 ;;		line 263 in file "PIC18F46K22_PCA9685_ROBOR_2R.c"
  7933 ;; Parameters:    Size  Location     Type
  7934 ;;		None
  7935 ;; Auto vars:     Size  Location     Type
  7936 ;;		None
  7937 ;; Return value:  Size  Location     Type
  7938 ;;                  1    wreg      void 
  7939 ;; Registers used:
  7940 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7941 ;; Tracked objects:
  7942 ;;		On entry : 0/0
  7943 ;;		On exit  : 3F/0
  7944 ;;		Unchanged: 0/0
  7945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7946 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7947 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7948 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7949 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7950 ;;Total ram usage:        2 bytes
  7951 ;; Hardware stack levels used: 1
  7952 ;; Hardware stack levels required when called: 2
  7953 ;; This function calls:
  7954 ;;		_WriteLCD
  7955 ;;		_strlen
  7956 ;; This function is called by:
  7957 ;;		_TMR1_ISR
  7958 ;; This function uses a non-reentrant model
  7959 ;;
  7960                           
  7961                           	psect	text48
  7962  002CC2                     __ptext48:
  7963                           	callstack 0
  7964  002CC2                     _DataLCD:
  7965                           	callstack 22
  7966                           
  7967                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 264: for (i = 0; i <= strlen(text)-1; i++) {
  7968                           
  7969                           ;incstack = 0
  7970  002CC2  0E00               	movlw	0
  7971  002CC4  0100               	movlb	0	; () banked
  7972  002CC6  6FB7               	movwf	(_i+1)& (0+255),b
  7973  002CC8  0E00               	movlw	0
  7974  002CCA  6FB6               	movwf	_i& (0+255),b
  7975  002CCC  D00A               	goto	i2l3693
  7976  002CCE                     i2l3689:
  7977                           
  7978                           ; BSR set to: 0
  7979                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 265: WriteLCD(text[i]);
  7980  002CCE  51B6               	movf	_i& (0+255),w,b
  7981  002CD0  0FBA               	addlw	low _text
  7982  002CD2  6ED9               	movwf	fsr2l,c
  7983  002CD4  6ADA               	clrf	fsr2h,c
  7984  002CD6  50DF               	movf	indf2,w,c
  7985  002CD8  ECD9  F017         	call	_WriteLCD
  7986  002CDC  0100               	movlb	0	; () banked
  7987  002CDE  4BB6               	infsnz	_i& (0+255),f,b
  7988  002CE0  2BB7               	incf	(_i+1)& (0+255),f,b
  7989  002CE2                     i2l3693:
  7990                           
  7991                           ; BSR set to: 0
  7992  002CE2  0EFF               	movlw	255
  7993  002CE4  6E04               	movwf	??_DataLCD^0,c
  7994  002CE6  0EFF               	movlw	255
  7995  002CE8  6E05               	movwf	(??_DataLCD+1)^0,c
  7996  002CEA  0EBA               	movlw	low _text
  7997  002CEC  6E01               	movwf	strlen@s^0,c
  7998  002CEE  EC91  F017         	call	_strlen	;wreg free
  7999  002CF2  5004               	movf	??_DataLCD^0,w,c
  8000  002CF4  2601               	addwf	?_strlen^0,f,c
  8001  002CF6  5005               	movf	(??_DataLCD+1)^0,w,c
  8002  002CF8  2202               	addwfc	(?_strlen+1)^0,f,c
  8003  002CFA  51B6               	movf	_i& (0+255),w,b
  8004  002CFC  5C01               	subwf	?_strlen^0,w,c
  8005  002CFE  51B7               	movf	(_i+1)& (0+255),w,b
  8006  002D00  5802               	subwfb	(?_strlen+1)^0,w,c
  8007  002D02  A0D8               	btfss	status,0,c
  8008  002D04  0012               	return	
  8009  002D06  D7E3               	goto	i2l3689
  8010  002D08                     __end_of_DataLCD:
  8011                           	callstack 0
  8012                           
  8013 ;; *************** function _strlen *****************
  8014 ;; Defined at:
  8015 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\strlen.c"
  8016 ;; Parameters:    Size  Location     Type
  8017 ;;  s               1    0[COMRAM] PTR const unsigned char 
  8018 ;;		 -> text(20), 
  8019 ;; Auto vars:     Size  Location     Type
  8020 ;;  cp              1    2[COMRAM] PTR const unsigned char 
  8021 ;;		 -> text(20), 
  8022 ;; Return value:  Size  Location     Type
  8023 ;;                  2    0[COMRAM] unsigned int 
  8024 ;; Registers used:
  8025 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8026 ;; Tracked objects:
  8027 ;;		On entry : 3F/0
  8028 ;;		On exit  : 3F/0
  8029 ;;		Unchanged: 3F/0
  8030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8031 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8032 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8033 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8034 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8035 ;;Total ram usage:        3 bytes
  8036 ;; Hardware stack levels used: 1
  8037 ;; This function calls:
  8038 ;;		Nothing
  8039 ;; This function is called by:
  8040 ;;		_DataLCD
  8041 ;; This function uses a non-reentrant model
  8042 ;;
  8043                           
  8044                           	psect	text49
  8045  002F22                     __ptext49:
  8046                           	callstack 0
  8047  002F22                     _strlen:
  8048                           	callstack 23
  8049                           
  8050                           ; BSR set to: 0
  8051                           
  8052                           ; BSR set to: 0
  8053                           ;incstack = 0
  8054  002F22  C001  F003         	movff	strlen@s,strlen@cp
  8055  002F26  D001               	goto	i2l3085
  8056  002F28                     i2l3083:
  8057                           
  8058                           ; BSR set to: 0
  8059  002F28  2A03               	incf	strlen@cp^0,f,c
  8060  002F2A                     i2l3085:
  8061                           
  8062                           ; BSR set to: 0
  8063  002F2A  5003               	movf	strlen@cp^0,w,c
  8064  002F2C  6ED9               	movwf	fsr2l,c
  8065  002F2E  6ADA               	clrf	fsr2h,c
  8066  002F30  50DF               	movf	indf2,w,c
  8067  002F32  A4D8               	btfss	status,2,c
  8068  002F34  D7F9               	goto	i2l3083
  8069                           
  8070                           ; BSR set to: 0
  8071  002F36  5001               	movf	strlen@s^0,w,c
  8072  002F38  5C03               	subwf	strlen@cp^0,w,c
  8073  002F3A  6E01               	movwf	?_strlen^0,c
  8074  002F3C  6A02               	clrf	(?_strlen+1)^0,c
  8075  002F3E  BE01               	btfsc	?_strlen^0,7,c
  8076  002F40  0602               	decf	(?_strlen+1)^0,f,c
  8077                           
  8078                           ; BSR set to: 0
  8079  002F42  0012               	return		;funcret
  8080  002F44                     __end_of_strlen:
  8081                           	callstack 0
  8082                           
  8083 ;; *************** function _WriteLCD *****************
  8084 ;; Defined at:
  8085 ;;		line 242 in file "PIC18F46K22_PCA9685_ROBOR_2R.c"
  8086 ;; Parameters:    Size  Location     Type
  8087 ;;  word            1    wreg     unsigned char 
  8088 ;; Auto vars:     Size  Location     Type
  8089 ;;  word            1    2[COMRAM] unsigned char 
  8090 ;; Return value:  Size  Location     Type
  8091 ;;                  1    wreg      void 
  8092 ;; Registers used:
  8093 ;;		wreg, status,2, status,0, cstack
  8094 ;; Tracked objects:
  8095 ;;		On entry : 3F/0
  8096 ;;		On exit  : 0/0
  8097 ;;		Unchanged: 0/0
  8098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8099 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8100 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8101 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8102 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8103 ;;Total ram usage:        1 bytes
  8104 ;; Hardware stack levels used: 1
  8105 ;; Hardware stack levels required when called: 1
  8106 ;; This function calls:
  8107 ;;		i2_LCD
  8108 ;; This function is called by:
  8109 ;;		_DataLCD
  8110 ;; This function uses a non-reentrant model
  8111 ;;
  8112                           
  8113                           	psect	text50
  8114  002FB2                     __ptext50:
  8115                           	callstack 0
  8116  002FB2                     _WriteLCD:
  8117                           	callstack 22
  8118                           
  8119                           ; BSR set to: 0
  8120                           ;incstack = 0
  8121                           ;WriteLCD@word stored from wreg
  8122  002FB2  6E03               	movwf	WriteLCD@word^0,c
  8123                           
  8124                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 243: LATEbits.LATE1 = 1;
  8125  002FB4  828D               	bsf	141,1,c	;volatile
  8126                           
  8127                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 244: LCD(word >> 4);
  8128  002FB6  3803               	swapf	WriteLCD@word^0,w,c
  8129  002FB8  0B0F               	andlw	15
  8130  002FBA  EC1C  F014         	call	i2_LCD
  8131                           
  8132                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 245: LCD(word & 0x0F);
  8133  002FBE  5003               	movf	WriteLCD@word^0,w,c
  8134  002FC0  0B0F               	andlw	15
  8135  002FC2  EC1C  F014         	call	i2_LCD
  8136  002FC6  0012               	return		;funcret
  8137  002FC8                     __end_of_WriteLCD:
  8138                           	callstack 0
  8139                           
  8140 ;; *************** function i2_LCD *****************
  8141 ;; Defined at:
  8142 ;;		line 248 in file "PIC18F46K22_PCA9685_ROBOR_2R.c"
  8143 ;; Parameters:    Size  Location     Type
  8144 ;;  data            1    wreg     unsigned char 
  8145 ;; Auto vars:     Size  Location     Type
  8146 ;;  data            1    1[COMRAM] unsigned char 
  8147 ;; Return value:  Size  Location     Type
  8148 ;;                  1    wreg      void 
  8149 ;; Registers used:
  8150 ;;		wreg, status,2, status,0, cstack
  8151 ;; Tracked objects:
  8152 ;;		On entry : 0/0
  8153 ;;		On exit  : 0/0
  8154 ;;		Unchanged: 0/0
  8155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8156 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8157 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8158 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8159 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8160 ;;Total ram usage:        2 bytes
  8161 ;; Hardware stack levels used: 1
  8162 ;; This function calls:
  8163 ;;		Nothing
  8164 ;; This function is called by:
  8165 ;;		_WriteLCD
  8166 ;;		i2_SettingsLCD
  8167 ;; This function uses a non-reentrant model
  8168 ;;
  8169                           
  8170                           	psect	text51
  8171  002838                     __ptext51:
  8172                           	callstack 0
  8173  002838                     i2_LCD:
  8174                           	callstack 23
  8175                           
  8176                           ;incstack = 0
  8177                           ;i2LCD@data stored from wreg
  8178  002838  6E02               	movwf	i2LCD@data^0,c
  8179                           
  8180                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 249: LATEbits.LATE0 = 1;
  8181  00283A  808D               	bsf	141,0,c	;volatile
  8182                           
  8183                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 250: _delay((unsigned long)((10)*(16000000/4000000.0)))
      +                          ;
  8184  00283C  0E0D               	movlw	13
  8185  00283E                     i2u394_47:
  8186  00283E  2EE8               	decfsz	wreg,f,c
  8187  002840  D7FE               	bra	i2u394_47
  8188  002842  F000               	nop	
  8189                           
  8190                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 251: LATDbits.LATD0 = (data & 0x01);
  8191  002844  C002  F001         	movff	i2LCD@data,??i2_LCD
  8192  002848  0E01               	movlw	1
  8193  00284A  1601               	andwf	??i2_LCD^0,f,c
  8194  00284C  508C               	movf	140,w,c	;volatile
  8195  00284E  1801               	xorwf	??i2_LCD^0,w,c
  8196  002850  0BFE               	andlw	-2
  8197  002852  1801               	xorwf	??i2_LCD^0,w,c
  8198  002854  6E8C               	movwf	140,c	;volatile
  8199                           
  8200                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 252: _delay((unsigned long)((10)*(16000000/4000000.0)))
      +                          ;
  8201  002856  0E0D               	movlw	13
  8202  002858                     i2u395_47:
  8203  002858  2EE8               	decfsz	wreg,f,c
  8204  00285A  D7FE               	bra	i2u395_47
  8205  00285C  F000               	nop	
  8206                           
  8207                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 253: LATDbits.LATD1 = (data & 0x02) >> 1;
  8208  00285E  C002  F001         	movff	i2LCD@data,??i2_LCD
  8209  002862  90D8               	bcf	status,0,c
  8210  002864  3201               	rrcf	??i2_LCD^0,f,c
  8211  002866  0E01               	movlw	1
  8212  002868  1601               	andwf	??i2_LCD^0,f,c
  8213  00286A  4601               	rlncf	??i2_LCD^0,f,c
  8214  00286C  508C               	movf	140,w,c	;volatile
  8215  00286E  1801               	xorwf	??i2_LCD^0,w,c
  8216  002870  0BFD               	andlw	-3
  8217  002872  1801               	xorwf	??i2_LCD^0,w,c
  8218  002874  6E8C               	movwf	140,c	;volatile
  8219                           
  8220                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 254: _delay((unsigned long)((10)*(16000000/4000000.0)))
      +                          ;
  8221  002876  0E0D               	movlw	13
  8222  002878                     i2u396_47:
  8223  002878  2EE8               	decfsz	wreg,f,c
  8224  00287A  D7FE               	bra	i2u396_47
  8225  00287C  F000               	nop	
  8226                           
  8227                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 255: LATDbits.LATD2 = (data & 0x04) >> 2;
  8228  00287E  C002  F001         	movff	i2LCD@data,??i2_LCD
  8229  002882  90D8               	bcf	status,0,c
  8230  002884  3201               	rrcf	??i2_LCD^0,f,c
  8231  002886  90D8               	bcf	status,0,c
  8232  002888  3201               	rrcf	??i2_LCD^0,f,c
  8233  00288A  0E01               	movlw	1
  8234  00288C  1601               	andwf	??i2_LCD^0,f,c
  8235  00288E  4601               	rlncf	??i2_LCD^0,f,c
  8236  002890  4601               	rlncf	??i2_LCD^0,f,c
  8237  002892  508C               	movf	140,w,c	;volatile
  8238  002894  1801               	xorwf	??i2_LCD^0,w,c
  8239  002896  0BFB               	andlw	-5
  8240  002898  1801               	xorwf	??i2_LCD^0,w,c
  8241  00289A  6E8C               	movwf	140,c	;volatile
  8242                           
  8243                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 256: _delay((unsigned long)((10)*(16000000/4000000.0)))
      +                          ;
  8244  00289C  0E0D               	movlw	13
  8245  00289E                     i2u397_47:
  8246  00289E  2EE8               	decfsz	wreg,f,c
  8247  0028A0  D7FE               	bra	i2u397_47
  8248  0028A2  F000               	nop	
  8249                           
  8250                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 257: LATDbits.LATD3 = (data & 0x08) >> 3;
  8251  0028A4  C002  F001         	movff	i2LCD@data,??i2_LCD
  8252  0028A8  90D8               	bcf	status,0,c
  8253  0028AA  3201               	rrcf	??i2_LCD^0,f,c
  8254  0028AC  90D8               	bcf	status,0,c
  8255  0028AE  3201               	rrcf	??i2_LCD^0,f,c
  8256  0028B0  90D8               	bcf	status,0,c
  8257  0028B2  3201               	rrcf	??i2_LCD^0,f,c
  8258  0028B4  0E01               	movlw	1
  8259  0028B6  1601               	andwf	??i2_LCD^0,f,c
  8260  0028B8  4601               	rlncf	??i2_LCD^0,f,c
  8261  0028BA  4601               	rlncf	??i2_LCD^0,f,c
  8262  0028BC  4601               	rlncf	??i2_LCD^0,f,c
  8263  0028BE  508C               	movf	140,w,c	;volatile
  8264  0028C0  1801               	xorwf	??i2_LCD^0,w,c
  8265  0028C2  0BF7               	andlw	-9
  8266  0028C4  1801               	xorwf	??i2_LCD^0,w,c
  8267  0028C6  6E8C               	movwf	140,c	;volatile
  8268                           
  8269                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 258: _delay((unsigned long)((10)*(16000000/4000000.0)))
      +                          ;
  8270  0028C8  0E0D               	movlw	13
  8271  0028CA                     i2u398_47:
  8272  0028CA  2EE8               	decfsz	wreg,f,c
  8273  0028CC  D7FE               	bra	i2u398_47
  8274  0028CE  F000               	nop	
  8275                           
  8276                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 259: LATEbits.LATE0 = 0;
  8277  0028D0  908D               	bcf	141,0,c	;volatile
  8278                           
  8279                           ;PIC18F46K22_PCA9685_ROBOR_2R.c: 260: _delay((unsigned long)((10)*(16000000/4000000.0)))
      +                          ;
  8280  0028D2  0E0D               	movlw	13
  8281  0028D4                     i2u399_47:
  8282  0028D4  2EE8               	decfsz	wreg,f,c
  8283  0028D6  D7FE               	bra	i2u399_47
  8284  0028D8  F000               	nop	
  8285  0028DA  0012               	return		;funcret
  8286  0028DC                     __end_ofi2_LCD:
  8287                           	callstack 0
  8288                           
  8289                           	psect	rparam
  8290  0000                     
  8291                           	psect	temp
  8292  00005F                     btemp:
  8293                           	callstack 0
  8294  00005F                     	ds	1
  8295  0000                     int$flags	set	btemp
  8296  0000                     wtemp8	set	btemp+1
  8297  0000                     ttemp5	set	btemp+1
  8298  0000                     ttemp6	set	btemp+4
  8299  0000                     ttemp7	set	btemp+8
  8300                           
  8301                           	psect	idloc
  8302                           
  8303                           ;Config register IDLOC0 @ 0x200000
  8304                           ;	unspecified, using default values
  8305  200000                     	org	2097152
  8306  200000  FF                 	db	255
  8307                           
  8308                           ;Config register IDLOC1 @ 0x200001
  8309                           ;	unspecified, using default values
  8310  200001                     	org	2097153
  8311  200001  FF                 	db	255
  8312                           
  8313                           ;Config register IDLOC2 @ 0x200002
  8314                           ;	unspecified, using default values
  8315  200002                     	org	2097154
  8316  200002  FF                 	db	255
  8317                           
  8318                           ;Config register IDLOC3 @ 0x200003
  8319                           ;	unspecified, using default values
  8320  200003                     	org	2097155
  8321  200003  FF                 	db	255
  8322                           
  8323                           ;Config register IDLOC4 @ 0x200004
  8324                           ;	unspecified, using default values
  8325  200004                     	org	2097156
  8326  200004  FF                 	db	255
  8327                           
  8328                           ;Config register IDLOC5 @ 0x200005
  8329                           ;	unspecified, using default values
  8330  200005                     	org	2097157
  8331  200005  FF                 	db	255
  8332                           
  8333                           ;Config register IDLOC6 @ 0x200006
  8334                           ;	unspecified, using default values
  8335  200006                     	org	2097158
  8336  200006  FF                 	db	255
  8337                           
  8338                           ;Config register IDLOC7 @ 0x200007
  8339                           ;	unspecified, using default values
  8340  200007                     	org	2097159
  8341  200007  FF                 	db	255
  8342                           
  8343                           	psect	config
  8344                           
  8345                           ; Padding undefined space
  8346  300000                     	org	3145728
  8347  300000  FF                 	db	255
  8348                           
  8349                           ;Config register CONFIG1H @ 0x300001
  8350                           ;	Oscillator Selection bits
  8351                           ;	FOSC = INTIO67, Internal oscillator block
  8352                           ;	4X PLL Enable
  8353                           ;	PLLCFG = 0x0, unprogrammed default
  8354                           ;	Primary clock enable bit
  8355                           ;	PRICLKEN = 0x1, unprogrammed default
  8356                           ;	Fail-Safe Clock Monitor Enable bit
  8357                           ;	FCMEN = 0x0, unprogrammed default
  8358                           ;	Internal/External Oscillator Switchover bit
  8359                           ;	IESO = 0x0, unprogrammed default
  8360  300001                     	org	3145729
  8361  300001  28                 	db	40
  8362                           
  8363                           ;Config register CONFIG2L @ 0x300002
  8364                           ;	unspecified, using default values
  8365                           ;	Power-up Timer Enable bit
  8366                           ;	PWRTEN = 0x1, unprogrammed default
  8367                           ;	Brown-out Reset Enable bits
  8368                           ;	BOREN = 0x3, unprogrammed default
  8369                           ;	Brown Out Reset Voltage bits
  8370                           ;	BORV = 0x3, unprogrammed default
  8371  300002                     	org	3145730
  8372  300002  1F                 	db	31
  8373                           
  8374                           ;Config register CONFIG2H @ 0x300003
  8375                           ;	Watchdog Timer Enable bits
  8376                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
  8377                           ;	Watchdog Timer Postscale Select bits
  8378                           ;	WDTPS = 0xF, unprogrammed default
  8379  300003                     	org	3145731
  8380  300003  3C                 	db	60
  8381                           
  8382                           ; Padding undefined space
  8383  300004                     	org	3145732
  8384  300004  FF                 	db	255
  8385                           
  8386                           ;Config register CONFIG3H @ 0x300005
  8387                           ;	unspecified, using default values
  8388                           ;	CCP2 MUX bit
  8389                           ;	CCP2MX = 0x1, unprogrammed default
  8390                           ;	PORTB A/D Enable bit
  8391                           ;	PBADEN = 0x1, unprogrammed default
  8392                           ;	P3A/CCP3 Mux bit
  8393                           ;	CCP3MX = 0x1, unprogrammed default
  8394                           ;	HFINTOSC Fast Start-up
  8395                           ;	HFOFST = 0x1, unprogrammed default
  8396                           ;	Timer3 Clock input mux bit
  8397                           ;	T3CMX = 0x1, unprogrammed default
  8398                           ;	ECCP2 B output mux bit
  8399                           ;	P2BMX = 0x1, unprogrammed default
  8400                           ;	MCLR Pin Enable bit
  8401                           ;	MCLRE = 0x1, unprogrammed default
  8402  300005                     	org	3145733
  8403  300005  BF                 	db	191
  8404                           
  8405                           ;Config register CONFIG4L @ 0x300006
  8406                           ;	Stack Full/Underflow Reset Enable bit
  8407                           ;	STVREN = 0x1, unprogrammed default
  8408                           ;	Single-Supply ICSP Enable bit
  8409                           ;	LVP = OFF, Single-Supply ICSP disabled
  8410                           ;	Extended Instruction Set Enable bit
  8411                           ;	XINST = 0x0, unprogrammed default
  8412                           ;	Background Debug
  8413                           ;	DEBUG = 0x1, unprogrammed default
  8414  300006                     	org	3145734
  8415  300006  81                 	db	129
  8416                           
  8417                           ; Padding undefined space
  8418  300007                     	org	3145735
  8419  300007  FF                 	db	255
  8420                           
  8421                           ;Config register CONFIG5L @ 0x300008
  8422                           ;	unspecified, using default values
  8423                           ;	Code Protection Block 0
  8424                           ;	CP0 = 0x1, unprogrammed default
  8425                           ;	Code Protection Block 1
  8426                           ;	CP1 = 0x1, unprogrammed default
  8427                           ;	Code Protection Block 2
  8428                           ;	CP2 = 0x1, unprogrammed default
  8429                           ;	Code Protection Block 3
  8430                           ;	CP3 = 0x1, unprogrammed default
  8431  300008                     	org	3145736
  8432  300008  0F                 	db	15
  8433                           
  8434                           ;Config register CONFIG5H @ 0x300009
  8435                           ;	unspecified, using default values
  8436                           ;	Boot Block Code Protection bit
  8437                           ;	CPB = 0x1, unprogrammed default
  8438                           ;	Data EEPROM Code Protection bit
  8439                           ;	CPD = 0x1, unprogrammed default
  8440  300009                     	org	3145737
  8441  300009  C0                 	db	192
  8442                           
  8443                           ;Config register CONFIG6L @ 0x30000A
  8444                           ;	unspecified, using default values
  8445                           ;	Write Protection Block 0
  8446                           ;	WRT0 = 0x1, unprogrammed default
  8447                           ;	Write Protection Block 1
  8448                           ;	WRT1 = 0x1, unprogrammed default
  8449                           ;	Write Protection Block 2
  8450                           ;	WRT2 = 0x1, unprogrammed default
  8451                           ;	Write Protection Block 3
  8452                           ;	WRT3 = 0x1, unprogrammed default
  8453  30000A                     	org	3145738
  8454  30000A  0F                 	db	15
  8455                           
  8456                           ;Config register CONFIG6H @ 0x30000B
  8457                           ;	unspecified, using default values
  8458                           ;	Configuration Register Write Protection bit
  8459                           ;	WRTC = 0x1, unprogrammed default
  8460                           ;	Boot Block Write Protection bit
  8461                           ;	WRTB = 0x1, unprogrammed default
  8462                           ;	Data EEPROM Write Protection bit
  8463                           ;	WRTD = 0x1, unprogrammed default
  8464  30000B                     	org	3145739
  8465  30000B  E0                 	db	224
  8466                           
  8467                           ;Config register CONFIG7L @ 0x30000C
  8468                           ;	unspecified, using default values
  8469                           ;	Table Read Protection Block 0
  8470                           ;	EBTR0 = 0x1, unprogrammed default
  8471                           ;	Table Read Protection Block 1
  8472                           ;	EBTR1 = 0x1, unprogrammed default
  8473                           ;	Table Read Protection Block 2
  8474                           ;	EBTR2 = 0x1, unprogrammed default
  8475                           ;	Table Read Protection Block 3
  8476                           ;	EBTR3 = 0x1, unprogrammed default
  8477  30000C                     	org	3145740
  8478  30000C  0F                 	db	15
  8479                           
  8480                           ;Config register CONFIG7H @ 0x30000D
  8481                           ;	unspecified, using default values
  8482                           ;	Boot Block Table Read Protection bit
  8483                           ;	EBTRB = 0x1, unprogrammed default
  8484  30000D                     	org	3145741
  8485  30000D  40                 	db	64
  8486                           tosu	equ	0xFFF
  8487                           tosh	equ	0xFFE
  8488                           tosl	equ	0xFFD
  8489                           stkptr	equ	0xFFC
  8490                           pclatu	equ	0xFFB
  8491                           pclath	equ	0xFFA
  8492                           pcl	equ	0xFF9
  8493                           tblptru	equ	0xFF8
  8494                           tblptrh	equ	0xFF7
  8495                           tblptrl	equ	0xFF6
  8496                           tablat	equ	0xFF5
  8497                           prodh	equ	0xFF4
  8498                           prodl	equ	0xFF3
  8499                           indf0	equ	0xFEF
  8500                           postinc0	equ	0xFEE
  8501                           postdec0	equ	0xFED
  8502                           preinc0	equ	0xFEC
  8503                           plusw0	equ	0xFEB
  8504                           fsr0h	equ	0xFEA
  8505                           fsr0l	equ	0xFE9
  8506                           wreg	equ	0xFE8
  8507                           indf1	equ	0xFE7
  8508                           postinc1	equ	0xFE6
  8509                           postdec1	equ	0xFE5
  8510                           preinc1	equ	0xFE4
  8511                           plusw1	equ	0xFE3
  8512                           fsr1h	equ	0xFE2
  8513                           fsr1l	equ	0xFE1
  8514                           bsr	equ	0xFE0
  8515                           indf2	equ	0xFDF
  8516                           postinc2	equ	0xFDE
  8517                           postdec2	equ	0xFDD
  8518                           preinc2	equ	0xFDC
  8519                           plusw2	equ	0xFDB
  8520                           fsr2h	equ	0xFDA
  8521                           fsr2l	equ	0xFD9
  8522                           status	equ	0xFD8

Data Sizes:
    Strings     26
    Constant    118
    Data        2
    BSS         51
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     94      94
    BANK0           160     67     120
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(1) Largest target is 20
		 -> text(BANK0[20]), 

    strlen@cp	PTR const unsigned char  size(1) Largest target is 20
		 -> text(BANK0[20]), 

    sprintf@f	PTR const unsigned char  size(1) Largest target is 13
		 -> STR_2(CODE[13]), STR_1(CODE[13]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 20
		 -> text(BANK0[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    writeI2C@Data	PTR unsigned char  size(1) Largest target is 4
		 -> data3(BANK0[4]), data2(BANK0[4]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _TMR1_ISR in COMRAM

    _TMR1_ISR->_sprintf
    i2_SettingsLCD->i2_LCD
    _writeI2C->i2_sendI2C
    i2_stopI2C->i2_readyI2C
    i2_startI2C->i2_readyI2C
    i2_sendI2C->i2_readyI2C
    _sprintf->___ftsub
    i2___lltoft->i2___ftpack
    i2___fttol->_scale
    _scale->___ftmul
    _fround->___ftmul
    ___lbdiv->___lbmod
    ___ftmul->___awdiv
    ___ftsub->___ftadd
    ___ftadd->_fround
    _map->i2___fttol
    ___wmul->___awdiv
    ___awdiv->___awmod
    ___awtoft->i2___ftpack
    _DataLCD->_WriteLCD
    _DataLCD->_strlen
    _WriteLCD->i2_LCD

Critical Paths under _main in BANK0

    _main->_settings
    _settings->_setPWMFreq
    _setPWMFreq->___fttol
    _writeI2C1->_sendI2C
    _readI2C1->_receiveI2C
    _stopI2C->_readyI2C
    _startI2C->_readyI2C
    _sendI2C->_readyI2C
    _repeatedStart->_readyI2C
    _receiveI2C->_readyI2C
    ___lltoft->___ftpack
    ___fttol->___ftdiv
    ___ftdiv->___lltoft
    _SettingsLCD->_LCD

Critical Paths under _TMR1_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _TMR1_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _TMR1_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _TMR1_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _TMR1_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _TMR1_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _TMR1_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _TMR1_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _TMR1_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _TMR1_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _TMR1_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _TMR1_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _TMR1_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _TMR1_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _TMR1_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _TMR1_ISR in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    9968
                           _settings
 ---------------------------------------------------------------------------------
 (1) _settings                                             2     2      0    9968
                                             65 BANK0      2     2      0
                        _SettingsLCD
                         _setPWMFreq
                          _writeI2C1
 ---------------------------------------------------------------------------------
 (2) _setPWMFreq                                          10     7      3    8988
                                             56 BANK0      9     6      3
                            ___ftdiv
                             ___ftge
                            ___fttol
                           ___lltoft
                           _readI2C1
                          _writeI2C1
 ---------------------------------------------------------------------------------
 (2) _writeI2C1                                            3     1      2     848
                                             11 BANK0      3     1      2
                            _sendI2C
                           _startI2C
                            _stopI2C
 ---------------------------------------------------------------------------------
 (3) _readI2C1                                             7     3      4     408
                                             13 BANK0      7     3      4
                         _receiveI2C
                      _repeatedStart
                            _sendI2C
                           _startI2C
                            _stopI2C
 ---------------------------------------------------------------------------------
 (3) _stopI2C                                              0     0      0       0
                           _readyI2C
 ---------------------------------------------------------------------------------
 (3) _startI2C                                             0     0      0       0
                           _readyI2C
 ---------------------------------------------------------------------------------
 (3) _sendI2C                                              1     1      0      22
                                             10 BANK0      1     1      0
                           _readyI2C
 ---------------------------------------------------------------------------------
 (4) _repeatedStart                                        0     0      0       0
                           _readyI2C
 ---------------------------------------------------------------------------------
 (4) _receiveI2C                                           3     3      0      45
                                             10 BANK0      3     3      0
                           _readyI2C
 ---------------------------------------------------------------------------------
 (4) _readyI2C                                             1     1      0       0
                                              9 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) ___lltoft                                             9     5      4    2844
                                             17 BANK0      9     5      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___fttol                                             15    11      4     578
                                             41 BANK0     15    11      4
                            ___ftdiv (ARG)
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftge                                               9     3      6     740
                                              9 BANK0      9     3      6
 ---------------------------------------------------------------------------------
 (3) ___ftdiv                                             15     9      6    3209
                                             26 BANK0     15     9      6
                           ___ftpack
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    2649
                                              9 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (2) _SettingsLCD                                          1     1      0     132
                                             11 BANK0      1     1      0
                                _LCD
 ---------------------------------------------------------------------------------
 (3) _LCD                                                  2     2      0      88
                                              9 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _TMR1_ISR                                             9     9      0   40091
                                              0 BANK0      9     9      0
                            _DataLCD
                           ___awtoft
                            ___ftadd
                            ___ftmul
                                _map
                            _sprintf
                           _writeI2C
                      i2_SettingsLCD
                          i2___fttol
 ---------------------------------------------------------------------------------
 (7) i2_SettingsLCD                                        1     1      0     132
                                              2 COMRAM     1     1      0
                              i2_LCD
 ---------------------------------------------------------------------------------
 (7) _writeI2C                                             5     1      4     567
                                              2 COMRAM     5     1      4
                          i2_sendI2C
                         i2_startI2C
                          i2_stopI2C
 ---------------------------------------------------------------------------------
 (8) i2_stopI2C                                            0     0      0       0
                         i2_readyI2C
 ---------------------------------------------------------------------------------
 (8) i2_startI2C                                           0     0      0       0
                         i2_readyI2C
 ---------------------------------------------------------------------------------
 (8) i2_sendI2C                                            1     1      0      22
                                              1 COMRAM     1     1      0
                         i2_readyI2C
 ---------------------------------------------------------------------------------
 (9) i2_readyI2C                                           1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _sprintf                                             41    36      5   28075
                                             61 COMRAM    33    28      5
                            ___awdiv
                            ___ftadd
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___lldiv
                            ___llmod
                             ___wmul
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
                           i2___ftge
                          i2___fttol
                         i2___lltoft
 ---------------------------------------------------------------------------------
 (8) i2___lltoft                                           9     5      4     638
                                              8 COMRAM     9     5      4
                         i2___ftpack
 ---------------------------------------------------------------------------------
 (7) i2___fttol                                           15    11      4     382
                                             40 COMRAM    15    11      4
                            ___ftmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (8) i2___ftge                                             9     3      6     292
                                              0 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (8) _scale                                               11     8      3    6748
                                             29 COMRAM    11     8      3
                            ___awdiv
                            ___awmod
                            ___ftmul
 ---------------------------------------------------------------------------------
 (9) ___awmod                                              6     2      4    1208
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (8) _isdigit                                              3     3      0      68
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (8) _fround                                              14    11      3    4603
                                             29 COMRAM    14    11      3
                            ___ftmul
                            ___lbdiv
                            ___lbmod
 ---------------------------------------------------------------------------------
 (9) ___lbmod                                              4     3      1     387
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (9) ___lbdiv                                              4     3      1     390
                                              4 COMRAM     4     3      1
                            ___lbmod (ARG)
 ---------------------------------------------------------------------------------
 (9) ___ftmul                                             15     9      6    3581
                                             14 COMRAM    15     9      6
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           ___awtoft (ARG)
                            ___lbdiv (ARG)
                            ___lbmod (ARG)
                         i2___ftpack
 ---------------------------------------------------------------------------------
 (8) __tdiv_to_l_                                         15     9      6     455
                                              0 COMRAM    15     9      6
 ---------------------------------------------------------------------------------
 (8) __div_to_l_                                          12     6      6     598
                                              0 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (8) ___llmod                                              9     1      8     615
                                              0 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (8) ___lldiv                                             13     5      8     466
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (8) ___ftsub                                              6     0      6    2614
                                             55 COMRAM     6     0      6
                            ___ftadd
                         i2___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (9) ___ftadd                                             12     6      6    2269
                                             43 COMRAM    12     6      6
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                             _fround (ARG)
                         i2___ftpack
 ---------------------------------------------------------------------------------
 (8) ___ftneg                                              3     0      3     121
                                              0 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (7) _map                                                 10     0     10    3345
                                             55 COMRAM    10     0     10
                            ___awdiv
                             ___wmul
                          i2___fttol (ARG)
 ---------------------------------------------------------------------------------
 (8) ___wmul                                               6     2      4     915
                                             14 COMRAM     6     2      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (9) ___awdiv                                              8     4      4    1516
                                              6 COMRAM     8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___awtoft                                             4     1      3     938
                                              8 COMRAM     4     1      3
                         i2___ftpack
 ---------------------------------------------------------------------------------
 (9) i2___ftpack                                           8     3      5     543
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (7) _DataLCD                                              2     2      0     361
                                              3 COMRAM     2     2      0
                           _WriteLCD
                             _strlen
 ---------------------------------------------------------------------------------
 (8) _strlen                                               3     1      2     229
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (8) _WriteLCD                                             1     1      0     132
                                              2 COMRAM     1     1      0
                              i2_LCD
 ---------------------------------------------------------------------------------
 (8) i2_LCD                                                2     2      0      88
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _settings
     _SettingsLCD
       _LCD
     _setPWMFreq
       ___ftdiv
         ___ftpack
         ___lltoft (ARG)
           ___ftpack
       ___ftge
       ___fttol
         ___ftdiv (ARG)
         ___lltoft (ARG)
       ___lltoft
       _readI2C1
         _receiveI2C
           _readyI2C
         _repeatedStart
           _readyI2C
         _sendI2C
           _readyI2C
         _startI2C
           _readyI2C
         _stopI2C
           _readyI2C
       _writeI2C1
         _sendI2C
         _startI2C
         _stopI2C
     _writeI2C1

 _TMR1_ISR (ROOT)
   _DataLCD
     _WriteLCD
       i2_LCD
     _strlen
   ___awtoft
     i2___ftpack
   ___ftadd
     ___awtoft (ARG)
     ___ftmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___awtoft (ARG)
       ___lbdiv (ARG)
         ___lbmod (ARG)
       ___lbmod (ARG)
       i2___ftpack (ARG)
     _fround (ARG)
       ___ftmul
       ___lbdiv
       ___lbmod
     i2___ftpack (ARG)
   ___ftmul
   _map
     ___awdiv
     ___wmul
       ___awdiv (ARG)
     i2___fttol (ARG)
       ___ftmul (ARG)
       _scale (ARG)
         ___awdiv
         ___awmod
         ___ftmul
   _sprintf
     ___awdiv
     ___ftadd
     ___ftmul
     ___ftneg
     ___ftsub
       ___ftadd
       i2___lltoft (ARG)
         i2___ftpack
     ___lldiv
     ___llmod
     ___wmul
     __div_to_l_
     __tdiv_to_l_
     _fround
     _isdigit
     _scale
     i2___ftge
     i2___fttol
     i2___lltoft
   _writeI2C
     i2_sendI2C
       i2_readyI2C
     i2_startI2C
       i2_readyI2C
     i2_stopI2C
       i2_readyI2C
   i2_SettingsLCD
     i2_LCD
   i2___fttol

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      48        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     43      78       5       75.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5E      5E       1      100.0%
BITBIGSFRlhll       4F      0       0      45        0.0%
BITBANK15           38      0       0      34        0.0%
BANK15              38      0       0      35        0.0%
BITBIGSFRhl         1E      0       0      37        0.0%
BITBIGSFRlhhhl      15      0       0      40        0.0%
BITBIGSFRhh          D      0       0      36        0.0%
BITBIGSFRlhhllh      C      0       0      42        0.0%
BITBIGSFRlhhhhh      7      0       0      38        0.0%
BITBIGSFRlhlh        6      0       0      44        0.0%
BITBIGSFRlhhlll      6      0       0      43        0.0%
BITBIGSFRll          2      0       0      46        0.0%
BITBIGSFRlhhhhl      1      0       0      39        0.0%
BITBIGSFRlhhlh       1      0       0      41        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      D6      47        0.0%
DATA                 0      0      D6       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Wed Mar 22 17:42:56 2023

                      _a 00A9                        _b 00A6                        _c 00A3  
                      _i 00B6             ___awdiv@sign 000C      ___wmul@multiplicand 0011  
             i2___ftpack 26DE             ___ftadd@exp1 0037             ___ftadd@exp2 0036  
             i2___lltoft 2C66             ___ftadd@sign 0035                      l210 1EBA  
                    l123 3032                      l681 2384                      _GIE 007F97  
                    _LCD 278C                      _led 00AC                      _map 2D4C  
                    _pos 00B2             ___awmod@sign 0006                      wreg 000FE8  
          i2_SettingsLCD 2F9C                     ?_LCD 0001             ___ftdiv@cntr 0083  
           ___ftdiv@sign 0088                     l3001 2C10                     l3003 2C1C  
                   l3063 1F66                     l3047 1E8E                     l3067 1F82  
                   l2541 264E                     l2551 26AA                     l2543 2658  
                   l2553 26B4                     l2545 2676                     l2731 2320  
                   l2635 2B62                     l2549 268C                     l2725 22F8  
                   l2901 2A26                     l2645 2B92                     l2751 235E  
                   l2639 2B84                     l2907 2A52                     l2917 24B6  
                   ?_map 0038                     l2935 250C                     l2953 254C  
                   l2945 2524                     l2947 2530                     l2939 251C  
                   l2897 2A04                     STR_1 1077                     STR_2 1084  
                   u2020 26BE                     _LATD 000F8C                     _LATE 000F8D  
                   u2361 22E0                     u2381 2308                     u2621 249A  
                   u2630 24A4                     u2640 24D4                     u2810 1F72  
                   u2645 24CC                     u1950 2DEE                     u2680 2536  
                   _PEIE 007F96                     u1980 2640                     u1968 2DF2  
                   u3907 27D0                     u2795 1F2E                     u3917 27F8  
                   u3927 2826                     u3937 2830                     u3857 243E  
                   u3867 2476                     u3877 1FCE                     u3887 2792  
                   u3897 27AE                     _flag 00D6                     _main 302E  
           ___ftpack@arg 0069               i2_readyI2C 2FDC             ___ftpack@exp 006C  
                   _text 00BA                     fsr2h 000FDA                     indf2 000FDF  
                   map@x 0038                     fsr2l 000FD9                     btemp 005F  
           i2___ftge@ff1 0001             i2___ftge@ff2 0004          __end_of_DataLCD 2D08  
                   prodh 000FF4                     prodl 000FF3                     start 03B8  
       writeI2C1@Address 006D             _sprintf$1116 0049             ___ftmul@cntr 001C  
           ___param_bank 000000             ___ftmul@sign 001D             i2___fttol@f1 0029  
                  ??_LCD 0069               i2_startI2C 3026             ___fttol@exp1 0097  
                  ??_map 0042             i2___lltoft@c 0009             ___fttol@lval 0093  
        writeI2C@Address 0007                    ?_main 0001          __end_of___awdiv 2960  
        __end_of___lbdiv 2E44          __end_of___ftadd 1E62          __end_of___awmod 2B3A  
        __end_of___lbmod 2ED8          __end_of___ftdiv 23B6          __end_of___ftneg 2F22  
        __end_of___lldiv 29E2          __end_of___ftmul 21DC          ___awdiv@divisor 0009  
        __end_of___llmod 2C0A          __end_of___ftsub 2DCE          __end_of___fttol 255E  
                  _RC1IE 007CED                    _RC1IF 007CF5                    _LATD6 007C66  
                  _LATD7 007C67                    i2l305 154E                    i2l350 29D0  
                  i2l158 0394                    i2l720 2F14                    i2l670 1DF0  
                  i2l765 2BF8                    i2l688 206A                    i2l689 2092  
        ___awdiv@counter 000B                    i2_LCD 2838                    _TRISD 000F95  
                  _TRISE 000F96             ___lltoft@exp 0079         __end_of_TMR1_ISR 03B8  
         ?i2_SettingsLCD 0001                    _data1 00B8                    _data2 00D2  
                  _data3 00CE            ___awtoft@sign 000C          __end_of_dpowers 1077  
                  _scale 1746          __end_of_isdigit 2F80          __end_of_sendI2C 2FFA  
          ___ftpack@sign 006D                    _servo 00B9                    tablat 000FF5  
       __end_ofi2___ftge 2ACA          __end_of_stopI2C 300E                    ttemp5 0060  
                  ttemp6 0063                    ttemp7 0067                    status 000FD8  
             _DriverPin1 00B0               _DriverPin2 00AE                    wtemp8 0060  
        __end_of_sprintf 1746          ___lbdiv@divisor 0005          ___lbdiv@counter 0007  
        __initialization 2E7C             __end_of_main 3034              ?i2___ftpack 0001  
  __end_of_repeatedStart 301E              ?i2___lltoft 0009                   ??_main 00A3  
          ___fttol@sign1 0092            __activetblptr 000002                   ?i2_LCD 0001  
      writeI2C1@Register 006B           receiveI2C@flag 006B         ___llmod@dividend 0001  
                 ?_scale 001E         ___awdiv@dividend 0007         __end_of___awtoft 2E7C  
                 _ANSELC 000F3A                   _ANSELD 000F3B                   _ANSELE 000F3C  
       __end_of___ftpack 26DE         __end_of_WriteLCD 2FC8                ??_DataLCD 0004  
           readI2C1@Data 006E         __end_of___lltoft 2C66                   i2l3101 1BD8  
                 i2l3123 1858                   i2l3205 20AC                   i2l3109 1C78  
                 i2l3141 1A20                   i2l3133 1916                   i2l3311 2DA4  
                 i2l3303 29C2                   i2l3215 20C4                   i2l3225 21FA  
                 i2l3217 20D0                   i2l3209 20BC                   i2l3129 18F0  
                 i2l3401 2602                   i2l3083 2F28                   i2l3331 2BEA  
                 i2l3323 2BB6                   i2l3147 1AB8                   i2l3085 2F2A  
                 i2l3325 2BC2                   i2l3253 2278                   i2l3245 2248  
                 i2l3413 2C6C                   i2l3501 111C                   i2l3159 2F78  
                 i2l3351 2A78                   i2l3407 261E                   i2l3415 2C78  
                 i2l3511 1142                   i2l3503 1132                   i2l2705 1E0C  
                 i2l3265 2294                   i2l3169 2016                   i2l2801 2192  
                 i2l3361 2AC6                   i2l3513 1166                   i2l2715 1E3C  
                 i2l3291 2982                   i2l3275 22AC                   i2l3355 2A9A  
                 i2l3371 258A                   i2l3507 113E                   i2l2581 2724  
                 i2l2821 28F0                   i2l3293 298E                   i2l3277 22B8  
                 i2l3269 22A4                   i2l2805 21A2                   i2l2663 1D32  
                 i2l3623 152A                   i2l3607 1480                   i2l3615 150E  
                 i2l3519 117A                   i2l3703 2D26                   i2l2585 273A  
                 i2l2577 26FC                   i2l3721 2E58                   i2l2833 2916  
                 i2l2657 1D0A                   i2l3393 25EE                   i2l3641 15BC  
                 i2l3617 1518                   i2l3561 130A                   i2l3553 12A8  
                 i2l3545 1244                   i2l3529 11B4                   i2l3481 1098  
                 i2l2587 2758                   i2l2579 2706                   i2l2835 291E  
                 i2l2827 2900                   i2l2771 2110                   i2l3651 169A  
                 i2l2589 2762                   i2l2853 2956                   i2l2845 293E  
                 i2l2685 1D84                   u215_41 1CCA                   i2l3389 25DE  
                 i2l3653 16A4                   i2l3637 156C                   i2l3629 1552  
                 i2l3573 1372                   i2l3557 12CC                   i2l3661 16C0  
                 i2l3485 10AA                   i2l3709 2D3A                   i2l2687 1D8E  
                 i2l2791 216A                   i2l3399 25F6                   i2l3583 13C6  
                 i2l3495 10D6                   i2l3487 10AE                   i2l2849 2948  
                 i2l2697 1DC2                   i2l2689 1D98                   i2l2777 2138  
                 i2l2881 2B18                   i2l2873 2AF8                   i2l2865 2ADE  
                 i2l3593 142E                   i2l3569 134E                   i2l3681 1720  
                 i2l2699 1DCC                   i2l2795 217A                   i2l2963 2E1C  
                 i2l2875 2B00                   i2l3667 16D8                   i2l3659 16B6  
                 i2l3587 142A                   i2l3739 004A                   i2l3693 2CE2  
                 u216_41 1CDE                   i2l2885 2B22                   i2l2869 2AEA  
                 i2l3765 00C8                   i2l3781 01FA                   i2l2975 2E38  
                 i2l2967 2E22                   i2l3791 022A                   i2l3775 0192  
                 i2l3689 2CCE                   i2l2993 2ED0                   i2l2985 2EB8  
                 i2l2889 2B30                   i2l3785 020C                   i2l3769 012A  
                 i2l2979 2E40                   i2l3795 023E                   u241_41 20F8  
                 i2l3797 0254                   u243_41 2120                   u319_41 256E  
                 _RCREG1 000FAE                   u292_41 1FFA                   u294_41 2026  
                 _RCSTA1 000FAB                   _OSCCON 000FD3                   _SPBRG1 000FAF  
            ?i2_readyI2C 0001       setPWMFreq@prescale 009C                   _TXSTA1 000FAC  
       __end_of__powers_ 1028                   ___ftge 29E2         __end_of_readI2C1 2BA4  
                 ___wmul 2ED8         writeI2C@Register 0003                ??___awdiv 000B  
              ??___lbdiv 0006                ??___ftadd 0032                ??___awmod 0005  
              ??___lbmod 0002              ?i2_startI2C 0001                ??___ftdiv 0080  
              ??___ftneg 0004                ??___lldiv 0009                ??___ftmul 0015  
              ??___llmod 0009                ??___ftsub 003E                ??___fttol 008D  
                 _confir 00B4         __end_of_readyI2C 2FDC                   _fround 1ADE  
                 clear_0 2E9A         ___awdiv@quotient 000D          ___awmod@divisor 0003  
                 isa$std 000001          ___awmod@counter 0005                   _strlen 2F22  
  ___ftmul@f3_as_product 0019                ??_isdigit 0001                ??_sendI2C 006A  
        ??i2_SettingsLCD 0003        __end_ofi2___fttol 2630             __mediumconst 0000  
          ??_SettingsLCD 006B         __end_of_settings 248A                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8         __end_of_startI2C 3016  
              ??_stopI2C 006A                ??_sprintf 0043         ___lbdiv@dividend 0006  
       __end_of_writeI2C 2D4C              sendI2C@data 006A        __end_ofi2_sendI2C 3006  
        ___lbmod@divisor 0001               __accesstop 0060  __end_of__initialization 2EA0  
           WriteLCD@word 0003          ___lbmod@counter 0003               ___ftadd@f1 002C  
             ___ftadd@f2 002F               ___ftge@ff1 0069               ___ftge@ff2 006C  
          ___rparam_used 000001        __end_ofi2_stopI2C 3026               ___ftdiv@f1 007A  
             ___ftdiv@f2 007D               ___ftdiv@f3 0084           setPWMFreq@freq 0098  
             ___ftneg@f1 0001            __end_ofi2_LCD 28DC               ___awtoft@c 0009  
         i2___ftpack@arg 0001           i2___ftpack@exp 0004               ___ftmul@f1 000F  
             ___ftmul@f2 0012               ___ftsub@f1 0038               ___ftsub@f2 003B  
             ___fttol@f1 0089           __pcstackCOMRAM 0001             __pidataBANK0 3034  
              ?_TMR1_ISR 0001               ___lltoft@c 0071            __end_of_scale 1ADE  
       ___lbdiv@quotient 0008           i2___fttol@exp1 0037           i2___fttol@lval 0033  
              ?i2___ftge 0001               __div_to_l_ 21DC                  ??i2_LCD 0001  
        __div_to_l_@exp1 000C          __div_to_l_@cntr 000B                  ??_scale 0021  
         i2___lltoft@exp 0011          __div_to_l_@quot 0007                  LCD@data 006A  
             __pbssBANK0 00A3      __end_of_SettingsLCD 2F9C            __div_to_l_@f1 0001  
          __div_to_l_@f2 0004                  ?___ftge 0069                  ?___wmul 000F  
             ??_TMR1_ISR 0060                  ?_fround 001E                ?___awtoft 0009  
              ?___ftpack 0069                ?_WriteLCD 0001                ?___lltoft 0071  
              TMR1_ISR@d 0068               ??i2___ftge 0007                  ?_strlen 0001  
          readI2C1@bytes 006F                  _SSP1ADD 000FC8                  _SSP1BUF 000FC9  
                _DataLCD 2CC2                ?_readI2C1 006D             writeI2C@Data 0004  
              ?_readyI2C 0001        __end_of__npowers_ 104F                  __Hparam 0000  
             _scale$1115 0025                  __Lparam 0000                ?_settings 0001  
                ___awdiv 28DC                  ___lbdiv 2E0A                  ___ftadd 1CBA  
              ?_startI2C 0001                  ___awmod 2ACA                  ___lbmod 2EAE  
                ___ftdiv 22D0                  ___ftneg 2EFE                  ___lldiv 2960  
                ___ftmul 20E8                  ___llmod 2BA4                  ___ftsub 2D8E  
                ___fttol 248A             __psmallconst 1000                i2LCD@data 0002  
                __pcinit 2E7C             ??i2___ftpack 0006               ??___awtoft 000C  
             ??___ftpack 006E               ??_WriteLCD 0003                ?_writeI2C 0003  
                __ramtop 1000             ??i2___lltoft 000D          readI2C1@Address 0073  
             ??___lltoft 0075                  __ptext0 302E                  __ptext1 23B6  
                __ptext2 1E62                  __ptext3 2F44                  __ptext4 2B3A  
                __ptext5 3006                  __ptext6 300E                  __ptext7 2FEE  
                __ptext8 3016                  __ptext9 2DCE              ?__div_to_l_ 0001  
                _dpowers 104F               _receiveI2C 2DCE                  _isdigit 2F62  
                _sendI2C 2FEE         ___awmod@dividend 0001               _setPWMFreq 1E62  
            _SettingsLCD 2F80                  _stopI2C 3006                  _sprintf 1092  
   end_of_initialization 2EA0               ??_readI2C1 0071             ??i2_readyI2C 0001  
          __Lmediumconst 0000               ??_readyI2C 0069       __end_ofi2___ftpack 278C  
     __end_ofi2___lltoft 2CC2          ___lldiv@divisor 0005          ___lldiv@counter 000D  
                postdec2 000FDD               ??_settings 00A1                  postinc0 000FEE  
                postinc2 000FDE             ??i2_startI2C 0002               ??_startI2C 006A  
             map@Out_Max 0040               map@Out_Min 003E           __tdiv_to_l_@f1 0001  
         __tdiv_to_l_@f2 0004                  strlen@s 0001            ??__tdiv_to_l_ 0007  
             ??_writeI2C 0007        __end_of_writeI2C1 2F62       __end_ofi2_readyI2C 2FEE  
       ___lbmod@dividend 0002    setPWMFreq@prescaleval 009D                _TRISCbits 000F94  
              i2___fttol 255E       __end_ofi2_startI2C 302E              ___lbmod@rem 0004  
            ___ftdiv@exp 0087          i2___ftpack@sign 0005                i2_sendI2C 2FFA  
            ___ftmul@exp 0018                i2_stopI2C 301E           __end_of___ftge 2A56  
         __end_of___wmul 2EFE           __end_of_fround 1CBA              ?_receiveI2C 0001  
         __end_of_strlen 2F44              ?_setPWMFreq 0098      start_initialization 2E7C  
            __end_of_LCD 2838      __end_of__tdiv_to_l_ 20E8    __end_ofi2_SettingsLCD 2FB2  
            __end_of_map 2D8E          i2___fttol@sign1 0032               ?i2___fttol 0029  
        ___llmod@divisor 0005          ___llmod@counter 0009               ?i2_sendI2C 0001  
               ??___ftge 006F               ?i2_stopI2C 0001                 ??___wmul 0013  
            __pdataBANK0 00D6                 ??_fround 0021            sprintf@tmpval 0055  
          _repeatedStart 3016                 ??_strlen 0003               fround@prec 002B  
          __pcstackBANK0 0060        i2SettingsLCD@word 0003                 ?_DataLCD 0001  
            sprintf@flag 004D              sprintf@eexp 0053              sprintf@fval 005B  
            sprintf@prec 0059         receiveI2C@buffer 006C                __pintcode 0008  
               ?___awdiv 0007                 ?___lbdiv 0005                 ?___ftadd 002C  
               ?___awmod 0001                 ?___lbmod 0001                 ?___ftdiv 007A  
               ?___ftneg 0001                 ?___lldiv 0001                 ?___ftmul 000F  
               ?___llmod 0001                 ?___ftsub 0038                __npowers_ 1028  
               ?___fttol 0089           ?_repeatedStart 0001              __tdiv_to_l_ 1FEA  
           ??__div_to_l_ 0007              __smallconst 1000                 ?_isdigit 0001  
               ?_sendI2C 0001             ?_SettingsLCD 0001                 ?_stopI2C 0001  
               ?_sprintf 003E              ??i2___fttol 002D           ___wmul@product 0013  
               _LATDbits 000F8C                 _LATEbits 000F8D              ??i2_sendI2C 0002  
              map@In_Max 003C                map@In_Min 003A                 i2u210_40 276C  
               i2u300_40 20D6                 i2u301_40 21E8                 i2u206_40 26EE  
               i2u222_40 1D24                 i2u232_40 1DD4                 i2u320_40 2578  
               i2u225_40 1D62                 i2u321_40 25A8                 i2u321_45 25A0  
               i2u250_40 2922                 i2u314_40 2BC6                 i2u219_40 1CFC  
               i2u307_40 22BE                 i2u340_40 131A                 i2u229_40 1DA0  
               i2u309_40 2992                 i2u325_40 2608                 i2u350_40 1548  
               i2u271_40 2E26                 i2u343_40 134E                 i2u335_40 11EC  
               i2u335_45 11E2                 i2u256_40 2B04       __end_of__div_to_l_ 22D0  
               i2u346_40 1466                 i2u339_40 12DC                 i2u293_40 2004  
               i2u349_40 1538                 i2u365_40 0044                 i2u357_41 1708  
               i2u359_40 173A                 i2u375_40 009A                 i2u394_47 283E  
               i2u395_47 2858                 i2u396_47 2878                 i2u397_47 289E  
               i2u398_47 28CA                 i2u399_47 28D4              ??i2_stopI2C 0002  
               _SSP1CON1 000FC6                 _SSP1CON2 000FC5                 _SSP1CON3 000FCB  
               _TMR1_ISR 0008                 _SSP1STAT 000FC7        ___wmul@multiplier 000F  
               i2___ftge 2A56            writeI2C1@Data 006C                _writeI2C1 2F44  
          writeI2C@bytes 0005                 __Hrparam 0000                 __Lrparam 0000  
        ??_repeatedStart 006A                 ___awtoft 2E44                 ___ftpack 2630  
               _WriteLCD 2FB2              _fround$1113 0028              _fround$1114 0025  
               ___lltoft 2C0A              _isdigit$922 0002             ??_receiveI2C 006A  
             sprintf@val 004F             ??_setPWMFreq 009B               ?_writeI2C1 006B  
               __ptext10 2FC8                 __ptext11 2C0A                 __ptext20 2D08  
               __ptext12 248A                 __ptext21 301E                 __ptext13 29E2  
               __ptext30 2ACA                 __ptext22 3026                 __ptext14 22D0  
               __ptext31 2F62                 __ptext23 2FFA                 __ptext15 2630  
               __ptext40 2D8E                 __ptext32 1ADE                 __ptext24 2FDC  
               __ptext16 2F80                 __ptext41 1CBA                 __ptext33 2EAE  
               __ptext25 1092                 __ptext17 278C                 __ptext50 2FB2  
               __ptext42 2EFE                 __ptext34 2E0A                 __ptext26 2C66  
               __ptext51 2838                 __ptext43 2D4C                 __ptext35 20E8  
               __ptext27 255E                 __ptext19 2F9C                 __ptext44 2ED8  
               __ptext36 1FEA                 __ptext28 2A56                 __ptext45 28DC  
               __ptext37 21DC                 __ptext29 1746                 __ptext46 2E44  
               __ptext38 2BA4                 __ptext47 26DE                 __ptext39 2960  
               __ptext48 2CC2                 __ptext49 2F22             _SSP1CON2bits 000FC5  
               __powers_ 1001                 _readI2C1 2B3A            i2sendI2C@data 0002  
               _readyI2C 2FC8       __end_of_receiveI2C 2E0A                 isa$xinst 000000  
     __end_of_setPWMFreq 1FEA                 _settings 23B6                 int$flags 005F  
               _startI2C 300E         readI2C1@Register 006D                 _writeI2C 2D08  
               isdigit@c 0003                 scale@scl 0028                 intlevel2 0000  
              sprintf@ap 004C         __tdiv_to_l_@exp1 000F                sprintf@sp 003E  
       __tdiv_to_l_@cntr 000E         __tdiv_to_l_@quot 000A         ___lldiv@dividend 0001  
           ?__tdiv_to_l_ 0001                 sprintf@c 005E                 sprintf@f 003F  
       ___lldiv@quotient 0009                 strlen@cp 0003              ??_writeI2C1 006D  
        SettingsLCD@word 006B  
