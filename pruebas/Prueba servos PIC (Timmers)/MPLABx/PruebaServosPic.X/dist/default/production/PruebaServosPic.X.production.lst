

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Sun Feb 19 10:40:50 2023

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og9 
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=2
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1
    71                           	psect	text55,global,reloc=2,class=CODE,delta=1
    72                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=2
    73                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=2
    74                           	psect	text58,global,reloc=2,class=CODE,delta=1
    75                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    76                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    77                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    78                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    79                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    80  0000                     
    81                           ; Version 2.36
    82                           ; Generated 28/01/2022 GMT
    83                           ; 
    84                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    85                           ; All rights reserved.
    86                           ; 
    87                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    88                           ; 
    89                           ; Redistribution and use in source and binary forms, with or without modification, are
    90                           ; permitted provided that the following conditions are met:
    91                           ; 
    92                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    93                           ;        conditions and the following disclaimer.
    94                           ; 
    95                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    96                           ;        of conditions and the following disclaimer in the documentation and/or other
    97                           ;        materials provided with the distribution. Publication is not required when
    98                           ;        this file is used in an embedded application.
    99                           ; 
   100                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   101                           ;        software without specific prior written permission.
   102                           ; 
   103                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   104                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   105                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   106                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   107                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   108                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   109                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   110                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   111                           ; 
   112                           ; 
   113                           ; Code-generator required, PIC18F46K22 Definitions
   114                           ; 
   115                           ; SFR Addresses
   116  0000                     
   117                           	psect	idataCOMRAM
   118  004558                     __pidataCOMRAM:
   119                           	callstack 0
   120                           
   121                           ;initializer for _servo
   122  004558  41                 	db	65
   123                           
   124                           	psect	idataBANK0
   125  004556                     __pidataBANK0:
   126                           	callstack 0
   127                           
   128                           ;initializer for _flag
   129  004556  0001               	dw	1
   130                           
   131                           	psect	smallconst
   132  001000                     __psmallconst:
   133                           	callstack 0
   134  001000  00                 	db	0
   135  001001                     __powers_:
   136                           	callstack 0
   137  001001  00                 	db	0
   138  001002  80                 	db	128
   139  001003  3F                 	db	63
   140  001004  00                 	db	0
   141  001005  20                 	db	32
   142  001006  41                 	db	65
   143  001007  00                 	db	0
   144  001008  C8                 	db	200
   145  001009  42                 	db	66
   146  00100A  00                 	db	0
   147  00100B  7A                 	db	122
   148  00100C  44                 	db	68
   149  00100D  40                 	db	64
   150  00100E  1C                 	db	28
   151  00100F  46                 	db	70
   152  001010  50                 	db	80
   153  001011  C3                 	db	195
   154  001012  47                 	db	71
   155  001013  24                 	db	36
   156  001014  74                 	db	116
   157  001015  49                 	db	73
   158  001016  97                 	db	151
   159  001017  18                 	db	24
   160  001018  4B                 	db	75
   161  001019  BC                 	db	188
   162  00101A  BE                 	db	190
   163  00101B  4C                 	db	76
   164  00101C  6B                 	db	107
   165  00101D  6E                 	db	110
   166  00101E  4E                 	db	78
   167  00101F  03                 	db	3
   168  001020  15                 	db	21
   169  001021  50                 	db	80
   170  001022  79                 	db	121
   171  001023  AD                 	db	173
   172  001024  60                 	db	96
   173  001025  F3                 	db	243
   174  001026  49                 	db	73
   175  001027  71                 	db	113
   176  001028                     __end_of__powers_:
   177                           	callstack 0
   178  001028                     __npowers_:
   179                           	callstack 0
   180  001028  00                 	db	0
   181  001029  80                 	db	128
   182  00102A  3F                 	db	63
   183  00102B  CD                 	db	205
   184  00102C  CC                 	db	204
   185  00102D  3D                 	db	61
   186  00102E  D7                 	db	215
   187  00102F  23                 	db	35
   188  001030  3C                 	db	60
   189  001031  12                 	db	18
   190  001032  83                 	db	131
   191  001033  3A                 	db	58
   192  001034  B7                 	db	183
   193  001035  D1                 	db	209
   194  001036  38                 	db	56
   195  001037  C6                 	db	198
   196  001038  27                 	db	39
   197  001039  37                 	db	55
   198  00103A  38                 	db	56
   199  00103B  86                 	db	134
   200  00103C  35                 	db	53
   201  00103D  C0                 	db	192
   202  00103E  D6                 	db	214
   203  00103F  33                 	db	51
   204  001040  CC                 	db	204
   205  001041  2B                 	db	43
   206  001042  32                 	db	50
   207  001043  70                 	db	112
   208  001044  89                 	db	137
   209  001045  30                 	db	48
   210  001046  E7                 	db	231
   211  001047  DB                 	db	219
   212  001048  2E                 	db	46
   213  001049  E5                 	db	229
   214  00104A  3C                 	db	60
   215  00104B  1E                 	db	30
   216  00104C  42                 	db	66
   217  00104D  A2                 	db	162
   218  00104E  0D                 	db	13
   219  00104F                     __end_of__npowers_:
   220                           	callstack 0
   221  00104F                     _dpowers:
   222                           	callstack 0
   223  00104F  0001               	dw	1
   224  001051  0000               	dw	0
   225  001053  000A               	dw	10
   226  001055  0000               	dw	0
   227  001057  0064               	dw	100
   228  001059  0000               	dw	0
   229  00105B  03E8               	dw	1000
   230  00105D  0000               	dw	0
   231  00105F  2710               	dw	10000
   232  001061  0000               	dw	0
   233  001063  86A0               	dw	34464
   234  001065  0001               	dw	1
   235  001067  4240               	dw	16960
   236  001069  000F               	dw	15
   237  00106B  9680               	dw	38528
   238  00106D  0098               	dw	152
   239  00106F  E100               	dw	57600
   240  001071  05F5               	dw	1525
   241  001073  CA00               	dw	51712
   242  001075  3B9A               	dw	15258
   243  001077                     __end_of_dpowers:
   244                           	callstack 0
   245  0000                     _LATDbits	set	3980
   246  0000                     _LATEbits	set	3981
   247  0000                     _T1CON	set	4045
   248  0000                     _LATD7	set	31847
   249  0000                     _LATD6	set	31846
   250  0000                     _TMR1IF	set	31984
   251  0000                     _TMR1IE	set	31976
   252  0000                     _PEIE	set	32662
   253  0000                     _ANSELC	set	3898
   254  0000                     _ANSELD	set	3899
   255  0000                     _TMR1ON	set	32360
   256  0000                     _TMR1	set	4046
   257  0000                     _OSCCON	set	4051
   258  0000                     _GIE	set	32663
   259  0000                     _LATD	set	3980
   260  0000                     _TRISD	set	3989
   261  0000                     _ANSELE	set	3900
   262  0000                     _RCSTA1	set	4011
   263  0000                     _SPBRG1	set	4015
   264  0000                     _TRISE	set	3990
   265  0000                     _RC1IE	set	31981
   266  0000                     _TRISCbits	set	3988
   267  0000                     _LATE	set	3981
   268  0000                     _RCREG1	set	4014
   269  0000                     _TXSTA1	set	4012
   270  0000                     _RC1IF	set	31989
   271  001077                     STR_1:
   272  001077  53                 	db	83	;'S'
   273  001078  65                 	db	101	;'e'
   274  001079  72                 	db	114	;'r'
   275  00107A  76                 	db	118	;'v'
   276  00107B  6F                 	db	111	;'o'
   277  00107C  20                 	db	32
   278  00107D  32                 	db	50	;'2'
   279  00107E  3A                 	db	58	;':'
   280  00107F  25                 	db	37
   281  001080  2E                 	db	46
   282  001081  35                 	db	53	;'5'
   283  001082  66                 	db	102	;'f'
   284  001083  00                 	db	0
   285  001084                     STR_2:
   286  001084  53                 	db	83	;'S'
   287  001085  65                 	db	101	;'e'
   288  001086  72                 	db	114	;'r'
   289  001087  76                 	db	118	;'v'
   290  001088  6F                 	db	111	;'o'
   291  001089  20                 	db	32
   292  00108A  31                 	db	49	;'1'
   293  00108B  3A                 	db	58	;':'
   294  00108C  25                 	db	37
   295  00108D  64                 	db	100	;'d'
   296  00108E  00                 	db	0
   297  00108F                     STR_4:
   298  00108F  53                 	db	83	;'S'
   299  001090  65                 	db	101	;'e'
   300  001091  72                 	db	114	;'r'
   301  001092  76                 	db	118	;'v'
   302  001093  6F                 	db	111	;'o'
   303  001094  20                 	db	32
   304  001095  32                 	db	50	;'2'
   305  001096  3A                 	db	58	;':'
   306  001097  25                 	db	37
   307  001098  64                 	db	100	;'d'
   308  001099  00                 	db	0
   309  00109A                     STR_3:
   310  00109A  44                 	db	68	;'D'
   311  00109B  43                 	db	67	;'C'
   312  00109C  3A                 	db	58	;':'
   313  00109D  25                 	db	37
   314  00109E  2E                 	db	46
   315  00109F  32                 	db	50	;'2'
   316  0010A0  66                 	db	102	;'f'
   317  0010A1  20                 	db	32
   318  0010A2  6D                 	db	109	;'m'
   319  0010A3  73                 	db	115	;'s'
   320  0010A4  00                 	db	0
   321  0010A5  00                 	db	0	; dummy byte at the end
   322  0000                     
   323                           ; #config settings
   324                           
   325                           	psect	cinit
   326  004136                     __pcinit:
   327                           	callstack 0
   328  004136                     start_initialization:
   329                           	callstack 0
   330  004136                     __initialization:
   331                           	callstack 0
   332                           
   333                           ; Initialize objects allocated to BANK0 (2 bytes)
   334                           ; load TBLPTR registers with __pidataBANK0
   335  004136  0E56               	movlw	low __pidataBANK0
   336  004138  6EF6               	movwf	tblptrl,c
   337  00413A  0E45               	movlw	high __pidataBANK0
   338  00413C  6EF7               	movwf	tblptrh,c
   339  00413E  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   340  004140  6EF8               	movwf	tblptru,c
   341  004142  0009               	tblrd		*+	;fetch initializer
   342  004144  CFF5 F0E3          	movff	tablat,__pdataBANK0
   343  004148  0009               	tblrd		*+	;fetch initializer
   344  00414A  CFF5 F0E4          	movff	tablat,__pdataBANK0+1
   345                           
   346                           ; Initialize objects allocated to COMRAM (1 bytes)
   347                           ; load TBLPTR registers with __pidataCOMRAM
   348  00414E  0E58               	movlw	low __pidataCOMRAM
   349  004150  6EF6               	movwf	tblptrl,c
   350  004152  0E45               	movlw	high __pidataCOMRAM
   351  004154  6EF7               	movwf	tblptrh,c
   352  004156  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   353  004158  6EF8               	movwf	tblptru,c
   354  00415A  0009               	tblrd		*+	;fetch initializer
   355  00415C  CFF5 F05B          	movff	tablat,__pdataCOMRAM
   356                           
   357                           ; Clear objects allocated to BANK1 (20 bytes)
   358  004160  EE01  F01F         	lfsr	0,__pbssBANK1
   359  004164  0E14               	movlw	20
   360  004166                     clear_0:
   361  004166  6AEE               	clrf	postinc0,c
   362  004168  06E8               	decf	wreg,f,c
   363  00416A  E1FD               	bnz	clear_0
   364                           
   365                           ; Clear objects allocated to BANK0 (21 bytes)
   366  00416C  EE00  F0CE         	lfsr	0,__pbssBANK0
   367  004170  0E15               	movlw	21
   368  004172                     clear_1:
   369  004172  6AEE               	clrf	postinc0,c
   370  004174  06E8               	decf	wreg,f,c
   371  004176  E1FD               	bnz	clear_1
   372  004178                     end_of_initialization:
   373                           	callstack 0
   374  004178                     __end_of__initialization:
   375                           	callstack 0
   376  004178  905C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   377  00417A  925C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   378  00417C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   379  00417E  6EF8               	movwf	tblptru,c
   380  004180  0100               	movlb	0
   381  004182  EF82  F01E         	goto	_main	;jump to C main() function
   382                           
   383                           	psect	dataCOMRAM
   384  00005B                     __pdataCOMRAM:
   385                           	callstack 0
   386  00005B                     _servo:
   387                           	callstack 0
   388  00005B                     	ds	1
   389                           
   390                           	psect	bssBANK0
   391  0000CE                     __pbssBANK0:
   392                           	callstack 0
   393  0000CE                     _time_low:
   394                           	callstack 0
   395  0000CE                     	ds	3
   396  0000D1                     _time_high:
   397                           	callstack 0
   398  0000D1                     	ds	3
   399  0000D4                     _degrees:
   400                           	callstack 0
   401  0000D4                     	ds	3
   402  0000D7                     _incremento:
   403                           	callstack 0
   404  0000D7                     	ds	2
   405  0000D9                     _i:
   406                           	callstack 0
   407  0000D9                     	ds	2
   408  0000DB                     _b:
   409                           	callstack 0
   410  0000DB                     	ds	2
   411  0000DD                     _a:
   412                           	callstack 0
   413  0000DD                     	ds	2
   414  0000DF                     _tl:
   415                           	callstack 0
   416  0000DF                     	ds	2
   417  0000E1                     _th:
   418                           	callstack 0
   419  0000E1                     	ds	2
   420                           
   421                           	psect	dataBANK0
   422  0000E3                     __pdataBANK0:
   423                           	callstack 0
   424  0000E3                     _flag:
   425                           	callstack 0
   426  0000E3                     	ds	2
   427                           
   428                           	psect	bssBANK1
   429  00011F                     __pbssBANK1:
   430                           	callstack 0
   431  00011F                     _text:
   432                           	callstack 0
   433  00011F                     	ds	20
   434                           
   435                           	psect	cstackBANK1
   436  000100                     __pcstackBANK1:
   437                           	callstack 0
   438  000100                     ??_sprintf:
   439                           
   440                           ; 1 bytes @ 0x0
   441  000100                     	ds	6
   442  000106                     _sprintf$942:
   443                           	callstack 0
   444                           
   445                           ; 3 bytes @ 0x6
   446  000106                     	ds	3
   447  000109                     sprintf@ap:
   448                           	callstack 0
   449                           
   450                           ; 1 bytes @ 0x9
   451  000109                     	ds	1
   452  00010A                     sprintf@flag:
   453                           	callstack 0
   454                           
   455                           ; 2 bytes @ 0xA
   456  00010A                     	ds	2
   457  00010C                     sprintf@eexp:
   458                           	callstack 0
   459                           
   460                           ; 2 bytes @ 0xC
   461  00010C                     	ds	2
   462  00010E                     sprintf@tmpval:
   463                           	callstack 0
   464                           
   465                           ; 4 bytes @ 0xE
   466  00010E                     	ds	4
   467  000112                     sprintf@val:
   468                           	callstack 0
   469                           
   470                           ; 4 bytes @ 0x12
   471  000112                     	ds	4
   472  000116                     sprintf@prec:
   473                           	callstack 0
   474                           
   475                           ; 2 bytes @ 0x16
   476  000116                     	ds	2
   477  000118                     sprintf@fval:
   478                           	callstack 0
   479                           
   480                           ; 3 bytes @ 0x18
   481  000118                     	ds	3
   482  00011B                     sprintf@c:
   483                           	callstack 0
   484                           
   485                           ; 1 bytes @ 0x1B
   486  00011B                     	ds	1
   487  00011C                     _main$937:
   488                           	callstack 0
   489                           
   490                           ; 3 bytes @ 0x1C
   491  00011C                     	ds	3
   492                           
   493                           	psect	cstackBANK0
   494  000060                     __pcstackBANK0:
   495                           	callstack 0
   496  000060                     i2_sprintf$1141:
   497                           	callstack 0
   498                           
   499                           ; 3 bytes @ 0x0
   500  000060                     	ds	3
   501  000063                     i2sprintf@ap:
   502                           	callstack 0
   503                           
   504                           ; 1 bytes @ 0x3
   505  000063                     	ds	1
   506  000064                     i2sprintf@flag:
   507                           	callstack 0
   508                           
   509                           ; 2 bytes @ 0x4
   510  000064                     	ds	2
   511  000066                     i2sprintf@eexp:
   512                           	callstack 0
   513                           
   514                           ; 2 bytes @ 0x6
   515  000066                     	ds	2
   516  000068                     i2sprintf@tmpval:
   517                           	callstack 0
   518                           
   519                           ; 4 bytes @ 0x8
   520  000068                     	ds	4
   521  00006C                     i2sprintf@val:
   522                           	callstack 0
   523                           
   524                           ; 4 bytes @ 0xC
   525  00006C                     	ds	4
   526  000070                     i2sprintf@prec:
   527                           	callstack 0
   528                           
   529                           ; 2 bytes @ 0x10
   530  000070                     	ds	2
   531  000072                     i2sprintf@fval:
   532                           	callstack 0
   533                           
   534                           ; 3 bytes @ 0x12
   535  000072                     	ds	3
   536  000075                     i2sprintf@c:
   537                           	callstack 0
   538                           
   539                           ; 1 bytes @ 0x15
   540  000075                     	ds	1
   541  000076                     _TMR1_ISR$1137:
   542                           	callstack 0
   543                           
   544                           ; 3 bytes @ 0x16
   545  000076                     	ds	3
   546  000079                     TMR1_ISR@d:
   547                           	callstack 0
   548                           
   549                           ; 1 bytes @ 0x19
   550  000079                     	ds	1
   551  00007A                     ??_LCD:
   552  00007A                     ??_isdigit:
   553  00007A                     ?_strlen:
   554                           	callstack 0
   555  00007A                     ?___wmul:
   556                           	callstack 0
   557  00007A                     ?___awmod:
   558                           	callstack 0
   559  00007A                     ?___ftpack:
   560                           	callstack 0
   561  00007A                     ?___ftneg:
   562                           	callstack 0
   563  00007A                     ?__tdiv_to_l_:
   564                           	callstack 0
   565  00007A                     ?__div_to_l_:
   566                           	callstack 0
   567  00007A                     ?___lldiv:
   568                           	callstack 0
   569  00007A                     ___lbmod@divisor:
   570                           	callstack 0
   571  00007A                     ___wmul@multiplier:
   572                           	callstack 0
   573  00007A                     ___awmod@dividend:
   574                           	callstack 0
   575  00007A                     strlen@s:
   576                           	callstack 0
   577  00007A                     __div_to_l_@f1:
   578                           	callstack 0
   579  00007A                     ___ftpack@arg:
   580                           	callstack 0
   581  00007A                     __tdiv_to_l_@f1:
   582                           	callstack 0
   583  00007A                     ___ftge@ff1:
   584                           	callstack 0
   585  00007A                     ___ftneg@f1:
   586                           	callstack 0
   587  00007A                     ___lldiv@dividend:
   588                           	callstack 0
   589                           
   590                           ; 4 bytes @ 0x1A
   591  00007A                     	ds	1
   592  00007B                     LCD@data:
   593                           	callstack 0
   594  00007B                     ___lbmod@dividend:
   595                           	callstack 0
   596  00007B                     _isdigit$750:
   597                           	callstack 0
   598                           
   599                           ; 1 bytes @ 0x1B
   600  00007B                     	ds	1
   601  00007C                     SettingsLCD@word:
   602                           	callstack 0
   603  00007C                     WriteLCD@word:
   604                           	callstack 0
   605  00007C                     ___lbmod@counter:
   606                           	callstack 0
   607  00007C                     isdigit@c:
   608                           	callstack 0
   609  00007C                     ___wmul@multiplicand:
   610                           	callstack 0
   611  00007C                     ___awmod@divisor:
   612                           	callstack 0
   613  00007C                     strlen@cp:
   614                           	callstack 0
   615                           
   616                           ; 2 bytes @ 0x1C
   617  00007C                     	ds	1
   618  00007D                     ___ftpack@exp:
   619                           	callstack 0
   620  00007D                     ___lbmod@rem:
   621                           	callstack 0
   622  00007D                     __div_to_l_@f2:
   623                           	callstack 0
   624  00007D                     __tdiv_to_l_@f2:
   625                           	callstack 0
   626  00007D                     ___ftge@ff2:
   627                           	callstack 0
   628                           
   629                           ; 3 bytes @ 0x1D
   630  00007D                     	ds	1
   631  00007E                     ??_DataLCD:
   632  00007E                     ___awmod@counter:
   633                           	callstack 0
   634  00007E                     ___ftpack@sign:
   635                           	callstack 0
   636  00007E                     ___lbdiv@divisor:
   637                           	callstack 0
   638  00007E                     ___wmul@product:
   639                           	callstack 0
   640  00007E                     ___lldiv@divisor:
   641                           	callstack 0
   642                           
   643                           ; 4 bytes @ 0x1E
   644  00007E                     	ds	1
   645  00007F                     ??___ftpack:
   646  00007F                     ___awmod@sign:
   647                           	callstack 0
   648  00007F                     ___lbdiv@dividend:
   649                           	callstack 0
   650                           
   651                           ; 1 bytes @ 0x1F
   652  00007F                     	ds	1
   653  000080                     ??__tdiv_to_l_:
   654  000080                     ??___ftge:
   655  000080                     ?___awdiv:
   656                           	callstack 0
   657  000080                     ___lbdiv@counter:
   658                           	callstack 0
   659  000080                     ___awdiv@dividend:
   660                           	callstack 0
   661  000080                     __div_to_l_@quot:
   662                           	callstack 0
   663                           
   664                           ; 4 bytes @ 0x20
   665  000080                     	ds	1
   666  000081                     ___lbdiv@quotient:
   667                           	callstack 0
   668                           
   669                           ; 1 bytes @ 0x21
   670  000081                     	ds	1
   671  000082                     ?___ftdiv:
   672                           	callstack 0
   673  000082                     ?___lltoft:
   674                           	callstack 0
   675  000082                     ___awdiv@divisor:
   676                           	callstack 0
   677  000082                     ___ftdiv@f1:
   678                           	callstack 0
   679  000082                     ___lldiv@quotient:
   680                           	callstack 0
   681  000082                     ___lltoft@c:
   682                           	callstack 0
   683                           
   684                           ; 4 bytes @ 0x22
   685  000082                     	ds	1
   686  000083                     __tdiv_to_l_@quot:
   687                           	callstack 0
   688                           
   689                           ; 4 bytes @ 0x23
   690  000083                     	ds	1
   691  000084                     ___awdiv@counter:
   692                           	callstack 0
   693  000084                     __div_to_l_@cntr:
   694                           	callstack 0
   695                           
   696                           ; 1 bytes @ 0x24
   697  000084                     	ds	1
   698  000085                     ___awdiv@sign:
   699                           	callstack 0
   700  000085                     __div_to_l_@exp1:
   701                           	callstack 0
   702  000085                     ___ftdiv@f2:
   703                           	callstack 0
   704                           
   705                           ; 3 bytes @ 0x25
   706  000085                     	ds	1
   707  000086                     ??___lltoft:
   708  000086                     ___lldiv@counter:
   709                           	callstack 0
   710  000086                     ___awdiv@quotient:
   711                           	callstack 0
   712                           
   713                           ; 2 bytes @ 0x26
   714  000086                     	ds	1
   715  000087                     ?___llmod:
   716                           	callstack 0
   717  000087                     __tdiv_to_l_@cntr:
   718                           	callstack 0
   719  000087                     ___llmod@dividend:
   720                           	callstack 0
   721                           
   722                           ; 4 bytes @ 0x27
   723  000087                     	ds	1
   724  000088                     ??___ftdiv:
   725  000088                     ?___ftmul:
   726                           	callstack 0
   727  000088                     __tdiv_to_l_@exp1:
   728                           	callstack 0
   729  000088                     ___ftmul@f1:
   730                           	callstack 0
   731                           
   732                           ; 3 bytes @ 0x28
   733  000088                     	ds	2
   734  00008A                     ___lltoft@exp:
   735                           	callstack 0
   736                           
   737                           ; 1 bytes @ 0x2A
   738  00008A                     	ds	1
   739  00008B                     ___ftdiv@cntr:
   740                           	callstack 0
   741  00008B                     ___ftmul@f2:
   742                           	callstack 0
   743  00008B                     ___llmod@divisor:
   744                           	callstack 0
   745                           
   746                           ; 4 bytes @ 0x2B
   747  00008B                     	ds	1
   748  00008C                     ___ftdiv@f3:
   749                           	callstack 0
   750                           
   751                           ; 3 bytes @ 0x2C
   752  00008C                     	ds	2
   753  00008E                     ??___ftmul:
   754                           
   755                           ; 1 bytes @ 0x2E
   756  00008E                     	ds	1
   757  00008F                     ___ftdiv@exp:
   758                           	callstack 0
   759  00008F                     ___llmod@counter:
   760                           	callstack 0
   761                           
   762                           ; 1 bytes @ 0x2F
   763  00008F                     	ds	1
   764  000090                     ___ftdiv@sign:
   765                           	callstack 0
   766                           
   767                           ; 1 bytes @ 0x30
   768  000090                     	ds	1
   769  000091                     ___ftmul@exp:
   770                           	callstack 0
   771                           
   772                           ; 1 bytes @ 0x31
   773  000091                     	ds	1
   774  000092                     ___ftmul@f3_as_product:
   775                           	callstack 0
   776                           
   777                           ; 3 bytes @ 0x32
   778  000092                     	ds	3
   779  000095                     ___ftmul@cntr:
   780                           	callstack 0
   781                           
   782                           ; 1 bytes @ 0x35
   783  000095                     	ds	1
   784  000096                     ___ftmul@sign:
   785                           	callstack 0
   786                           
   787                           ; 1 bytes @ 0x36
   788  000096                     	ds	1
   789  000097                     ?_fround:
   790                           	callstack 0
   791  000097                     ?_scale:
   792                           	callstack 0
   793                           
   794                           ; 3 bytes @ 0x37
   795  000097                     	ds	3
   796  00009A                     ??_fround:
   797  00009A                     ??_scale:
   798                           
   799                           ; 1 bytes @ 0x3A
   800  00009A                     	ds	4
   801  00009E                     _fround$940:
   802                           	callstack 0
   803  00009E                     _scale$941:
   804                           	callstack 0
   805                           
   806                           ; 3 bytes @ 0x3E
   807  00009E                     	ds	3
   808  0000A1                     scale@scl:
   809                           	callstack 0
   810  0000A1                     _fround$939:
   811                           	callstack 0
   812                           
   813                           ; 3 bytes @ 0x41
   814  0000A1                     	ds	3
   815  0000A4                     fround@prec:
   816                           	callstack 0
   817                           
   818                           ; 1 bytes @ 0x44
   819  0000A4                     	ds	1
   820  0000A5                     ?___ftadd:
   821                           	callstack 0
   822  0000A5                     ___ftadd@f1:
   823                           	callstack 0
   824                           
   825                           ; 3 bytes @ 0x45
   826  0000A5                     	ds	3
   827  0000A8                     ___ftadd@f2:
   828                           	callstack 0
   829                           
   830                           ; 3 bytes @ 0x48
   831  0000A8                     	ds	3
   832  0000AB                     ??___ftadd:
   833                           
   834                           ; 1 bytes @ 0x4B
   835  0000AB                     	ds	3
   836  0000AE                     ___ftadd@sign:
   837                           	callstack 0
   838                           
   839                           ; 1 bytes @ 0x4E
   840  0000AE                     	ds	1
   841  0000AF                     ___ftadd@exp2:
   842                           	callstack 0
   843                           
   844                           ; 1 bytes @ 0x4F
   845  0000AF                     	ds	1
   846  0000B0                     ___ftadd@exp1:
   847                           	callstack 0
   848                           
   849                           ; 1 bytes @ 0x50
   850  0000B0                     	ds	1
   851  0000B1                     ?___ftsub:
   852                           	callstack 0
   853  0000B1                     ___ftsub@f1:
   854                           	callstack 0
   855                           
   856                           ; 3 bytes @ 0x51
   857  0000B1                     	ds	3
   858  0000B4                     ___ftsub@f2:
   859                           	callstack 0
   860                           
   861                           ; 3 bytes @ 0x54
   862  0000B4                     	ds	3
   863  0000B7                     ?___fttol:
   864                           	callstack 0
   865  0000B7                     ___fttol@f1:
   866                           	callstack 0
   867                           
   868                           ; 3 bytes @ 0x57
   869  0000B7                     	ds	4
   870  0000BB                     ??___fttol:
   871                           
   872                           ; 1 bytes @ 0x5B
   873  0000BB                     	ds	5
   874  0000C0                     ___fttol@sign1:
   875                           	callstack 0
   876                           
   877                           ; 1 bytes @ 0x60
   878  0000C0                     	ds	1
   879  0000C1                     ___fttol@lval:
   880                           	callstack 0
   881                           
   882                           ; 4 bytes @ 0x61
   883  0000C1                     	ds	4
   884  0000C5                     ___fttol@exp1:
   885                           	callstack 0
   886                           
   887                           ; 1 bytes @ 0x65
   888  0000C5                     	ds	1
   889  0000C6                     ?_sprintf:
   890                           	callstack 0
   891  0000C6                     sprintf@sp:
   892                           	callstack 0
   893                           
   894                           ; 2 bytes @ 0x66
   895  0000C6                     	ds	2
   896  0000C8                     sprintf@f:
   897                           	callstack 0
   898                           
   899                           ; 1 bytes @ 0x68
   900  0000C8                     	ds	4
   901  0000CC                     ??_main:
   902                           
   903                           ; 1 bytes @ 0x6C
   904  0000CC                     	ds	2
   905                           
   906                           	psect	cstackCOMRAM
   907  000001                     __pcstackCOMRAM:
   908                           	callstack 0
   909  000001                     ??i2_LCD:
   910  000001                     ??i2_isdigit:
   911  000001                     ?i2___wmul:
   912                           	callstack 0
   913  000001                     ?i2___awmod:
   914                           	callstack 0
   915  000001                     ?i2_strlen:
   916                           	callstack 0
   917  000001                     ?i2___ftpack:
   918                           	callstack 0
   919  000001                     ?i2___ftneg:
   920                           	callstack 0
   921  000001                     ?i2___lldiv:
   922                           	callstack 0
   923  000001                     ?i2__div_to_l_:
   924                           	callstack 0
   925  000001                     ?i2__tdiv_to_l_:
   926                           	callstack 0
   927  000001                     i2___lbmod@divisor:
   928                           	callstack 0
   929  000001                     i2___wmul@multiplier:
   930                           	callstack 0
   931  000001                     i2___awmod@dividend:
   932                           	callstack 0
   933  000001                     i2strlen@s:
   934                           	callstack 0
   935  000001                     i2__div_to_l_@f1:
   936                           	callstack 0
   937  000001                     i2___ftpack@arg:
   938                           	callstack 0
   939  000001                     i2__tdiv_to_l_@f1:
   940                           	callstack 0
   941  000001                     i2___ftge@ff1:
   942                           	callstack 0
   943  000001                     i2___ftneg@f1:
   944                           	callstack 0
   945  000001                     i2___lldiv@dividend:
   946                           	callstack 0
   947                           
   948                           ; 4 bytes @ 0x0
   949  000001                     	ds	1
   950  000002                     i2LCD@data:
   951                           	callstack 0
   952  000002                     i2___lbmod@dividend:
   953                           	callstack 0
   954  000002                     i2_isdigit$750:
   955                           	callstack 0
   956                           
   957                           ; 1 bytes @ 0x1
   958  000002                     	ds	1
   959  000003                     i2SettingsLCD@word:
   960                           	callstack 0
   961  000003                     i2WriteLCD@word:
   962                           	callstack 0
   963  000003                     i2___lbmod@counter:
   964                           	callstack 0
   965  000003                     i2isdigit@c:
   966                           	callstack 0
   967  000003                     i2___wmul@multiplicand:
   968                           	callstack 0
   969  000003                     i2___awmod@divisor:
   970                           	callstack 0
   971  000003                     i2strlen@cp:
   972                           	callstack 0
   973                           
   974                           ; 2 bytes @ 0x2
   975  000003                     	ds	1
   976  000004                     i2___ftpack@exp:
   977                           	callstack 0
   978  000004                     i2___lbmod@rem:
   979                           	callstack 0
   980  000004                     i2__div_to_l_@f2:
   981                           	callstack 0
   982  000004                     i2__tdiv_to_l_@f2:
   983                           	callstack 0
   984  000004                     i2___ftge@ff2:
   985                           	callstack 0
   986                           
   987                           ; 3 bytes @ 0x3
   988  000004                     	ds	1
   989  000005                     ??i2_DataLCD:
   990  000005                     i2___awmod@counter:
   991                           	callstack 0
   992  000005                     i2___ftpack@sign:
   993                           	callstack 0
   994  000005                     i2___lbdiv@divisor:
   995                           	callstack 0
   996  000005                     i2___wmul@product:
   997                           	callstack 0
   998  000005                     i2___lldiv@divisor:
   999                           	callstack 0
  1000                           
  1001                           ; 4 bytes @ 0x4
  1002  000005                     	ds	1
  1003  000006                     ??i2___ftpack:
  1004  000006                     i2___awmod@sign:
  1005                           	callstack 0
  1006  000006                     i2___lbdiv@dividend:
  1007                           	callstack 0
  1008                           
  1009                           ; 1 bytes @ 0x5
  1010  000006                     	ds	1
  1011  000007                     ??i2__tdiv_to_l_:
  1012  000007                     ??i2___ftge:
  1013  000007                     ?i2___awdiv:
  1014                           	callstack 0
  1015  000007                     i2___lbdiv@counter:
  1016                           	callstack 0
  1017  000007                     i2___awdiv@dividend:
  1018                           	callstack 0
  1019  000007                     i2__div_to_l_@quot:
  1020                           	callstack 0
  1021                           
  1022                           ; 4 bytes @ 0x6
  1023  000007                     	ds	1
  1024  000008                     i2___lbdiv@quotient:
  1025                           	callstack 0
  1026                           
  1027                           ; 1 bytes @ 0x7
  1028  000008                     	ds	1
  1029  000009                     ?___awtoft:
  1030                           	callstack 0
  1031  000009                     ?___lwtoft:
  1032                           	callstack 0
  1033  000009                     ?i2___lltoft:
  1034                           	callstack 0
  1035  000009                     ___awtoft@c:
  1036                           	callstack 0
  1037  000009                     ___lwtoft@c:
  1038                           	callstack 0
  1039  000009                     i2___awdiv@divisor:
  1040                           	callstack 0
  1041  000009                     i2___lldiv@quotient:
  1042                           	callstack 0
  1043  000009                     i2___lltoft@c:
  1044                           	callstack 0
  1045                           
  1046                           ; 4 bytes @ 0x8
  1047  000009                     	ds	1
  1048  00000A                     i2__tdiv_to_l_@quot:
  1049                           	callstack 0
  1050                           
  1051                           ; 4 bytes @ 0x9
  1052  00000A                     	ds	1
  1053  00000B                     i2___awdiv@counter:
  1054                           	callstack 0
  1055  00000B                     i2__div_to_l_@cntr:
  1056                           	callstack 0
  1057                           
  1058                           ; 1 bytes @ 0xA
  1059  00000B                     	ds	1
  1060  00000C                     ___awtoft@sign:
  1061                           	callstack 0
  1062  00000C                     i2___awdiv@sign:
  1063                           	callstack 0
  1064  00000C                     i2__div_to_l_@exp1:
  1065                           	callstack 0
  1066                           
  1067                           ; 1 bytes @ 0xB
  1068  00000C                     	ds	1
  1069  00000D                     ??i2___lltoft:
  1070  00000D                     i2___lldiv@counter:
  1071                           	callstack 0
  1072  00000D                     i2___awdiv@quotient:
  1073                           	callstack 0
  1074                           
  1075                           ; 2 bytes @ 0xC
  1076  00000D                     	ds	1
  1077  00000E                     ?i2___llmod:
  1078                           	callstack 0
  1079  00000E                     i2__tdiv_to_l_@cntr:
  1080                           	callstack 0
  1081  00000E                     i2___llmod@dividend:
  1082                           	callstack 0
  1083                           
  1084                           ; 4 bytes @ 0xD
  1085  00000E                     	ds	1
  1086  00000F                     ?i2___ftmul:
  1087                           	callstack 0
  1088  00000F                     i2__tdiv_to_l_@exp1:
  1089                           	callstack 0
  1090  00000F                     i2___ftmul@f1:
  1091                           	callstack 0
  1092                           
  1093                           ; 3 bytes @ 0xE
  1094  00000F                     	ds	2
  1095  000011                     i2___lltoft@exp:
  1096                           	callstack 0
  1097                           
  1098                           ; 1 bytes @ 0x10
  1099  000011                     	ds	1
  1100  000012                     i2___ftmul@f2:
  1101                           	callstack 0
  1102  000012                     i2___llmod@divisor:
  1103                           	callstack 0
  1104                           
  1105                           ; 4 bytes @ 0x11
  1106  000012                     	ds	3
  1107  000015                     ??i2___ftmul:
  1108                           
  1109                           ; 1 bytes @ 0x14
  1110  000015                     	ds	1
  1111  000016                     i2___llmod@counter:
  1112                           	callstack 0
  1113                           
  1114                           ; 1 bytes @ 0x15
  1115  000016                     	ds	2
  1116  000018                     i2___ftmul@exp:
  1117                           	callstack 0
  1118                           
  1119                           ; 1 bytes @ 0x17
  1120  000018                     	ds	1
  1121  000019                     i2___ftmul@f3_as_product:
  1122                           	callstack 0
  1123                           
  1124                           ; 3 bytes @ 0x18
  1125  000019                     	ds	3
  1126  00001C                     i2___ftmul@cntr:
  1127                           	callstack 0
  1128                           
  1129                           ; 1 bytes @ 0x1B
  1130  00001C                     	ds	1
  1131  00001D                     i2___ftmul@sign:
  1132                           	callstack 0
  1133                           
  1134                           ; 1 bytes @ 0x1C
  1135  00001D                     	ds	1
  1136  00001E                     ?i2_fround:
  1137                           	callstack 0
  1138  00001E                     ?i2_scale:
  1139                           	callstack 0
  1140                           
  1141                           ; 3 bytes @ 0x1D
  1142  00001E                     	ds	3
  1143  000021                     ??i2_fround:
  1144  000021                     ??i2_scale:
  1145                           
  1146                           ; 1 bytes @ 0x20
  1147  000021                     	ds	4
  1148  000025                     i2_fround$1139:
  1149                           	callstack 0
  1150  000025                     i2_scale$1140:
  1151                           	callstack 0
  1152                           
  1153                           ; 3 bytes @ 0x24
  1154  000025                     	ds	3
  1155  000028                     i2scale@scl:
  1156                           	callstack 0
  1157  000028                     i2_fround$1138:
  1158                           	callstack 0
  1159                           
  1160                           ; 3 bytes @ 0x27
  1161  000028                     	ds	3
  1162  00002B                     i2fround@prec:
  1163                           	callstack 0
  1164                           
  1165                           ; 1 bytes @ 0x2A
  1166  00002B                     	ds	1
  1167  00002C                     ?i2___ftadd:
  1168                           	callstack 0
  1169  00002C                     i2___ftadd@f1:
  1170                           	callstack 0
  1171                           
  1172                           ; 3 bytes @ 0x2B
  1173  00002C                     	ds	3
  1174  00002F                     i2___ftadd@f2:
  1175                           	callstack 0
  1176                           
  1177                           ; 3 bytes @ 0x2E
  1178  00002F                     	ds	3
  1179  000032                     ??i2___ftadd:
  1180                           
  1181                           ; 1 bytes @ 0x31
  1182  000032                     	ds	3
  1183  000035                     i2___ftadd@sign:
  1184                           	callstack 0
  1185                           
  1186                           ; 1 bytes @ 0x34
  1187  000035                     	ds	1
  1188  000036                     i2___ftadd@exp2:
  1189                           	callstack 0
  1190                           
  1191                           ; 1 bytes @ 0x35
  1192  000036                     	ds	1
  1193  000037                     i2___ftadd@exp1:
  1194                           	callstack 0
  1195                           
  1196                           ; 1 bytes @ 0x36
  1197  000037                     	ds	1
  1198  000038                     ?i2___ftsub:
  1199                           	callstack 0
  1200  000038                     ?i2___fttol:
  1201                           	callstack 0
  1202  000038                     i2___ftsub@f1:
  1203                           	callstack 0
  1204  000038                     i2___fttol@f1:
  1205                           	callstack 0
  1206                           
  1207                           ; 3 bytes @ 0x37
  1208  000038                     	ds	3
  1209  00003B                     i2___ftsub@f2:
  1210                           	callstack 0
  1211                           
  1212                           ; 3 bytes @ 0x3A
  1213  00003B                     	ds	1
  1214  00003C                     ??i2___fttol:
  1215                           
  1216                           ; 1 bytes @ 0x3B
  1217  00003C                     	ds	2
  1218  00003E                     
  1219                           ; 1 bytes @ 0x3D
  1220  00003E                     	ds	3
  1221  000041                     i2___fttol@sign1:
  1222                           	callstack 0
  1223                           
  1224                           ; 1 bytes @ 0x40
  1225  000041                     	ds	1
  1226  000042                     i2___fttol@lval:
  1227                           	callstack 0
  1228                           
  1229                           ; 4 bytes @ 0x41
  1230  000042                     	ds	4
  1231  000046                     i2___fttol@exp1:
  1232                           	callstack 0
  1233                           
  1234                           ; 1 bytes @ 0x45
  1235  000046                     	ds	1
  1236  000047                     ?i2_sprintf:
  1237                           	callstack 0
  1238  000047                     i2sprintf@sp:
  1239                           	callstack 0
  1240                           
  1241                           ; 2 bytes @ 0x46
  1242  000047                     	ds	2
  1243  000049                     i2sprintf@f:
  1244                           	callstack 0
  1245                           
  1246                           ; 1 bytes @ 0x48
  1247  000049                     	ds	4
  1248  00004D                     ??i2_sprintf:
  1249                           
  1250                           ; 1 bytes @ 0x4C
  1251  00004D                     	ds	6
  1252  000053                     ??_TMR1_ISR:
  1253                           
  1254                           ; 1 bytes @ 0x52
  1255  000053                     	ds	8
  1256                           
  1257 ;;
  1258 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1259 ;;
  1260 ;; *************** function _main *****************
  1261 ;; Defined at:
  1262 ;;		line 53 in file "PruevaServosPic.c"
  1263 ;; Parameters:    Size  Location     Type
  1264 ;;		None
  1265 ;; Auto vars:     Size  Location     Type
  1266 ;;		None
  1267 ;; Return value:  Size  Location     Type
  1268 ;;                  1    wreg      void 
  1269 ;; Registers used:
  1270 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1271 ;; Tracked objects:
  1272 ;;		On entry : 0/0
  1273 ;;		On exit  : 0/0
  1274 ;;		Unchanged: 0/0
  1275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1276 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1277 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1278 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1279 ;;      Totals:         0       2       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1280 ;;Total ram usage:        5 bytes
  1281 ;; Hardware stack levels required when called: 9
  1282 ;; This function calls:
  1283 ;;		_DataLCD
  1284 ;;		_SettingsLCD
  1285 ;;		___ftmul
  1286 ;;		_deg2time
  1287 ;;		_settings
  1288 ;;		_sprintf
  1289 ;; This function is called by:
  1290 ;;		Startup code after reset
  1291 ;; This function uses a non-reentrant model
  1292 ;;
  1293                           
  1294                           	psect	text0
  1295  003D04                     __ptext0:
  1296                           	callstack 0
  1297  003D04                     _main:
  1298                           	callstack 22
  1299                           
  1300                           ;PruevaServosPic.c: 54: settings();
  1301                           
  1302                           ;incstack = 0
  1303  003D04  ECA1  F01F         	call	_settings	;wreg free
  1304  003D08                     l97:
  1305                           
  1306                           ;PruevaServosPic.c: 57: deg2time();
  1307  003D08  ECE5  F01A         	call	_deg2time	;wreg free
  1308                           
  1309                           ;PruevaServosPic.c: 58: SettingsLCD(0x80);
  1310  003D0C  0E80               	movlw	128
  1311  003D0E  EC7A  F022         	call	_SettingsLCD
  1312                           
  1313                           ;PruevaServosPic.c: 59: sprintf(text,"Servo 2:%.5f",time_high*1000);
  1314  003D12  C0D1  F088         	movff	_time_high,___ftmul@f1
  1315  003D16  C0D2  F089         	movff	_time_high+1,___ftmul@f1+1
  1316  003D1A  C0D3  F08A         	movff	_time_high+2,___ftmul@f1+2
  1317  003D1E  0E00               	movlw	0
  1318  003D20  0100               	movlb	0	; () banked
  1319  003D22  6F8B               	movwf	___ftmul@f2& (0+255),b
  1320  003D24  0E7A               	movlw	122
  1321  003D26  6F8C               	movwf	(___ftmul@f2+1)& (0+255),b
  1322  003D28  0E44               	movlw	68
  1323  003D2A  6F8D               	movwf	(___ftmul@f2+2)& (0+255),b
  1324  003D2C  EC04  F019         	call	___ftmul	;wreg free
  1325  003D30  C088  F11C         	movff	?___ftmul,_main$937
  1326  003D34  C089  F11D         	movff	?___ftmul+1,_main$937+1
  1327  003D38  C08A  F11E         	movff	?___ftmul+2,_main$937+2
  1328                           
  1329                           ; BSR set to: 0
  1330                           ;PruevaServosPic.c: 59: sprintf(text,"Servo 2:%.5f",time_high*1000);
  1331  003D3C  0E1F               	movlw	low _text
  1332  003D3E  6FC6               	movwf	sprintf@sp& (0+255),b
  1333  003D40  0E01               	movlw	high _text
  1334  003D42  6FC7               	movwf	(sprintf@sp+1)& (0+255),b
  1335  003D44  0E77               	movlw	low STR_1
  1336  003D46  6FC8               	movwf	sprintf@f& (0+255),b
  1337  003D48  C11C  F0C9         	movff	_main$937,?_sprintf+3
  1338  003D4C  C11D  F0CA         	movff	_main$937+1,?_sprintf+4
  1339  003D50  C11E  F0CB         	movff	_main$937+2,?_sprintf+5
  1340  003D54  EC53  F008         	call	_sprintf	;wreg free
  1341                           
  1342                           ; BSR set to: 1
  1343                           ;PruevaServosPic.c: 61: DataLCD();
  1344  003D58  ECC3  F020         	call	_DataLCD	;wreg free
  1345                           
  1346                           ; BSR set to: 0
  1347                           ;PruevaServosPic.c: 62: _delay((unsigned long)((500)*(16000000/4000.0)));
  1348  003D5C  0E0B               	movlw	11
  1349  003D5E  0100               	movlb	0	; () banked
  1350  003D60  6FCD               	movwf	(??_main+1)& (0+255),b
  1351  003D62  0E26               	movlw	38
  1352  003D64  6FCC               	movwf	??_main& (0+255),b
  1353  003D66  0E5D               	movlw	93
  1354  003D68                     u9077:
  1355  003D68  2EE8               	decfsz	wreg,f,c
  1356  003D6A  D7FE               	bra	u9077
  1357  003D6C  2FCC               	decfsz	??_main& (0+255),f,b
  1358  003D6E  D7FC               	bra	u9077
  1359  003D70  2FCD               	decfsz	(??_main+1)& (0+255),f,b
  1360  003D72  D7FA               	bra	u9077
  1361  003D74  D000               	nop2	
  1362                           
  1363                           ;PruevaServosPic.c: 63: TMR1ON = 1;
  1364  003D76  80CD               	bsf	4045,0,c	;volatile
  1365  003D78  D7C7               	goto	l97
  1366  003D7A                     __end_of_main:
  1367                           	callstack 0
  1368                           
  1369 ;; *************** function _sprintf *****************
  1370 ;; Defined at:
  1371 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c"
  1372 ;; Parameters:    Size  Location     Type
  1373 ;;  sp              2  102[BANK0 ] PTR unsigned char 
  1374 ;;		 -> text(20), 
  1375 ;;  f               1  104[BANK0 ] PTR const unsigned char 
  1376 ;;		 -> STR_5(11), STR_4(11), STR_3(11), STR_2(11), 
  1377 ;;		 -> STR_1(13), 
  1378 ;; Auto vars:     Size  Location     Type
  1379 ;;  val             4   18[BANK1 ] unsigned long 
  1380 ;;  tmpval          4   14[BANK1 ] struct .
  1381 ;;  fval            3   24[BANK1 ] struct .
  1382 ;;  cp              3    0        PTR const unsigned char 
  1383 ;;  prec            2   22[BANK1 ] int 
  1384 ;;  eexp            2   12[BANK1 ] int 
  1385 ;;  flag            2   10[BANK1 ] unsigned short 
  1386 ;;  len             2    0        unsigned int 
  1387 ;;  width           2    0        int 
  1388 ;;  c               1   27[BANK1 ] unsigned char 
  1389 ;;  ap              1    9[BANK1 ] PTR void [1]
  1390 ;;		 -> ?_sprintf(2), 
  1391 ;;  d               1    0        unsigned char 
  1392 ;; Return value:  Size  Location     Type
  1393 ;;                  2  102[BANK0 ] int 
  1394 ;; Registers used:
  1395 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1396 ;; Tracked objects:
  1397 ;;		On entry : 3F/0
  1398 ;;		On exit  : 3F/1
  1399 ;;		Unchanged: 0/0
  1400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1401 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1402 ;;      Locals:         0       0      22       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1403 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1404 ;;      Totals:         0       6      28       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1405 ;;Total ram usage:       34 bytes
  1406 ;; Hardware stack levels used: 1
  1407 ;; Hardware stack levels required when called: 8
  1408 ;; This function calls:
  1409 ;;		___awdiv
  1410 ;;		___ftadd
  1411 ;;		___ftge
  1412 ;;		___ftmul
  1413 ;;		___ftneg
  1414 ;;		___ftsub
  1415 ;;		___fttol
  1416 ;;		___lldiv
  1417 ;;		___llmod
  1418 ;;		___lltoft
  1419 ;;		___wmul
  1420 ;;		__div_to_l_
  1421 ;;		__tdiv_to_l_
  1422 ;;		_fround
  1423 ;;		_isdigit
  1424 ;;		_scale
  1425 ;; This function is called by:
  1426 ;;		_main
  1427 ;; This function uses a non-reentrant model
  1428 ;;
  1429                           
  1430                           	psect	text1
  1431  0010A6                     __ptext1:
  1432                           	callstack 0
  1433  0010A6                     _sprintf:
  1434                           	callstack 22
  1435                           
  1436                           ; BSR set to: 0
  1437                           ;doprnt.c: 507: va_list ap;;doprnt.c: 512: char c;;doprnt.c: 514: int width;;doprnt.c: 5
      +                          17: int prec;;doprnt.c: 525: unsigned short flag;;doprnt.c: 532: char d;;doprnt.c: 533: 
      +                          double fval;;doprnt.c: 534: int eexp;;doprnt.c: 540: union {;doprnt.c: 541: unsigned lon
      +                          g vd;;doprnt.c: 542: double integ;;doprnt.c: 543: } tmpval;;doprnt.c: 545: unsigned long
      +                           val;;doprnt.c: 546: unsigned len;;doprnt.c: 547: const char * cp;;doprnt.c: 550: *ap = 
      +                          __va_start();
  1438                           
  1439                           ;incstack = 0
  1440  0010A6  0EC9               	movlw	low (?_sprintf+3)
  1441  0010A8  0101               	movlb	1	; () banked
  1442  0010AA  6F09               	movwf	sprintf@ap& (0+255),b
  1443                           
  1444                           ;doprnt.c: 553: while((c = *f++)) {
  1445  0010AC  D3FE               	goto	u8380
  1446  0010AE                     l6472:
  1447                           
  1448                           ; BSR set to: 1
  1449                           ;doprnt.c: 555: if(c != '%')
  1450  0010AE  0E25               	movlw	37
  1451  0010B0  191B               	xorwf	sprintf@c& (0+255),w,b
  1452  0010B2  B4D8               	btfsc	status,2,c
  1453  0010B4  D00A               	goto	l6478
  1454                           
  1455                           ; BSR set to: 1
  1456                           ;doprnt.c: 557: {;doprnt.c: 558: ((*sp++ = (c)));
  1457  0010B6  C0C6  FFD9         	movff	sprintf@sp,fsr2l
  1458  0010BA  C0C7  FFDA         	movff	sprintf@sp+1,fsr2h
  1459  0010BE  C11B  FFDF         	movff	sprintf@c,indf2
  1460                           
  1461                           ; BSR set to: 1
  1462  0010C2  0100               	movlb	0	; () banked
  1463  0010C4  4BC6               	infsnz	sprintf@sp& (0+255),f,b
  1464  0010C6  2BC7               	incf	(sprintf@sp+1)& (0+255),f,b
  1465                           
  1466                           ;doprnt.c: 559: continue;
  1467  0010C8  D3F0               	goto	u8380
  1468  0010CA                     l6478:
  1469                           
  1470                           ; BSR set to: 1
  1471                           ;doprnt.c: 560: };doprnt.c: 565: flag = 0;
  1472  0010CA  0E00               	movlw	0
  1473  0010CC  6F0B               	movwf	(sprintf@flag+1)& (0+255),b
  1474  0010CE  0E00               	movlw	0
  1475  0010D0  6F0A               	movwf	sprintf@flag& (0+255),b
  1476                           
  1477                           ; BSR set to: 1
  1478                           ;doprnt.c: 628: if(*f == '.') {
  1479  0010D2  C0C8  FFF6         	movff	sprintf@f,tblptrl
  1480  0010D6                     	if	1	;There is more than 1 active tblptr byte
  1481  0010D6  0E10               	movlw	high __smallconst
  1482  0010D8  6EF7               	movwf	tblptrh,c
  1483  0010DA                     	endif
  1484  0010DA                     	if	0	;tblptru may be non-zero
  1485  0010DA                     	endif
  1486  0010DA                     	if	0	;tblptru may be non-zero
  1487  0010DA                     	endif
  1488  0010DA  0008               	tblrd		*
  1489  0010DC  50F5               	movf	tablat,w,c
  1490  0010DE  0A2E               	xorlw	46
  1491  0010E0  A4D8               	btfss	status,2,c
  1492  0010E2  D039               	goto	l6494
  1493                           
  1494                           ; BSR set to: 1
  1495                           ;doprnt.c: 629: flag |= 0x4000;
  1496  0010E4  8D0B               	bsf	(sprintf@flag+1)& (0+255),6,b
  1497                           
  1498                           ;doprnt.c: 630: f++;
  1499  0010E6  0100               	movlb	0	; () banked
  1500  0010E8  2BC8               	incf	sprintf@f& (0+255),f,b
  1501                           
  1502                           ; BSR set to: 0
  1503                           ;doprnt.c: 644: {;doprnt.c: 645: prec = 0;
  1504  0010EA  0E00               	movlw	0
  1505  0010EC  0101               	movlb	1	; () banked
  1506  0010EE  6F17               	movwf	(sprintf@prec+1)& (0+255),b
  1507  0010F0  0E00               	movlw	0
  1508  0010F2  6F16               	movwf	sprintf@prec& (0+255),b
  1509                           
  1510                           ;doprnt.c: 646: while(isdigit((unsigned)*f)) {
  1511  0010F4  D025               	goto	l6492
  1512  0010F6                     l6486:
  1513                           
  1514                           ; BSR set to: 0
  1515                           ;doprnt.c: 647: prec *= 10;
  1516  0010F6  C116  F07A         	movff	sprintf@prec,___wmul@multiplier
  1517  0010FA  C117  F07B         	movff	sprintf@prec+1,___wmul@multiplier+1
  1518  0010FE  0E00               	movlw	0
  1519  001100  6F7D               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1520  001102  0E0A               	movlw	10
  1521  001104  6F7C               	movwf	___wmul@multiplicand& (0+255),b
  1522  001106  ECFD  F021         	call	___wmul	;wreg free
  1523  00110A  C07A  F116         	movff	?___wmul,sprintf@prec
  1524  00110E  C07B  F117         	movff	?___wmul+1,sprintf@prec+1
  1525                           
  1526                           ; BSR set to: 0
  1527                           ;doprnt.c: 648: prec += *f++ - '0';
  1528  001112  0ED0               	movlw	208
  1529  001114  0101               	movlb	1	; () banked
  1530  001116  6F00               	movwf	??_sprintf& (0+255),b
  1531  001118  0EFF               	movlw	255
  1532  00111A  6F01               	movwf	(??_sprintf+1)& (0+255),b
  1533  00111C  C0C8  FFF6         	movff	sprintf@f,tblptrl
  1534  001120                     	if	1	;There is more than 1 active tblptr byte
  1535  001120  0E10               	movlw	high __smallconst
  1536  001122  6EF7               	movwf	tblptrh,c
  1537  001124                     	endif
  1538  001124                     	if	0	;tblptru may be non-zero
  1539  001124                     	endif
  1540  001124                     	if	0	;tblptru may be non-zero
  1541  001124                     	endif
  1542  001124  0008               	tblrd		*
  1543  001126  50F5               	movf	tablat,w,c
  1544  001128  6F02               	movwf	(??_sprintf+2)& (0+255),b
  1545  00112A  6B03               	clrf	(??_sprintf+3)& (0+255),b
  1546  00112C  5100               	movf	??_sprintf& (0+255),w,b
  1547  00112E  2702               	addwf	(??_sprintf+2)& (0+255),f,b
  1548  001130  5101               	movf	(??_sprintf+1)& (0+255),w,b
  1549  001132  2303               	addwfc	(??_sprintf+3)& (0+255),f,b
  1550  001134  5102               	movf	(??_sprintf+2)& (0+255),w,b
  1551  001136  2716               	addwf	sprintf@prec& (0+255),f,b
  1552  001138  5103               	movf	(??_sprintf+3)& (0+255),w,b
  1553  00113A  2317               	addwfc	(sprintf@prec+1)& (0+255),f,b
  1554                           
  1555                           ; BSR set to: 1
  1556  00113C  0100               	movlb	0	; () banked
  1557  00113E  2BC8               	incf	sprintf@f& (0+255),f,b
  1558  001140                     l6492:
  1559  001140  C0C8  FFF6         	movff	sprintf@f,tblptrl
  1560  001144                     	if	1	;There is more than 1 active tblptr byte
  1561  001144  0E10               	movlw	high __smallconst
  1562  001146  6EF7               	movwf	tblptrh,c
  1563  001148                     	endif
  1564  001148                     	if	0	;tblptru may be non-zero
  1565  001148                     	endif
  1566  001148                     	if	0	;tblptru may be non-zero
  1567  001148                     	endif
  1568  001148  0008               	tblrd		*
  1569  00114A  50F5               	movf	tablat,w,c
  1570  00114C  EC5A  F022         	call	_isdigit
  1571  001150  A0D8               	btfss	status,0,c
  1572  001152  D009               	goto	l6502
  1573  001154  D7D0               	goto	l6486
  1574  001156                     l6494:
  1575                           
  1576                           ; BSR set to: 1
  1577                           ;doprnt.c: 652: prec = 0;
  1578  001156  0E00               	movlw	0
  1579  001158  6F17               	movwf	(sprintf@prec+1)& (0+255),b
  1580  00115A  0E00               	movlw	0
  1581  00115C  6F16               	movwf	sprintf@prec& (0+255),b
  1582                           
  1583                           ; BSR set to: 1
  1584                           ;doprnt.c: 654: flag |= 0x1000;
  1585  00115E  890B               	bsf	(sprintf@flag+1)& (0+255),4,b
  1586  001160  D002               	goto	l6502
  1587  001162                     l6498:
  1588                           
  1589                           ; BSR set to: 1
  1590                           ;doprnt.c: 689: flag |= 0x400;
  1591  001162  850B               	bsf	(sprintf@flag+1)& (0+255),2,b
  1592                           
  1593                           ;doprnt.c: 690: break;
  1594  001164  D019               	goto	l6504
  1595  001166                     l6502:
  1596  001166  0100               	movlb	0	; () banked
  1597  001168  2BC8               	incf	sprintf@f& (0+255),f,b
  1598  00116A  05C8               	decf	sprintf@f& (0+255),w,b
  1599  00116C  0101               	movlb	1	; () banked
  1600  00116E  6F00               	movwf	??_sprintf& (0+255),b
  1601  001170  C100  FFF6         	movff	??_sprintf,tblptrl
  1602  001174                     	if	1	;There is more than 1 active tblptr byte
  1603  001174  0E10               	movlw	high __smallconst
  1604  001176  6EF7               	movwf	tblptrh,c
  1605  001178                     	endif
  1606  001178                     	if	0	;tblptru may be non-zero
  1607  001178                     	endif
  1608  001178                     	if	0	;tblptru may be non-zero
  1609  001178                     	endif
  1610  001178  0008               	tblrd		*
  1611  00117A  CFF5 F11B          	movff	tablat,sprintf@c
  1612  00117E  511B               	movf	sprintf@c& (0+255),w,b
  1613                           
  1614                           ; Switch size 1, requested type "simple"
  1615                           ; Number of cases is 4, Range of values is 0 to 105
  1616                           ; switch strategies available:
  1617                           ; Name         Instructions Cycles
  1618                           ; simple_byte           13     7 (average)
  1619                           ;	Chosen strategy is simple_byte
  1620  001180  0A00               	xorlw	0	; case 0
  1621  001182  B4D8               	btfsc	status,2,c
  1622  001184  D3A2               	goto	u8390
  1623  001186  0A64               	xorlw	100	; case 100
  1624  001188  B4D8               	btfsc	status,2,c
  1625  00118A  D006               	goto	l6504
  1626  00118C  0A02               	xorlw	2	; case 102
  1627  00118E  B4D8               	btfsc	status,2,c
  1628  001190  D7E8               	goto	l6498
  1629  001192  0A0F               	xorlw	15	; case 105
  1630  001194  A4D8               	btfss	status,2,c
  1631  001196  D389               	goto	u8380
  1632  001198                     l6504:
  1633                           
  1634                           ; BSR set to: 1
  1635                           ;doprnt.c: 851: if(flag & (0x700)) {
  1636  001198  0E07               	movlw	7
  1637  00119A  150B               	andwf	(sprintf@flag+1)& (0+255),w,b
  1638  00119C  B4D8               	btfsc	status,2,c
  1639  00119E  D2CF               	goto	l6652
  1640                           
  1641                           ; BSR set to: 1
  1642                           ;doprnt.c: 853: if(flag & 0x1000)
  1643  0011A0  A90B               	btfss	(sprintf@flag+1)& (0+255),4,b
  1644  0011A2  D004               	goto	l6510
  1645                           
  1646                           ; BSR set to: 1
  1647                           ;doprnt.c: 855: prec = 6;
  1648  0011A4  0E00               	movlw	0
  1649  0011A6  6F17               	movwf	(sprintf@prec+1)& (0+255),b
  1650  0011A8  0E06               	movlw	6
  1651  0011AA  6F16               	movwf	sprintf@prec& (0+255),b
  1652  0011AC                     l6510:
  1653                           
  1654                           ; BSR set to: 1
  1655                           ;doprnt.c: 856: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  1656  0011AC  5109               	movf	sprintf@ap& (0+255),w,b
  1657  0011AE  6ED9               	movwf	fsr2l,c
  1658  0011B0  6ADA               	clrf	fsr2h,c
  1659  0011B2  CFDE F118          	movff	postinc2,sprintf@fval
  1660  0011B6  CFDE F119          	movff	postinc2,sprintf@fval+1
  1661  0011BA  CFDD F11A          	movff	postdec2,sprintf@fval+2
  1662                           
  1663                           ; BSR set to: 1
  1664  0011BE  0E03               	movlw	3
  1665  0011C0  2709               	addwf	sprintf@ap& (0+255),f,b
  1666                           
  1667                           ; BSR set to: 1
  1668                           ;doprnt.c: 857: if(fval < 0.0) {
  1669  0011C2  AF1A               	btfss	(sprintf@fval+2)& (0+255),7,b
  1670  0011C4  D011               	goto	l6520
  1671                           
  1672                           ; BSR set to: 1
  1673                           ;doprnt.c: 858: fval = -fval;
  1674  0011C6  C118  F07A         	movff	sprintf@fval,___ftneg@f1
  1675  0011CA  C119  F07B         	movff	sprintf@fval+1,___ftneg@f1+1
  1676  0011CE  C11A  F07C         	movff	sprintf@fval+2,___ftneg@f1+2
  1677  0011D2  EC10  F022         	call	___ftneg	;wreg free
  1678  0011D6  C07A  F118         	movff	?___ftneg,sprintf@fval
  1679  0011DA  C07B  F119         	movff	?___ftneg+1,sprintf@fval+1
  1680  0011DE  C07C  F11A         	movff	?___ftneg+2,sprintf@fval+2
  1681                           
  1682                           ; BSR set to: 0
  1683                           ;doprnt.c: 859: flag |= 0x03;
  1684  0011E2  0E03               	movlw	3
  1685  0011E4  0101               	movlb	1	; () banked
  1686  0011E6  130A               	iorwf	sprintf@flag& (0+255),f,b
  1687  0011E8                     l6520:
  1688                           
  1689                           ; BSR set to: 1
  1690                           ;doprnt.c: 860: };doprnt.c: 861: eexp = 0;
  1691  0011E8  0E00               	movlw	0
  1692  0011EA  6F0D               	movwf	(sprintf@eexp+1)& (0+255),b
  1693  0011EC  0E00               	movlw	0
  1694  0011EE  6F0C               	movwf	sprintf@eexp& (0+255),b
  1695                           
  1696                           ; BSR set to: 1
  1697                           ;doprnt.c: 862: if( fval!=0) {
  1698  0011F0  5118               	movf	sprintf@fval& (0+255),w,b
  1699  0011F2  1119               	iorwf	(sprintf@fval+1)& (0+255),w,b
  1700  0011F4  111A               	iorwf	(sprintf@fval+2)& (0+255),w,b
  1701  0011F6  B4D8               	btfsc	status,2,c
  1702  0011F8  D087               	goto	l6548
  1703                           
  1704                           ; BSR set to: 1
  1705                           ;doprnt.c: 863: (void)(*(&eexp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
  1706  0011FA  0E82               	movlw	130
  1707  0011FC  6F00               	movwf	??_sprintf& (0+255),b
  1708  0011FE  0EFF               	movlw	255
  1709  001200  6F01               	movwf	(??_sprintf+1)& (0+255),b
  1710  001202  C118  F102         	movff	sprintf@fval,??_sprintf+2
  1711  001206  C119  F103         	movff	sprintf@fval+1,??_sprintf+3
  1712  00120A  C11A  F104         	movff	sprintf@fval+2,??_sprintf+4
  1713  00120E  C11B  F105         	movff	sprintf@fval+3,??_sprintf+5
  1714  001212  0E10               	movlw	16
  1715  001214  D005               	goto	u8110
  1716  001216                     u8115:
  1717  001216  90D8               	bcf	status,0,c
  1718  001218  3305               	rrcf	(??_sprintf+5)& (0+255),f,b
  1719  00121A  3304               	rrcf	(??_sprintf+4)& (0+255),f,b
  1720  00121C  3303               	rrcf	(??_sprintf+3)& (0+255),f,b
  1721  00121E  3302               	rrcf	(??_sprintf+2)& (0+255),f,b
  1722  001220                     u8110:
  1723  001220  2EE8               	decfsz	wreg,f,c
  1724  001222  D7F9               	goto	u8115
  1725  001224  5102               	movf	(??_sprintf+2)& (0+255),w,b
  1726  001226  2500               	addwf	??_sprintf& (0+255),w,b
  1727  001228  6F0C               	movwf	sprintf@eexp& (0+255),b
  1728  00122A  0E00               	movlw	0
  1729  00122C  2101               	addwfc	(??_sprintf+1)& (0+255),w,b
  1730  00122E  6F0D               	movwf	(sprintf@eexp+1)& (0+255),b
  1731                           
  1732                           ; BSR set to: 1
  1733                           ;doprnt.c: 864: eexp--;
  1734  001230  070C               	decf	sprintf@eexp& (0+255),f,b
  1735  001232  A0D8               	btfss	status,0,c
  1736  001234  070D               	decf	(sprintf@eexp+1)& (0+255),f,b
  1737                           
  1738                           ; BSR set to: 1
  1739                           ;doprnt.c: 865: eexp *= 3;
  1740  001236  C10C  F07A         	movff	sprintf@eexp,___wmul@multiplier
  1741  00123A  C10D  F07B         	movff	sprintf@eexp+1,___wmul@multiplier+1
  1742  00123E  0E00               	movlw	0
  1743  001240  0100               	movlb	0	; () banked
  1744  001242  6F7D               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1745  001244  0E03               	movlw	3
  1746  001246  6F7C               	movwf	___wmul@multiplicand& (0+255),b
  1747  001248  ECFD  F021         	call	___wmul	;wreg free
  1748  00124C  C07A  F10C         	movff	?___wmul,sprintf@eexp
  1749  001250  C07B  F10D         	movff	?___wmul+1,sprintf@eexp+1
  1750                           
  1751                           ; BSR set to: 0
  1752                           ;doprnt.c: 866: eexp /= 10;
  1753  001254  C10C  F080         	movff	sprintf@eexp,___awdiv@dividend
  1754  001258  C10D  F081         	movff	sprintf@eexp+1,___awdiv@dividend+1
  1755  00125C  0E00               	movlw	0
  1756  00125E  6F83               	movwf	(___awdiv@divisor+1)& (0+255),b
  1757  001260  0E0A               	movlw	10
  1758  001262  6F82               	movwf	___awdiv@divisor& (0+255),b
  1759  001264  EC7B  F01D         	call	___awdiv	;wreg free
  1760  001268  C080  F10C         	movff	?___awdiv,sprintf@eexp
  1761  00126C  C081  F10D         	movff	?___awdiv+1,sprintf@eexp+1
  1762                           
  1763                           ; BSR set to: 0
  1764                           ;doprnt.c: 867: if(eexp < 0)
  1765  001270  0101               	movlb	1	; () banked
  1766  001272  AF0D               	btfss	(sprintf@eexp+1)& (0+255),7,b
  1767  001274  D003               	goto	l6536
  1768                           
  1769                           ; BSR set to: 1
  1770                           ;doprnt.c: 868: eexp--;
  1771  001276  070C               	decf	sprintf@eexp& (0+255),f,b
  1772  001278  A0D8               	btfss	status,0,c
  1773  00127A  070D               	decf	(sprintf@eexp+1)& (0+255),f,b
  1774  00127C                     l6536:
  1775                           
  1776                           ; BSR set to: 1
  1777                           ;doprnt.c: 872: tmpval.integ = scale(-eexp);
  1778  00127C  510C               	movf	sprintf@eexp& (0+255),w,b
  1779  00127E  0800               	sublw	0
  1780  001280  EC6B  F010         	call	_scale
  1781  001284  C097  F10E         	movff	?_scale,sprintf@tmpval
  1782  001288  C098  F10F         	movff	?_scale+1,sprintf@tmpval+1
  1783  00128C  C099  F110         	movff	?_scale+2,sprintf@tmpval+2
  1784                           
  1785                           ; BSR set to: 0
  1786                           ;doprnt.c: 873: tmpval.integ *= fval;
  1787  001290  C10E  F088         	movff	sprintf@tmpval,___ftmul@f1
  1788  001294  C10F  F089         	movff	sprintf@tmpval+1,___ftmul@f1+1
  1789  001298  C110  F08A         	movff	sprintf@tmpval+2,___ftmul@f1+2
  1790  00129C  C118  F08B         	movff	sprintf@fval,___ftmul@f2
  1791  0012A0  C119  F08C         	movff	sprintf@fval+1,___ftmul@f2+1
  1792  0012A4  C11A  F08D         	movff	sprintf@fval+2,___ftmul@f2+2
  1793  0012A8  EC04  F019         	call	___ftmul	;wreg free
  1794  0012AC  C088  F10E         	movff	?___ftmul,sprintf@tmpval
  1795  0012B0  C089  F10F         	movff	?___ftmul+1,sprintf@tmpval+1
  1796  0012B4  C08A  F110         	movff	?___ftmul+2,sprintf@tmpval+2
  1797                           
  1798                           ; BSR set to: 0
  1799                           ;doprnt.c: 874: if(tmpval.integ < 1.0)
  1800  0012B8  C10E  F07A         	movff	sprintf@tmpval,___ftge@ff1
  1801  0012BC  C10F  F07B         	movff	sprintf@tmpval+1,___ftge@ff1+1
  1802  0012C0  C110  F07C         	movff	sprintf@tmpval+2,___ftge@ff1+2
  1803  0012C4  0E00               	movlw	0
  1804  0012C6  6F7D               	movwf	___ftge@ff2& (0+255),b
  1805  0012C8  0E80               	movlw	128
  1806  0012CA  6F7E               	movwf	(___ftge@ff2+1)& (0+255),b
  1807  0012CC  0E3F               	movlw	63
  1808  0012CE  6F7F               	movwf	(___ftge@ff2+2)& (0+255),b
  1809  0012D0  ECBD  F01E         	call	___ftge	;wreg free
  1810  0012D4  B0D8               	btfsc	status,0,c
  1811  0012D6  D005               	goto	l6544
  1812                           
  1813                           ; BSR set to: 0
  1814                           ;doprnt.c: 875: eexp--;
  1815  0012D8  0101               	movlb	1	; () banked
  1816  0012DA  070C               	decf	sprintf@eexp& (0+255),f,b
  1817  0012DC  A0D8               	btfss	status,0,c
  1818  0012DE  070D               	decf	(sprintf@eexp+1)& (0+255),f,b
  1819  0012E0  D013               	goto	l6548
  1820  0012E2                     l6544:
  1821                           
  1822                           ; BSR set to: 0
  1823                           ;doprnt.c: 876: else if(tmpval.integ >= 10.0)
  1824  0012E2  C10E  F07A         	movff	sprintf@tmpval,___ftge@ff1
  1825  0012E6  C10F  F07B         	movff	sprintf@tmpval+1,___ftge@ff1+1
  1826  0012EA  C110  F07C         	movff	sprintf@tmpval+2,___ftge@ff1+2
  1827  0012EE  0E00               	movlw	0
  1828  0012F0  6F7D               	movwf	___ftge@ff2& (0+255),b
  1829  0012F2  0E20               	movlw	32
  1830  0012F4  6F7E               	movwf	(___ftge@ff2+1)& (0+255),b
  1831  0012F6  0E41               	movlw	65
  1832  0012F8  6F7F               	movwf	(___ftge@ff2+2)& (0+255),b
  1833  0012FA  ECBD  F01E         	call	___ftge	;wreg free
  1834  0012FE  A0D8               	btfss	status,0,c
  1835  001300  D003               	goto	l6548
  1836                           
  1837                           ; BSR set to: 0
  1838                           ;doprnt.c: 877: eexp++;
  1839  001302  0101               	movlb	1	; () banked
  1840  001304  4B0C               	infsnz	sprintf@eexp& (0+255),f,b
  1841  001306  2B0D               	incf	(sprintf@eexp+1)& (0+255),f,b
  1842  001308                     l6548:
  1843                           
  1844                           ;doprnt.c: 878: };doprnt.c: 1138: if(prec <= 12)
  1845  001308  0101               	movlb	1	; () banked
  1846  00130A  BF17               	btfsc	(sprintf@prec+1)& (0+255),7,b
  1847  00130C  D006               	goto	u8150
  1848  00130E  5117               	movf	(sprintf@prec+1)& (0+255),w,b
  1849  001310  E11B               	bnz	l6552
  1850  001312  0E0D               	movlw	13
  1851  001314  5D16               	subwf	sprintf@prec& (0+255),w,b
  1852  001316  B0D8               	btfsc	status,0,c
  1853  001318  D017               	goto	l6552
  1854  00131A                     u8150:
  1855                           
  1856                           ; BSR set to: 1
  1857                           ;doprnt.c: 1139: fval += fround((unsigned int)prec);
  1858  00131A  C118  F0A5         	movff	sprintf@fval,___ftadd@f1
  1859  00131E  C119  F0A6         	movff	sprintf@fval+1,___ftadd@f1+1
  1860  001322  C11A  F0A7         	movff	sprintf@fval+2,___ftadd@f1+2
  1861  001326  5116               	movf	sprintf@prec& (0+255),w,b
  1862  001328  EC05  F014         	call	_fround
  1863  00132C  C097  F0A8         	movff	?_fround,___ftadd@f2
  1864  001330  C098  F0A9         	movff	?_fround+1,___ftadd@f2+1
  1865  001334  C099  F0AA         	movff	?_fround+2,___ftadd@f2+2
  1866  001338  ECE3  F015         	call	___ftadd	;wreg free
  1867  00133C  C0A5  F118         	movff	?___ftadd,sprintf@fval
  1868  001340  C0A6  F119         	movff	?___ftadd+1,sprintf@fval+1
  1869  001344  C0A7  F11A         	movff	?___ftadd+2,sprintf@fval+2
  1870  001348                     l6552:
  1871                           
  1872                           ;doprnt.c: 1142: if((eexp > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  1873  001348  0101               	movlb	1	; () banked
  1874  00134A  BF0D               	btfsc	(sprintf@eexp+1)& (0+255),7,b
  1875  00134C  D006               	goto	u8160
  1876  00134E  510D               	movf	(sprintf@eexp+1)& (0+255),w,b
  1877  001350  E120               	bnz	l6560
  1878  001352  0E0A               	movlw	10
  1879  001354  5D0C               	subwf	sprintf@eexp& (0+255),w,b
  1880  001356  B0D8               	btfsc	status,0,c
  1881  001358  D01C               	goto	u8190
  1882  00135A                     u8160:
  1883                           
  1884                           ; BSR set to: 1
  1885  00135A  5118               	movf	sprintf@fval& (0+255),w,b
  1886  00135C  1119               	iorwf	(sprintf@fval+1)& (0+255),w,b
  1887  00135E  111A               	iorwf	(sprintf@fval+2)& (0+255),w,b
  1888  001360  B4D8               	btfsc	status,2,c
  1889  001362  D057               	goto	l6574
  1890                           
  1891                           ; BSR set to: 1
  1892  001364  C118  F0B7         	movff	sprintf@fval,___fttol@f1
  1893  001368  C119  F0B8         	movff	sprintf@fval+1,___fttol@f1+1
  1894  00136C  C11A  F0B9         	movff	sprintf@fval+2,___fttol@f1+2
  1895  001370  EC51  F01B         	call	___fttol	;wreg free
  1896  001374  51B7               	movf	?___fttol& (0+255),w,b
  1897  001376  11B8               	iorwf	(?___fttol+1)& (0+255),w,b
  1898  001378  11B9               	iorwf	(?___fttol+2)& (0+255),w,b
  1899  00137A  11BA               	iorwf	(?___fttol+3)& (0+255),w,b
  1900  00137C  A4D8               	btfss	status,2,c
  1901  00137E  D049               	goto	l6574
  1902                           
  1903                           ; BSR set to: 0
  1904  001380  0101               	movlb	1	; () banked
  1905  001382  BF0D               	btfsc	(sprintf@eexp+1)& (0+255),7,b
  1906  001384  D046               	goto	l6574
  1907  001386  510D               	movf	(sprintf@eexp+1)& (0+255),w,b
  1908  001388  E104               	bnz	u8190
  1909  00138A  0E02               	movlw	2
  1910  00138C  5D0C               	subwf	sprintf@eexp& (0+255),w,b
  1911  00138E  A0D8               	btfss	status,0,c
  1912  001390  D040               	goto	l6574
  1913  001392                     u8190:
  1914  001392                     l6560:
  1915                           
  1916                           ; BSR set to: 1
  1917                           ;doprnt.c: 1146: if(tmpval.integ < 4.294967296){
  1918  001392  C10E  F07A         	movff	sprintf@tmpval,___ftge@ff1
  1919  001396  C10F  F07B         	movff	sprintf@tmpval+1,___ftge@ff1+1
  1920  00139A  C110  F07C         	movff	sprintf@tmpval+2,___ftge@ff1+2
  1921  00139E  0E70               	movlw	112
  1922  0013A0  0100               	movlb	0	; () banked
  1923  0013A2  6F7D               	movwf	___ftge@ff2& (0+255),b
  1924  0013A4  0E89               	movlw	137
  1925  0013A6  6F7E               	movwf	(___ftge@ff2+1)& (0+255),b
  1926  0013A8  0E40               	movlw	64
  1927  0013AA  6F7F               	movwf	(___ftge@ff2+2)& (0+255),b
  1928  0013AC  ECBD  F01E         	call	___ftge	;wreg free
  1929  0013B0  B0D8               	btfsc	status,0,c
  1930  0013B2  D003               	goto	l6564
  1931                           
  1932                           ; BSR set to: 0
  1933                           ;doprnt.c: 1147: eexp -= (sizeof dpowers/sizeof dpowers[0])-1;
  1934  0013B4  0101               	movlb	1	; () banked
  1935  0013B6  0EF7               	movlw	247
  1936  0013B8  D002               	goto	L1
  1937  0013BA                     l6564:
  1938                           
  1939                           ; BSR set to: 0
  1940                           ;doprnt.c: 1149: eexp -= (sizeof dpowers/sizeof dpowers[0])-2;
  1941  0013BA  0101               	movlb	1	; () banked
  1942  0013BC  0EF8               	movlw	248
  1943  0013BE                     L1:
  1944  0013BE  270C               	addwf	sprintf@eexp& (0+255),f,b
  1945  0013C0  0EFF               	movlw	255
  1946  0013C2  230D               	addwfc	(sprintf@eexp+1)& (0+255),f,b
  1947                           
  1948                           ; BSR set to: 1
  1949                           ;doprnt.c: 1150: };doprnt.c: 1151: tmpval.integ = scale(eexp);
  1950  0013C4  510C               	movf	sprintf@eexp& (0+255),w,b
  1951  0013C6  EC6B  F010         	call	_scale
  1952  0013CA  C097  F10E         	movff	?_scale,sprintf@tmpval
  1953  0013CE  C098  F10F         	movff	?_scale+1,sprintf@tmpval+1
  1954  0013D2  C099  F110         	movff	?_scale+2,sprintf@tmpval+2
  1955                           
  1956                           ; BSR set to: 0
  1957                           
  1958                           ;doprnt.c: 1152: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  1959  0013D6  C118  F07A         	movff	sprintf@fval,__tdiv_to_l_@f1
  1960  0013DA  C119  F07B         	movff	sprintf@fval+1,__tdiv_to_l_@f1+1
  1961  0013DE  C11A  F07C         	movff	sprintf@fval+2,__tdiv_to_l_@f1+2
  1962  0013E2  C10E  F07D         	movff	sprintf@tmpval,__tdiv_to_l_@f2
  1963  0013E6  C10F  F07E         	movff	sprintf@tmpval+1,__tdiv_to_l_@f2+1
  1964  0013EA  C110  F07F         	movff	sprintf@tmpval+2,__tdiv_to_l_@f2+2
  1965  0013EE  EC8B  F017         	call	__tdiv_to_l_	;wreg free
  1966  0013F2  C07A  F112         	movff	?__tdiv_to_l_,sprintf@val
  1967  0013F6  C07B  F113         	movff	?__tdiv_to_l_+1,sprintf@val+1
  1968  0013FA  C07C  F114         	movff	?__tdiv_to_l_+2,sprintf@val+2
  1969  0013FE  C07D  F115         	movff	?__tdiv_to_l_+3,sprintf@val+3
  1970                           
  1971                           ; BSR set to: 0
  1972                           ;doprnt.c: 1155: fval = 0.0;
  1973  001402  0E00               	movlw	0
  1974  001404  0101               	movlb	1	; () banked
  1975  001406  6F18               	movwf	sprintf@fval& (0+255),b
  1976  001408  0E00               	movlw	0
  1977  00140A  6F19               	movwf	(sprintf@fval+1)& (0+255),b
  1978  00140C  0E00               	movlw	0
  1979  00140E  6F1A               	movwf	(sprintf@fval+2)& (0+255),b
  1980                           
  1981                           ;doprnt.c: 1156: } else {
  1982  001410  D033               	goto	l6578
  1983  001412                     l6574:
  1984                           
  1985                           ;doprnt.c: 1157: val = (unsigned long)fval;
  1986  001412  C118  F0B7         	movff	sprintf@fval,___fttol@f1
  1987  001416  C119  F0B8         	movff	sprintf@fval+1,___fttol@f1+1
  1988  00141A  C11A  F0B9         	movff	sprintf@fval+2,___fttol@f1+2
  1989  00141E  EC51  F01B         	call	___fttol	;wreg free
  1990  001422  C0B7  F112         	movff	?___fttol,sprintf@val
  1991  001426  C0B8  F113         	movff	?___fttol+1,sprintf@val+1
  1992  00142A  C0B9  F114         	movff	?___fttol+2,sprintf@val+2
  1993  00142E  C0BA  F115         	movff	?___fttol+3,sprintf@val+3
  1994                           
  1995                           ;doprnt.c: 1158: fval -= (double)val;
  1996  001432  C118  F0B1         	movff	sprintf@fval,___ftsub@f1
  1997  001436  C119  F0B2         	movff	sprintf@fval+1,___ftsub@f1+1
  1998  00143A  C11A  F0B3         	movff	sprintf@fval+2,___ftsub@f1+2
  1999  00143E  C112  F082         	movff	sprintf@val,___lltoft@c
  2000  001442  C113  F083         	movff	sprintf@val+1,___lltoft@c+1
  2001  001446  C114  F084         	movff	sprintf@val+2,___lltoft@c+2
  2002  00144A  C115  F085         	movff	sprintf@val+3,___lltoft@c+3
  2003  00144E  EC3F  F020         	call	___lltoft	;wreg free
  2004  001452  C082  F0B4         	movff	?___lltoft,___ftsub@f2
  2005  001456  C083  F0B5         	movff	?___lltoft+1,___ftsub@f2+1
  2006  00145A  C084  F0B6         	movff	?___lltoft+2,___ftsub@f2+2
  2007  00145E  EC11  F021         	call	___ftsub	;wreg free
  2008  001462  C0B1  F118         	movff	?___ftsub,sprintf@fval
  2009  001466  C0B2  F119         	movff	?___ftsub+1,sprintf@fval+1
  2010  00146A  C0B3  F11A         	movff	?___ftsub+2,sprintf@fval+2
  2011                           
  2012                           ; BSR set to: 0
  2013                           ;doprnt.c: 1159: eexp = 0;
  2014  00146E  0E00               	movlw	0
  2015  001470  0101               	movlb	1	; () banked
  2016  001472  6F0D               	movwf	(sprintf@eexp+1)& (0+255),b
  2017  001474  0E00               	movlw	0
  2018  001476  6F0C               	movwf	sprintf@eexp& (0+255),b
  2019  001478                     l6578:
  2020                           
  2021                           ; BSR set to: 1
  2022                           ;doprnt.c: 1160: };doprnt.c: 1162: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ;
      +                           c++)
  2023  001478  0E01               	movlw	1
  2024  00147A  6F1B               	movwf	sprintf@c& (0+255),b
  2025  00147C                     l6584:
  2026                           
  2027                           ; BSR set to: 1
  2028                           ;doprnt.c: 1163: if(val < dpowers[c])
  2029  00147C  511B               	movf	sprintf@c& (0+255),w,b
  2030  00147E  0D04               	mullw	4
  2031  001480  50F3               	movf	243,w,c
  2032  001482  0F4F               	addlw	low _dpowers
  2033  001484  6F00               	movwf	??_sprintf& (0+255),b
  2034  001486  C100  FFF6         	movff	??_sprintf,tblptrl
  2035  00148A                     	if	1	;There is more than 1 active tblptr byte
  2036  00148A  0E10               	movlw	high __smallconst
  2037  00148C  6EF7               	movwf	tblptrh,c
  2038  00148E                     	endif
  2039  00148E                     	if	0	;tblptru may be non-zero
  2040  00148E                     	endif
  2041  00148E                     	if	0	;tblptru may be non-zero
  2042  00148E                     	endif
  2043  00148E  0009               	tblrd		*+
  2044  001490  50F5               	movf	tablat,w,c
  2045  001492  5D12               	subwf	sprintf@val& (0+255),w,b
  2046  001494  0009               	tblrd		*+
  2047  001496  50F5               	movf	tablat,w,c
  2048  001498  5913               	subwfb	(sprintf@val+1)& (0+255),w,b
  2049  00149A  0009               	tblrd		*+
  2050  00149C  50F5               	movf	tablat,w,c
  2051  00149E  5914               	subwfb	(sprintf@val+2)& (0+255),w,b
  2052  0014A0  0009               	tblrd		*+
  2053  0014A2  50F5               	movf	tablat,w,c
  2054  0014A4  5915               	subwfb	(sprintf@val+3)& (0+255),w,b
  2055  0014A6  A0D8               	btfss	status,0,c
  2056  0014A8  D005               	goto	u8220
  2057                           
  2058                           ; BSR set to: 1
  2059  0014AA  2B1B               	incf	sprintf@c& (0+255),f,b
  2060                           
  2061                           ; BSR set to: 1
  2062  0014AC  0E0A               	movlw	10
  2063  0014AE  191B               	xorwf	sprintf@c& (0+255),w,b
  2064  0014B0  A4D8               	btfss	status,2,c
  2065  0014B2  D7E4               	goto	l6584
  2066  0014B4                     u8220:
  2067                           
  2068                           ; BSR set to: 1
  2069                           ;doprnt.c: 1201: {;doprnt.c: 1214: if(flag & 0x03)
  2070  0014B4  C10A  F100         	movff	sprintf@flag,??_sprintf
  2071  0014B8  0E03               	movlw	3
  2072  0014BA  1700               	andwf	??_sprintf& (0+255),f,b
  2073  0014BC  B4D8               	btfsc	status,2,c
  2074  0014BE  D053               	goto	l6606
  2075                           
  2076                           ; BSR set to: 1
  2077                           ;doprnt.c: 1216: ((*sp++ = ('-')));
  2078  0014C0  C0C6  FFD9         	movff	sprintf@sp,fsr2l
  2079  0014C4  C0C7  FFDA         	movff	sprintf@sp+1,fsr2h
  2080  0014C8  0E2D               	movlw	45
  2081  0014CA  6EDF               	movwf	indf2,c
  2082                           
  2083                           ; BSR set to: 1
  2084  0014CC  0100               	movlb	0	; () banked
  2085  0014CE  4BC6               	infsnz	sprintf@sp& (0+255),f,b
  2086  0014D0  2BC7               	incf	(sprintf@sp+1)& (0+255),f,b
  2087  0014D2  D049               	goto	l6606
  2088  0014D4                     l6598:
  2089                           
  2090                           ; BSR set to: 1
  2091                           ;doprnt.c: 1226: {;doprnt.c: 1227: tmpval.vd = val/dpowers[c];
  2092  0014D4  C112  F07A         	movff	sprintf@val,___lldiv@dividend
  2093  0014D8  C113  F07B         	movff	sprintf@val+1,___lldiv@dividend+1
  2094  0014DC  C114  F07C         	movff	sprintf@val+2,___lldiv@dividend+2
  2095  0014E0  C115  F07D         	movff	sprintf@val+3,___lldiv@dividend+3
  2096  0014E4  511B               	movf	sprintf@c& (0+255),w,b
  2097  0014E6  0D04               	mullw	4
  2098  0014E8  50F3               	movf	243,w,c
  2099  0014EA  0F4F               	addlw	low _dpowers
  2100  0014EC  6F00               	movwf	??_sprintf& (0+255),b
  2101  0014EE  C100  FFF6         	movff	??_sprintf,tblptrl
  2102  0014F2                     	if	1	;There is more than 1 active tblptr byte
  2103  0014F2  0E10               	movlw	high __smallconst
  2104  0014F4  6EF7               	movwf	tblptrh,c
  2105  0014F6                     	endif
  2106  0014F6                     	if	0	;tblptru may be non-zero
  2107  0014F6                     	endif
  2108  0014F6                     	if	0	;tblptru may be non-zero
  2109  0014F6                     	endif
  2110  0014F6  0009               	tblrd		*+
  2111  0014F8  CFF5 F07E          	movff	tablat,___lldiv@divisor
  2112  0014FC  0009               	tblrd		*+
  2113  0014FE  CFF5 F07F          	movff	tablat,___lldiv@divisor+1
  2114  001502  0009               	tblrd		*+
  2115  001504  CFF5 F080          	movff	tablat,___lldiv@divisor+2
  2116  001508  000A               	tblrd		*-
  2117  00150A  CFF5 F081          	movff	tablat,___lldiv@divisor+3
  2118  00150E  ECBD  F01D         	call	___lldiv	;wreg free
  2119  001512  C07A  F10E         	movff	?___lldiv,sprintf@tmpval
  2120  001516  C07B  F10F         	movff	?___lldiv+1,sprintf@tmpval+1
  2121  00151A  C07C  F110         	movff	?___lldiv+2,sprintf@tmpval+2
  2122  00151E  C07D  F111         	movff	?___lldiv+3,sprintf@tmpval+3
  2123                           
  2124                           ; BSR set to: 0
  2125                           ;doprnt.c: 1228: tmpval.vd %= 10;
  2126  001522  C10E  F087         	movff	sprintf@tmpval,___llmod@dividend
  2127  001526  C10F  F088         	movff	sprintf@tmpval+1,___llmod@dividend+1
  2128  00152A  C110  F089         	movff	sprintf@tmpval+2,___llmod@dividend+2
  2129  00152E  C111  F08A         	movff	sprintf@tmpval+3,___llmod@dividend+3
  2130  001532  0E0A               	movlw	10
  2131  001534  6F8B               	movwf	___llmod@divisor& (0+255),b
  2132  001536  0E00               	movlw	0
  2133  001538  6F8C               	movwf	(___llmod@divisor+1)& (0+255),b
  2134  00153A  0E00               	movlw	0
  2135  00153C  6F8D               	movwf	(___llmod@divisor+2)& (0+255),b
  2136  00153E  0E00               	movlw	0
  2137  001540  6F8E               	movwf	(___llmod@divisor+3)& (0+255),b
  2138  001542  ECD8  F01F         	call	___llmod	;wreg free
  2139  001546  C087  F10E         	movff	?___llmod,sprintf@tmpval
  2140  00154A  C088  F10F         	movff	?___llmod+1,sprintf@tmpval+1
  2141  00154E  C089  F110         	movff	?___llmod+2,sprintf@tmpval+2
  2142  001552  C08A  F111         	movff	?___llmod+3,sprintf@tmpval+3
  2143                           
  2144                           ; BSR set to: 0
  2145                           ;doprnt.c: 1229: ((*sp++ = ('0' + tmpval.vd)));
  2146  001556  0101               	movlb	1	; () banked
  2147  001558  510E               	movf	sprintf@tmpval& (0+255),w,b
  2148  00155A  0F30               	addlw	48
  2149  00155C  C0C6  FFD9         	movff	sprintf@sp,fsr2l
  2150  001560  C0C7  FFDA         	movff	sprintf@sp+1,fsr2h
  2151  001564  D7B2               	goto	L2
  2152  001566                     l6606:
  2153  001566  0101               	movlb	1	; () banked
  2154  001568  071B               	decf	sprintf@c& (0+255),f,b
  2155  00156A  291B               	incf	sprintf@c& (0+255),w,b
  2156  00156C  B4D8               	btfsc	status,2,c
  2157  00156E  D00E               	goto	l6614
  2158  001570  D7B1               	goto	l6598
  2159  001572                     l6608:
  2160                           
  2161                           ; BSR set to: 1
  2162                           ;doprnt.c: 1234: ((*sp++ = ('0')));
  2163  001572  C0C6  FFD9         	movff	sprintf@sp,fsr2l
  2164  001576  C0C7  FFDA         	movff	sprintf@sp+1,fsr2h
  2165  00157A  0E30               	movlw	48
  2166  00157C  6EDF               	movwf	indf2,c
  2167                           
  2168                           ; BSR set to: 1
  2169  00157E  0100               	movlb	0	; () banked
  2170  001580  4BC6               	infsnz	sprintf@sp& (0+255),f,b
  2171  001582  2BC7               	incf	(sprintf@sp+1)& (0+255),f,b
  2172                           
  2173                           ; BSR set to: 0
  2174                           ;doprnt.c: 1235: eexp--;
  2175  001584  0101               	movlb	1	; () banked
  2176  001586  070C               	decf	sprintf@eexp& (0+255),f,b
  2177  001588  A0D8               	btfss	status,0,c
  2178  00158A  070D               	decf	(sprintf@eexp+1)& (0+255),f,b
  2179  00158C                     l6614:
  2180                           
  2181                           ; BSR set to: 1
  2182  00158C  BF0D               	btfsc	(sprintf@eexp+1)& (0+255),7,b
  2183  00158E  D005               	goto	u8250
  2184  001590  510D               	movf	(sprintf@eexp+1)& (0+255),w,b
  2185  001592  E1EF               	bnz	l6608
  2186  001594  050C               	decf	sprintf@eexp& (0+255),w,b
  2187  001596  B0D8               	btfsc	status,0,c
  2188  001598  D7EC               	goto	l6608
  2189  00159A                     u8250:
  2190                           
  2191                           ; BSR set to: 1
  2192                           ;doprnt.c: 1236: };doprnt.c: 1237: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2)
      +                          )
  2193  00159A  BF17               	btfsc	(sprintf@prec+1)& (0+255),7,b
  2194  00159C  D009               	goto	l243
  2195  00159E  5117               	movf	(sprintf@prec+1)& (0+255),w,b
  2196  0015A0  E104               	bnz	u8260
  2197  0015A2  0E09               	movlw	9
  2198  0015A4  5D16               	subwf	sprintf@prec& (0+255),w,b
  2199  0015A6  A0D8               	btfss	status,0,c
  2200  0015A8  D003               	goto	l243
  2201  0015AA                     u8260:
  2202                           
  2203                           ; BSR set to: 1
  2204                           ;doprnt.c: 1238: c = (sizeof dpowers/sizeof dpowers[0])-2;
  2205  0015AA  0E08               	movlw	8
  2206  0015AC  6F1B               	movwf	sprintf@c& (0+255),b
  2207  0015AE  D002               	goto	l6620
  2208  0015B0                     l243:
  2209                           
  2210                           ; BSR set to: 1
  2211                           ;doprnt.c: 1239: else;doprnt.c: 1240: c = (char)prec;
  2212  0015B0  C116  F11B         	movff	sprintf@prec,sprintf@c
  2213  0015B4                     l6620:
  2214                           
  2215                           ; BSR set to: 1
  2216                           ;doprnt.c: 1241: prec -= (int)c;
  2217  0015B4  511B               	movf	sprintf@c& (0+255),w,b
  2218  0015B6  5F16               	subwf	sprintf@prec& (0+255),f,b
  2219  0015B8  0E00               	movlw	0
  2220  0015BA  5B17               	subwfb	(sprintf@prec+1)& (0+255),f,b
  2221                           
  2222                           ; BSR set to: 1
  2223                           ;doprnt.c: 1245: if(c)
  2224  0015BC  511B               	movf	sprintf@c& (0+255),w,b
  2225  0015BE  B4D8               	btfsc	status,2,c
  2226  0015C0  D009               	goto	l6628
  2227                           
  2228                           ; BSR set to: 1
  2229                           ;doprnt.c: 1247: ((*sp++ = ('.')));
  2230  0015C2  C0C6  FFD9         	movff	sprintf@sp,fsr2l
  2231  0015C6  C0C7  FFDA         	movff	sprintf@sp+1,fsr2h
  2232  0015CA  0E2E               	movlw	46
  2233  0015CC  6EDF               	movwf	indf2,c
  2234                           
  2235                           ; BSR set to: 1
  2236  0015CE  0100               	movlb	0	; () banked
  2237  0015D0  4BC6               	infsnz	sprintf@sp& (0+255),f,b
  2238  0015D2  2BC7               	incf	(sprintf@sp+1)& (0+255),f,b
  2239  0015D4                     l6628:
  2240                           
  2241                           ;doprnt.c: 1253: val = (unsigned long)(fval * scale((signed char)c));
  2242  0015D4  0101               	movlb	1	; () banked
  2243  0015D6  511B               	movf	sprintf@c& (0+255),w,b
  2244  0015D8  EC6B  F010         	call	_scale
  2245  0015DC  C097  F106         	movff	?_scale,_sprintf$942
  2246  0015E0  C098  F107         	movff	?_scale+1,_sprintf$942+1
  2247  0015E4  C099  F108         	movff	?_scale+2,_sprintf$942+2
  2248                           
  2249                           ; BSR set to: 0
  2250                           ;doprnt.c: 1253: val = (unsigned long)(fval * scale((signed char)c));
  2251  0015E8  C118  F08B         	movff	sprintf@fval,___ftmul@f2
  2252  0015EC  C119  F08C         	movff	sprintf@fval+1,___ftmul@f2+1
  2253  0015F0  C11A  F08D         	movff	sprintf@fval+2,___ftmul@f2+2
  2254  0015F4  C106  F088         	movff	_sprintf$942,___ftmul@f1
  2255  0015F8  C107  F089         	movff	_sprintf$942+1,___ftmul@f1+1
  2256  0015FC  C108  F08A         	movff	_sprintf$942+2,___ftmul@f1+2
  2257  001600  EC04  F019         	call	___ftmul	;wreg free
  2258  001604  C088  F0B7         	movff	?___ftmul,___fttol@f1
  2259  001608  C089  F0B8         	movff	?___ftmul+1,___fttol@f1+1
  2260  00160C  C08A  F0B9         	movff	?___ftmul+2,___fttol@f1+2
  2261  001610  EC51  F01B         	call	___fttol	;wreg free
  2262  001614  C0B7  F112         	movff	?___fttol,sprintf@val
  2263  001618  C0B8  F113         	movff	?___fttol+1,sprintf@val+1
  2264  00161C  C0B9  F114         	movff	?___fttol+2,sprintf@val+2
  2265  001620  C0BA  F115         	movff	?___fttol+3,sprintf@val+3
  2266                           
  2267                           ;doprnt.c: 1254: while(c--) {
  2268  001624  D074               	goto	l6642
  2269  001626                     l6632:
  2270                           
  2271                           ; BSR set to: 1
  2272                           ;doprnt.c: 1255: tmpval.vd = val/dpowers[c];
  2273  001626  C112  F07A         	movff	sprintf@val,___lldiv@dividend
  2274  00162A  C113  F07B         	movff	sprintf@val+1,___lldiv@dividend+1
  2275  00162E  C114  F07C         	movff	sprintf@val+2,___lldiv@dividend+2
  2276  001632  C115  F07D         	movff	sprintf@val+3,___lldiv@dividend+3
  2277  001636  511B               	movf	sprintf@c& (0+255),w,b
  2278  001638  0D04               	mullw	4
  2279  00163A  50F3               	movf	243,w,c
  2280  00163C  0F4F               	addlw	low _dpowers
  2281  00163E  6F00               	movwf	??_sprintf& (0+255),b
  2282  001640  C100  FFF6         	movff	??_sprintf,tblptrl
  2283  001644                     	if	1	;There is more than 1 active tblptr byte
  2284  001644  0E10               	movlw	high __smallconst
  2285  001646  6EF7               	movwf	tblptrh,c
  2286  001648                     	endif
  2287  001648                     	if	0	;tblptru may be non-zero
  2288  001648                     	endif
  2289  001648                     	if	0	;tblptru may be non-zero
  2290  001648                     	endif
  2291  001648  0009               	tblrd		*+
  2292  00164A  CFF5 F07E          	movff	tablat,___lldiv@divisor
  2293  00164E  0009               	tblrd		*+
  2294  001650  CFF5 F07F          	movff	tablat,___lldiv@divisor+1
  2295  001654  0009               	tblrd		*+
  2296  001656  CFF5 F080          	movff	tablat,___lldiv@divisor+2
  2297  00165A  000A               	tblrd		*-
  2298  00165C  CFF5 F081          	movff	tablat,___lldiv@divisor+3
  2299  001660  ECBD  F01D         	call	___lldiv	;wreg free
  2300  001664  C07A  F10E         	movff	?___lldiv,sprintf@tmpval
  2301  001668  C07B  F10F         	movff	?___lldiv+1,sprintf@tmpval+1
  2302  00166C  C07C  F110         	movff	?___lldiv+2,sprintf@tmpval+2
  2303  001670  C07D  F111         	movff	?___lldiv+3,sprintf@tmpval+3
  2304                           
  2305                           ; BSR set to: 0
  2306                           ;doprnt.c: 1256: tmpval.vd %= 10;
  2307  001674  C10E  F087         	movff	sprintf@tmpval,___llmod@dividend
  2308  001678  C10F  F088         	movff	sprintf@tmpval+1,___llmod@dividend+1
  2309  00167C  C110  F089         	movff	sprintf@tmpval+2,___llmod@dividend+2
  2310  001680  C111  F08A         	movff	sprintf@tmpval+3,___llmod@dividend+3
  2311  001684  0E0A               	movlw	10
  2312  001686  6F8B               	movwf	___llmod@divisor& (0+255),b
  2313  001688  0E00               	movlw	0
  2314  00168A  6F8C               	movwf	(___llmod@divisor+1)& (0+255),b
  2315  00168C  0E00               	movlw	0
  2316  00168E  6F8D               	movwf	(___llmod@divisor+2)& (0+255),b
  2317  001690  0E00               	movlw	0
  2318  001692  6F8E               	movwf	(___llmod@divisor+3)& (0+255),b
  2319  001694  ECD8  F01F         	call	___llmod	;wreg free
  2320  001698  C087  F10E         	movff	?___llmod,sprintf@tmpval
  2321  00169C  C088  F10F         	movff	?___llmod+1,sprintf@tmpval+1
  2322  0016A0  C089  F110         	movff	?___llmod+2,sprintf@tmpval+2
  2323  0016A4  C08A  F111         	movff	?___llmod+3,sprintf@tmpval+3
  2324                           
  2325                           ; BSR set to: 0
  2326                           ;doprnt.c: 1257: ((*sp++ = ('0' + tmpval.vd)));
  2327  0016A8  0101               	movlb	1	; () banked
  2328  0016AA  510E               	movf	sprintf@tmpval& (0+255),w,b
  2329  0016AC  0F30               	addlw	48
  2330  0016AE  C0C6  FFD9         	movff	sprintf@sp,fsr2l
  2331  0016B2  C0C7  FFDA         	movff	sprintf@sp+1,fsr2h
  2332  0016B6  6EDF               	movwf	indf2,c
  2333                           
  2334                           ; BSR set to: 1
  2335  0016B8  0100               	movlb	0	; () banked
  2336  0016BA  4BC6               	infsnz	sprintf@sp& (0+255),f,b
  2337  0016BC  2BC7               	incf	(sprintf@sp+1)& (0+255),f,b
  2338                           
  2339                           ; BSR set to: 0
  2340                           ;doprnt.c: 1258: val %= dpowers[c];
  2341  0016BE  C112  F087         	movff	sprintf@val,___llmod@dividend
  2342  0016C2  C113  F088         	movff	sprintf@val+1,___llmod@dividend+1
  2343  0016C6  C114  F089         	movff	sprintf@val+2,___llmod@dividend+2
  2344  0016CA  C115  F08A         	movff	sprintf@val+3,___llmod@dividend+3
  2345  0016CE  0101               	movlb	1	; () banked
  2346  0016D0  511B               	movf	sprintf@c& (0+255),w,b
  2347  0016D2  0D04               	mullw	4
  2348  0016D4  50F3               	movf	243,w,c
  2349  0016D6  0F4F               	addlw	low _dpowers
  2350  0016D8  6F00               	movwf	??_sprintf& (0+255),b
  2351  0016DA  C100  FFF6         	movff	??_sprintf,tblptrl
  2352  0016DE                     	if	1	;There is more than 1 active tblptr byte
  2353  0016DE  0E10               	movlw	high __smallconst
  2354  0016E0  6EF7               	movwf	tblptrh,c
  2355  0016E2                     	endif
  2356  0016E2                     	if	0	;tblptru may be non-zero
  2357  0016E2                     	endif
  2358  0016E2                     	if	0	;tblptru may be non-zero
  2359  0016E2                     	endif
  2360  0016E2  0009               	tblrd		*+
  2361  0016E4  CFF5 F08B          	movff	tablat,___llmod@divisor
  2362  0016E8  0009               	tblrd		*+
  2363  0016EA  CFF5 F08C          	movff	tablat,___llmod@divisor+1
  2364  0016EE  0009               	tblrd		*+
  2365  0016F0  CFF5 F08D          	movff	tablat,___llmod@divisor+2
  2366  0016F4  000A               	tblrd		*-
  2367  0016F6  CFF5 F08E          	movff	tablat,___llmod@divisor+3
  2368  0016FA  ECD8  F01F         	call	___llmod	;wreg free
  2369  0016FE  C087  F112         	movff	?___llmod,sprintf@val
  2370  001702  C088  F113         	movff	?___llmod+1,sprintf@val+1
  2371  001706  C089  F114         	movff	?___llmod+2,sprintf@val+2
  2372  00170A  C08A  F115         	movff	?___llmod+3,sprintf@val+3
  2373  00170E                     l6642:
  2374                           
  2375                           ; BSR set to: 0
  2376  00170E  0101               	movlb	1	; () banked
  2377  001710  071B               	decf	sprintf@c& (0+255),f,b
  2378  001712  291B               	incf	sprintf@c& (0+255),w,b
  2379  001714  B4D8               	btfsc	status,2,c
  2380  001716  D00E               	goto	l6650
  2381  001718  D786               	goto	l6632
  2382  00171A                     l6644:
  2383                           
  2384                           ; BSR set to: 1
  2385                           ;doprnt.c: 1262: ((*sp++ = ('0')));
  2386  00171A  C0C6  FFD9         	movff	sprintf@sp,fsr2l
  2387  00171E  C0C7  FFDA         	movff	sprintf@sp+1,fsr2h
  2388  001722  0E30               	movlw	48
  2389  001724  6EDF               	movwf	indf2,c
  2390                           
  2391                           ; BSR set to: 1
  2392  001726  0100               	movlb	0	; () banked
  2393  001728  4BC6               	infsnz	sprintf@sp& (0+255),f,b
  2394  00172A  2BC7               	incf	(sprintf@sp+1)& (0+255),f,b
  2395                           
  2396                           ; BSR set to: 0
  2397                           ;doprnt.c: 1263: prec--;
  2398  00172C  0101               	movlb	1	; () banked
  2399  00172E  0716               	decf	sprintf@prec& (0+255),f,b
  2400  001730  A0D8               	btfss	status,0,c
  2401  001732  0717               	decf	(sprintf@prec+1)& (0+255),f,b
  2402  001734                     l6650:
  2403                           
  2404                           ; BSR set to: 1
  2405  001734  5116               	movf	sprintf@prec& (0+255),w,b
  2406  001736  1117               	iorwf	(sprintf@prec+1)& (0+255),w,b
  2407  001738  B4D8               	btfsc	status,2,c
  2408  00173A  D0B7               	goto	u8380
  2409  00173C  D7EE               	goto	l6644
  2410  00173E                     l6652:
  2411                           
  2412                           ; BSR set to: 1
  2413                           ;doprnt.c: 1272: };doprnt.c: 1279: {;doprnt.c: 1285: val = (unsigned long)(*(int *)__va_
      +                          arg((*(int **)ap), (int)0));
  2414  00173E  5109               	movf	sprintf@ap& (0+255),w,b
  2415  001740  6ED9               	movwf	fsr2l,c
  2416  001742  6ADA               	clrf	fsr2h,c
  2417  001744  CFDE F112          	movff	postinc2,sprintf@val
  2418  001748  CFDD F113          	movff	postdec2,sprintf@val+1
  2419  00174C  0E00               	movlw	0
  2420  00174E  BF13               	btfsc	(sprintf@val+1)& (0+255),7,b
  2421  001750  0EFF               	movlw	-1
  2422  001752  6F14               	movwf	(sprintf@val+2)& (0+255),b
  2423  001754  6F15               	movwf	(sprintf@val+3)& (0+255),b
  2424                           
  2425                           ; BSR set to: 1
  2426  001756  0E02               	movlw	2
  2427  001758  2709               	addwf	sprintf@ap& (0+255),f,b
  2428                           
  2429                           ; BSR set to: 1
  2430                           ;doprnt.c: 1287: if((long)val < 0) {
  2431  00175A  AF15               	btfss	(sprintf@val+3)& (0+255),7,b
  2432  00175C  D00A               	goto	l6662
  2433                           
  2434                           ; BSR set to: 1
  2435                           ;doprnt.c: 1288: flag |= 0x03;
  2436  00175E  0E03               	movlw	3
  2437  001760  130A               	iorwf	sprintf@flag& (0+255),f,b
  2438                           
  2439                           ; BSR set to: 1
  2440                           ;doprnt.c: 1289: val = -val;
  2441  001762  1F15               	comf	(sprintf@val+3)& (0+255),f,b
  2442  001764  1F14               	comf	(sprintf@val+2)& (0+255),f,b
  2443  001766  1F13               	comf	(sprintf@val+1)& (0+255),f,b
  2444  001768  6D12               	negf	sprintf@val& (0+255),b
  2445  00176A  0E00               	movlw	0
  2446  00176C  2313               	addwfc	(sprintf@val+1)& (0+255),f,b
  2447  00176E  2314               	addwfc	(sprintf@val+2)& (0+255),f,b
  2448  001770  2315               	addwfc	(sprintf@val+3)& (0+255),f,b
  2449  001772                     l6662:
  2450                           
  2451                           ; BSR set to: 1
  2452                           ;doprnt.c: 1290: };doprnt.c: 1292: };doprnt.c: 1316: if(prec == 0 && val == 0)
  2453  001772  5116               	movf	sprintf@prec& (0+255),w,b
  2454  001774  1117               	iorwf	(sprintf@prec+1)& (0+255),w,b
  2455  001776  A4D8               	btfss	status,2,c
  2456  001778  D008               	goto	l6668
  2457                           
  2458                           ; BSR set to: 1
  2459  00177A  5112               	movf	sprintf@val& (0+255),w,b
  2460  00177C  1113               	iorwf	(sprintf@val+1)& (0+255),w,b
  2461  00177E  1114               	iorwf	(sprintf@val+2)& (0+255),w,b
  2462  001780  1115               	iorwf	(sprintf@val+3)& (0+255),w,b
  2463  001782  A4D8               	btfss	status,2,c
  2464  001784  D002               	goto	l6668
  2465                           
  2466                           ; BSR set to: 1
  2467                           ;doprnt.c: 1317: prec++;
  2468  001786  4B16               	infsnz	sprintf@prec& (0+255),f,b
  2469  001788  2B17               	incf	(sprintf@prec+1)& (0+255),f,b
  2470  00178A                     l6668:
  2471                           
  2472                           ; BSR set to: 1
  2473                           ;doprnt.c: 1331: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  2474  00178A  0E01               	movlw	1
  2475  00178C  6F1B               	movwf	sprintf@c& (0+255),b
  2476  00178E                     l6674:
  2477                           
  2478                           ; BSR set to: 1
  2479                           ;doprnt.c: 1332: if(val < dpowers[c])
  2480  00178E  511B               	movf	sprintf@c& (0+255),w,b
  2481  001790  0D04               	mullw	4
  2482  001792  50F3               	movf	243,w,c
  2483  001794  0F4F               	addlw	low _dpowers
  2484  001796  6F00               	movwf	??_sprintf& (0+255),b
  2485  001798  C100  FFF6         	movff	??_sprintf,tblptrl
  2486  00179C                     	if	1	;There is more than 1 active tblptr byte
  2487  00179C  0E10               	movlw	high __smallconst
  2488  00179E  6EF7               	movwf	tblptrh,c
  2489  0017A0                     	endif
  2490  0017A0                     	if	0	;tblptru may be non-zero
  2491  0017A0                     	endif
  2492  0017A0                     	if	0	;tblptru may be non-zero
  2493  0017A0                     	endif
  2494  0017A0  0009               	tblrd		*+
  2495  0017A2  50F5               	movf	tablat,w,c
  2496  0017A4  5D12               	subwf	sprintf@val& (0+255),w,b
  2497  0017A6  0009               	tblrd		*+
  2498  0017A8  50F5               	movf	tablat,w,c
  2499  0017AA  5913               	subwfb	(sprintf@val+1)& (0+255),w,b
  2500  0017AC  0009               	tblrd		*+
  2501  0017AE  50F5               	movf	tablat,w,c
  2502  0017B0  5914               	subwfb	(sprintf@val+2)& (0+255),w,b
  2503  0017B2  0009               	tblrd		*+
  2504  0017B4  50F5               	movf	tablat,w,c
  2505  0017B6  5915               	subwfb	(sprintf@val+3)& (0+255),w,b
  2506  0017B8  A0D8               	btfss	status,0,c
  2507  0017BA  D005               	goto	u8340
  2508                           
  2509                           ; BSR set to: 1
  2510  0017BC  2B1B               	incf	sprintf@c& (0+255),f,b
  2511                           
  2512                           ; BSR set to: 1
  2513  0017BE  0E0A               	movlw	10
  2514  0017C0  191B               	xorwf	sprintf@c& (0+255),w,b
  2515  0017C2  A4D8               	btfss	status,2,c
  2516  0017C4  D7E4               	goto	l6674
  2517  0017C6                     u8340:
  2518                           
  2519                           ; BSR set to: 1
  2520                           ;doprnt.c: 1365: if(c < prec)
  2521  0017C6  511B               	movf	sprintf@c& (0+255),w,b
  2522  0017C8  6F00               	movwf	??_sprintf& (0+255),b
  2523  0017CA  6B01               	clrf	(??_sprintf+1)& (0+255),b
  2524  0017CC  5116               	movf	sprintf@prec& (0+255),w,b
  2525  0017CE  5D00               	subwf	??_sprintf& (0+255),w,b
  2526  0017D0  5101               	movf	(??_sprintf+1)& (0+255),w,b
  2527  0017D2  0A80               	xorlw	128
  2528  0017D4  6F02               	movwf	(??_sprintf+2)& (0+255),b
  2529  0017D6  5117               	movf	(sprintf@prec+1)& (0+255),w,b
  2530  0017D8  0A80               	xorlw	128
  2531  0017DA  5902               	subwfb	(??_sprintf+2)& (0+255),w,b
  2532  0017DC  A0D8               	btfss	status,0,c
  2533  0017DE  D010               	goto	l6690
  2534                           
  2535                           ; BSR set to: 1
  2536                           ;doprnt.c: 1367: else if(prec < c)
  2537                           
  2538                           ; BSR set to: 1
  2539  0017E0  511B               	movf	sprintf@c& (0+255),w,b
  2540  0017E2  6F00               	movwf	??_sprintf& (0+255),b
  2541  0017E4  6B01               	clrf	(??_sprintf+1)& (0+255),b
  2542  0017E6  5100               	movf	??_sprintf& (0+255),w,b
  2543  0017E8  5D16               	subwf	sprintf@prec& (0+255),w,b
  2544  0017EA  5117               	movf	(sprintf@prec+1)& (0+255),w,b
  2545  0017EC  0A80               	xorlw	128
  2546  0017EE  6F02               	movwf	(??_sprintf+2)& (0+255),b
  2547  0017F0  5101               	movf	(??_sprintf+1)& (0+255),w,b
  2548  0017F2  0A80               	xorlw	128
  2549  0017F4  5902               	subwfb	(??_sprintf+2)& (0+255),w,b
  2550  0017F6  B0D8               	btfsc	status,0,c
  2551  0017F8  D003               	goto	l6690
  2552                           
  2553                           ; BSR set to: 1
  2554                           ;doprnt.c: 1368: prec = c;
  2555  0017FA  C11B  F116         	movff	sprintf@c,sprintf@prec
  2556  0017FE  6B17               	clrf	(sprintf@prec+1)& (0+255),b
  2557  001800                     l6690:
  2558                           
  2559                           ; BSR set to: 1
  2560                           ;doprnt.c: 1448: {;doprnt.c: 1464: if(flag & 0x03)
  2561  001800  C10A  F100         	movff	sprintf@flag,??_sprintf
  2562  001804  0E03               	movlw	3
  2563  001806  1700               	andwf	??_sprintf& (0+255),f,b
  2564  001808  B4D8               	btfsc	status,2,c
  2565  00180A  D046               	goto	l6702
  2566                           
  2567                           ; BSR set to: 1
  2568                           ;doprnt.c: 1465: ((*sp++ = ('-')));
  2569  00180C  C0C6  FFD9         	movff	sprintf@sp,fsr2l
  2570  001810  C0C7  FFDA         	movff	sprintf@sp+1,fsr2h
  2571  001814  0E2D               	movlw	45
  2572  001816  6EDF               	movwf	indf2,c
  2573  001818                     l6694:
  2574                           
  2575                           ; BSR set to: 1
  2576  001818  0100               	movlb	0	; () banked
  2577  00181A  4BC6               	infsnz	sprintf@sp& (0+255),f,b
  2578  00181C  2BC7               	incf	(sprintf@sp+1)& (0+255),f,b
  2579  00181E  D03C               	goto	l6702
  2580  001820                     l6696:
  2581                           
  2582                           ; BSR set to: 1
  2583                           ;doprnt.c: 1504: {;doprnt.c: 1515: c = (val / dpowers[(unsigned int)prec]) % 10 + '0';
  2584  001820  5116               	movf	sprintf@prec& (0+255),w,b
  2585  001822  0D04               	mullw	4
  2586  001824  50F3               	movf	243,w,c
  2587  001826  0F4F               	addlw	low _dpowers
  2588  001828  6F00               	movwf	??_sprintf& (0+255),b
  2589  00182A  C100  FFF6         	movff	??_sprintf,tblptrl
  2590  00182E                     	if	1	;There is more than 1 active tblptr byte
  2591  00182E  0E10               	movlw	high __smallconst
  2592  001830  6EF7               	movwf	tblptrh,c
  2593  001832                     	endif
  2594  001832                     	if	0	;tblptru may be non-zero
  2595  001832                     	endif
  2596  001832                     	if	0	;tblptru may be non-zero
  2597  001832                     	endif
  2598  001832  0009               	tblrd		*+
  2599  001834  CFF5 F07E          	movff	tablat,___lldiv@divisor
  2600  001838  0009               	tblrd		*+
  2601  00183A  CFF5 F07F          	movff	tablat,___lldiv@divisor+1
  2602  00183E  0009               	tblrd		*+
  2603  001840  CFF5 F080          	movff	tablat,___lldiv@divisor+2
  2604  001844  000A               	tblrd		*-
  2605  001846  CFF5 F081          	movff	tablat,___lldiv@divisor+3
  2606  00184A  C112  F07A         	movff	sprintf@val,___lldiv@dividend
  2607  00184E  C113  F07B         	movff	sprintf@val+1,___lldiv@dividend+1
  2608  001852  C114  F07C         	movff	sprintf@val+2,___lldiv@dividend+2
  2609  001856  C115  F07D         	movff	sprintf@val+3,___lldiv@dividend+3
  2610  00185A  ECBD  F01D         	call	___lldiv	;wreg free
  2611  00185E  C07A  F087         	movff	?___lldiv,___llmod@dividend
  2612  001862  C07B  F088         	movff	?___lldiv+1,___llmod@dividend+1
  2613  001866  C07C  F089         	movff	?___lldiv+2,___llmod@dividend+2
  2614  00186A  C07D  F08A         	movff	?___lldiv+3,___llmod@dividend+3
  2615  00186E  0E0A               	movlw	10
  2616  001870  6F8B               	movwf	___llmod@divisor& (0+255),b
  2617  001872  0E00               	movlw	0
  2618  001874  6F8C               	movwf	(___llmod@divisor+1)& (0+255),b
  2619  001876  0E00               	movlw	0
  2620  001878  6F8D               	movwf	(___llmod@divisor+2)& (0+255),b
  2621  00187A  0E00               	movlw	0
  2622  00187C  6F8E               	movwf	(___llmod@divisor+3)& (0+255),b
  2623  00187E  ECD8  F01F         	call	___llmod	;wreg free
  2624  001882  5187               	movf	?___llmod& (0+255),w,b
  2625  001884  0F30               	addlw	48
  2626  001886  0101               	movlb	1	; () banked
  2627  001888  6F1B               	movwf	sprintf@c& (0+255),b
  2628                           
  2629                           ; BSR set to: 1
  2630                           ;doprnt.c: 1549: };doprnt.c: 1550: ((*sp++ = (c)));
  2631  00188A  C0C6  FFD9         	movff	sprintf@sp,fsr2l
  2632  00188E  C0C7  FFDA         	movff	sprintf@sp+1,fsr2h
  2633  001892  C11B  FFDF         	movff	sprintf@c,indf2
  2634  001896  D7C0               	goto	l6694
  2635  001898                     l6702:
  2636  001898  0101               	movlb	1	; () banked
  2637  00189A  0716               	decf	sprintf@prec& (0+255),f,b
  2638  00189C  A0D8               	btfss	status,0,c
  2639  00189E  0717               	decf	(sprintf@prec+1)& (0+255),f,b
  2640  0018A0  2916               	incf	sprintf@prec& (0+255),w,b
  2641  0018A2  E1BE               	bnz	l6696
  2642  0018A4  2917               	incf	(sprintf@prec+1)& (0+255),w,b
  2643  0018A6  A4D8               	btfss	status,2,c
  2644  0018A8  D7BB               	goto	l6696
  2645  0018AA                     u8380:
  2646  0018AA  0100               	movlb	0	; () banked
  2647  0018AC  2BC8               	incf	sprintf@f& (0+255),f,b
  2648  0018AE  05C8               	decf	sprintf@f& (0+255),w,b
  2649  0018B0  0101               	movlb	1	; () banked
  2650  0018B2  6F00               	movwf	??_sprintf& (0+255),b
  2651  0018B4  C100  FFF6         	movff	??_sprintf,tblptrl
  2652  0018B8                     	if	1	;There is more than 1 active tblptr byte
  2653  0018B8  0E10               	movlw	high __smallconst
  2654  0018BA  6EF7               	movwf	tblptrh,c
  2655  0018BC                     	endif
  2656  0018BC                     	if	0	;tblptru may be non-zero
  2657  0018BC                     	endif
  2658  0018BC                     	if	0	;tblptru may be non-zero
  2659  0018BC                     	endif
  2660  0018BC  0008               	tblrd		*
  2661  0018BE  CFF5 F11B          	movff	tablat,sprintf@c
  2662  0018C2  511B               	movf	sprintf@c& (0+255),w,b
  2663  0018C4  A4D8               	btfss	status,2,c
  2664  0018C6  EF57  F008         	goto	l6472
  2665  0018CA                     u8390:
  2666                           
  2667                           ; BSR set to: 1
  2668                           ;doprnt.c: 1564: *sp = 0;
  2669  0018CA  C0C6  FFD9         	movff	sprintf@sp,fsr2l
  2670  0018CE  C0C7  FFDA         	movff	sprintf@sp+1,fsr2h
  2671  0018D2  0E00               	movlw	0
  2672  0018D4  6EDF               	movwf	indf2,c
  2673                           
  2674                           ; BSR set to: 1
  2675  0018D6  0012               	return		;funcret
  2676  0018D8                     __end_of_sprintf:
  2677                           	callstack 0
  2678                           
  2679 ;; *************** function _scale *****************
  2680 ;; Defined at:
  2681 ;;		line 433 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c"
  2682 ;; Parameters:    Size  Location     Type
  2683 ;;  scl             1    wreg     char 
  2684 ;; Auto vars:     Size  Location     Type
  2685 ;;  scl             1   65[BANK0 ] char 
  2686 ;; Return value:  Size  Location     Type
  2687 ;;                  3   55[BANK0 ] char 
  2688 ;; Registers used:
  2689 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2690 ;; Tracked objects:
  2691 ;;		On entry : 3F/1
  2692 ;;		On exit  : 3F/0
  2693 ;;		Unchanged: 0/0
  2694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2695 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2696 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2697 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2698 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2699 ;;Total ram usage:       11 bytes
  2700 ;; Hardware stack levels used: 1
  2701 ;; Hardware stack levels required when called: 7
  2702 ;; This function calls:
  2703 ;;		___awdiv
  2704 ;;		___awmod
  2705 ;;		___ftmul
  2706 ;; This function is called by:
  2707 ;;		_sprintf
  2708 ;; This function uses a non-reentrant model
  2709 ;;
  2710                           
  2711                           	psect	text2
  2712  0020D6                     __ptext2:
  2713                           	callstack 0
  2714  0020D6                     _scale:
  2715                           	callstack 22
  2716                           
  2717                           ; BSR set to: 1
  2718                           ;incstack = 0
  2719                           ;scale@scl stored from wreg
  2720  0020D6  0100               	movlb	0	; () banked
  2721  0020D8  6FA1               	movwf	scale@scl& (0+255),b
  2722                           
  2723                           ;doprnt.c: 436: if(scl < 0) {
  2724  0020DA  0100               	movlb	0	; () banked
  2725  0020DC  AFA1               	btfss	scale@scl& (0+255),7,b
  2726  0020DE  D0E5               	goto	l5766
  2727                           
  2728                           ; BSR set to: 0
  2729                           ;doprnt.c: 437: scl = -scl;
  2730  0020E0  6DA1               	negf	scale@scl& (0+255),b
  2731                           
  2732                           ;doprnt.c: 438: if(scl>=110)
  2733  0020E2  51A1               	movf	scale@scl& (0+255),w,b
  2734  0020E4  0A80               	xorlw	128
  2735  0020E6  0F12               	addlw	-238
  2736  0020E8  A0D8               	btfss	status,0,c
  2737  0020EA  D080               	goto	l5756
  2738                           
  2739                           ; BSR set to: 0
  2740                           ;doprnt.c: 439: return _npowers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char
      +                          )((scl%100)/10+9)] * _npowers_[(unsigned char)(scl%10)];
  2741  0020EC  0E00               	movlw	0
  2742  0020EE  6F83               	movwf	(___awdiv@divisor+1)& (0+255),b
  2743  0020F0  0E0A               	movlw	10
  2744  0020F2  6F82               	movwf	___awdiv@divisor& (0+255),b
  2745  0020F4  0E00               	movlw	0
  2746  0020F6  6F7D               	movwf	(___awmod@divisor+1)& (0+255),b
  2747  0020F8  0E64               	movlw	100
  2748  0020FA  6F7C               	movwf	___awmod@divisor& (0+255),b
  2749  0020FC  51A1               	movf	scale@scl& (0+255),w,b
  2750  0020FE  6F7A               	movwf	___awmod@dividend& (0+255),b
  2751  002100  6B7B               	clrf	(___awmod@dividend+1)& (0+255),b
  2752  002102  BF7A               	btfsc	___awmod@dividend& (0+255),7,b
  2753  002104  077B               	decf	(___awmod@dividend+1)& (0+255),f,b
  2754  002106  EC31  F01F         	call	___awmod	;wreg free
  2755  00210A  C07A  F080         	movff	?___awmod,___awdiv@dividend
  2756  00210E  C07B  F081         	movff	?___awmod+1,___awdiv@dividend+1
  2757  002112  EC7B  F01D         	call	___awdiv	;wreg free
  2758  002116  5180               	movf	?___awdiv& (0+255),w,b
  2759  002118  0D03               	mullw	3
  2760  00211A  CFF3 F09A          	movff	prodl,??_scale
  2761  00211E  0E1B               	movlw	27
  2762  002120  279A               	addwf	??_scale& (0+255),f,b
  2763  002122  519A               	movf	??_scale& (0+255),w,b
  2764  002124  0F28               	addlw	low __npowers_
  2765  002126  6F9B               	movwf	(??_scale+1)& (0+255),b
  2766  002128  C09B  FFF6         	movff	??_scale+1,tblptrl
  2767  00212C                     	if	1	;There is more than 1 active tblptr byte
  2768  00212C  0E10               	movlw	high __smallconst
  2769  00212E  6EF7               	movwf	tblptrh,c
  2770  002130                     	endif
  2771  002130                     	if	0	;tblptru may be non-zero
  2772  002130                     	endif
  2773  002130                     	if	0	;tblptru may be non-zero
  2774  002130                     	endif
  2775  002130  0009               	tblrd		*+
  2776  002132  CFF5 F08B          	movff	tablat,___ftmul@f2
  2777  002136  0009               	tblrd		*+
  2778  002138  CFF5 F08C          	movff	tablat,___ftmul@f2+1
  2779  00213C  000A               	tblrd		*-
  2780  00213E  CFF5 F08D          	movff	tablat,___ftmul@f2+2
  2781  002142  0E00               	movlw	0
  2782  002144  6F83               	movwf	(___awdiv@divisor+1)& (0+255),b
  2783  002146  0E64               	movlw	100
  2784  002148  6F82               	movwf	___awdiv@divisor& (0+255),b
  2785  00214A  51A1               	movf	scale@scl& (0+255),w,b
  2786  00214C  6F80               	movwf	___awdiv@dividend& (0+255),b
  2787  00214E  6B81               	clrf	(___awdiv@dividend+1)& (0+255),b
  2788  002150  BF80               	btfsc	___awdiv@dividend& (0+255),7,b
  2789  002152  0781               	decf	(___awdiv@dividend+1)& (0+255),f,b
  2790  002154  EC7B  F01D         	call	___awdiv	;wreg free
  2791  002158  5180               	movf	?___awdiv& (0+255),w,b
  2792  00215A  0D03               	mullw	3
  2793  00215C  CFF3 F09C          	movff	prodl,??_scale+2
  2794  002160  0E36               	movlw	54
  2795  002162  279C               	addwf	(??_scale+2)& (0+255),f,b
  2796  002164  519C               	movf	(??_scale+2)& (0+255),w,b
  2797  002166  0F28               	addlw	low __npowers_
  2798  002168  6F9D               	movwf	(??_scale+3)& (0+255),b
  2799  00216A  C09D  FFF6         	movff	??_scale+3,tblptrl
  2800  00216E                     	if	1	;There is more than 1 active tblptr byte
  2801  00216E  0E10               	movlw	high __smallconst
  2802  002170  6EF7               	movwf	tblptrh,c
  2803  002172                     	endif
  2804  002172                     	if	0	;tblptru may be non-zero
  2805  002172                     	endif
  2806  002172                     	if	0	;tblptru may be non-zero
  2807  002172                     	endif
  2808  002172  0009               	tblrd		*+
  2809  002174  CFF5 F088          	movff	tablat,___ftmul@f1
  2810  002178  0009               	tblrd		*+
  2811  00217A  CFF5 F089          	movff	tablat,___ftmul@f1+1
  2812  00217E  000A               	tblrd		*-
  2813  002180  CFF5 F08A          	movff	tablat,___ftmul@f1+2
  2814  002184  EC04  F019         	call	___ftmul	;wreg free
  2815  002188  C088  F09E         	movff	?___ftmul,_scale$941
  2816  00218C  C089  F09F         	movff	?___ftmul+1,_scale$941+1
  2817  002190  C08A  F0A0         	movff	?___ftmul+2,_scale$941+2
  2818                           
  2819                           ;doprnt.c: 439: return _npowers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char
      +                          )((scl%100)/10+9)] * _npowers_[(unsigned char)(scl%10)];
  2820  002194  C09E  F088         	movff	_scale$941,___ftmul@f1
  2821  002198  C09F  F089         	movff	_scale$941+1,___ftmul@f1+1
  2822  00219C  C0A0  F08A         	movff	_scale$941+2,___ftmul@f1+2
  2823  0021A0  0E00               	movlw	0
  2824  0021A2  6F7D               	movwf	(___awmod@divisor+1)& (0+255),b
  2825  0021A4  0E0A               	movlw	10
  2826  0021A6  6F7C               	movwf	___awmod@divisor& (0+255),b
  2827  0021A8  51A1               	movf	scale@scl& (0+255),w,b
  2828  0021AA  6F7A               	movwf	___awmod@dividend& (0+255),b
  2829  0021AC  6B7B               	clrf	(___awmod@dividend+1)& (0+255),b
  2830  0021AE  BF7A               	btfsc	___awmod@dividend& (0+255),7,b
  2831  0021B0  077B               	decf	(___awmod@dividend+1)& (0+255),f,b
  2832  0021B2  EC31  F01F         	call	___awmod	;wreg free
  2833  0021B6  517A               	movf	?___awmod& (0+255),w,b
  2834  0021B8  0D03               	mullw	3
  2835  0021BA  50F3               	movf	243,w,c
  2836  0021BC  0F28               	addlw	low __npowers_
  2837  0021BE  6F9A               	movwf	??_scale& (0+255),b
  2838  0021C0  C09A  FFF6         	movff	??_scale,tblptrl
  2839  0021C4                     	if	1	;There is more than 1 active tblptr byte
  2840  0021C4  0E10               	movlw	high __smallconst
  2841  0021C6  6EF7               	movwf	tblptrh,c
  2842  0021C8                     	endif
  2843  0021C8                     	if	0	;tblptru may be non-zero
  2844  0021C8                     	endif
  2845  0021C8                     	if	0	;tblptru may be non-zero
  2846  0021C8                     	endif
  2847  0021C8  0009               	tblrd		*+
  2848  0021CA  CFF5 F08B          	movff	tablat,___ftmul@f2
  2849  0021CE  0009               	tblrd		*+
  2850  0021D0  CFF5 F08C          	movff	tablat,___ftmul@f2+1
  2851  0021D4  000A               	tblrd		*-
  2852  0021D6  CFF5 F08D          	movff	tablat,___ftmul@f2+2
  2853  0021DA  EC04  F019         	call	___ftmul	;wreg free
  2854  0021DE  C088  F097         	movff	?___ftmul,?_scale
  2855  0021E2  C089  F098         	movff	?___ftmul+1,?_scale+1
  2856  0021E6  C08A  F099         	movff	?___ftmul+2,?_scale+2
  2857  0021EA  0012               	return	
  2858  0021EC                     l5756:
  2859                           
  2860                           ; BSR set to: 0
  2861                           ;doprnt.c: 440: else if(scl > 10)
  2862  0021EC  51A1               	movf	scale@scl& (0+255),w,b
  2863  0021EE  0A80               	xorlw	128
  2864  0021F0  0F75               	addlw	-139
  2865  0021F2  A0D8               	btfss	status,0,c
  2866  0021F4  D047               	goto	l5762
  2867                           
  2868                           ; BSR set to: 0
  2869                           ;doprnt.c: 441: return _npowers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(
      +                          scl%10)];
  2870  0021F6  0E00               	movlw	0
  2871  0021F8  6F83               	movwf	(___awdiv@divisor+1)& (0+255),b
  2872  0021FA  0E0A               	movlw	10
  2873  0021FC  6F82               	movwf	___awdiv@divisor& (0+255),b
  2874  0021FE  51A1               	movf	scale@scl& (0+255),w,b
  2875  002200  6F80               	movwf	___awdiv@dividend& (0+255),b
  2876  002202  6B81               	clrf	(___awdiv@dividend+1)& (0+255),b
  2877  002204  BF80               	btfsc	___awdiv@dividend& (0+255),7,b
  2878  002206  0781               	decf	(___awdiv@dividend+1)& (0+255),f,b
  2879  002208  EC7B  F01D         	call	___awdiv	;wreg free
  2880  00220C  5180               	movf	?___awdiv& (0+255),w,b
  2881  00220E  0D03               	mullw	3
  2882  002210  CFF3 F09A          	movff	prodl,??_scale
  2883  002214  0E1B               	movlw	27
  2884  002216  279A               	addwf	??_scale& (0+255),f,b
  2885  002218  519A               	movf	??_scale& (0+255),w,b
  2886  00221A  0F28               	addlw	low __npowers_
  2887  00221C  6F9B               	movwf	(??_scale+1)& (0+255),b
  2888  00221E  C09B  FFF6         	movff	??_scale+1,tblptrl
  2889  002222                     	if	1	;There is more than 1 active tblptr byte
  2890  002222  0E10               	movlw	high __smallconst
  2891  002224  6EF7               	movwf	tblptrh,c
  2892  002226                     	endif
  2893  002226                     	if	0	;tblptru may be non-zero
  2894  002226                     	endif
  2895  002226                     	if	0	;tblptru may be non-zero
  2896  002226                     	endif
  2897  002226  0009               	tblrd		*+
  2898  002228  CFF5 F088          	movff	tablat,___ftmul@f1
  2899  00222C  0009               	tblrd		*+
  2900  00222E  CFF5 F089          	movff	tablat,___ftmul@f1+1
  2901  002232  000A               	tblrd		*-
  2902  002234  CFF5 F08A          	movff	tablat,___ftmul@f1+2
  2903  002238  0E00               	movlw	0
  2904  00223A  6F7D               	movwf	(___awmod@divisor+1)& (0+255),b
  2905  00223C  0E0A               	movlw	10
  2906  00223E  6F7C               	movwf	___awmod@divisor& (0+255),b
  2907  002240  51A1               	movf	scale@scl& (0+255),w,b
  2908  002242  6F7A               	movwf	___awmod@dividend& (0+255),b
  2909  002244  6B7B               	clrf	(___awmod@dividend+1)& (0+255),b
  2910  002246  BF7A               	btfsc	___awmod@dividend& (0+255),7,b
  2911  002248  077B               	decf	(___awmod@dividend+1)& (0+255),f,b
  2912  00224A  EC31  F01F         	call	___awmod	;wreg free
  2913  00224E  517A               	movf	?___awmod& (0+255),w,b
  2914  002250  0D03               	mullw	3
  2915  002252  50F3               	movf	243,w,c
  2916  002254  0F28               	addlw	low __npowers_
  2917  002256  6F9C               	movwf	(??_scale+2)& (0+255),b
  2918  002258  C09C  FFF6         	movff	??_scale+2,tblptrl
  2919  00225C                     	if	1	;There is more than 1 active tblptr byte
  2920  00225C  0E10               	movlw	high __smallconst
  2921  00225E  6EF7               	movwf	tblptrh,c
  2922  002260                     	endif
  2923  002260                     	if	0	;tblptru may be non-zero
  2924  002260                     	endif
  2925  002260                     	if	0	;tblptru may be non-zero
  2926  002260                     	endif
  2927  002260  0009               	tblrd		*+
  2928  002262  CFF5 F08B          	movff	tablat,___ftmul@f2
  2929  002266  0009               	tblrd		*+
  2930  002268  CFF5 F08C          	movff	tablat,___ftmul@f2+1
  2931  00226C  000A               	tblrd		*-
  2932  00226E  CFF5 F08D          	movff	tablat,___ftmul@f2+2
  2933  002272  EC04  F019         	call	___ftmul	;wreg free
  2934  002276  C088  F097         	movff	?___ftmul,?_scale
  2935  00227A  C089  F098         	movff	?___ftmul+1,?_scale+1
  2936  00227E  C08A  F099         	movff	?___ftmul+2,?_scale+2
  2937  002282  0012               	return	
  2938  002284                     l5762:
  2939                           
  2940                           ; BSR set to: 0
  2941                           ;doprnt.c: 442: return _npowers_[(unsigned char)scl];
  2942  002284  51A1               	movf	scale@scl& (0+255),w,b
  2943  002286  0D03               	mullw	3
  2944  002288  50F3               	movf	243,w,c
  2945  00228A  0F28               	addlw	low __npowers_
  2946  00228C  6F9A               	movwf	??_scale& (0+255),b
  2947  00228E  C09A  FFF6         	movff	??_scale,tblptrl
  2948  002292                     	if	1	;There is more than 1 active tblptr byte
  2949  002292  0E10               	movlw	high __smallconst
  2950  002294  6EF7               	movwf	tblptrh,c
  2951  002296                     	endif
  2952  002296                     	if	0	;tblptru may be non-zero
  2953  002296                     	endif
  2954  002296                     	if	0	;tblptru may be non-zero
  2955  002296                     	endif
  2956  002296  0009               	tblrd		*+
  2957  002298  CFF5 F097          	movff	tablat,?_scale
  2958  00229C  0009               	tblrd		*+
  2959  00229E  CFF5 F098          	movff	tablat,?_scale+1
  2960  0022A2  000A               	tblrd		*-
  2961  0022A4  CFF5 F099          	movff	tablat,?_scale+2
  2962  0022A8  0012               	return	
  2963  0022AA                     l5766:
  2964                           
  2965                           ; BSR set to: 0
  2966                           ;doprnt.c: 443: };doprnt.c: 444: if(scl>=110)
  2967  0022AA  51A1               	movf	scale@scl& (0+255),w,b
  2968  0022AC  0A80               	xorlw	128
  2969  0022AE  0F12               	addlw	-238
  2970  0022B0  A0D8               	btfss	status,0,c
  2971  0022B2  D080               	goto	l5774
  2972                           
  2973                           ; BSR set to: 0
  2974                           ;doprnt.c: 445: return _powers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)(
      +                          (scl%100)/10+9)] * _powers_[(unsigned char)(scl%10)];
  2975  0022B4  0E00               	movlw	0
  2976  0022B6  6F83               	movwf	(___awdiv@divisor+1)& (0+255),b
  2977  0022B8  0E0A               	movlw	10
  2978  0022BA  6F82               	movwf	___awdiv@divisor& (0+255),b
  2979  0022BC  0E00               	movlw	0
  2980  0022BE  6F7D               	movwf	(___awmod@divisor+1)& (0+255),b
  2981  0022C0  0E64               	movlw	100
  2982  0022C2  6F7C               	movwf	___awmod@divisor& (0+255),b
  2983  0022C4  51A1               	movf	scale@scl& (0+255),w,b
  2984  0022C6  6F7A               	movwf	___awmod@dividend& (0+255),b
  2985  0022C8  6B7B               	clrf	(___awmod@dividend+1)& (0+255),b
  2986  0022CA  BF7A               	btfsc	___awmod@dividend& (0+255),7,b
  2987  0022CC  077B               	decf	(___awmod@dividend+1)& (0+255),f,b
  2988  0022CE  EC31  F01F         	call	___awmod	;wreg free
  2989  0022D2  C07A  F080         	movff	?___awmod,___awdiv@dividend
  2990  0022D6  C07B  F081         	movff	?___awmod+1,___awdiv@dividend+1
  2991  0022DA  EC7B  F01D         	call	___awdiv	;wreg free
  2992  0022DE  5180               	movf	?___awdiv& (0+255),w,b
  2993  0022E0  0D03               	mullw	3
  2994  0022E2  CFF3 F09A          	movff	prodl,??_scale
  2995  0022E6  0E1B               	movlw	27
  2996  0022E8  279A               	addwf	??_scale& (0+255),f,b
  2997  0022EA  519A               	movf	??_scale& (0+255),w,b
  2998  0022EC  0F01               	addlw	low __powers_
  2999  0022EE  6F9B               	movwf	(??_scale+1)& (0+255),b
  3000  0022F0  C09B  FFF6         	movff	??_scale+1,tblptrl
  3001  0022F4                     	if	1	;There is more than 1 active tblptr byte
  3002  0022F4  0E10               	movlw	high __smallconst
  3003  0022F6  6EF7               	movwf	tblptrh,c
  3004  0022F8                     	endif
  3005  0022F8                     	if	0	;tblptru may be non-zero
  3006  0022F8                     	endif
  3007  0022F8                     	if	0	;tblptru may be non-zero
  3008  0022F8                     	endif
  3009  0022F8  0009               	tblrd		*+
  3010  0022FA  CFF5 F08B          	movff	tablat,___ftmul@f2
  3011  0022FE  0009               	tblrd		*+
  3012  002300  CFF5 F08C          	movff	tablat,___ftmul@f2+1
  3013  002304  000A               	tblrd		*-
  3014  002306  CFF5 F08D          	movff	tablat,___ftmul@f2+2
  3015  00230A  0E00               	movlw	0
  3016  00230C  6F83               	movwf	(___awdiv@divisor+1)& (0+255),b
  3017  00230E  0E64               	movlw	100
  3018  002310  6F82               	movwf	___awdiv@divisor& (0+255),b
  3019  002312  51A1               	movf	scale@scl& (0+255),w,b
  3020  002314  6F80               	movwf	___awdiv@dividend& (0+255),b
  3021  002316  6B81               	clrf	(___awdiv@dividend+1)& (0+255),b
  3022  002318  BF80               	btfsc	___awdiv@dividend& (0+255),7,b
  3023  00231A  0781               	decf	(___awdiv@dividend+1)& (0+255),f,b
  3024  00231C  EC7B  F01D         	call	___awdiv	;wreg free
  3025  002320  5180               	movf	?___awdiv& (0+255),w,b
  3026  002322  0D03               	mullw	3
  3027  002324  CFF3 F09C          	movff	prodl,??_scale+2
  3028  002328  0E36               	movlw	54
  3029  00232A  279C               	addwf	(??_scale+2)& (0+255),f,b
  3030  00232C  519C               	movf	(??_scale+2)& (0+255),w,b
  3031  00232E  0F01               	addlw	low __powers_
  3032  002330  6F9D               	movwf	(??_scale+3)& (0+255),b
  3033  002332  C09D  FFF6         	movff	??_scale+3,tblptrl
  3034  002336                     	if	1	;There is more than 1 active tblptr byte
  3035  002336  0E10               	movlw	high __smallconst
  3036  002338  6EF7               	movwf	tblptrh,c
  3037  00233A                     	endif
  3038  00233A                     	if	0	;tblptru may be non-zero
  3039  00233A                     	endif
  3040  00233A                     	if	0	;tblptru may be non-zero
  3041  00233A                     	endif
  3042  00233A  0009               	tblrd		*+
  3043  00233C  CFF5 F088          	movff	tablat,___ftmul@f1
  3044  002340  0009               	tblrd		*+
  3045  002342  CFF5 F089          	movff	tablat,___ftmul@f1+1
  3046  002346  000A               	tblrd		*-
  3047  002348  CFF5 F08A          	movff	tablat,___ftmul@f1+2
  3048  00234C  EC04  F019         	call	___ftmul	;wreg free
  3049  002350  C088  F09E         	movff	?___ftmul,_scale$941
  3050  002354  C089  F09F         	movff	?___ftmul+1,_scale$941+1
  3051  002358  C08A  F0A0         	movff	?___ftmul+2,_scale$941+2
  3052                           
  3053                           ;doprnt.c: 445: return _powers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)(
      +                          (scl%100)/10+9)] * _powers_[(unsigned char)(scl%10)];
  3054  00235C  C09E  F088         	movff	_scale$941,___ftmul@f1
  3055  002360  C09F  F089         	movff	_scale$941+1,___ftmul@f1+1
  3056  002364  C0A0  F08A         	movff	_scale$941+2,___ftmul@f1+2
  3057  002368  0E00               	movlw	0
  3058  00236A  6F7D               	movwf	(___awmod@divisor+1)& (0+255),b
  3059  00236C  0E0A               	movlw	10
  3060  00236E  6F7C               	movwf	___awmod@divisor& (0+255),b
  3061  002370  51A1               	movf	scale@scl& (0+255),w,b
  3062  002372  6F7A               	movwf	___awmod@dividend& (0+255),b
  3063  002374  6B7B               	clrf	(___awmod@dividend+1)& (0+255),b
  3064  002376  BF7A               	btfsc	___awmod@dividend& (0+255),7,b
  3065  002378  077B               	decf	(___awmod@dividend+1)& (0+255),f,b
  3066  00237A  EC31  F01F         	call	___awmod	;wreg free
  3067  00237E  517A               	movf	?___awmod& (0+255),w,b
  3068  002380  0D03               	mullw	3
  3069  002382  50F3               	movf	243,w,c
  3070  002384  0F01               	addlw	low __powers_
  3071  002386  6F9A               	movwf	??_scale& (0+255),b
  3072  002388  C09A  FFF6         	movff	??_scale,tblptrl
  3073  00238C                     	if	1	;There is more than 1 active tblptr byte
  3074  00238C  0E10               	movlw	high __smallconst
  3075  00238E  6EF7               	movwf	tblptrh,c
  3076  002390                     	endif
  3077  002390                     	if	0	;tblptru may be non-zero
  3078  002390                     	endif
  3079  002390                     	if	0	;tblptru may be non-zero
  3080  002390                     	endif
  3081  002390  0009               	tblrd		*+
  3082  002392  CFF5 F08B          	movff	tablat,___ftmul@f2
  3083  002396  0009               	tblrd		*+
  3084  002398  CFF5 F08C          	movff	tablat,___ftmul@f2+1
  3085  00239C  000A               	tblrd		*-
  3086  00239E  CFF5 F08D          	movff	tablat,___ftmul@f2+2
  3087  0023A2  EC04  F019         	call	___ftmul	;wreg free
  3088  0023A6  C088  F097         	movff	?___ftmul,?_scale
  3089  0023AA  C089  F098         	movff	?___ftmul+1,?_scale+1
  3090  0023AE  C08A  F099         	movff	?___ftmul+2,?_scale+2
  3091  0023B2  0012               	return	
  3092  0023B4                     l5774:
  3093                           
  3094                           ; BSR set to: 0
  3095                           ;doprnt.c: 446: else if(scl > 10)
  3096  0023B4  51A1               	movf	scale@scl& (0+255),w,b
  3097  0023B6  0A80               	xorlw	128
  3098  0023B8  0F75               	addlw	-139
  3099  0023BA  A0D8               	btfss	status,0,c
  3100  0023BC  D047               	goto	l5780
  3101                           
  3102                           ; BSR set to: 0
  3103                           ;doprnt.c: 447: return _powers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(sc
      +                          l%10)];
  3104  0023BE  0E00               	movlw	0
  3105  0023C0  6F83               	movwf	(___awdiv@divisor+1)& (0+255),b
  3106  0023C2  0E0A               	movlw	10
  3107  0023C4  6F82               	movwf	___awdiv@divisor& (0+255),b
  3108  0023C6  51A1               	movf	scale@scl& (0+255),w,b
  3109  0023C8  6F80               	movwf	___awdiv@dividend& (0+255),b
  3110  0023CA  6B81               	clrf	(___awdiv@dividend+1)& (0+255),b
  3111  0023CC  BF80               	btfsc	___awdiv@dividend& (0+255),7,b
  3112  0023CE  0781               	decf	(___awdiv@dividend+1)& (0+255),f,b
  3113  0023D0  EC7B  F01D         	call	___awdiv	;wreg free
  3114  0023D4  5180               	movf	?___awdiv& (0+255),w,b
  3115  0023D6  0D03               	mullw	3
  3116  0023D8  CFF3 F09A          	movff	prodl,??_scale
  3117  0023DC  0E1B               	movlw	27
  3118  0023DE  279A               	addwf	??_scale& (0+255),f,b
  3119  0023E0  519A               	movf	??_scale& (0+255),w,b
  3120  0023E2  0F01               	addlw	low __powers_
  3121  0023E4  6F9B               	movwf	(??_scale+1)& (0+255),b
  3122  0023E6  C09B  FFF6         	movff	??_scale+1,tblptrl
  3123  0023EA                     	if	1	;There is more than 1 active tblptr byte
  3124  0023EA  0E10               	movlw	high __smallconst
  3125  0023EC  6EF7               	movwf	tblptrh,c
  3126  0023EE                     	endif
  3127  0023EE                     	if	0	;tblptru may be non-zero
  3128  0023EE                     	endif
  3129  0023EE                     	if	0	;tblptru may be non-zero
  3130  0023EE                     	endif
  3131  0023EE  0009               	tblrd		*+
  3132  0023F0  CFF5 F088          	movff	tablat,___ftmul@f1
  3133  0023F4  0009               	tblrd		*+
  3134  0023F6  CFF5 F089          	movff	tablat,___ftmul@f1+1
  3135  0023FA  000A               	tblrd		*-
  3136  0023FC  CFF5 F08A          	movff	tablat,___ftmul@f1+2
  3137  002400  0E00               	movlw	0
  3138  002402  6F7D               	movwf	(___awmod@divisor+1)& (0+255),b
  3139  002404  0E0A               	movlw	10
  3140  002406  6F7C               	movwf	___awmod@divisor& (0+255),b
  3141  002408  51A1               	movf	scale@scl& (0+255),w,b
  3142  00240A  6F7A               	movwf	___awmod@dividend& (0+255),b
  3143  00240C  6B7B               	clrf	(___awmod@dividend+1)& (0+255),b
  3144  00240E  BF7A               	btfsc	___awmod@dividend& (0+255),7,b
  3145  002410  077B               	decf	(___awmod@dividend+1)& (0+255),f,b
  3146  002412  EC31  F01F         	call	___awmod	;wreg free
  3147  002416  517A               	movf	?___awmod& (0+255),w,b
  3148  002418  0D03               	mullw	3
  3149  00241A  50F3               	movf	243,w,c
  3150  00241C  0F01               	addlw	low __powers_
  3151  00241E  6F9C               	movwf	(??_scale+2)& (0+255),b
  3152  002420  C09C  FFF6         	movff	??_scale+2,tblptrl
  3153  002424                     	if	1	;There is more than 1 active tblptr byte
  3154  002424  0E10               	movlw	high __smallconst
  3155  002426  6EF7               	movwf	tblptrh,c
  3156  002428                     	endif
  3157  002428                     	if	0	;tblptru may be non-zero
  3158  002428                     	endif
  3159  002428                     	if	0	;tblptru may be non-zero
  3160  002428                     	endif
  3161  002428  0009               	tblrd		*+
  3162  00242A  CFF5 F08B          	movff	tablat,___ftmul@f2
  3163  00242E  0009               	tblrd		*+
  3164  002430  CFF5 F08C          	movff	tablat,___ftmul@f2+1
  3165  002434  000A               	tblrd		*-
  3166  002436  CFF5 F08D          	movff	tablat,___ftmul@f2+2
  3167  00243A  EC04  F019         	call	___ftmul	;wreg free
  3168  00243E  C088  F097         	movff	?___ftmul,?_scale
  3169  002442  C089  F098         	movff	?___ftmul+1,?_scale+1
  3170  002446  C08A  F099         	movff	?___ftmul+2,?_scale+2
  3171  00244A  0012               	return	
  3172  00244C                     l5780:
  3173                           
  3174                           ; BSR set to: 0
  3175                           ;doprnt.c: 448: return _powers_[(unsigned char)scl];
  3176  00244C  51A1               	movf	scale@scl& (0+255),w,b
  3177  00244E  0D03               	mullw	3
  3178  002450  50F3               	movf	243,w,c
  3179  002452  0F01               	addlw	low __powers_
  3180  002454  6F9A               	movwf	??_scale& (0+255),b
  3181  002456  C09A  FFF6         	movff	??_scale,tblptrl
  3182  00245A                     	if	1	;There is more than 1 active tblptr byte
  3183  00245A  0E10               	movlw	high __smallconst
  3184  00245C  6EF7               	movwf	tblptrh,c
  3185  00245E                     	endif
  3186  00245E                     	if	0	;tblptru may be non-zero
  3187  00245E                     	endif
  3188  00245E                     	if	0	;tblptru may be non-zero
  3189  00245E                     	endif
  3190  00245E  0009               	tblrd		*+
  3191  002460  CFF5 F097          	movff	tablat,?_scale
  3192  002464  0009               	tblrd		*+
  3193  002466  CFF5 F098          	movff	tablat,?_scale+1
  3194  00246A  000A               	tblrd		*-
  3195  00246C  CFF5 F099          	movff	tablat,?_scale+2
  3196                           
  3197                           ; BSR set to: 0
  3198  002470  0012               	return		;funcret
  3199  002472                     __end_of_scale:
  3200                           	callstack 0
  3201                           
  3202 ;; *************** function ___awmod *****************
  3203 ;; Defined at:
  3204 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\awmod.c"
  3205 ;; Parameters:    Size  Location     Type
  3206 ;;  dividend        2   26[BANK0 ] int 
  3207 ;;  divisor         2   28[BANK0 ] int 
  3208 ;; Auto vars:     Size  Location     Type
  3209 ;;  sign            1   31[BANK0 ] unsigned char 
  3210 ;;  counter         1   30[BANK0 ] unsigned char 
  3211 ;; Return value:  Size  Location     Type
  3212 ;;                  2   26[BANK0 ] int 
  3213 ;; Registers used:
  3214 ;;		wreg, status,2, status,0
  3215 ;; Tracked objects:
  3216 ;;		On entry : 3F/0
  3217 ;;		On exit  : 3F/0
  3218 ;;		Unchanged: 0/0
  3219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3220 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3221 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3222 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3223 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3224 ;;Total ram usage:        6 bytes
  3225 ;; Hardware stack levels used: 1
  3226 ;; Hardware stack levels required when called: 5
  3227 ;; This function calls:
  3228 ;;		Nothing
  3229 ;; This function is called by:
  3230 ;;		_scale
  3231 ;; This function uses a non-reentrant model
  3232 ;;
  3233                           
  3234                           	psect	text3
  3235  003E62                     __ptext3:
  3236                           	callstack 0
  3237  003E62                     ___awmod:
  3238                           	callstack 23
  3239                           
  3240                           ; BSR set to: 0
  3241                           
  3242                           ; BSR set to: 0
  3243                           ;incstack = 0
  3244  003E62  0E00               	movlw	0
  3245  003E64  6F7F               	movwf	___awmod@sign& (0+255),b
  3246                           
  3247                           ; BSR set to: 0
  3248  003E66  AF7B               	btfss	(___awmod@dividend+1)& (0+255),7,b
  3249  003E68  D006               	goto	l5372
  3250                           
  3251                           ; BSR set to: 0
  3252  003E6A  6D7A               	negf	___awmod@dividend& (0+255),b
  3253  003E6C  1F7B               	comf	(___awmod@dividend+1)& (0+255),f,b
  3254  003E6E  B0D8               	btfsc	status,0,c
  3255  003E70  2B7B               	incf	(___awmod@dividend+1)& (0+255),f,b
  3256                           
  3257                           ; BSR set to: 0
  3258  003E72  0E01               	movlw	1
  3259  003E74  6F7F               	movwf	___awmod@sign& (0+255),b
  3260  003E76                     l5372:
  3261                           
  3262                           ; BSR set to: 0
  3263  003E76  AF7D               	btfss	(___awmod@divisor+1)& (0+255),7,b
  3264  003E78  D004               	goto	l5376
  3265                           
  3266                           ; BSR set to: 0
  3267  003E7A  6D7C               	negf	___awmod@divisor& (0+255),b
  3268  003E7C  1F7D               	comf	(___awmod@divisor+1)& (0+255),f,b
  3269  003E7E  B0D8               	btfsc	status,0,c
  3270  003E80  2B7D               	incf	(___awmod@divisor+1)& (0+255),f,b
  3271  003E82                     l5376:
  3272                           
  3273                           ; BSR set to: 0
  3274  003E82  517C               	movf	___awmod@divisor& (0+255),w,b
  3275  003E84  117D               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  3276  003E86  B4D8               	btfsc	status,2,c
  3277  003E88  D018               	goto	l5392
  3278                           
  3279                           ; BSR set to: 0
  3280  003E8A  0E01               	movlw	1
  3281  003E8C  6F7E               	movwf	___awmod@counter& (0+255),b
  3282  003E8E  D004               	goto	l5382
  3283  003E90                     l5380:
  3284                           
  3285                           ; BSR set to: 0
  3286  003E90  90D8               	bcf	status,0,c
  3287  003E92  377C               	rlcf	___awmod@divisor& (0+255),f,b
  3288  003E94  377D               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  3289  003E96  2B7E               	incf	___awmod@counter& (0+255),f,b
  3290  003E98                     l5382:
  3291                           
  3292                           ; BSR set to: 0
  3293  003E98  AF7D               	btfss	(___awmod@divisor+1)& (0+255),7,b
  3294  003E9A  D7FA               	goto	l5380
  3295  003E9C                     u6570:
  3296                           
  3297                           ; BSR set to: 0
  3298  003E9C  517C               	movf	___awmod@divisor& (0+255),w,b
  3299  003E9E  5D7A               	subwf	___awmod@dividend& (0+255),w,b
  3300  003EA0  517D               	movf	(___awmod@divisor+1)& (0+255),w,b
  3301  003EA2  597B               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  3302  003EA4  A0D8               	btfss	status,0,c
  3303  003EA6  D004               	goto	l5388
  3304                           
  3305                           ; BSR set to: 0
  3306  003EA8  517C               	movf	___awmod@divisor& (0+255),w,b
  3307  003EAA  5F7A               	subwf	___awmod@dividend& (0+255),f,b
  3308  003EAC  517D               	movf	(___awmod@divisor+1)& (0+255),w,b
  3309  003EAE  5B7B               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  3310  003EB0                     l5388:
  3311                           
  3312                           ; BSR set to: 0
  3313  003EB0  90D8               	bcf	status,0,c
  3314  003EB2  337D               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  3315  003EB4  337C               	rrcf	___awmod@divisor& (0+255),f,b
  3316                           
  3317                           ; BSR set to: 0
  3318  003EB6  2F7E               	decfsz	___awmod@counter& (0+255),f,b
  3319  003EB8  D7F1               	goto	u6570
  3320  003EBA                     l5392:
  3321                           
  3322                           ; BSR set to: 0
  3323  003EBA  517F               	movf	___awmod@sign& (0+255),w,b
  3324  003EBC  B4D8               	btfsc	status,2,c
  3325  003EBE  D004               	goto	l5396
  3326                           
  3327                           ; BSR set to: 0
  3328  003EC0  6D7A               	negf	___awmod@dividend& (0+255),b
  3329  003EC2  1F7B               	comf	(___awmod@dividend+1)& (0+255),f,b
  3330  003EC4  B0D8               	btfsc	status,0,c
  3331  003EC6  2B7B               	incf	(___awmod@dividend+1)& (0+255),f,b
  3332  003EC8                     l5396:
  3333                           
  3334                           ; BSR set to: 0
  3335  003EC8  C07A  F07A         	movff	___awmod@dividend,?___awmod
  3336  003ECC  C07B  F07B         	movff	___awmod@dividend+1,?___awmod+1
  3337                           
  3338                           ; BSR set to: 0
  3339  003ED0  0012               	return		;funcret
  3340  003ED2                     __end_of___awmod:
  3341                           	callstack 0
  3342                           
  3343 ;; *************** function ___awdiv *****************
  3344 ;; Defined at:
  3345 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\awdiv.c"
  3346 ;; Parameters:    Size  Location     Type
  3347 ;;  dividend        2   32[BANK0 ] int 
  3348 ;;  divisor         2   34[BANK0 ] int 
  3349 ;; Auto vars:     Size  Location     Type
  3350 ;;  quotient        2   38[BANK0 ] int 
  3351 ;;  sign            1   37[BANK0 ] unsigned char 
  3352 ;;  counter         1   36[BANK0 ] unsigned char 
  3353 ;; Return value:  Size  Location     Type
  3354 ;;                  2   32[BANK0 ] int 
  3355 ;; Registers used:
  3356 ;;		wreg, status,2, status,0
  3357 ;; Tracked objects:
  3358 ;;		On entry : 3F/0
  3359 ;;		On exit  : 3F/0
  3360 ;;		Unchanged: 0/0
  3361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3362 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3363 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3364 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3365 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3366 ;;Total ram usage:        8 bytes
  3367 ;; Hardware stack levels used: 1
  3368 ;; Hardware stack levels required when called: 5
  3369 ;; This function calls:
  3370 ;;		Nothing
  3371 ;; This function is called by:
  3372 ;;		_scale
  3373 ;;		_sprintf
  3374 ;; This function uses a non-reentrant model
  3375 ;;
  3376                           
  3377                           	psect	text4
  3378  003AF6                     __ptext4:
  3379                           	callstack 0
  3380  003AF6                     ___awdiv:
  3381                           	callstack 23
  3382                           
  3383                           ; BSR set to: 0
  3384                           
  3385                           ; BSR set to: 0
  3386                           ;incstack = 0
  3387  003AF6  0E00               	movlw	0
  3388  003AF8  6F85               	movwf	___awdiv@sign& (0+255),b
  3389                           
  3390                           ; BSR set to: 0
  3391  003AFA  AF83               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  3392  003AFC  D006               	goto	l5328
  3393                           
  3394                           ; BSR set to: 0
  3395  003AFE  6D82               	negf	___awdiv@divisor& (0+255),b
  3396  003B00  1F83               	comf	(___awdiv@divisor+1)& (0+255),f,b
  3397  003B02  B0D8               	btfsc	status,0,c
  3398  003B04  2B83               	incf	(___awdiv@divisor+1)& (0+255),f,b
  3399                           
  3400                           ; BSR set to: 0
  3401  003B06  0E01               	movlw	1
  3402  003B08  6F85               	movwf	___awdiv@sign& (0+255),b
  3403  003B0A                     l5328:
  3404                           
  3405                           ; BSR set to: 0
  3406  003B0A  AF81               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  3407  003B0C  D006               	goto	l5334
  3408                           
  3409                           ; BSR set to: 0
  3410  003B0E  6D80               	negf	___awdiv@dividend& (0+255),b
  3411  003B10  1F81               	comf	(___awdiv@dividend+1)& (0+255),f,b
  3412  003B12  B0D8               	btfsc	status,0,c
  3413  003B14  2B81               	incf	(___awdiv@dividend+1)& (0+255),f,b
  3414                           
  3415                           ; BSR set to: 0
  3416  003B16  0E01               	movlw	1
  3417  003B18  1B85               	xorwf	___awdiv@sign& (0+255),f,b
  3418  003B1A                     l5334:
  3419                           
  3420                           ; BSR set to: 0
  3421  003B1A  0E00               	movlw	0
  3422  003B1C  6F87               	movwf	(___awdiv@quotient+1)& (0+255),b
  3423  003B1E  0E00               	movlw	0
  3424  003B20  6F86               	movwf	___awdiv@quotient& (0+255),b
  3425                           
  3426                           ; BSR set to: 0
  3427  003B22  5182               	movf	___awdiv@divisor& (0+255),w,b
  3428  003B24  1183               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  3429  003B26  B4D8               	btfsc	status,2,c
  3430  003B28  D01C               	goto	l5356
  3431                           
  3432                           ; BSR set to: 0
  3433  003B2A  0E01               	movlw	1
  3434  003B2C  6F84               	movwf	___awdiv@counter& (0+255),b
  3435  003B2E  D004               	goto	l5342
  3436  003B30                     l5340:
  3437                           
  3438                           ; BSR set to: 0
  3439  003B30  90D8               	bcf	status,0,c
  3440  003B32  3782               	rlcf	___awdiv@divisor& (0+255),f,b
  3441  003B34  3783               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  3442  003B36  2B84               	incf	___awdiv@counter& (0+255),f,b
  3443  003B38                     l5342:
  3444                           
  3445                           ; BSR set to: 0
  3446  003B38  AF83               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  3447  003B3A  D7FA               	goto	l5340
  3448  003B3C                     u6510:
  3449                           
  3450                           ; BSR set to: 0
  3451  003B3C  90D8               	bcf	status,0,c
  3452  003B3E  3786               	rlcf	___awdiv@quotient& (0+255),f,b
  3453  003B40  3787               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  3454                           
  3455                           ; BSR set to: 0
  3456  003B42  5182               	movf	___awdiv@divisor& (0+255),w,b
  3457  003B44  5D80               	subwf	___awdiv@dividend& (0+255),w,b
  3458  003B46  5183               	movf	(___awdiv@divisor+1)& (0+255),w,b
  3459  003B48  5981               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  3460  003B4A  A0D8               	btfss	status,0,c
  3461  003B4C  D005               	goto	l5352
  3462                           
  3463                           ; BSR set to: 0
  3464  003B4E  5182               	movf	___awdiv@divisor& (0+255),w,b
  3465  003B50  5F80               	subwf	___awdiv@dividend& (0+255),f,b
  3466  003B52  5183               	movf	(___awdiv@divisor+1)& (0+255),w,b
  3467  003B54  5B81               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  3468                           
  3469                           ; BSR set to: 0
  3470  003B56  8186               	bsf	___awdiv@quotient& (0+255),0,b
  3471  003B58                     l5352:
  3472                           
  3473                           ; BSR set to: 0
  3474  003B58  90D8               	bcf	status,0,c
  3475  003B5A  3383               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  3476  003B5C  3382               	rrcf	___awdiv@divisor& (0+255),f,b
  3477                           
  3478                           ; BSR set to: 0
  3479  003B5E  2F84               	decfsz	___awdiv@counter& (0+255),f,b
  3480  003B60  D7ED               	goto	u6510
  3481  003B62                     l5356:
  3482                           
  3483                           ; BSR set to: 0
  3484  003B62  5185               	movf	___awdiv@sign& (0+255),w,b
  3485  003B64  B4D8               	btfsc	status,2,c
  3486  003B66  D004               	goto	l5360
  3487                           
  3488                           ; BSR set to: 0
  3489  003B68  6D86               	negf	___awdiv@quotient& (0+255),b
  3490  003B6A  1F87               	comf	(___awdiv@quotient+1)& (0+255),f,b
  3491  003B6C  B0D8               	btfsc	status,0,c
  3492  003B6E  2B87               	incf	(___awdiv@quotient+1)& (0+255),f,b
  3493  003B70                     l5360:
  3494                           
  3495                           ; BSR set to: 0
  3496  003B70  C086  F080         	movff	___awdiv@quotient,?___awdiv
  3497  003B74  C087  F081         	movff	___awdiv@quotient+1,?___awdiv+1
  3498                           
  3499                           ; BSR set to: 0
  3500  003B78  0012               	return		;funcret
  3501  003B7A                     __end_of___awdiv:
  3502                           	callstack 0
  3503                           
  3504 ;; *************** function _isdigit *****************
  3505 ;; Defined at:
  3506 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\isdigit.c"
  3507 ;; Parameters:    Size  Location     Type
  3508 ;;  c               1    wreg     unsigned char 
  3509 ;; Auto vars:     Size  Location     Type
  3510 ;;  c               1   28[BANK0 ] unsigned char 
  3511 ;; Return value:  Size  Location     Type
  3512 ;;		None               void
  3513 ;; Registers used:
  3514 ;;		wreg, status,2, status,0
  3515 ;; Tracked objects:
  3516 ;;		On entry : 3E/1
  3517 ;;		On exit  : 3F/0
  3518 ;;		Unchanged: 0/0
  3519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3520 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3521 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3522 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3523 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3524 ;;Total ram usage:        3 bytes
  3525 ;; Hardware stack levels used: 1
  3526 ;; Hardware stack levels required when called: 5
  3527 ;; This function calls:
  3528 ;;		Nothing
  3529 ;; This function is called by:
  3530 ;;		_sprintf
  3531 ;; This function uses a non-reentrant model
  3532 ;;
  3533                           
  3534                           	psect	text5
  3535  0044B4                     __ptext5:
  3536                           	callstack 0
  3537  0044B4                     _isdigit:
  3538                           	callstack 24
  3539                           
  3540                           ; BSR set to: 0
  3541                           ;incstack = 0
  3542                           ;isdigit@c stored from wreg
  3543  0044B4  0100               	movlb	0	; () banked
  3544  0044B6  6F7C               	movwf	isdigit@c& (0+255),b
  3545  0044B8  0E00               	movlw	0
  3546  0044BA  0100               	movlb	0	; () banked
  3547  0044BC  6F7B               	movwf	_isdigit$750& (0+255),b
  3548                           
  3549                           ; BSR set to: 0
  3550  0044BE  0E3A               	movlw	58
  3551  0044C0  617C               	cpfslt	isdigit@c& (0+255),b
  3552  0044C2  D005               	goto	l5792
  3553                           
  3554                           ; BSR set to: 0
  3555  0044C4  0E2F               	movlw	47
  3556  0044C6  657C               	cpfsgt	isdigit@c& (0+255),b
  3557  0044C8  D002               	goto	l5792
  3558                           
  3559                           ; BSR set to: 0
  3560  0044CA  0E01               	movlw	1
  3561  0044CC  6F7B               	movwf	_isdigit$750& (0+255),b
  3562  0044CE                     l5792:
  3563                           
  3564                           ; BSR set to: 0
  3565  0044CE  C07B  F07A         	movff	_isdigit$750,??_isdigit
  3566  0044D2  317A               	rrcf	??_isdigit& (0+255),w,b
  3567                           
  3568                           ; BSR set to: 0
  3569  0044D4  0012               	return		;funcret
  3570  0044D6                     __end_of_isdigit:
  3571                           	callstack 0
  3572                           
  3573 ;; *************** function _fround *****************
  3574 ;; Defined at:
  3575 ;;		line 417 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c"
  3576 ;; Parameters:    Size  Location     Type
  3577 ;;  prec            1    wreg     unsigned char 
  3578 ;; Auto vars:     Size  Location     Type
  3579 ;;  prec            1   68[BANK0 ] unsigned char 
  3580 ;; Return value:  Size  Location     Type
  3581 ;;                  3   55[BANK0 ] unsigned char 
  3582 ;; Registers used:
  3583 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3584 ;; Tracked objects:
  3585 ;;		On entry : 3F/1
  3586 ;;		On exit  : 3F/0
  3587 ;;		Unchanged: 0/0
  3588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3589 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3590 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3591 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3592 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3593 ;;Total ram usage:       14 bytes
  3594 ;; Hardware stack levels used: 1
  3595 ;; Hardware stack levels required when called: 7
  3596 ;; This function calls:
  3597 ;;		___ftmul
  3598 ;;		___lbdiv
  3599 ;;		___lbmod
  3600 ;; This function is called by:
  3601 ;;		_sprintf
  3602 ;; This function uses a non-reentrant model
  3603 ;;
  3604                           
  3605                           	psect	text6
  3606  00280A                     __ptext6:
  3607                           	callstack 0
  3608  00280A                     _fround:
  3609                           	callstack 22
  3610                           
  3611                           ; BSR set to: 0
  3612                           ;incstack = 0
  3613                           ;fround@prec stored from wreg
  3614  00280A  0100               	movlb	0	; () banked
  3615  00280C  6FA4               	movwf	fround@prec& (0+255),b
  3616                           
  3617                           ;doprnt.c: 421: if(prec>=110)
  3618  00280E  0E6D               	movlw	109
  3619  002810  0100               	movlb	0	; () banked
  3620  002812  65A4               	cpfsgt	fround@prec& (0+255),b
  3621  002814  D079               	goto	l5734
  3622                           
  3623                           ; BSR set to: 0
  3624                           ;doprnt.c: 422: return 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * 
      +                          _npowers_[prec%10U];
  3625  002816  0E0A               	movlw	10
  3626  002818  6F7E               	movwf	___lbdiv@divisor& (0+255),b
  3627  00281A  0E64               	movlw	100
  3628  00281C  6F7A               	movwf	___lbmod@divisor& (0+255),b
  3629  00281E  51A4               	movf	fround@prec& (0+255),w,b
  3630  002820  ECA8  F021         	call	___lbmod
  3631  002824  EC51  F021         	call	___lbdiv
  3632  002828  0D03               	mullw	3
  3633  00282A  CFF3 F09A          	movff	prodl,??_fround
  3634  00282E  0E1B               	movlw	27
  3635  002830  279A               	addwf	??_fround& (0+255),f,b
  3636  002832  519A               	movf	??_fround& (0+255),w,b
  3637  002834  0F28               	addlw	low __npowers_
  3638  002836  6F9B               	movwf	(??_fround+1)& (0+255),b
  3639  002838  C09B  FFF6         	movff	??_fround+1,tblptrl
  3640  00283C                     	if	1	;There is more than 1 active tblptr byte
  3641  00283C  0E10               	movlw	high __smallconst
  3642  00283E  6EF7               	movwf	tblptrh,c
  3643  002840                     	endif
  3644  002840                     	if	0	;tblptru may be non-zero
  3645  002840                     	endif
  3646  002840                     	if	0	;tblptru may be non-zero
  3647  002840                     	endif
  3648  002840  0009               	tblrd		*+
  3649  002842  CFF5 F08B          	movff	tablat,___ftmul@f2
  3650  002846  0009               	tblrd		*+
  3651  002848  CFF5 F08C          	movff	tablat,___ftmul@f2+1
  3652  00284C  000A               	tblrd		*-
  3653  00284E  CFF5 F08D          	movff	tablat,___ftmul@f2+2
  3654  002852  0E64               	movlw	100
  3655  002854  6F7E               	movwf	___lbdiv@divisor& (0+255),b
  3656  002856  51A4               	movf	fround@prec& (0+255),w,b
  3657  002858  EC51  F021         	call	___lbdiv
  3658  00285C  0D03               	mullw	3
  3659  00285E  CFF3 F09C          	movff	prodl,??_fround+2
  3660  002862  0E36               	movlw	54
  3661  002864  279C               	addwf	(??_fround+2)& (0+255),f,b
  3662  002866  519C               	movf	(??_fround+2)& (0+255),w,b
  3663  002868  0F28               	addlw	low __npowers_
  3664  00286A  6F9D               	movwf	(??_fround+3)& (0+255),b
  3665  00286C  C09D  FFF6         	movff	??_fround+3,tblptrl
  3666  002870                     	if	1	;There is more than 1 active tblptr byte
  3667  002870  0E10               	movlw	high __smallconst
  3668  002872  6EF7               	movwf	tblptrh,c
  3669  002874                     	endif
  3670  002874                     	if	0	;tblptru may be non-zero
  3671  002874                     	endif
  3672  002874                     	if	0	;tblptru may be non-zero
  3673  002874                     	endif
  3674  002874  0009               	tblrd		*+
  3675  002876  CFF5 F088          	movff	tablat,___ftmul@f1
  3676  00287A  0009               	tblrd		*+
  3677  00287C  CFF5 F089          	movff	tablat,___ftmul@f1+1
  3678  002880  000A               	tblrd		*-
  3679  002882  CFF5 F08A          	movff	tablat,___ftmul@f1+2
  3680  002886  EC04  F019         	call	___ftmul	;wreg free
  3681  00288A  C088  F0A1         	movff	?___ftmul,_fround$939
  3682  00288E  C089  F0A2         	movff	?___ftmul+1,_fround$939+1
  3683  002892  C08A  F0A3         	movff	?___ftmul+2,_fround$939+2
  3684                           
  3685                           ;doprnt.c: 422: return 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * 
      +                          _npowers_[prec%10U];
  3686  002896  0E0A               	movlw	10
  3687  002898  6F7A               	movwf	___lbmod@divisor& (0+255),b
  3688  00289A  51A4               	movf	fround@prec& (0+255),w,b
  3689  00289C  ECA8  F021         	call	___lbmod
  3690  0028A0  0D03               	mullw	3
  3691  0028A2  50F3               	movf	243,w,c
  3692  0028A4  0F28               	addlw	low __npowers_
  3693  0028A6  6F9A               	movwf	??_fround& (0+255),b
  3694  0028A8  C09A  FFF6         	movff	??_fround,tblptrl
  3695  0028AC                     	if	1	;There is more than 1 active tblptr byte
  3696  0028AC  0E10               	movlw	high __smallconst
  3697  0028AE  6EF7               	movwf	tblptrh,c
  3698  0028B0                     	endif
  3699  0028B0                     	if	0	;tblptru may be non-zero
  3700  0028B0                     	endif
  3701  0028B0                     	if	0	;tblptru may be non-zero
  3702  0028B0                     	endif
  3703  0028B0  0009               	tblrd		*+
  3704  0028B2  CFF5 F08B          	movff	tablat,___ftmul@f2
  3705  0028B6  0009               	tblrd		*+
  3706  0028B8  CFF5 F08C          	movff	tablat,___ftmul@f2+1
  3707  0028BC  000A               	tblrd		*-
  3708  0028BE  CFF5 F08D          	movff	tablat,___ftmul@f2+2
  3709  0028C2  C0A1  F088         	movff	_fround$939,___ftmul@f1
  3710  0028C6  C0A2  F089         	movff	_fround$939+1,___ftmul@f1+1
  3711  0028CA  C0A3  F08A         	movff	_fround$939+2,___ftmul@f1+2
  3712  0028CE  EC04  F019         	call	___ftmul	;wreg free
  3713  0028D2  C088  F09E         	movff	?___ftmul,_fround$940
  3714  0028D6  C089  F09F         	movff	?___ftmul+1,_fround$940+1
  3715  0028DA  C08A  F0A0         	movff	?___ftmul+2,_fround$940+2
  3716                           
  3717                           ; BSR set to: 0
  3718                           ;doprnt.c: 422: return 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * 
      +                          _npowers_[prec%10U];
  3719  0028DE  C09E  F088         	movff	_fround$940,___ftmul@f1
  3720  0028E2  C09F  F089         	movff	_fround$940+1,___ftmul@f1+1
  3721  0028E6  C0A0  F08A         	movff	_fround$940+2,___ftmul@f1+2
  3722  0028EA  0E00               	movlw	0
  3723  0028EC  6F8B               	movwf	___ftmul@f2& (0+255),b
  3724  0028EE  0E00               	movlw	0
  3725  0028F0  6F8C               	movwf	(___ftmul@f2+1)& (0+255),b
  3726  0028F2  0E3F               	movlw	63
  3727  0028F4  6F8D               	movwf	(___ftmul@f2+2)& (0+255),b
  3728  0028F6  EC04  F019         	call	___ftmul	;wreg free
  3729  0028FA  C088  F097         	movff	?___ftmul,?_fround
  3730  0028FE  C089  F098         	movff	?___ftmul+1,?_fround+1
  3731  002902  C08A  F099         	movff	?___ftmul+2,?_fround+2
  3732  002906  0012               	return	
  3733  002908                     l5734:
  3734                           
  3735                           ; BSR set to: 0
  3736                           ;doprnt.c: 423: else if(prec > 10)
  3737  002908  0E0A               	movlw	10
  3738  00290A  65A4               	cpfsgt	fround@prec& (0+255),b
  3739  00290C  D04D               	goto	l5742
  3740                           
  3741                           ; BSR set to: 0
  3742                           ;doprnt.c: 424: return 0.5 * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  3743  00290E  0E0A               	movlw	10
  3744  002910  6F7A               	movwf	___lbmod@divisor& (0+255),b
  3745  002912  51A4               	movf	fround@prec& (0+255),w,b
  3746  002914  ECA8  F021         	call	___lbmod
  3747  002918  0D03               	mullw	3
  3748  00291A  50F3               	movf	243,w,c
  3749  00291C  0F28               	addlw	low __npowers_
  3750  00291E  6F9A               	movwf	??_fround& (0+255),b
  3751  002920  C09A  FFF6         	movff	??_fround,tblptrl
  3752  002924                     	if	1	;There is more than 1 active tblptr byte
  3753  002924  0E10               	movlw	high __smallconst
  3754  002926  6EF7               	movwf	tblptrh,c
  3755  002928                     	endif
  3756  002928                     	if	0	;tblptru may be non-zero
  3757  002928                     	endif
  3758  002928                     	if	0	;tblptru may be non-zero
  3759  002928                     	endif
  3760  002928  0009               	tblrd		*+
  3761  00292A  CFF5 F08B          	movff	tablat,___ftmul@f2
  3762  00292E  0009               	tblrd		*+
  3763  002930  CFF5 F08C          	movff	tablat,___ftmul@f2+1
  3764  002934  000A               	tblrd		*-
  3765  002936  CFF5 F08D          	movff	tablat,___ftmul@f2+2
  3766  00293A  0E0A               	movlw	10
  3767  00293C  6F7E               	movwf	___lbdiv@divisor& (0+255),b
  3768  00293E  51A4               	movf	fround@prec& (0+255),w,b
  3769  002940  EC51  F021         	call	___lbdiv
  3770  002944  0D03               	mullw	3
  3771  002946  CFF3 F09B          	movff	prodl,??_fround+1
  3772  00294A  0E1B               	movlw	27
  3773  00294C  279B               	addwf	(??_fround+1)& (0+255),f,b
  3774  00294E  519B               	movf	(??_fround+1)& (0+255),w,b
  3775  002950  0F28               	addlw	low __npowers_
  3776  002952  6F9C               	movwf	(??_fround+2)& (0+255),b
  3777  002954  C09C  FFF6         	movff	??_fround+2,tblptrl
  3778  002958                     	if	1	;There is more than 1 active tblptr byte
  3779  002958  0E10               	movlw	high __smallconst
  3780  00295A  6EF7               	movwf	tblptrh,c
  3781  00295C                     	endif
  3782  00295C                     	if	0	;tblptru may be non-zero
  3783  00295C                     	endif
  3784  00295C                     	if	0	;tblptru may be non-zero
  3785  00295C                     	endif
  3786  00295C  0009               	tblrd		*+
  3787  00295E  CFF5 F088          	movff	tablat,___ftmul@f1
  3788  002962  0009               	tblrd		*+
  3789  002964  CFF5 F089          	movff	tablat,___ftmul@f1+1
  3790  002968  000A               	tblrd		*-
  3791  00296A  CFF5 F08A          	movff	tablat,___ftmul@f1+2
  3792  00296E  EC04  F019         	call	___ftmul	;wreg free
  3793  002972  C088  F0A1         	movff	?___ftmul,_fround$939
  3794  002976  C089  F0A2         	movff	?___ftmul+1,_fround$939+1
  3795  00297A  C08A  F0A3         	movff	?___ftmul+2,_fround$939+2
  3796                           
  3797                           ; BSR set to: 0
  3798                           ;doprnt.c: 424: return 0.5 * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  3799  00297E  C0A1  F088         	movff	_fround$939,___ftmul@f1
  3800  002982  C0A2  F089         	movff	_fround$939+1,___ftmul@f1+1
  3801  002986  C0A3  F08A         	movff	_fround$939+2,___ftmul@f1+2
  3802  00298A  0E00               	movlw	0
  3803  00298C  6F8B               	movwf	___ftmul@f2& (0+255),b
  3804  00298E  0E00               	movlw	0
  3805  002990  6F8C               	movwf	(___ftmul@f2+1)& (0+255),b
  3806  002992  0E3F               	movlw	63
  3807  002994  6F8D               	movwf	(___ftmul@f2+2)& (0+255),b
  3808  002996  EC04  F019         	call	___ftmul	;wreg free
  3809  00299A  C088  F097         	movff	?___ftmul,?_fround
  3810  00299E  C089  F098         	movff	?___ftmul+1,?_fround+1
  3811  0029A2  C08A  F099         	movff	?___ftmul+2,?_fround+2
  3812  0029A6  0012               	return	
  3813  0029A8                     l5742:
  3814                           
  3815                           ; BSR set to: 0
  3816                           ;doprnt.c: 425: return 0.5 * _npowers_[prec];
  3817  0029A8  51A4               	movf	fround@prec& (0+255),w,b
  3818  0029AA  0D03               	mullw	3
  3819  0029AC  50F3               	movf	243,w,c
  3820  0029AE  0F28               	addlw	low __npowers_
  3821  0029B0  6F9A               	movwf	??_fround& (0+255),b
  3822  0029B2  C09A  FFF6         	movff	??_fround,tblptrl
  3823  0029B6                     	if	1	;There is more than 1 active tblptr byte
  3824  0029B6  0E10               	movlw	high __smallconst
  3825  0029B8  6EF7               	movwf	tblptrh,c
  3826  0029BA                     	endif
  3827  0029BA                     	if	0	;tblptru may be non-zero
  3828  0029BA                     	endif
  3829  0029BA                     	if	0	;tblptru may be non-zero
  3830  0029BA                     	endif
  3831  0029BA  0009               	tblrd		*+
  3832  0029BC  CFF5 F088          	movff	tablat,___ftmul@f1
  3833  0029C0  0009               	tblrd		*+
  3834  0029C2  CFF5 F089          	movff	tablat,___ftmul@f1+1
  3835  0029C6  000A               	tblrd		*-
  3836  0029C8  CFF5 F08A          	movff	tablat,___ftmul@f1+2
  3837  0029CC  0E00               	movlw	0
  3838  0029CE  6F8B               	movwf	___ftmul@f2& (0+255),b
  3839  0029D0  0E00               	movlw	0
  3840  0029D2  6F8C               	movwf	(___ftmul@f2+1)& (0+255),b
  3841  0029D4  0E3F               	movlw	63
  3842  0029D6  6F8D               	movwf	(___ftmul@f2+2)& (0+255),b
  3843  0029D8  EC04  F019         	call	___ftmul	;wreg free
  3844  0029DC  C088  F097         	movff	?___ftmul,?_fround
  3845  0029E0  C089  F098         	movff	?___ftmul+1,?_fround+1
  3846  0029E4  C08A  F099         	movff	?___ftmul+2,?_fround+2
  3847                           
  3848                           ; BSR set to: 0
  3849  0029E8  0012               	return		;funcret
  3850  0029EA                     __end_of_fround:
  3851                           	callstack 0
  3852                           
  3853 ;; *************** function ___lbmod *****************
  3854 ;; Defined at:
  3855 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\lbmod.c"
  3856 ;; Parameters:    Size  Location     Type
  3857 ;;  dividend        1    wreg     unsigned char 
  3858 ;;  divisor         1   26[BANK0 ] unsigned char 
  3859 ;; Auto vars:     Size  Location     Type
  3860 ;;  dividend        1   27[BANK0 ] unsigned char 
  3861 ;;  rem             1   29[BANK0 ] unsigned char 
  3862 ;;  counter         1   28[BANK0 ] unsigned char 
  3863 ;; Return value:  Size  Location     Type
  3864 ;;                  1    wreg      unsigned char 
  3865 ;; Registers used:
  3866 ;;		wreg, status,2, status,0
  3867 ;; Tracked objects:
  3868 ;;		On entry : 3F/0
  3869 ;;		On exit  : 3F/0
  3870 ;;		Unchanged: 0/0
  3871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3872 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3873 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3874 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3875 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3876 ;;Total ram usage:        4 bytes
  3877 ;; Hardware stack levels used: 1
  3878 ;; Hardware stack levels required when called: 5
  3879 ;; This function calls:
  3880 ;;		Nothing
  3881 ;; This function is called by:
  3882 ;;		_fround
  3883 ;; This function uses a non-reentrant model
  3884 ;;
  3885                           
  3886                           	psect	text7
  3887  004350                     __ptext7:
  3888                           	callstack 0
  3889  004350                     ___lbmod:
  3890                           	callstack 23
  3891                           
  3892                           ; BSR set to: 0
  3893                           ;incstack = 0
  3894                           ;___lbmod@dividend stored from wreg
  3895  004350  6F7B               	movwf	___lbmod@dividend& (0+255),b
  3896  004352  0E08               	movlw	8
  3897  004354  0100               	movlb	0	; () banked
  3898  004356  6F7C               	movwf	___lbmod@counter& (0+255),b
  3899  004358  0E00               	movlw	0
  3900  00435A  6F7D               	movwf	___lbmod@rem& (0+255),b
  3901  00435C                     l5428:
  3902                           
  3903                           ; BSR set to: 0
  3904  00435C  90D8               	bcf	status,0,c
  3905  00435E  357B               	rlcf	___lbmod@dividend& (0+255),w,b
  3906  004360  357D               	rlcf	___lbmod@rem& (0+255),w,b
  3907  004362  6F7D               	movwf	___lbmod@rem& (0+255),b
  3908                           
  3909                           ; BSR set to: 0
  3910  004364  90D8               	bcf	status,0,c
  3911  004366  377B               	rlcf	___lbmod@dividend& (0+255),f,b
  3912                           
  3913                           ; BSR set to: 0
  3914  004368  517A               	movf	___lbmod@divisor& (0+255),w,b
  3915  00436A  5D7D               	subwf	___lbmod@rem& (0+255),w,b
  3916  00436C  A0D8               	btfss	status,0,c
  3917  00436E  D002               	goto	l5436
  3918                           
  3919                           ; BSR set to: 0
  3920  004370  517A               	movf	___lbmod@divisor& (0+255),w,b
  3921  004372  5F7D               	subwf	___lbmod@rem& (0+255),f,b
  3922  004374                     l5436:
  3923                           
  3924                           ; BSR set to: 0
  3925  004374  2F7C               	decfsz	___lbmod@counter& (0+255),f,b
  3926  004376  D7F2               	goto	l5428
  3927                           
  3928                           ; BSR set to: 0
  3929  004378  517D               	movf	___lbmod@rem& (0+255),w,b
  3930                           
  3931                           ; BSR set to: 0
  3932  00437A  0012               	return		;funcret
  3933  00437C                     __end_of___lbmod:
  3934                           	callstack 0
  3935                           
  3936 ;; *************** function ___lbdiv *****************
  3937 ;; Defined at:
  3938 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\lbdiv.c"
  3939 ;; Parameters:    Size  Location     Type
  3940 ;;  dividend        1    wreg     unsigned char 
  3941 ;;  divisor         1   30[BANK0 ] unsigned char 
  3942 ;; Auto vars:     Size  Location     Type
  3943 ;;  dividend        1   31[BANK0 ] unsigned char 
  3944 ;;  quotient        1   33[BANK0 ] unsigned char 
  3945 ;;  counter         1   32[BANK0 ] unsigned char 
  3946 ;; Return value:  Size  Location     Type
  3947 ;;                  1    wreg      unsigned char 
  3948 ;; Registers used:
  3949 ;;		wreg, status,2, status,0
  3950 ;; Tracked objects:
  3951 ;;		On entry : 3F/0
  3952 ;;		On exit  : 3F/0
  3953 ;;		Unchanged: 0/0
  3954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3955 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3956 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3957 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3958 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3959 ;;Total ram usage:        4 bytes
  3960 ;; Hardware stack levels used: 1
  3961 ;; Hardware stack levels required when called: 5
  3962 ;; This function calls:
  3963 ;;		Nothing
  3964 ;; This function is called by:
  3965 ;;		_fround
  3966 ;; This function uses a non-reentrant model
  3967 ;;
  3968                           
  3969                           	psect	text8
  3970  0042A2                     __ptext8:
  3971                           	callstack 0
  3972  0042A2                     ___lbdiv:
  3973                           	callstack 23
  3974                           
  3975                           ; BSR set to: 0
  3976                           ;incstack = 0
  3977                           ;___lbdiv@dividend stored from wreg
  3978  0042A2  6F7F               	movwf	___lbdiv@dividend& (0+255),b
  3979  0042A4  0E00               	movlw	0
  3980  0042A6  0100               	movlb	0	; () banked
  3981  0042A8  6F81               	movwf	___lbdiv@quotient& (0+255),b
  3982                           
  3983                           ; BSR set to: 0
  3984  0042AA  517E               	movf	___lbdiv@divisor& (0+255),w,b
  3985  0042AC  B4D8               	btfsc	status,2,c
  3986  0042AE  D015               	goto	l5422
  3987                           
  3988                           ; BSR set to: 0
  3989  0042B0  0E01               	movlw	1
  3990  0042B2  6F80               	movwf	___lbdiv@counter& (0+255),b
  3991  0042B4  D003               	goto	l5410
  3992  0042B6                     l5406:
  3993                           
  3994                           ; BSR set to: 0
  3995  0042B6  90D8               	bcf	status,0,c
  3996  0042B8  377E               	rlcf	___lbdiv@divisor& (0+255),f,b
  3997                           
  3998                           ; BSR set to: 0
  3999  0042BA  2B80               	incf	___lbdiv@counter& (0+255),f,b
  4000  0042BC                     l5410:
  4001                           
  4002                           ; BSR set to: 0
  4003  0042BC  AF7E               	btfss	___lbdiv@divisor& (0+255),7,b
  4004  0042BE  D7FB               	goto	l5406
  4005  0042C0                     u6610:
  4006                           
  4007                           ; BSR set to: 0
  4008  0042C0  90D8               	bcf	status,0,c
  4009  0042C2  3781               	rlcf	___lbdiv@quotient& (0+255),f,b
  4010  0042C4  517E               	movf	___lbdiv@divisor& (0+255),w,b
  4011  0042C6  5D7F               	subwf	___lbdiv@dividend& (0+255),w,b
  4012  0042C8  A0D8               	btfss	status,0,c
  4013  0042CA  D003               	goto	l5418
  4014                           
  4015                           ; BSR set to: 0
  4016  0042CC  517E               	movf	___lbdiv@divisor& (0+255),w,b
  4017  0042CE  5F7F               	subwf	___lbdiv@dividend& (0+255),f,b
  4018                           
  4019                           ; BSR set to: 0
  4020  0042D0  8181               	bsf	___lbdiv@quotient& (0+255),0,b
  4021  0042D2                     l5418:
  4022                           
  4023                           ; BSR set to: 0
  4024  0042D2  90D8               	bcf	status,0,c
  4025  0042D4  337E               	rrcf	___lbdiv@divisor& (0+255),f,b
  4026                           
  4027                           ; BSR set to: 0
  4028  0042D6  2F80               	decfsz	___lbdiv@counter& (0+255),f,b
  4029  0042D8  D7F3               	goto	u6610
  4030  0042DA                     l5422:
  4031                           
  4032                           ; BSR set to: 0
  4033  0042DA  5181               	movf	___lbdiv@quotient& (0+255),w,b
  4034                           
  4035                           ; BSR set to: 0
  4036  0042DC  0012               	return		;funcret
  4037  0042DE                     __end_of___lbdiv:
  4038                           	callstack 0
  4039                           
  4040 ;; *************** function ___ftmul *****************
  4041 ;; Defined at:
  4042 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\ftmul.c"
  4043 ;; Parameters:    Size  Location     Type
  4044 ;;  f1              3   40[BANK0 ] float 
  4045 ;;  f2              3   43[BANK0 ] float 
  4046 ;; Auto vars:     Size  Location     Type
  4047 ;;  f3_as_produc    3   50[BANK0 ] unsigned um
  4048 ;;  sign            1   54[BANK0 ] unsigned char 
  4049 ;;  cntr            1   53[BANK0 ] unsigned char 
  4050 ;;  exp             1   49[BANK0 ] unsigned char 
  4051 ;; Return value:  Size  Location     Type
  4052 ;;                  3   40[BANK0 ] float 
  4053 ;; Registers used:
  4054 ;;		wreg, status,2, status,0, cstack
  4055 ;; Tracked objects:
  4056 ;;		On entry : 3F/0
  4057 ;;		On exit  : 3F/0
  4058 ;;		Unchanged: 0/0
  4059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4060 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4061 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4062 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4063 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4064 ;;Total ram usage:       15 bytes
  4065 ;; Hardware stack levels used: 1
  4066 ;; Hardware stack levels required when called: 6
  4067 ;; This function calls:
  4068 ;;		___ftpack
  4069 ;; This function is called by:
  4070 ;;		_main
  4071 ;;		_fround
  4072 ;;		_scale
  4073 ;;		_sprintf
  4074 ;; This function uses a non-reentrant model
  4075 ;;
  4076                           
  4077                           	psect	text9
  4078  003208                     __ptext9:
  4079                           	callstack 0
  4080  003208                     ___ftmul:
  4081                           	callstack 22
  4082                           
  4083                           ; BSR set to: 0
  4084                           
  4085                           ; BSR set to: 0
  4086                           ;incstack = 0
  4087  003208  C08A  F08E         	movff	___ftmul@f1+2,??___ftmul
  4088  00320C  6B8F               	clrf	(??___ftmul+1)& (0+255),b
  4089  00320E  6B90               	clrf	(??___ftmul+2)& (0+255),b
  4090  003210  3589               	rlcf	(___ftmul@f1+1)& (0+255),w,b
  4091  003212  378E               	rlcf	??___ftmul& (0+255),f,b
  4092  003214  E301               	bnc	u6421
  4093  003216  818F               	bsf	(??___ftmul+1)& (0+255),0,b
  4094  003218                     u6421:
  4095  003218  518E               	movf	??___ftmul& (0+255),w,b
  4096  00321A  6F91               	movwf	___ftmul@exp& (0+255),b
  4097  00321C  5191               	movf	___ftmul@exp& (0+255),w,b
  4098  00321E  A4D8               	btfss	status,2,c
  4099  003220  D007               	goto	l5278
  4100                           
  4101                           ; BSR set to: 0
  4102  003222  0E00               	movlw	0
  4103  003224  6F88               	movwf	?___ftmul& (0+255),b
  4104  003226  0E00               	movlw	0
  4105  003228  6F89               	movwf	(?___ftmul+1)& (0+255),b
  4106  00322A  0E00               	movlw	0
  4107  00322C  6F8A               	movwf	(?___ftmul+2)& (0+255),b
  4108  00322E  0012               	return	
  4109  003230                     l5278:
  4110                           
  4111                           ; BSR set to: 0
  4112  003230  C08D  F08E         	movff	___ftmul@f2+2,??___ftmul
  4113  003234  6B8F               	clrf	(??___ftmul+1)& (0+255),b
  4114  003236  6B90               	clrf	(??___ftmul+2)& (0+255),b
  4115  003238  358C               	rlcf	(___ftmul@f2+1)& (0+255),w,b
  4116  00323A  378E               	rlcf	??___ftmul& (0+255),f,b
  4117  00323C  E301               	bnc	u6441
  4118  00323E  818F               	bsf	(??___ftmul+1)& (0+255),0,b
  4119  003240                     u6441:
  4120  003240  518E               	movf	??___ftmul& (0+255),w,b
  4121  003242  6F96               	movwf	___ftmul@sign& (0+255),b
  4122  003244  5196               	movf	___ftmul@sign& (0+255),w,b
  4123  003246  A4D8               	btfss	status,2,c
  4124  003248  D007               	goto	l5284
  4125                           
  4126                           ; BSR set to: 0
  4127  00324A  0E00               	movlw	0
  4128  00324C  6F88               	movwf	?___ftmul& (0+255),b
  4129  00324E  0E00               	movlw	0
  4130  003250  6F89               	movwf	(?___ftmul+1)& (0+255),b
  4131  003252  0E00               	movlw	0
  4132  003254  6F8A               	movwf	(?___ftmul+2)& (0+255),b
  4133  003256  0012               	return	
  4134  003258                     l5284:
  4135                           
  4136                           ; BSR set to: 0
  4137  003258  5196               	movf	___ftmul@sign& (0+255),w,b
  4138  00325A  0F7B               	addlw	123
  4139  00325C  2791               	addwf	___ftmul@exp& (0+255),f,b
  4140                           
  4141                           ; BSR set to: 0
  4142  00325E  C08A  F096         	movff	___ftmul@f1+2,___ftmul@sign
  4143  003262  518D               	movf	(___ftmul@f2+2)& (0+255),w,b
  4144  003264  1B96               	xorwf	___ftmul@sign& (0+255),f,b
  4145  003266  0E80               	movlw	128
  4146  003268  1796               	andwf	___ftmul@sign& (0+255),f,b
  4147                           
  4148                           ; BSR set to: 0
  4149  00326A  8F89               	bsf	(___ftmul@f1+1)& (0+255),7,b
  4150                           
  4151                           ; BSR set to: 0
  4152  00326C  8F8C               	bsf	(___ftmul@f2+1)& (0+255),7,b
  4153                           
  4154                           ; BSR set to: 0
  4155  00326E  0EFF               	movlw	255
  4156  003270  178B               	andwf	___ftmul@f2& (0+255),f,b
  4157  003272  0EFF               	movlw	255
  4158  003274  178C               	andwf	(___ftmul@f2+1)& (0+255),f,b
  4159  003276  0E00               	movlw	0
  4160  003278  178D               	andwf	(___ftmul@f2+2)& (0+255),f,b
  4161                           
  4162                           ; BSR set to: 0
  4163  00327A  0E00               	movlw	0
  4164  00327C  6F92               	movwf	___ftmul@f3_as_product& (0+255),b
  4165  00327E  0E00               	movlw	0
  4166  003280  6F93               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
  4167  003282  0E00               	movlw	0
  4168  003284  6F94               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
  4169                           
  4170                           ; BSR set to: 0
  4171  003286  0E07               	movlw	7
  4172  003288  6F95               	movwf	___ftmul@cntr& (0+255),b
  4173  00328A                     l5298:
  4174                           
  4175                           ; BSR set to: 0
  4176  00328A  A188               	btfss	___ftmul@f1& (0+255),0,b
  4177  00328C  D006               	goto	l5302
  4178                           
  4179                           ; BSR set to: 0
  4180  00328E  518B               	movf	___ftmul@f2& (0+255),w,b
  4181  003290  2792               	addwf	___ftmul@f3_as_product& (0+255),f,b
  4182  003292  518C               	movf	(___ftmul@f2+1)& (0+255),w,b
  4183  003294  2393               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  4184  003296  518D               	movf	(___ftmul@f2+2)& (0+255),w,b
  4185  003298  2394               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  4186  00329A                     l5302:
  4187                           
  4188                           ; BSR set to: 0
  4189  00329A  90D8               	bcf	status,0,c
  4190  00329C  338A               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  4191  00329E  3389               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  4192  0032A0  3388               	rrcf	___ftmul@f1& (0+255),f,b
  4193  0032A2  90D8               	bcf	status,0,c
  4194  0032A4  378B               	rlcf	___ftmul@f2& (0+255),f,b
  4195  0032A6  378C               	rlcf	(___ftmul@f2+1)& (0+255),f,b
  4196  0032A8  378D               	rlcf	(___ftmul@f2+2)& (0+255),f,b
  4197                           
  4198                           ; BSR set to: 0
  4199  0032AA  2F95               	decfsz	___ftmul@cntr& (0+255),f,b
  4200  0032AC  D7EE               	goto	l5298
  4201                           
  4202                           ; BSR set to: 0
  4203  0032AE  0E09               	movlw	9
  4204  0032B0  6F95               	movwf	___ftmul@cntr& (0+255),b
  4205  0032B2                     l5308:
  4206                           
  4207                           ; BSR set to: 0
  4208  0032B2  A188               	btfss	___ftmul@f1& (0+255),0,b
  4209  0032B4  D006               	goto	l5312
  4210                           
  4211                           ; BSR set to: 0
  4212  0032B6  518B               	movf	___ftmul@f2& (0+255),w,b
  4213  0032B8  2792               	addwf	___ftmul@f3_as_product& (0+255),f,b
  4214  0032BA  518C               	movf	(___ftmul@f2+1)& (0+255),w,b
  4215  0032BC  2393               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  4216  0032BE  518D               	movf	(___ftmul@f2+2)& (0+255),w,b
  4217  0032C0  2394               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  4218  0032C2                     l5312:
  4219                           
  4220                           ; BSR set to: 0
  4221  0032C2  90D8               	bcf	status,0,c
  4222  0032C4  338A               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  4223  0032C6  3389               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  4224  0032C8  3388               	rrcf	___ftmul@f1& (0+255),f,b
  4225  0032CA  90D8               	bcf	status,0,c
  4226  0032CC  3394               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
  4227  0032CE  3393               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
  4228  0032D0  3392               	rrcf	___ftmul@f3_as_product& (0+255),f,b
  4229                           
  4230                           ; BSR set to: 0
  4231  0032D2  2F95               	decfsz	___ftmul@cntr& (0+255),f,b
  4232  0032D4  D7EE               	goto	l5308
  4233                           
  4234                           ; BSR set to: 0
  4235  0032D6  C092  F07A         	movff	___ftmul@f3_as_product,___ftpack@arg
  4236  0032DA  C093  F07B         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  4237  0032DE  C094  F07C         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  4238  0032E2  C091  F07D         	movff	___ftmul@exp,___ftpack@exp
  4239  0032E6  C096  F07E         	movff	___ftmul@sign,___ftpack@sign
  4240  0032EA  EC25  F01C         	call	___ftpack	;wreg free
  4241  0032EE  C07A  F088         	movff	?___ftpack,?___ftmul
  4242  0032F2  C07B  F089         	movff	?___ftpack+1,?___ftmul+1
  4243  0032F6  C07C  F08A         	movff	?___ftpack+2,?___ftmul+2
  4244                           
  4245                           ; BSR set to: 0
  4246  0032FA  0012               	return		;funcret
  4247  0032FC                     __end_of___ftmul:
  4248                           	callstack 0
  4249                           
  4250 ;; *************** function __tdiv_to_l_ *****************
  4251 ;; Defined at:
  4252 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\ftdivl.c"
  4253 ;; Parameters:    Size  Location     Type
  4254 ;;  f1              3   26[BANK0 ] float 
  4255 ;;  f2              3   29[BANK0 ] float 
  4256 ;; Auto vars:     Size  Location     Type
  4257 ;;  quot            4   35[BANK0 ] unsigned long 
  4258 ;;  exp1            1   40[BANK0 ] unsigned char 
  4259 ;;  cntr            1   39[BANK0 ] unsigned char 
  4260 ;; Return value:  Size  Location     Type
  4261 ;;                  4   26[BANK0 ] unsigned long 
  4262 ;; Registers used:
  4263 ;;		wreg, status,2, status,0
  4264 ;; Tracked objects:
  4265 ;;		On entry : 3F/0
  4266 ;;		On exit  : 3F/0
  4267 ;;		Unchanged: 0/0
  4268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4269 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4270 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4271 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4272 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4273 ;;Total ram usage:       15 bytes
  4274 ;; Hardware stack levels used: 1
  4275 ;; Hardware stack levels required when called: 5
  4276 ;; This function calls:
  4277 ;;		Nothing
  4278 ;; This function is called by:
  4279 ;;		_sprintf
  4280 ;; This function uses a non-reentrant model
  4281 ;;
  4282                           
  4283                           	psect	text10
  4284  002F16                     __ptext10:
  4285                           	callstack 0
  4286  002F16                     __tdiv_to_l_:
  4287                           	callstack 24
  4288                           
  4289                           ; BSR set to: 0
  4290                           
  4291                           ; BSR set to: 0
  4292                           ;incstack = 0
  4293  002F16  C07C  F080         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
  4294  002F1A  6B81               	clrf	(??__tdiv_to_l_+1)& (0+255),b
  4295  002F1C  6B82               	clrf	(??__tdiv_to_l_+2)& (0+255),b
  4296  002F1E  357B               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),w,b
  4297  002F20  3780               	rlcf	??__tdiv_to_l_& (0+255),f,b
  4298  002F22  E301               	bnc	u7171
  4299  002F24  8181               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
  4300  002F26                     u7171:
  4301  002F26  5180               	movf	??__tdiv_to_l_& (0+255),w,b
  4302  002F28  6F88               	movwf	__tdiv_to_l_@exp1& (0+255),b
  4303  002F2A  5188               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  4304  002F2C  A4D8               	btfss	status,2,c
  4305  002F2E  D009               	goto	l5802
  4306  002F30                     u7180:
  4307                           
  4308                           ; BSR set to: 0
  4309  002F30  0E00               	movlw	0
  4310  002F32  6F7A               	movwf	?__tdiv_to_l_& (0+255),b
  4311  002F34  0E00               	movlw	0
  4312  002F36  6F7B               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  4313  002F38  0E00               	movlw	0
  4314  002F3A  6F7C               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  4315  002F3C  0E00               	movlw	0
  4316  002F3E  6F7D               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  4317  002F40  0012               	return	
  4318  002F42                     l5802:
  4319                           
  4320                           ; BSR set to: 0
  4321  002F42  C07F  F080         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
  4322  002F46  6B81               	clrf	(??__tdiv_to_l_+1)& (0+255),b
  4323  002F48  6B82               	clrf	(??__tdiv_to_l_+2)& (0+255),b
  4324  002F4A  357E               	rlcf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  4325  002F4C  3780               	rlcf	??__tdiv_to_l_& (0+255),f,b
  4326  002F4E  E301               	bnc	u7191
  4327  002F50  8181               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
  4328  002F52                     u7191:
  4329  002F52  5180               	movf	??__tdiv_to_l_& (0+255),w,b
  4330  002F54  6F87               	movwf	__tdiv_to_l_@cntr& (0+255),b
  4331  002F56  5187               	movf	__tdiv_to_l_@cntr& (0+255),w,b
  4332  002F58  B4D8               	btfsc	status,2,c
  4333  002F5A  D7EA               	goto	u7180
  4334                           
  4335                           ; BSR set to: 0
  4336  002F5C  8F7B               	bsf	(__tdiv_to_l_@f1+1)& (0+255),7,b
  4337                           
  4338                           ; BSR set to: 0
  4339  002F5E  0EFF               	movlw	255
  4340  002F60  177A               	andwf	__tdiv_to_l_@f1& (0+255),f,b
  4341  002F62  0EFF               	movlw	255
  4342  002F64  177B               	andwf	(__tdiv_to_l_@f1+1)& (0+255),f,b
  4343  002F66  0E00               	movlw	0
  4344  002F68  177C               	andwf	(__tdiv_to_l_@f1+2)& (0+255),f,b
  4345  002F6A  8F7E               	bsf	(__tdiv_to_l_@f2+1)& (0+255),7,b
  4346                           
  4347                           ; BSR set to: 0
  4348  002F6C  0EFF               	movlw	255
  4349  002F6E  177D               	andwf	__tdiv_to_l_@f2& (0+255),f,b
  4350  002F70  0EFF               	movlw	255
  4351  002F72  177E               	andwf	(__tdiv_to_l_@f2+1)& (0+255),f,b
  4352  002F74  0E00               	movlw	0
  4353  002F76  177F               	andwf	(__tdiv_to_l_@f2+2)& (0+255),f,b
  4354                           
  4355                           ; BSR set to: 0
  4356  002F78  0E00               	movlw	0
  4357  002F7A  6F83               	movwf	__tdiv_to_l_@quot& (0+255),b
  4358  002F7C  0E00               	movlw	0
  4359  002F7E  6F84               	movwf	(__tdiv_to_l_@quot+1)& (0+255),b
  4360  002F80  0E00               	movlw	0
  4361  002F82  6F85               	movwf	(__tdiv_to_l_@quot+2)& (0+255),b
  4362  002F84  0E00               	movlw	0
  4363  002F86  6F86               	movwf	(__tdiv_to_l_@quot+3)& (0+255),b
  4364                           
  4365                           ; BSR set to: 0
  4366  002F88  0E7F               	movlw	127
  4367  002F8A  5F88               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
  4368                           
  4369                           ; BSR set to: 0
  4370  002F8C  5187               	movf	__tdiv_to_l_@cntr& (0+255),w,b
  4371  002F8E  0F98               	addlw	152
  4372  002F90  5F88               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
  4373                           
  4374                           ; BSR set to: 0
  4375  002F92  0E18               	movlw	24
  4376  002F94  6F87               	movwf	__tdiv_to_l_@cntr& (0+255),b
  4377  002F96                     l633:
  4378                           
  4379                           ; BSR set to: 0
  4380  002F96  90D8               	bcf	status,0,c
  4381  002F98  3783               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
  4382  002F9A  3784               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  4383  002F9C  3785               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  4384  002F9E  3786               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  4385                           
  4386                           ; BSR set to: 0
  4387  002FA0  517D               	movf	__tdiv_to_l_@f2& (0+255),w,b
  4388  002FA2  5D7A               	subwf	__tdiv_to_l_@f1& (0+255),w,b
  4389  002FA4  517E               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  4390  002FA6  597B               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),w,b
  4391  002FA8  517F               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
  4392  002FAA  597C               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),w,b
  4393  002FAC  A0D8               	btfss	status,0,c
  4394  002FAE  D007               	goto	l634
  4395                           
  4396                           ; BSR set to: 0
  4397  002FB0  517D               	movf	__tdiv_to_l_@f2& (0+255),w,b
  4398  002FB2  5F7A               	subwf	__tdiv_to_l_@f1& (0+255),f,b
  4399  002FB4  517E               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  4400  002FB6  5B7B               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),f,b
  4401  002FB8  517F               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
  4402  002FBA  5B7C               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),f,b
  4403                           
  4404                           ; BSR set to: 0
  4405  002FBC  8183               	bsf	__tdiv_to_l_@quot& (0+255),0,b
  4406  002FBE                     l634:
  4407                           
  4408                           ; BSR set to: 0
  4409  002FBE  90D8               	bcf	status,0,c
  4410  002FC0  377A               	rlcf	__tdiv_to_l_@f1& (0+255),f,b
  4411  002FC2  377B               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),f,b
  4412  002FC4  377C               	rlcf	(__tdiv_to_l_@f1+2)& (0+255),f,b
  4413                           
  4414                           ; BSR set to: 0
  4415  002FC6  2F87               	decfsz	__tdiv_to_l_@cntr& (0+255),f,b
  4416  002FC8  D7E6               	goto	l633
  4417                           
  4418                           ; BSR set to: 0
  4419  002FCA  AF88               	btfss	__tdiv_to_l_@exp1& (0+255),7,b
  4420  002FCC  D00D               	goto	l5842
  4421                           
  4422                           ; BSR set to: 0
  4423  002FCE  5188               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  4424  002FD0  0A80               	xorlw	128
  4425  002FD2  0F97               	addlw	151
  4426  002FD4  A0D8               	btfss	status,0,c
  4427  002FD6  D7AC               	goto	u7180
  4428  002FD8                     l5838:
  4429                           
  4430                           ; BSR set to: 0
  4431  002FD8  90D8               	bcf	status,0,c
  4432  002FDA  3386               	rrcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  4433  002FDC  3385               	rrcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  4434  002FDE  3384               	rrcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  4435  002FE0  3383               	rrcf	__tdiv_to_l_@quot& (0+255),f,b
  4436                           
  4437                           ; BSR set to: 0
  4438  002FE2  3F88               	incfsz	__tdiv_to_l_@exp1& (0+255),f,b
  4439  002FE4  D7F9               	goto	l5838
  4440  002FE6  D00D               	goto	u7250
  4441  002FE8                     l5842:
  4442                           
  4443                           ; BSR set to: 0
  4444  002FE8  0E17               	movlw	23
  4445  002FEA  6588               	cpfsgt	__tdiv_to_l_@exp1& (0+255),b
  4446  002FEC  D007               	goto	l5850
  4447  002FEE  D7A0               	goto	u7180
  4448  002FF0                     l5848:
  4449                           
  4450                           ; BSR set to: 0
  4451  002FF0  90D8               	bcf	status,0,c
  4452  002FF2  3783               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
  4453  002FF4  3784               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  4454  002FF6  3785               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  4455  002FF8  3786               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  4456  002FFA  0788               	decf	__tdiv_to_l_@exp1& (0+255),f,b
  4457  002FFC                     l5850:
  4458                           
  4459                           ; BSR set to: 0
  4460  002FFC  5188               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  4461  002FFE  A4D8               	btfss	status,2,c
  4462  003000  D7F7               	goto	l5848
  4463  003002                     u7250:
  4464                           
  4465                           ; BSR set to: 0
  4466  003002  C083  F07A         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
  4467  003006  C084  F07B         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
  4468  00300A  C085  F07C         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
  4469  00300E  C086  F07D         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
  4470                           
  4471                           ; BSR set to: 0
  4472  003012  0012               	return		;funcret
  4473  003014                     __end_of__tdiv_to_l_:
  4474                           	callstack 0
  4475                           
  4476 ;; *************** function __div_to_l_ *****************
  4477 ;; Defined at:
  4478 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\fldivl.c"
  4479 ;; Parameters:    Size  Location     Type
  4480 ;;  f1              3   26[BANK0 ] unsigned long 
  4481 ;;  f2              3   29[BANK0 ] unsigned long 
  4482 ;; Auto vars:     Size  Location     Type
  4483 ;;  quot            4   32[BANK0 ] unsigned long 
  4484 ;;  exp1            1   37[BANK0 ] unsigned char 
  4485 ;;  cntr            1   36[BANK0 ] unsigned char 
  4486 ;; Return value:  Size  Location     Type
  4487 ;;                  4   26[BANK0 ] unsigned long 
  4488 ;; Registers used:
  4489 ;;		wreg, status,2, status,0
  4490 ;; Tracked objects:
  4491 ;;		On entry : 0/0
  4492 ;;		On exit  : 3F/0
  4493 ;;		Unchanged: 0/0
  4494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4495 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4496 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4497 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4498 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4499 ;;Total ram usage:       12 bytes
  4500 ;; Hardware stack levels used: 1
  4501 ;; Hardware stack levels required when called: 5
  4502 ;; This function calls:
  4503 ;;		Nothing
  4504 ;; This function is called by:
  4505 ;;		_sprintf
  4506 ;; This function uses a non-reentrant model
  4507 ;;
  4508                           
  4509                           	psect	text11
  4510  003112                     __ptext11:
  4511                           	callstack 0
  4512  003112                     __div_to_l_:
  4513                           	callstack 24
  4514                           
  4515                           ; BSR set to: 0
  4516                           ;incstack = 0
  4517  003112  0100               	movlb	0	; () banked
  4518  003114  357C               	rlcf	(__div_to_l_@f1+2)& (0+255),w,b
  4519  003116  357D               	rlcf	(__div_to_l_@f1+3)& (0+255),w,b
  4520  003118  6F85               	movwf	__div_to_l_@exp1& (0+255),b
  4521  00311A  5185               	movf	__div_to_l_@exp1& (0+255),w,b
  4522  00311C  A4D8               	btfss	status,2,c
  4523  00311E  D009               	goto	l5858
  4524  003120                     u7260:
  4525                           
  4526                           ; BSR set to: 0
  4527  003120  0E00               	movlw	0
  4528  003122  6F7A               	movwf	?__div_to_l_& (0+255),b
  4529  003124  0E00               	movlw	0
  4530  003126  6F7B               	movwf	(?__div_to_l_+1)& (0+255),b
  4531  003128  0E00               	movlw	0
  4532  00312A  6F7C               	movwf	(?__div_to_l_+2)& (0+255),b
  4533  00312C  0E00               	movlw	0
  4534  00312E  6F7D               	movwf	(?__div_to_l_+3)& (0+255),b
  4535  003130  0012               	return	
  4536  003132                     l5858:
  4537                           
  4538                           ; BSR set to: 0
  4539  003132  357F               	rlcf	(__div_to_l_@f2+2)& (0+255),w,b
  4540  003134  3580               	rlcf	(__div_to_l_@f2+3)& (0+255),w,b
  4541  003136  6F84               	movwf	__div_to_l_@cntr& (0+255),b
  4542  003138  5184               	movf	__div_to_l_@cntr& (0+255),w,b
  4543  00313A  B4D8               	btfsc	status,2,c
  4544  00313C  D7F1               	goto	u7260
  4545                           
  4546                           ; BSR set to: 0
  4547  00313E  8F7C               	bsf	(__div_to_l_@f1+2)& (0+255),7,b
  4548                           
  4549                           ; BSR set to: 0
  4550  003140  0EFF               	movlw	255
  4551  003142  177A               	andwf	__div_to_l_@f1& (0+255),f,b
  4552  003144  0EFF               	movlw	255
  4553  003146  177B               	andwf	(__div_to_l_@f1+1)& (0+255),f,b
  4554  003148  0EFF               	movlw	255
  4555  00314A  177C               	andwf	(__div_to_l_@f1+2)& (0+255),f,b
  4556  00314C  0E00               	movlw	0
  4557  00314E  177D               	andwf	(__div_to_l_@f1+3)& (0+255),f,b
  4558                           
  4559                           ; BSR set to: 0
  4560  003150  8F7F               	bsf	(__div_to_l_@f2+2)& (0+255),7,b
  4561  003152  0EFF               	movlw	255
  4562  003154  177D               	andwf	__div_to_l_@f2& (0+255),f,b
  4563  003156  0EFF               	movlw	255
  4564  003158  177E               	andwf	(__div_to_l_@f2+1)& (0+255),f,b
  4565  00315A  0EFF               	movlw	255
  4566  00315C  177F               	andwf	(__div_to_l_@f2+2)& (0+255),f,b
  4567  00315E  0E00               	movlw	0
  4568  003160  1780               	andwf	(__div_to_l_@f2+3)& (0+255),f,b
  4569                           
  4570                           ; BSR set to: 0
  4571  003162  0E00               	movlw	0
  4572  003164  6F80               	movwf	__div_to_l_@quot& (0+255),b
  4573  003166  0E00               	movlw	0
  4574  003168  6F81               	movwf	(__div_to_l_@quot+1)& (0+255),b
  4575  00316A  0E00               	movlw	0
  4576  00316C  6F82               	movwf	(__div_to_l_@quot+2)& (0+255),b
  4577  00316E  0E00               	movlw	0
  4578  003170  6F83               	movwf	(__div_to_l_@quot+3)& (0+255),b
  4579                           
  4580                           ; BSR set to: 0
  4581  003172  0E7F               	movlw	127
  4582  003174  5F85               	subwf	__div_to_l_@exp1& (0+255),f,b
  4583                           
  4584                           ; BSR set to: 0
  4585  003176  5184               	movf	__div_to_l_@cntr& (0+255),w,b
  4586  003178  0FA0               	addlw	160
  4587  00317A  5F85               	subwf	__div_to_l_@exp1& (0+255),f,b
  4588                           
  4589                           ; BSR set to: 0
  4590  00317C  0E20               	movlw	32
  4591  00317E  6F84               	movwf	__div_to_l_@cntr& (0+255),b
  4592  003180                     l5878:
  4593                           
  4594                           ; BSR set to: 0
  4595  003180  90D8               	bcf	status,0,c
  4596  003182  3780               	rlcf	__div_to_l_@quot& (0+255),f,b
  4597  003184  3781               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
  4598  003186  3782               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
  4599  003188  3783               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
  4600                           
  4601                           ; BSR set to: 0
  4602  00318A  517D               	movf	__div_to_l_@f2& (0+255),w,b
  4603  00318C  5D7A               	subwf	__div_to_l_@f1& (0+255),w,b
  4604  00318E  517E               	movf	(__div_to_l_@f2+1)& (0+255),w,b
  4605  003190  597B               	subwfb	(__div_to_l_@f1+1)& (0+255),w,b
  4606  003192  517F               	movf	(__div_to_l_@f2+2)& (0+255),w,b
  4607  003194  597C               	subwfb	(__div_to_l_@f1+2)& (0+255),w,b
  4608  003196  5180               	movf	(__div_to_l_@f2+3)& (0+255),w,b
  4609  003198  597D               	subwfb	(__div_to_l_@f1+3)& (0+255),w,b
  4610  00319A  A0D8               	btfss	status,0,c
  4611  00319C  D009               	goto	l5886
  4612                           
  4613                           ; BSR set to: 0
  4614  00319E  517D               	movf	__div_to_l_@f2& (0+255),w,b
  4615  0031A0  5F7A               	subwf	__div_to_l_@f1& (0+255),f,b
  4616  0031A2  517E               	movf	(__div_to_l_@f2+1)& (0+255),w,b
  4617  0031A4  5B7B               	subwfb	(__div_to_l_@f1+1)& (0+255),f,b
  4618  0031A6  517F               	movf	(__div_to_l_@f2+2)& (0+255),w,b
  4619  0031A8  5B7C               	subwfb	(__div_to_l_@f1+2)& (0+255),f,b
  4620  0031AA  5180               	movf	(__div_to_l_@f2+3)& (0+255),w,b
  4621  0031AC  5B7D               	subwfb	(__div_to_l_@f1+3)& (0+255),f,b
  4622                           
  4623                           ; BSR set to: 0
  4624  0031AE  8180               	bsf	__div_to_l_@quot& (0+255),0,b
  4625  0031B0                     l5886:
  4626                           
  4627                           ; BSR set to: 0
  4628  0031B0  90D8               	bcf	status,0,c
  4629  0031B2  377A               	rlcf	__div_to_l_@f1& (0+255),f,b
  4630  0031B4  377B               	rlcf	(__div_to_l_@f1+1)& (0+255),f,b
  4631  0031B6  377C               	rlcf	(__div_to_l_@f1+2)& (0+255),f,b
  4632  0031B8  377D               	rlcf	(__div_to_l_@f1+3)& (0+255),f,b
  4633                           
  4634                           ; BSR set to: 0
  4635  0031BA  2F84               	decfsz	__div_to_l_@cntr& (0+255),f,b
  4636  0031BC  D7E1               	goto	l5878
  4637                           
  4638                           ; BSR set to: 0
  4639  0031BE  AF85               	btfss	__div_to_l_@exp1& (0+255),7,b
  4640  0031C0  D00D               	goto	l5902
  4641                           
  4642                           ; BSR set to: 0
  4643  0031C2  5185               	movf	__div_to_l_@exp1& (0+255),w,b
  4644  0031C4  0A80               	xorlw	128
  4645  0031C6  0F9F               	addlw	159
  4646  0031C8  A0D8               	btfss	status,0,c
  4647  0031CA  D7AA               	goto	u7260
  4648  0031CC                     l5898:
  4649                           
  4650                           ; BSR set to: 0
  4651  0031CC  90D8               	bcf	status,0,c
  4652  0031CE  3383               	rrcf	(__div_to_l_@quot+3)& (0+255),f,b
  4653  0031D0  3382               	rrcf	(__div_to_l_@quot+2)& (0+255),f,b
  4654  0031D2  3381               	rrcf	(__div_to_l_@quot+1)& (0+255),f,b
  4655  0031D4  3380               	rrcf	__div_to_l_@quot& (0+255),f,b
  4656                           
  4657                           ; BSR set to: 0
  4658  0031D6  3F85               	incfsz	__div_to_l_@exp1& (0+255),f,b
  4659  0031D8  D7F9               	goto	l5898
  4660  0031DA  D00D               	goto	u7320
  4661  0031DC                     l5902:
  4662                           
  4663                           ; BSR set to: 0
  4664  0031DC  0E1F               	movlw	31
  4665  0031DE  6585               	cpfsgt	__div_to_l_@exp1& (0+255),b
  4666  0031E0  D007               	goto	l5910
  4667  0031E2  D79E               	goto	u7260
  4668  0031E4                     l5908:
  4669                           
  4670                           ; BSR set to: 0
  4671  0031E4  90D8               	bcf	status,0,c
  4672  0031E6  3780               	rlcf	__div_to_l_@quot& (0+255),f,b
  4673  0031E8  3781               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
  4674  0031EA  3782               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
  4675  0031EC  3783               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
  4676  0031EE  0785               	decf	__div_to_l_@exp1& (0+255),f,b
  4677  0031F0                     l5910:
  4678                           
  4679                           ; BSR set to: 0
  4680  0031F0  5185               	movf	__div_to_l_@exp1& (0+255),w,b
  4681  0031F2  A4D8               	btfss	status,2,c
  4682  0031F4  D7F7               	goto	l5908
  4683  0031F6                     u7320:
  4684                           
  4685                           ; BSR set to: 0
  4686  0031F6  C080  F07A         	movff	__div_to_l_@quot,?__div_to_l_
  4687  0031FA  C081  F07B         	movff	__div_to_l_@quot+1,?__div_to_l_+1
  4688  0031FE  C082  F07C         	movff	__div_to_l_@quot+2,?__div_to_l_+2
  4689  003202  C083  F07D         	movff	__div_to_l_@quot+3,?__div_to_l_+3
  4690                           
  4691                           ; BSR set to: 0
  4692  003206  0012               	return		;funcret
  4693  003208                     __end_of__div_to_l_:
  4694                           	callstack 0
  4695                           
  4696 ;; *************** function ___wmul *****************
  4697 ;; Defined at:
  4698 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\Umul16.c"
  4699 ;; Parameters:    Size  Location     Type
  4700 ;;  multiplier      2   26[BANK0 ] unsigned int 
  4701 ;;  multiplicand    2   28[BANK0 ] unsigned int 
  4702 ;; Auto vars:     Size  Location     Type
  4703 ;;  product         2   30[BANK0 ] unsigned int 
  4704 ;; Return value:  Size  Location     Type
  4705 ;;                  2   26[BANK0 ] unsigned int 
  4706 ;; Registers used:
  4707 ;;		wreg, status,2, status,0, prodl, prodh
  4708 ;; Tracked objects:
  4709 ;;		On entry : 3F/0
  4710 ;;		On exit  : 3F/0
  4711 ;;		Unchanged: 0/0
  4712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4713 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4714 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4715 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4716 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4717 ;;Total ram usage:        6 bytes
  4718 ;; Hardware stack levels used: 1
  4719 ;; Hardware stack levels required when called: 5
  4720 ;; This function calls:
  4721 ;;		Nothing
  4722 ;; This function is called by:
  4723 ;;		_sprintf
  4724 ;; This function uses a non-reentrant model
  4725 ;;
  4726                           
  4727                           	psect	text12
  4728  0043FA                     __ptext12:
  4729                           	callstack 0
  4730  0043FA                     ___wmul:
  4731                           	callstack 24
  4732                           
  4733                           ; BSR set to: 0
  4734                           
  4735                           ; BSR set to: 0
  4736                           ;incstack = 0
  4737  0043FA  517A               	movf	___wmul@multiplier& (0+255),w,b
  4738  0043FC  037C               	mulwf	___wmul@multiplicand& (0+255),b
  4739  0043FE  CFF3 F07E          	movff	prodl,___wmul@product
  4740  004402  CFF4 F07F          	movff	prodh,___wmul@product+1
  4741  004406  517A               	movf	___wmul@multiplier& (0+255),w,b
  4742  004408  037D               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  4743  00440A  50F3               	movf	243,w,c
  4744  00440C  277F               	addwf	(___wmul@product+1)& (0+255),f,b
  4745  00440E  517B               	movf	(___wmul@multiplier+1)& (0+255),w,b
  4746  004410  037C               	mulwf	___wmul@multiplicand& (0+255),b
  4747  004412  50F3               	movf	243,w,c
  4748  004414  277F               	addwf	(___wmul@product+1)& (0+255),f,b
  4749                           
  4750                           ; BSR set to: 0
  4751  004416  C07E  F07A         	movff	___wmul@product,?___wmul
  4752  00441A  C07F  F07B         	movff	___wmul@product+1,?___wmul+1
  4753                           
  4754                           ; BSR set to: 0
  4755  00441E  0012               	return		;funcret
  4756  004420                     __end_of___wmul:
  4757                           	callstack 0
  4758                           
  4759 ;; *************** function ___lltoft *****************
  4760 ;; Defined at:
  4761 ;;		line 35 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\lltoft.c"
  4762 ;; Parameters:    Size  Location     Type
  4763 ;;  c               4   34[BANK0 ] unsigned long 
  4764 ;; Auto vars:     Size  Location     Type
  4765 ;;  exp             1   42[BANK0 ] unsigned char 
  4766 ;; Return value:  Size  Location     Type
  4767 ;;                  3   34[BANK0 ] float 
  4768 ;; Registers used:
  4769 ;;		wreg, status,2, status,0, cstack
  4770 ;; Tracked objects:
  4771 ;;		On entry : 3F/0
  4772 ;;		On exit  : 3F/0
  4773 ;;		Unchanged: 0/0
  4774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4775 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4776 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4777 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4778 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4779 ;;Total ram usage:        9 bytes
  4780 ;; Hardware stack levels used: 1
  4781 ;; Hardware stack levels required when called: 6
  4782 ;; This function calls:
  4783 ;;		___ftpack
  4784 ;; This function is called by:
  4785 ;;		_sprintf
  4786 ;; This function uses a non-reentrant model
  4787 ;;
  4788                           
  4789                           	psect	text13
  4790  00407E                     __ptext13:
  4791                           	callstack 0
  4792  00407E                     ___lltoft:
  4793                           	callstack 23
  4794                           
  4795                           ; BSR set to: 0
  4796                           
  4797                           ; BSR set to: 0
  4798                           ;incstack = 0
  4799  00407E  0E8E               	movlw	142
  4800  004080  6F8A               	movwf	___lltoft@exp& (0+255),b
  4801  004082  D006               	goto	l6082
  4802  004084                     l6080:
  4803                           
  4804                           ; BSR set to: 0
  4805  004084  90D8               	bcf	status,0,c
  4806  004086  3385               	rrcf	(___lltoft@c+3)& (0+255),f,b
  4807  004088  3384               	rrcf	(___lltoft@c+2)& (0+255),f,b
  4808  00408A  3383               	rrcf	(___lltoft@c+1)& (0+255),f,b
  4809  00408C  3382               	rrcf	___lltoft@c& (0+255),f,b
  4810  00408E  2B8A               	incf	___lltoft@exp& (0+255),f,b
  4811  004090                     l6082:
  4812                           
  4813                           ; BSR set to: 0
  4814  004090  0E00               	movlw	0
  4815  004092  1582               	andwf	___lltoft@c& (0+255),w,b
  4816  004094  6F86               	movwf	??___lltoft& (0+255),b
  4817  004096  0E00               	movlw	0
  4818  004098  1583               	andwf	(___lltoft@c+1)& (0+255),w,b
  4819  00409A  6F87               	movwf	(??___lltoft+1)& (0+255),b
  4820  00409C  0E00               	movlw	0
  4821  00409E  1584               	andwf	(___lltoft@c+2)& (0+255),w,b
  4822  0040A0  6F88               	movwf	(??___lltoft+2)& (0+255),b
  4823  0040A2  0EFF               	movlw	255
  4824  0040A4  1585               	andwf	(___lltoft@c+3)& (0+255),w,b
  4825  0040A6  6F89               	movwf	(??___lltoft+3)& (0+255),b
  4826  0040A8  5186               	movf	??___lltoft& (0+255),w,b
  4827  0040AA  1187               	iorwf	(??___lltoft+1)& (0+255),w,b
  4828  0040AC  1188               	iorwf	(??___lltoft+2)& (0+255),w,b
  4829  0040AE  1189               	iorwf	(??___lltoft+3)& (0+255),w,b
  4830  0040B0  A4D8               	btfss	status,2,c
  4831  0040B2  D7E8               	goto	l6080
  4832                           
  4833                           ; BSR set to: 0
  4834  0040B4  C082  F07A         	movff	___lltoft@c,___ftpack@arg
  4835  0040B8  C083  F07B         	movff	___lltoft@c+1,___ftpack@arg+1
  4836  0040BC  C084  F07C         	movff	___lltoft@c+2,___ftpack@arg+2
  4837  0040C0  C08A  F07D         	movff	___lltoft@exp,___ftpack@exp
  4838  0040C4  0E00               	movlw	0
  4839  0040C6  6F7E               	movwf	___ftpack@sign& (0+255),b
  4840  0040C8  EC25  F01C         	call	___ftpack	;wreg free
  4841  0040CC  C07A  F082         	movff	?___ftpack,?___lltoft
  4842  0040D0  C07B  F083         	movff	?___ftpack+1,?___lltoft+1
  4843  0040D4  C07C  F084         	movff	?___ftpack+2,?___lltoft+2
  4844                           
  4845                           ; BSR set to: 0
  4846  0040D8  0012               	return		;funcret
  4847  0040DA                     __end_of___lltoft:
  4848                           	callstack 0
  4849                           
  4850 ;; *************** function ___llmod *****************
  4851 ;; Defined at:
  4852 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\llmod.c"
  4853 ;; Parameters:    Size  Location     Type
  4854 ;;  dividend        4   39[BANK0 ] unsigned long 
  4855 ;;  divisor         4   43[BANK0 ] unsigned long 
  4856 ;; Auto vars:     Size  Location     Type
  4857 ;;  counter         1   47[BANK0 ] unsigned char 
  4858 ;; Return value:  Size  Location     Type
  4859 ;;                  4   39[BANK0 ] unsigned long 
  4860 ;; Registers used:
  4861 ;;		wreg, status,2, status,0
  4862 ;; Tracked objects:
  4863 ;;		On entry : 3E/0
  4864 ;;		On exit  : 3F/0
  4865 ;;		Unchanged: 0/0
  4866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4867 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4868 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4869 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4870 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4871 ;;Total ram usage:        9 bytes
  4872 ;; Hardware stack levels used: 1
  4873 ;; Hardware stack levels required when called: 5
  4874 ;; This function calls:
  4875 ;;		Nothing
  4876 ;; This function is called by:
  4877 ;;		_sprintf
  4878 ;; This function uses a non-reentrant model
  4879 ;;
  4880                           
  4881                           	psect	text14
  4882  003FB0                     __ptext14:
  4883                           	callstack 0
  4884  003FB0                     ___llmod:
  4885                           	callstack 24
  4886                           
  4887                           ; BSR set to: 0
  4888                           ;incstack = 0
  4889  003FB0  0100               	movlb	0	; () banked
  4890  003FB2  518B               	movf	___llmod@divisor& (0+255),w,b
  4891  003FB4  118C               	iorwf	(___llmod@divisor+1)& (0+255),w,b
  4892  003FB6  118D               	iorwf	(___llmod@divisor+2)& (0+255),w,b
  4893  003FB8  118E               	iorwf	(___llmod@divisor+3)& (0+255),w,b
  4894  003FBA  B4D8               	btfsc	status,2,c
  4895  003FBC  D024               	goto	l710
  4896                           
  4897                           ; BSR set to: 0
  4898  003FBE  0E01               	movlw	1
  4899  003FC0  6F8F               	movwf	___llmod@counter& (0+255),b
  4900  003FC2  D006               	goto	l6068
  4901  003FC4                     l6066:
  4902                           
  4903                           ; BSR set to: 0
  4904  003FC4  90D8               	bcf	status,0,c
  4905  003FC6  378B               	rlcf	___llmod@divisor& (0+255),f,b
  4906  003FC8  378C               	rlcf	(___llmod@divisor+1)& (0+255),f,b
  4907  003FCA  378D               	rlcf	(___llmod@divisor+2)& (0+255),f,b
  4908  003FCC  378E               	rlcf	(___llmod@divisor+3)& (0+255),f,b
  4909  003FCE  2B8F               	incf	___llmod@counter& (0+255),f,b
  4910  003FD0                     l6068:
  4911                           
  4912                           ; BSR set to: 0
  4913  003FD0  AF8E               	btfss	(___llmod@divisor+3)& (0+255),7,b
  4914  003FD2  D7F8               	goto	l6066
  4915  003FD4                     u7550:
  4916                           
  4917                           ; BSR set to: 0
  4918  003FD4  518B               	movf	___llmod@divisor& (0+255),w,b
  4919  003FD6  5D87               	subwf	___llmod@dividend& (0+255),w,b
  4920  003FD8  518C               	movf	(___llmod@divisor+1)& (0+255),w,b
  4921  003FDA  5988               	subwfb	(___llmod@dividend+1)& (0+255),w,b
  4922  003FDC  518D               	movf	(___llmod@divisor+2)& (0+255),w,b
  4923  003FDE  5989               	subwfb	(___llmod@dividend+2)& (0+255),w,b
  4924  003FE0  518E               	movf	(___llmod@divisor+3)& (0+255),w,b
  4925  003FE2  598A               	subwfb	(___llmod@dividend+3)& (0+255),w,b
  4926  003FE4  A0D8               	btfss	status,0,c
  4927  003FE6  D008               	goto	l6074
  4928                           
  4929                           ; BSR set to: 0
  4930  003FE8  518B               	movf	___llmod@divisor& (0+255),w,b
  4931  003FEA  5F87               	subwf	___llmod@dividend& (0+255),f,b
  4932  003FEC  518C               	movf	(___llmod@divisor+1)& (0+255),w,b
  4933  003FEE  5B88               	subwfb	(___llmod@dividend+1)& (0+255),f,b
  4934  003FF0  518D               	movf	(___llmod@divisor+2)& (0+255),w,b
  4935  003FF2  5B89               	subwfb	(___llmod@dividend+2)& (0+255),f,b
  4936  003FF4  518E               	movf	(___llmod@divisor+3)& (0+255),w,b
  4937  003FF6  5B8A               	subwfb	(___llmod@dividend+3)& (0+255),f,b
  4938  003FF8                     l6074:
  4939                           
  4940                           ; BSR set to: 0
  4941  003FF8  90D8               	bcf	status,0,c
  4942  003FFA  338E               	rrcf	(___llmod@divisor+3)& (0+255),f,b
  4943  003FFC  338D               	rrcf	(___llmod@divisor+2)& (0+255),f,b
  4944  003FFE  338C               	rrcf	(___llmod@divisor+1)& (0+255),f,b
  4945  004000  338B               	rrcf	___llmod@divisor& (0+255),f,b
  4946                           
  4947                           ; BSR set to: 0
  4948  004002  2F8F               	decfsz	___llmod@counter& (0+255),f,b
  4949  004004  D7E7               	goto	u7550
  4950  004006                     l710:
  4951                           
  4952                           ; BSR set to: 0
  4953  004006  C087  F087         	movff	___llmod@dividend,?___llmod
  4954  00400A  C088  F088         	movff	___llmod@dividend+1,?___llmod+1
  4955  00400E  C089  F089         	movff	___llmod@dividend+2,?___llmod+2
  4956  004012  C08A  F08A         	movff	___llmod@dividend+3,?___llmod+3
  4957                           
  4958                           ; BSR set to: 0
  4959  004016  0012               	return		;funcret
  4960  004018                     __end_of___llmod:
  4961                           	callstack 0
  4962                           
  4963 ;; *************** function ___lldiv *****************
  4964 ;; Defined at:
  4965 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\__lldiv.c"
  4966 ;; Parameters:    Size  Location     Type
  4967 ;;  dividend        4   26[BANK0 ] unsigned long 
  4968 ;;  divisor         4   30[BANK0 ] unsigned long 
  4969 ;; Auto vars:     Size  Location     Type
  4970 ;;  quotient        4   34[BANK0 ] unsigned long 
  4971 ;;  counter         1   38[BANK0 ] unsigned char 
  4972 ;; Return value:  Size  Location     Type
  4973 ;;                  4   26[BANK0 ] unsigned long 
  4974 ;; Registers used:
  4975 ;;		wreg, status,2, status,0
  4976 ;; Tracked objects:
  4977 ;;		On entry : 3F/1
  4978 ;;		On exit  : 3F/0
  4979 ;;		Unchanged: 0/0
  4980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4981 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4982 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4983 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4984 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4985 ;;Total ram usage:       13 bytes
  4986 ;; Hardware stack levels used: 1
  4987 ;; Hardware stack levels required when called: 5
  4988 ;; This function calls:
  4989 ;;		Nothing
  4990 ;; This function is called by:
  4991 ;;		_sprintf
  4992 ;; This function uses a non-reentrant model
  4993 ;;
  4994                           
  4995                           	psect	text15
  4996  003B7A                     __ptext15:
  4997                           	callstack 0
  4998  003B7A                     ___lldiv:
  4999                           	callstack 24
  5000                           
  5001                           ; BSR set to: 1
  5002                           
  5003                           ; BSR set to: 0
  5004                           ;incstack = 0
  5005  003B7A  0E00               	movlw	0
  5006  003B7C  0100               	movlb	0	; () banked
  5007  003B7E  6F82               	movwf	___lldiv@quotient& (0+255),b
  5008  003B80  0E00               	movlw	0
  5009  003B82  6F83               	movwf	(___lldiv@quotient+1)& (0+255),b
  5010  003B84  0E00               	movlw	0
  5011  003B86  6F84               	movwf	(___lldiv@quotient+2)& (0+255),b
  5012  003B88  0E00               	movlw	0
  5013  003B8A  6F85               	movwf	(___lldiv@quotient+3)& (0+255),b
  5014                           
  5015                           ; BSR set to: 0
  5016  003B8C  517E               	movf	___lldiv@divisor& (0+255),w,b
  5017  003B8E  117F               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
  5018  003B90  1180               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
  5019  003B92  1181               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
  5020  003B94  B4D8               	btfsc	status,2,c
  5021  003B96  D02A               	goto	l295
  5022                           
  5023                           ; BSR set to: 0
  5024  003B98  0E01               	movlw	1
  5025  003B9A  6F86               	movwf	___lldiv@counter& (0+255),b
  5026  003B9C  D006               	goto	l5926
  5027  003B9E                     l5924:
  5028                           
  5029                           ; BSR set to: 0
  5030  003B9E  90D8               	bcf	status,0,c
  5031  003BA0  377E               	rlcf	___lldiv@divisor& (0+255),f,b
  5032  003BA2  377F               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
  5033  003BA4  3780               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
  5034  003BA6  3781               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
  5035  003BA8  2B86               	incf	___lldiv@counter& (0+255),f,b
  5036  003BAA                     l5926:
  5037                           
  5038                           ; BSR set to: 0
  5039  003BAA  AF81               	btfss	(___lldiv@divisor+3)& (0+255),7,b
  5040  003BAC  D7F8               	goto	l5924
  5041  003BAE                     u7340:
  5042                           
  5043                           ; BSR set to: 0
  5044  003BAE  90D8               	bcf	status,0,c
  5045  003BB0  3782               	rlcf	___lldiv@quotient& (0+255),f,b
  5046  003BB2  3783               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
  5047  003BB4  3784               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
  5048  003BB6  3785               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
  5049                           
  5050                           ; BSR set to: 0
  5051  003BB8  517E               	movf	___lldiv@divisor& (0+255),w,b
  5052  003BBA  5D7A               	subwf	___lldiv@dividend& (0+255),w,b
  5053  003BBC  517F               	movf	(___lldiv@divisor+1)& (0+255),w,b
  5054  003BBE  597B               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
  5055  003BC0  5180               	movf	(___lldiv@divisor+2)& (0+255),w,b
  5056  003BC2  597C               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
  5057  003BC4  5181               	movf	(___lldiv@divisor+3)& (0+255),w,b
  5058  003BC6  597D               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
  5059  003BC8  A0D8               	btfss	status,0,c
  5060  003BCA  D009               	goto	l5936
  5061                           
  5062                           ; BSR set to: 0
  5063  003BCC  517E               	movf	___lldiv@divisor& (0+255),w,b
  5064  003BCE  5F7A               	subwf	___lldiv@dividend& (0+255),f,b
  5065  003BD0  517F               	movf	(___lldiv@divisor+1)& (0+255),w,b
  5066  003BD2  5B7B               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
  5067  003BD4  5180               	movf	(___lldiv@divisor+2)& (0+255),w,b
  5068  003BD6  5B7C               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
  5069  003BD8  5181               	movf	(___lldiv@divisor+3)& (0+255),w,b
  5070  003BDA  5B7D               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
  5071                           
  5072                           ; BSR set to: 0
  5073  003BDC  8182               	bsf	___lldiv@quotient& (0+255),0,b
  5074  003BDE                     l5936:
  5075                           
  5076                           ; BSR set to: 0
  5077  003BDE  90D8               	bcf	status,0,c
  5078  003BE0  3381               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
  5079  003BE2  3380               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
  5080  003BE4  337F               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
  5081  003BE6  337E               	rrcf	___lldiv@divisor& (0+255),f,b
  5082                           
  5083                           ; BSR set to: 0
  5084  003BE8  2F86               	decfsz	___lldiv@counter& (0+255),f,b
  5085  003BEA  D7E1               	goto	u7340
  5086  003BEC                     l295:
  5087                           
  5088                           ; BSR set to: 0
  5089  003BEC  C082  F07A         	movff	___lldiv@quotient,?___lldiv
  5090  003BF0  C083  F07B         	movff	___lldiv@quotient+1,?___lldiv+1
  5091  003BF4  C084  F07C         	movff	___lldiv@quotient+2,?___lldiv+2
  5092  003BF8  C085  F07D         	movff	___lldiv@quotient+3,?___lldiv+3
  5093                           
  5094                           ; BSR set to: 0
  5095  003BFC  0012               	return		;funcret
  5096  003BFE                     __end_of___lldiv:
  5097                           	callstack 0
  5098                           
  5099 ;; *************** function ___ftneg *****************
  5100 ;; Defined at:
  5101 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\ftneg.c"
  5102 ;; Parameters:    Size  Location     Type
  5103 ;;  f1              3   26[BANK0 ] float 
  5104 ;; Auto vars:     Size  Location     Type
  5105 ;;		None
  5106 ;; Return value:  Size  Location     Type
  5107 ;;                  3   26[BANK0 ] float 
  5108 ;; Registers used:
  5109 ;;		wreg, status,2, status,0
  5110 ;; Tracked objects:
  5111 ;;		On entry : 3F/1
  5112 ;;		On exit  : 3F/0
  5113 ;;		Unchanged: 0/0
  5114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5115 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5116 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5117 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5118 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5119 ;;Total ram usage:        3 bytes
  5120 ;; Hardware stack levels used: 1
  5121 ;; Hardware stack levels required when called: 5
  5122 ;; This function calls:
  5123 ;;		Nothing
  5124 ;; This function is called by:
  5125 ;;		_sprintf
  5126 ;; This function uses a non-reentrant model
  5127 ;;
  5128                           
  5129                           	psect	text16
  5130  004420                     __ptext16:
  5131                           	callstack 0
  5132  004420                     ___ftneg:
  5133                           	callstack 24
  5134                           
  5135                           ; BSR set to: 1
  5136                           
  5137                           ; BSR set to: 0
  5138                           ;incstack = 0
  5139  004420  0100               	movlb	0	; () banked
  5140  004422  517A               	movf	___ftneg@f1& (0+255),w,b
  5141  004424  117B               	iorwf	(___ftneg@f1+1)& (0+255),w,b
  5142  004426  117C               	iorwf	(___ftneg@f1+2)& (0+255),w,b
  5143  004428  B4D8               	btfsc	status,2,c
  5144  00442A  D006               	goto	l665
  5145                           
  5146                           ; BSR set to: 0
  5147  00442C  0E00               	movlw	0
  5148  00442E  1B7A               	xorwf	___ftneg@f1& (0+255),f,b
  5149  004430  0E00               	movlw	0
  5150  004432  1B7B               	xorwf	(___ftneg@f1+1)& (0+255),f,b
  5151  004434  0E80               	movlw	128
  5152  004436  1B7C               	xorwf	(___ftneg@f1+2)& (0+255),f,b
  5153  004438                     l665:
  5154                           
  5155                           ; BSR set to: 0
  5156  004438  C07A  F07A         	movff	___ftneg@f1,?___ftneg
  5157  00443C  C07B  F07B         	movff	___ftneg@f1+1,?___ftneg+1
  5158  004440  C07C  F07C         	movff	___ftneg@f1+2,?___ftneg+2
  5159                           
  5160                           ; BSR set to: 0
  5161  004444  0012               	return		;funcret
  5162  004446                     __end_of___ftneg:
  5163                           	callstack 0
  5164                           
  5165 ;; *************** function ___ftge *****************
  5166 ;; Defined at:
  5167 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\ftge.c"
  5168 ;; Parameters:    Size  Location     Type
  5169 ;;  ff1             3   26[BANK0 ] float 
  5170 ;;  ff2             3   29[BANK0 ] float 
  5171 ;; Auto vars:     Size  Location     Type
  5172 ;;		None
  5173 ;; Return value:  Size  Location     Type
  5174 ;;		None               void
  5175 ;; Registers used:
  5176 ;;		wreg, status,2, status,0
  5177 ;; Tracked objects:
  5178 ;;		On entry : 3F/0
  5179 ;;		On exit  : 3F/0
  5180 ;;		Unchanged: 0/0
  5181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5182 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5183 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5184 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5185 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5186 ;;Total ram usage:        9 bytes
  5187 ;; Hardware stack levels used: 1
  5188 ;; Hardware stack levels required when called: 5
  5189 ;; This function calls:
  5190 ;;		Nothing
  5191 ;; This function is called by:
  5192 ;;		_sprintf
  5193 ;; This function uses a non-reentrant model
  5194 ;;
  5195                           
  5196                           	psect	text17
  5197  003D7A                     __ptext17:
  5198                           	callstack 0
  5199  003D7A                     ___ftge:
  5200                           	callstack 24
  5201                           
  5202                           ; BSR set to: 0
  5203                           
  5204                           ; BSR set to: 0
  5205                           ;incstack = 0
  5206  003D7A  AF7C               	btfss	(___ftge@ff1+2)& (0+255),7,b
  5207  003D7C  D00F               	goto	l5998
  5208                           
  5209                           ; BSR set to: 0
  5210  003D7E  0E00               	movlw	0
  5211  003D80  6F80               	movwf	??___ftge& (0+255),b
  5212  003D82  0E00               	movlw	0
  5213  003D84  6F81               	movwf	(??___ftge+1)& (0+255),b
  5214  003D86  0E80               	movlw	128
  5215  003D88  6F82               	movwf	(??___ftge+2)& (0+255),b
  5216  003D8A  517A               	movf	___ftge@ff1& (0+255),w,b
  5217  003D8C  5D80               	subwf	??___ftge& (0+255),w,b
  5218  003D8E  6F7A               	movwf	___ftge@ff1& (0+255),b
  5219  003D90  517B               	movf	(___ftge@ff1+1)& (0+255),w,b
  5220  003D92  5981               	subwfb	(??___ftge+1)& (0+255),w,b
  5221  003D94  6F7B               	movwf	(___ftge@ff1+1)& (0+255),b
  5222  003D96  517C               	movf	(___ftge@ff1+2)& (0+255),w,b
  5223  003D98  5982               	subwfb	(??___ftge+2)& (0+255),w,b
  5224  003D9A  6F7C               	movwf	(___ftge@ff1+2)& (0+255),b
  5225  003D9C                     l5998:
  5226                           
  5227                           ; BSR set to: 0
  5228  003D9C  AF7F               	btfss	(___ftge@ff2+2)& (0+255),7,b
  5229  003D9E  D00F               	goto	l6002
  5230                           
  5231                           ; BSR set to: 0
  5232  003DA0  0E00               	movlw	0
  5233  003DA2  6F80               	movwf	??___ftge& (0+255),b
  5234  003DA4  0E00               	movlw	0
  5235  003DA6  6F81               	movwf	(??___ftge+1)& (0+255),b
  5236  003DA8  0E80               	movlw	128
  5237  003DAA  6F82               	movwf	(??___ftge+2)& (0+255),b
  5238  003DAC  517D               	movf	___ftge@ff2& (0+255),w,b
  5239  003DAE  5D80               	subwf	??___ftge& (0+255),w,b
  5240  003DB0  6F7D               	movwf	___ftge@ff2& (0+255),b
  5241  003DB2  517E               	movf	(___ftge@ff2+1)& (0+255),w,b
  5242  003DB4  5981               	subwfb	(??___ftge+1)& (0+255),w,b
  5243  003DB6  6F7E               	movwf	(___ftge@ff2+1)& (0+255),b
  5244  003DB8  517F               	movf	(___ftge@ff2+2)& (0+255),w,b
  5245  003DBA  5982               	subwfb	(??___ftge+2)& (0+255),w,b
  5246  003DBC  6F7F               	movwf	(___ftge@ff2+2)& (0+255),b
  5247  003DBE                     l6002:
  5248                           
  5249                           ; BSR set to: 0
  5250  003DBE  0E00               	movlw	0
  5251  003DC0  1B7A               	xorwf	___ftge@ff1& (0+255),f,b
  5252  003DC2  0E00               	movlw	0
  5253  003DC4  1B7B               	xorwf	(___ftge@ff1+1)& (0+255),f,b
  5254  003DC6  0E80               	movlw	128
  5255  003DC8  1B7C               	xorwf	(___ftge@ff1+2)& (0+255),f,b
  5256                           
  5257                           ; BSR set to: 0
  5258  003DCA  0E00               	movlw	0
  5259  003DCC  1B7D               	xorwf	___ftge@ff2& (0+255),f,b
  5260  003DCE  0E00               	movlw	0
  5261  003DD0  1B7E               	xorwf	(___ftge@ff2+1)& (0+255),f,b
  5262  003DD2  0E80               	movlw	128
  5263  003DD4  1B7F               	xorwf	(___ftge@ff2+2)& (0+255),f,b
  5264  003DD6  517D               	movf	___ftge@ff2& (0+255),w,b
  5265  003DD8  5D7A               	subwf	___ftge@ff1& (0+255),w,b
  5266  003DDA  517E               	movf	(___ftge@ff2+1)& (0+255),w,b
  5267  003DDC  597B               	subwfb	(___ftge@ff1+1)& (0+255),w,b
  5268  003DDE  517F               	movf	(___ftge@ff2+2)& (0+255),w,b
  5269  003DE0  597C               	subwfb	(___ftge@ff1+2)& (0+255),w,b
  5270  003DE2  B0D8               	btfsc	status,0,c
  5271  003DE4  D002               	goto	l6008
  5272                           
  5273                           ; BSR set to: 0
  5274  003DE6  90D8               	bcf	status,0,c
  5275  003DE8  0012               	return	
  5276  003DEA                     l6008:
  5277                           
  5278                           ; BSR set to: 0
  5279  003DEA  80D8               	bsf	status,0,c
  5280                           
  5281                           ; BSR set to: 0
  5282  003DEC  0012               	return		;funcret
  5283  003DEE                     __end_of___ftge:
  5284                           	callstack 0
  5285                           
  5286 ;; *************** function _settings *****************
  5287 ;; Defined at:
  5288 ;;		line 67 in file "PruevaServosPic.c"
  5289 ;; Parameters:    Size  Location     Type
  5290 ;;		None
  5291 ;; Auto vars:     Size  Location     Type
  5292 ;;		None
  5293 ;; Return value:  Size  Location     Type
  5294 ;;                  1    wreg      void 
  5295 ;; Registers used:
  5296 ;;		wreg, status,2, status,0, cstack
  5297 ;; Tracked objects:
  5298 ;;		On entry : 0/0
  5299 ;;		On exit  : 0/0
  5300 ;;		Unchanged: 0/0
  5301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5302 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5303 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5304 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5305 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5306 ;;Total ram usage:        0 bytes
  5307 ;; Hardware stack levels used: 1
  5308 ;; Hardware stack levels required when called: 7
  5309 ;; This function calls:
  5310 ;;		_SettingsLCD
  5311 ;; This function is called by:
  5312 ;;		_main
  5313 ;; This function uses a non-reentrant model
  5314 ;;
  5315                           
  5316                           	psect	text18
  5317  003F42                     __ptext18:
  5318                           	callstack 0
  5319  003F42                     _settings:
  5320                           	callstack 23
  5321                           
  5322                           ;PruevaServosPic.c: 68: OSCCON = 0x72;
  5323                           
  5324                           ; BSR set to: 0
  5325                           ;incstack = 0
  5326  003F42  0E72               	movlw	114
  5327  003F44  6ED3               	movwf	211,c	;volatile
  5328                           
  5329                           ;PruevaServosPic.c: 69: ANSELD = 0x00;
  5330  003F46  0E00               	movlw	0
  5331  003F48  010F               	movlb	15	; () banked
  5332  003F4A  6F3B               	movwf	59,b	;volatile
  5333                           
  5334                           ;PruevaServosPic.c: 70: ANSELE = 0x00;
  5335  003F4C  0E00               	movlw	0
  5336  003F4E  6F3C               	movwf	60,b	;volatile
  5337                           
  5338                           ;PruevaServosPic.c: 71: ANSELC = 0x00;
  5339  003F50  0E00               	movlw	0
  5340  003F52  6F3A               	movwf	58,b	;volatile
  5341                           
  5342                           ;PruevaServosPic.c: 73: TRISD = 0;
  5343  003F54  0E00               	movlw	0
  5344  003F56  6E95               	movwf	149,c	;volatile
  5345                           
  5346                           ;PruevaServosPic.c: 74: TRISE = 0;
  5347  003F58  0E00               	movlw	0
  5348  003F5A  6E96               	movwf	150,c	;volatile
  5349                           
  5350                           ;PruevaServosPic.c: 75: LATD = 0;
  5351  003F5C  0E00               	movlw	0
  5352  003F5E  6E8C               	movwf	140,c	;volatile
  5353                           
  5354                           ;PruevaServosPic.c: 76: LATE = 0;
  5355  003F60  0E00               	movlw	0
  5356  003F62  6E8D               	movwf	141,c	;volatile
  5357                           
  5358                           ; BSR set to: 15
  5359                           ;PruevaServosPic.c: 78: SettingsLCD(0x02);
  5360  003F64  0E02               	movlw	2
  5361  003F66  EC7A  F022         	call	_SettingsLCD
  5362                           
  5363                           ;PruevaServosPic.c: 79: SettingsLCD(0x06);
  5364  003F6A  0E06               	movlw	6
  5365  003F6C  EC7A  F022         	call	_SettingsLCD
  5366                           
  5367                           ;PruevaServosPic.c: 80: SettingsLCD(0x0F);
  5368  003F70  0E0F               	movlw	15
  5369  003F72  EC7A  F022         	call	_SettingsLCD
  5370                           
  5371                           ;PruevaServosPic.c: 81: SettingsLCD(0x28);
  5372  003F76  0E28               	movlw	40
  5373  003F78  EC7A  F022         	call	_SettingsLCD
  5374                           
  5375                           ;PruevaServosPic.c: 82: SettingsLCD(0x01);
  5376  003F7C  0E01               	movlw	1
  5377  003F7E  EC7A  F022         	call	_SettingsLCD
  5378                           
  5379                           ;PruevaServosPic.c: 85: TRISCbits.TRISC6 = 0;
  5380  003F82  9C94               	bcf	148,6,c	;volatile
  5381                           
  5382                           ;PruevaServosPic.c: 86: TRISCbits.TRISC7 = 1;
  5383  003F84  8E94               	bsf	148,7,c	;volatile
  5384                           
  5385                           ;PruevaServosPic.c: 87: SPBRG1 = 0x19;
  5386  003F86  0E19               	movlw	25
  5387  003F88  6EAF               	movwf	175,c	;volatile
  5388                           
  5389                           ;PruevaServosPic.c: 88: RCSTA1 = 0x90;
  5390  003F8A  0E90               	movlw	144
  5391  003F8C  6EAB               	movwf	171,c	;volatile
  5392                           
  5393                           ;PruevaServosPic.c: 89: TXSTA1 = 0x20;
  5394  003F8E  0E20               	movlw	32
  5395  003F90  6EAC               	movwf	172,c	;volatile
  5396                           
  5397                           ;PruevaServosPic.c: 92: GIE = 1;
  5398  003F92  8EF2               	bsf	4082,7,c	;volatile
  5399                           
  5400                           ;PruevaServosPic.c: 93: PEIE = 1;
  5401  003F94  8CF2               	bsf	4082,6,c	;volatile
  5402                           
  5403                           ;PruevaServosPic.c: 95: RC1IE = 1;
  5404  003F96  8A9D               	bsf	3997,5,c	;volatile
  5405                           
  5406                           ;PruevaServosPic.c: 96: RC1IF = 0;
  5407  003F98  9A9E               	bcf	3998,5,c	;volatile
  5408                           
  5409                           ;PruevaServosPic.c: 97: TMR1IE = 1;
  5410  003F9A  809D               	bsf	3997,0,c	;volatile
  5411                           
  5412                           ;PruevaServosPic.c: 98: TMR1IF = 0;
  5413  003F9C  909E               	bcf	3998,0,c	;volatile
  5414                           
  5415                           ;PruevaServosPic.c: 102: T1CON = 0x12;
  5416  003F9E  0E12               	movlw	18
  5417  003FA0  6ECD               	movwf	205,c	;volatile
  5418                           
  5419                           ;PruevaServosPic.c: 104: TMR1 = 0;
  5420  003FA2  0E00               	movlw	0
  5421  003FA4  6ECF               	movwf	207,c	;volatile
  5422  003FA6  0E00               	movlw	0
  5423  003FA8  6ECE               	movwf	206,c	;volatile
  5424                           
  5425                           ;PruevaServosPic.c: 105: LATD6 = 1;
  5426  003FAA  8C8C               	bsf	3980,6,c	;volatile
  5427                           
  5428                           ;PruevaServosPic.c: 106: LATD7 = 1;
  5429  003FAC  8E8C               	bsf	3980,7,c	;volatile
  5430  003FAE  0012               	return		;funcret
  5431  003FB0                     __end_of_settings:
  5432                           	callstack 0
  5433                           
  5434 ;; *************** function _SettingsLCD *****************
  5435 ;; Defined at:
  5436 ;;		line 247 in file "PruevaServosPic.c"
  5437 ;; Parameters:    Size  Location     Type
  5438 ;;  word            1    wreg     unsigned char 
  5439 ;; Auto vars:     Size  Location     Type
  5440 ;;  word            1   28[BANK0 ] unsigned char 
  5441 ;; Return value:  Size  Location     Type
  5442 ;;                  1    wreg      void 
  5443 ;; Registers used:
  5444 ;;		wreg, status,2, status,0, cstack
  5445 ;; Tracked objects:
  5446 ;;		On entry : 0/0
  5447 ;;		On exit  : 0/0
  5448 ;;		Unchanged: 0/0
  5449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5450 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5451 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5452 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5453 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5454 ;;Total ram usage:        1 bytes
  5455 ;; Hardware stack levels used: 1
  5456 ;; Hardware stack levels required when called: 6
  5457 ;; This function calls:
  5458 ;;		_LCD
  5459 ;; This function is called by:
  5460 ;;		_main
  5461 ;;		_settings
  5462 ;; This function uses a non-reentrant model
  5463 ;;
  5464                           
  5465                           	psect	text19
  5466  0044F4                     __ptext19:
  5467                           	callstack 0
  5468  0044F4                     _SettingsLCD:
  5469                           	callstack 23
  5470                           
  5471                           ;incstack = 0
  5472                           ;SettingsLCD@word stored from wreg
  5473  0044F4  0100               	movlb	0	; () banked
  5474  0044F6  6F7C               	movwf	SettingsLCD@word& (0+255),b
  5475                           
  5476                           ;PruevaServosPic.c: 248: LATEbits.LATE1 = 0;
  5477  0044F8  928D               	bcf	141,1,c	;volatile
  5478                           
  5479                           ;PruevaServosPic.c: 249: LCD(word >> 4);
  5480  0044FA  0100               	movlb	0	; () banked
  5481  0044FC  397C               	swapf	SettingsLCD@word& (0+255),w,b
  5482  0044FE  0B0F               	andlw	15
  5483  004500  ECD3  F01C         	call	_LCD
  5484                           
  5485                           ;PruevaServosPic.c: 250: LCD(word & 0x0F);
  5486  004504  0100               	movlb	0	; () banked
  5487  004506  517C               	movf	SettingsLCD@word& (0+255),w,b
  5488  004508  0B0F               	andlw	15
  5489  00450A  ECD3  F01C         	call	_LCD
  5490  00450E  0012               	return		;funcret
  5491  004510                     __end_of_SettingsLCD:
  5492                           	callstack 0
  5493                           
  5494 ;; *************** function _deg2time *****************
  5495 ;; Defined at:
  5496 ;;		line 230 in file "PruevaServosPic.c"
  5497 ;; Parameters:    Size  Location     Type
  5498 ;;		None
  5499 ;; Auto vars:     Size  Location     Type
  5500 ;;		None
  5501 ;; Return value:  Size  Location     Type
  5502 ;;                  1    wreg      void 
  5503 ;; Registers used:
  5504 ;;		wreg, status,2, status,0, cstack
  5505 ;; Tracked objects:
  5506 ;;		On entry : 0/0
  5507 ;;		On exit  : 3F/0
  5508 ;;		Unchanged: 0/0
  5509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5510 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5511 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5512 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5513 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5514 ;;Total ram usage:        0 bytes
  5515 ;; Hardware stack levels used: 1
  5516 ;; Hardware stack levels required when called: 8
  5517 ;; This function calls:
  5518 ;;		___ftdiv
  5519 ;;		___ftsub
  5520 ;;		___fttol
  5521 ;; This function is called by:
  5522 ;;		_main
  5523 ;; This function uses a non-reentrant model
  5524 ;;
  5525                           
  5526                           	psect	text20
  5527  0035CA                     __ptext20:
  5528                           	callstack 0
  5529  0035CA                     _deg2time:
  5530                           	callstack 22
  5531                           
  5532                           ;PruevaServosPic.c: 232: time_high = 0.79*0.001;
  5533                           
  5534                           ;incstack = 0
  5535  0035CA  0E18               	movlw	24
  5536  0035CC  0100               	movlb	0	; () banked
  5537  0035CE  6FD1               	movwf	_time_high& (0+255),b
  5538  0035D0  0E4F               	movlw	79
  5539  0035D2  6FD2               	movwf	(_time_high+1)& (0+255),b
  5540  0035D4  0E3A               	movlw	58
  5541  0035D6  6FD3               	movwf	(_time_high+2)& (0+255),b
  5542                           
  5543                           ; BSR set to: 0
  5544                           ;PruevaServosPic.c: 233: th = 65535.0 - (time_high / (0.00000025 * 2.0));
  5545  0035D8  0E38               	movlw	56
  5546  0035DA  6F85               	movwf	___ftdiv@f2& (0+255),b
  5547  0035DC  0E06               	movlw	6
  5548  0035DE  6F86               	movwf	(___ftdiv@f2+1)& (0+255),b
  5549  0035E0  0E35               	movlw	53
  5550  0035E2  6F87               	movwf	(___ftdiv@f2+2)& (0+255),b
  5551  0035E4  C0D1  F082         	movff	_time_high,___ftdiv@f1
  5552  0035E8  C0D2  F083         	movff	_time_high+1,___ftdiv@f1+1
  5553  0035EC  C0D3  F084         	movff	_time_high+2,___ftdiv@f1+2
  5554  0035F0  EC72  F01A         	call	___ftdiv	;wreg free
  5555  0035F4  C082  F0B4         	movff	?___ftdiv,___ftsub@f2
  5556  0035F8  C083  F0B5         	movff	?___ftdiv+1,___ftsub@f2+1
  5557  0035FC  C084  F0B6         	movff	?___ftdiv+2,___ftsub@f2+2
  5558  003600  0EFF               	movlw	255
  5559  003602  6FB1               	movwf	___ftsub@f1& (0+255),b
  5560  003604  0E7F               	movlw	127
  5561  003606  6FB2               	movwf	(___ftsub@f1+1)& (0+255),b
  5562  003608  0E47               	movlw	71
  5563  00360A  6FB3               	movwf	(___ftsub@f1+2)& (0+255),b
  5564  00360C  EC11  F021         	call	___ftsub	;wreg free
  5565  003610  C0B1  F0B7         	movff	?___ftsub,___fttol@f1
  5566  003614  C0B2  F0B8         	movff	?___ftsub+1,___fttol@f1+1
  5567  003618  C0B3  F0B9         	movff	?___ftsub+2,___fttol@f1+2
  5568  00361C  EC51  F01B         	call	___fttol	;wreg free
  5569  003620  C0B7  F0E1         	movff	?___fttol,_th
  5570  003624  C0B8  F0E2         	movff	?___fttol+1,_th+1
  5571                           
  5572                           ; BSR set to: 0
  5573                           ;PruevaServosPic.c: 234: time_low = 0.02 - time_high;
  5574  003628  0ED7               	movlw	215
  5575  00362A  6FB1               	movwf	___ftsub@f1& (0+255),b
  5576  00362C  0EA3               	movlw	163
  5577  00362E  6FB2               	movwf	(___ftsub@f1+1)& (0+255),b
  5578  003630  0E3C               	movlw	60
  5579  003632  6FB3               	movwf	(___ftsub@f1+2)& (0+255),b
  5580  003634  C0D1  F0B4         	movff	_time_high,___ftsub@f2
  5581  003638  C0D2  F0B5         	movff	_time_high+1,___ftsub@f2+1
  5582  00363C  C0D3  F0B6         	movff	_time_high+2,___ftsub@f2+2
  5583  003640  EC11  F021         	call	___ftsub	;wreg free
  5584  003644  C0B1  F0CE         	movff	?___ftsub,_time_low
  5585  003648  C0B2  F0CF         	movff	?___ftsub+1,_time_low+1
  5586  00364C  C0B3  F0D0         	movff	?___ftsub+2,_time_low+2
  5587                           
  5588                           ; BSR set to: 0
  5589                           ;PruevaServosPic.c: 235: tl = 65535.0 - (time_low / (0.00000025 * 2.0));
  5590  003650  0E38               	movlw	56
  5591  003652  6F85               	movwf	___ftdiv@f2& (0+255),b
  5592  003654  0E06               	movlw	6
  5593  003656  6F86               	movwf	(___ftdiv@f2+1)& (0+255),b
  5594  003658  0E35               	movlw	53
  5595  00365A  6F87               	movwf	(___ftdiv@f2+2)& (0+255),b
  5596  00365C  C0CE  F082         	movff	_time_low,___ftdiv@f1
  5597  003660  C0CF  F083         	movff	_time_low+1,___ftdiv@f1+1
  5598  003664  C0D0  F084         	movff	_time_low+2,___ftdiv@f1+2
  5599  003668  EC72  F01A         	call	___ftdiv	;wreg free
  5600  00366C  C082  F0B4         	movff	?___ftdiv,___ftsub@f2
  5601  003670  C083  F0B5         	movff	?___ftdiv+1,___ftsub@f2+1
  5602  003674  C084  F0B6         	movff	?___ftdiv+2,___ftsub@f2+2
  5603  003678  0EFF               	movlw	255
  5604  00367A  6FB1               	movwf	___ftsub@f1& (0+255),b
  5605  00367C  0E7F               	movlw	127
  5606  00367E  6FB2               	movwf	(___ftsub@f1+1)& (0+255),b
  5607  003680  0E47               	movlw	71
  5608  003682  6FB3               	movwf	(___ftsub@f1+2)& (0+255),b
  5609  003684  EC11  F021         	call	___ftsub	;wreg free
  5610  003688  C0B1  F0B7         	movff	?___ftsub,___fttol@f1
  5611  00368C  C0B2  F0B8         	movff	?___ftsub+1,___fttol@f1+1
  5612  003690  C0B3  F0B9         	movff	?___ftsub+2,___fttol@f1+2
  5613  003694  EC51  F01B         	call	___fttol	;wreg free
  5614  003698  C0B7  F0DF         	movff	?___fttol,_tl
  5615  00369C  C0B8  F0E0         	movff	?___fttol+1,_tl+1
  5616                           
  5617                           ; BSR set to: 0
  5618  0036A0  0012               	return		;funcret
  5619  0036A2                     __end_of_deg2time:
  5620                           	callstack 0
  5621                           
  5622 ;; *************** function ___fttol *****************
  5623 ;; Defined at:
  5624 ;;		line 44 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\fttol.c"
  5625 ;; Parameters:    Size  Location     Type
  5626 ;;  f1              3   87[BANK0 ] float 
  5627 ;; Auto vars:     Size  Location     Type
  5628 ;;  lval            4   97[BANK0 ] unsigned long 
  5629 ;;  exp1            1  101[BANK0 ] unsigned char 
  5630 ;;  sign1           1   96[BANK0 ] unsigned char 
  5631 ;; Return value:  Size  Location     Type
  5632 ;;                  4   87[BANK0 ] long 
  5633 ;; Registers used:
  5634 ;;		wreg, status,2, status,0
  5635 ;; Tracked objects:
  5636 ;;		On entry : 3E/1
  5637 ;;		On exit  : 3F/0
  5638 ;;		Unchanged: 0/0
  5639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5640 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5641 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5642 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5643 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5644 ;;Total ram usage:       15 bytes
  5645 ;; Hardware stack levels used: 1
  5646 ;; Hardware stack levels required when called: 5
  5647 ;; This function calls:
  5648 ;;		Nothing
  5649 ;; This function is called by:
  5650 ;;		_deg2time
  5651 ;;		_sprintf
  5652 ;; This function uses a non-reentrant model
  5653 ;;
  5654                           
  5655                           	psect	text21
  5656  0036A2                     __ptext21:
  5657                           	callstack 0
  5658  0036A2                     ___fttol:
  5659                           	callstack 24
  5660                           
  5661                           ; BSR set to: 0
  5662                           ;incstack = 0
  5663  0036A2  C0B9  F0BB         	movff	___fttol@f1+2,??___fttol
  5664  0036A6  0100               	movlb	0	; () banked
  5665  0036A8  6BBC               	clrf	(??___fttol+1)& (0+255),b
  5666  0036AA  6BBD               	clrf	(??___fttol+2)& (0+255),b
  5667  0036AC  35B8               	rlcf	(___fttol@f1+1)& (0+255),w,b
  5668  0036AE  37BB               	rlcf	??___fttol& (0+255),f,b
  5669  0036B0  E301               	bnc	u7461
  5670  0036B2  81BC               	bsf	(??___fttol+1)& (0+255),0,b
  5671  0036B4                     u7461:
  5672  0036B4  51BB               	movf	??___fttol& (0+255),w,b
  5673  0036B6  6FC5               	movwf	___fttol@exp1& (0+255),b
  5674  0036B8  51C5               	movf	___fttol@exp1& (0+255),w,b
  5675  0036BA  A4D8               	btfss	status,2,c
  5676  0036BC  D009               	goto	l6022
  5677  0036BE                     u7470:
  5678                           
  5679                           ; BSR set to: 0
  5680  0036BE  0E00               	movlw	0
  5681  0036C0  6FB7               	movwf	?___fttol& (0+255),b
  5682  0036C2  0E00               	movlw	0
  5683  0036C4  6FB8               	movwf	(?___fttol+1)& (0+255),b
  5684  0036C6  0E00               	movlw	0
  5685  0036C8  6FB9               	movwf	(?___fttol+2)& (0+255),b
  5686  0036CA  0E00               	movlw	0
  5687  0036CC  6FBA               	movwf	(?___fttol+3)& (0+255),b
  5688  0036CE  0012               	return	
  5689  0036D0                     l6022:
  5690                           
  5691                           ; BSR set to: 0
  5692  0036D0  0E17               	movlw	23
  5693  0036D2  6FBB               	movwf	??___fttol& (0+255),b
  5694  0036D4  C0B7  F0BC         	movff	___fttol@f1,??___fttol+1
  5695  0036D8  C0B8  F0BD         	movff	___fttol@f1+1,??___fttol+2
  5696  0036DC  C0B9  F0BE         	movff	___fttol@f1+2,??___fttol+3
  5697  0036E0  29BB               	incf	??___fttol& (0+255),w,b
  5698  0036E2  6FBF               	movwf	(??___fttol+4)& (0+255),b
  5699  0036E4  D004               	goto	u7480
  5700  0036E6                     u7485:
  5701  0036E6  90D8               	bcf	status,0,c
  5702  0036E8  33BE               	rrcf	(??___fttol+3)& (0+255),f,b
  5703  0036EA  33BD               	rrcf	(??___fttol+2)& (0+255),f,b
  5704  0036EC  33BC               	rrcf	(??___fttol+1)& (0+255),f,b
  5705  0036EE                     u7480:
  5706  0036EE  2FBF               	decfsz	(??___fttol+4)& (0+255),f,b
  5707  0036F0  D7FA               	goto	u7485
  5708  0036F2  0100               	movlb	0	; () banked
  5709  0036F4  51BC               	movf	(??___fttol+1)& (0+255),w,b
  5710  0036F6  6FC0               	movwf	___fttol@sign1& (0+255),b
  5711                           
  5712                           ; BSR set to: 0
  5713  0036F8  8FB8               	bsf	(___fttol@f1+1)& (0+255),7,b
  5714                           
  5715                           ; BSR set to: 0
  5716  0036FA  0EFF               	movlw	255
  5717  0036FC  17B7               	andwf	___fttol@f1& (0+255),f,b
  5718  0036FE  0EFF               	movlw	255
  5719  003700  17B8               	andwf	(___fttol@f1+1)& (0+255),f,b
  5720  003702  0E00               	movlw	0
  5721  003704  17B9               	andwf	(___fttol@f1+2)& (0+255),f,b
  5722                           
  5723                           ; BSR set to: 0
  5724  003706  51B7               	movf	___fttol@f1& (0+255),w,b
  5725  003708  6FC1               	movwf	___fttol@lval& (0+255),b
  5726  00370A  51B8               	movf	(___fttol@f1+1)& (0+255),w,b
  5727  00370C  6FC2               	movwf	(___fttol@lval+1)& (0+255),b
  5728  00370E  51B9               	movf	(___fttol@f1+2)& (0+255),w,b
  5729  003710  6FC3               	movwf	(___fttol@lval+2)& (0+255),b
  5730  003712  6BC4               	clrf	(___fttol@lval+3)& (0+255),b
  5731                           
  5732                           ; BSR set to: 0
  5733  003714  0E8E               	movlw	142
  5734  003716  5FC5               	subwf	___fttol@exp1& (0+255),f,b
  5735                           
  5736                           ; BSR set to: 0
  5737  003718  AFC5               	btfss	___fttol@exp1& (0+255),7,b
  5738  00371A  D00D               	goto	l6044
  5739                           
  5740                           ; BSR set to: 0
  5741  00371C  51C5               	movf	___fttol@exp1& (0+255),w,b
  5742  00371E  0A80               	xorlw	128
  5743  003720  0F8F               	addlw	143
  5744  003722  A0D8               	btfss	status,0,c
  5745  003724  D7CC               	goto	u7470
  5746  003726                     l6040:
  5747                           
  5748                           ; BSR set to: 0
  5749  003726  90D8               	bcf	status,0,c
  5750  003728  33C4               	rrcf	(___fttol@lval+3)& (0+255),f,b
  5751  00372A  33C3               	rrcf	(___fttol@lval+2)& (0+255),f,b
  5752  00372C  33C2               	rrcf	(___fttol@lval+1)& (0+255),f,b
  5753  00372E  33C1               	rrcf	___fttol@lval& (0+255),f,b
  5754                           
  5755                           ; BSR set to: 0
  5756  003730  3FC5               	incfsz	___fttol@exp1& (0+255),f,b
  5757  003732  D7F9               	goto	l6040
  5758  003734  D00D               	goto	u7520
  5759  003736                     l6044:
  5760                           
  5761                           ; BSR set to: 0
  5762  003736  0E17               	movlw	23
  5763  003738  65C5               	cpfsgt	___fttol@exp1& (0+255),b
  5764  00373A  D007               	goto	l6052
  5765  00373C  D7C0               	goto	u7470
  5766  00373E                     l6050:
  5767                           
  5768                           ; BSR set to: 0
  5769  00373E  90D8               	bcf	status,0,c
  5770  003740  37C1               	rlcf	___fttol@lval& (0+255),f,b
  5771  003742  37C2               	rlcf	(___fttol@lval+1)& (0+255),f,b
  5772  003744  37C3               	rlcf	(___fttol@lval+2)& (0+255),f,b
  5773  003746  37C4               	rlcf	(___fttol@lval+3)& (0+255),f,b
  5774  003748  07C5               	decf	___fttol@exp1& (0+255),f,b
  5775  00374A                     l6052:
  5776                           
  5777                           ; BSR set to: 0
  5778  00374A  51C5               	movf	___fttol@exp1& (0+255),w,b
  5779  00374C  A4D8               	btfss	status,2,c
  5780  00374E  D7F7               	goto	l6050
  5781  003750                     u7520:
  5782                           
  5783                           ; BSR set to: 0
  5784  003750  51C0               	movf	___fttol@sign1& (0+255),w,b
  5785  003752  B4D8               	btfsc	status,2,c
  5786  003754  D008               	goto	l6058
  5787                           
  5788                           ; BSR set to: 0
  5789  003756  1FC4               	comf	(___fttol@lval+3)& (0+255),f,b
  5790  003758  1FC3               	comf	(___fttol@lval+2)& (0+255),f,b
  5791  00375A  1FC2               	comf	(___fttol@lval+1)& (0+255),f,b
  5792  00375C  6DC1               	negf	___fttol@lval& (0+255),b
  5793  00375E  0E00               	movlw	0
  5794  003760  23C2               	addwfc	(___fttol@lval+1)& (0+255),f,b
  5795  003762  23C3               	addwfc	(___fttol@lval+2)& (0+255),f,b
  5796  003764  23C4               	addwfc	(___fttol@lval+3)& (0+255),f,b
  5797  003766                     l6058:
  5798                           
  5799                           ; BSR set to: 0
  5800  003766  C0C1  F0B7         	movff	___fttol@lval,?___fttol
  5801  00376A  C0C2  F0B8         	movff	___fttol@lval+1,?___fttol+1
  5802  00376E  C0C3  F0B9         	movff	___fttol@lval+2,?___fttol+2
  5803  003772  C0C4  F0BA         	movff	___fttol@lval+3,?___fttol+3
  5804                           
  5805                           ; BSR set to: 0
  5806  003776  0012               	return		;funcret
  5807  003778                     __end_of___fttol:
  5808                           	callstack 0
  5809                           
  5810 ;; *************** function ___ftsub *****************
  5811 ;; Defined at:
  5812 ;;		line 19 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\ftsub.c"
  5813 ;; Parameters:    Size  Location     Type
  5814 ;;  f1              3   81[BANK0 ] float 
  5815 ;;  f2              3   84[BANK0 ] float 
  5816 ;; Auto vars:     Size  Location     Type
  5817 ;;		None
  5818 ;; Return value:  Size  Location     Type
  5819 ;;                  3   81[BANK0 ] float 
  5820 ;; Registers used:
  5821 ;;		wreg, status,2, status,0, cstack
  5822 ;; Tracked objects:
  5823 ;;		On entry : 3F/0
  5824 ;;		On exit  : 3F/0
  5825 ;;		Unchanged: 0/0
  5826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5827 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5828 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5829 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5830 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5831 ;;Total ram usage:        6 bytes
  5832 ;; Hardware stack levels used: 1
  5833 ;; Hardware stack levels required when called: 7
  5834 ;; This function calls:
  5835 ;;		___ftadd
  5836 ;; This function is called by:
  5837 ;;		_deg2time
  5838 ;;		_sprintf
  5839 ;; This function uses a non-reentrant model
  5840 ;;
  5841                           
  5842                           	psect	text22
  5843  004222                     __ptext22:
  5844                           	callstack 0
  5845  004222                     ___ftsub:
  5846                           	callstack 22
  5847                           
  5848                           ; BSR set to: 0
  5849                           
  5850                           ; BSR set to: 0
  5851                           ;incstack = 0
  5852  004222  51B4               	movf	___ftsub@f2& (0+255),w,b
  5853  004224  11B5               	iorwf	(___ftsub@f2+1)& (0+255),w,b
  5854  004226  11B6               	iorwf	(___ftsub@f2+2)& (0+255),w,b
  5855  004228  B4D8               	btfsc	status,2,c
  5856  00422A  D006               	goto	l5990
  5857                           
  5858                           ; BSR set to: 0
  5859  00422C  0E00               	movlw	0
  5860  00422E  1BB4               	xorwf	___ftsub@f2& (0+255),f,b
  5861  004230  0E00               	movlw	0
  5862  004232  1BB5               	xorwf	(___ftsub@f2+1)& (0+255),f,b
  5863  004234  0E80               	movlw	128
  5864  004236  1BB6               	xorwf	(___ftsub@f2+2)& (0+255),f,b
  5865  004238                     l5990:
  5866                           
  5867                           ; BSR set to: 0
  5868  004238  C0B1  F0A5         	movff	___ftsub@f1,___ftadd@f1
  5869  00423C  C0B2  F0A6         	movff	___ftsub@f1+1,___ftadd@f1+1
  5870  004240  C0B3  F0A7         	movff	___ftsub@f1+2,___ftadd@f1+2
  5871  004244  C0B4  F0A8         	movff	___ftsub@f2,___ftadd@f2
  5872  004248  C0B5  F0A9         	movff	___ftsub@f2+1,___ftadd@f2+1
  5873  00424C  C0B6  F0AA         	movff	___ftsub@f2+2,___ftadd@f2+2
  5874  004250  ECE3  F015         	call	___ftadd	;wreg free
  5875  004254  C0A5  F0B1         	movff	?___ftadd,?___ftsub
  5876  004258  C0A6  F0B2         	movff	?___ftadd+1,?___ftsub+1
  5877  00425C  C0A7  F0B3         	movff	?___ftadd+2,?___ftsub+2
  5878                           
  5879                           ; BSR set to: 0
  5880  004260  0012               	return		;funcret
  5881  004262                     __end_of___ftsub:
  5882                           	callstack 0
  5883                           
  5884 ;; *************** function ___ftadd *****************
  5885 ;; Defined at:
  5886 ;;		line 86 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\ftadd.c"
  5887 ;; Parameters:    Size  Location     Type
  5888 ;;  f1              3   69[BANK0 ] float 
  5889 ;;  f2              3   72[BANK0 ] float 
  5890 ;; Auto vars:     Size  Location     Type
  5891 ;;  exp1            1   80[BANK0 ] unsigned char 
  5892 ;;  exp2            1   79[BANK0 ] unsigned char 
  5893 ;;  sign            1   78[BANK0 ] unsigned char 
  5894 ;; Return value:  Size  Location     Type
  5895 ;;                  3   69[BANK0 ] float 
  5896 ;; Registers used:
  5897 ;;		wreg, status,2, status,0, cstack
  5898 ;; Tracked objects:
  5899 ;;		On entry : 3F/0
  5900 ;;		On exit  : 3F/0
  5901 ;;		Unchanged: 0/0
  5902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5903 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5904 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5905 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5906 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5907 ;;Total ram usage:       12 bytes
  5908 ;; Hardware stack levels used: 1
  5909 ;; Hardware stack levels required when called: 6
  5910 ;; This function calls:
  5911 ;;		___ftpack
  5912 ;; This function is called by:
  5913 ;;		_sprintf
  5914 ;;		___ftsub
  5915 ;; This function uses a non-reentrant model
  5916 ;;
  5917                           
  5918                           	psect	text23
  5919  002BC6                     __ptext23:
  5920                           	callstack 0
  5921  002BC6                     ___ftadd:
  5922                           	callstack 22
  5923                           
  5924                           ; BSR set to: 0
  5925                           
  5926                           ; BSR set to: 0
  5927                           ;incstack = 0
  5928  002BC6  C0A7  F0AB         	movff	___ftadd@f1+2,??___ftadd
  5929  002BCA  6BAC               	clrf	(??___ftadd+1)& (0+255),b
  5930  002BCC  6BAD               	clrf	(??___ftadd+2)& (0+255),b
  5931  002BCE  35A6               	rlcf	(___ftadd@f1+1)& (0+255),w,b
  5932  002BD0  37AB               	rlcf	??___ftadd& (0+255),f,b
  5933  002BD2  E301               	bnc	u6211
  5934  002BD4  81AC               	bsf	(??___ftadd+1)& (0+255),0,b
  5935  002BD6                     u6211:
  5936  002BD6  51AB               	movf	??___ftadd& (0+255),w,b
  5937  002BD8  6FB0               	movwf	___ftadd@exp1& (0+255),b
  5938  002BDA  C0AA  F0AB         	movff	___ftadd@f2+2,??___ftadd
  5939  002BDE  6BAC               	clrf	(??___ftadd+1)& (0+255),b
  5940  002BE0  6BAD               	clrf	(??___ftadd+2)& (0+255),b
  5941  002BE2  35A9               	rlcf	(___ftadd@f2+1)& (0+255),w,b
  5942  002BE4  37AB               	rlcf	??___ftadd& (0+255),f,b
  5943  002BE6  E301               	bnc	u6221
  5944  002BE8  81AC               	bsf	(??___ftadd+1)& (0+255),0,b
  5945  002BEA                     u6221:
  5946  002BEA  51AB               	movf	??___ftadd& (0+255),w,b
  5947  002BEC  6FAF               	movwf	___ftadd@exp2& (0+255),b
  5948                           
  5949                           ; BSR set to: 0
  5950  002BEE  51B0               	movf	___ftadd@exp1& (0+255),w,b
  5951  002BF0  B4D8               	btfsc	status,2,c
  5952  002BF2  D00A               	goto	u6250
  5953                           
  5954                           ; BSR set to: 0
  5955  002BF4  51AF               	movf	___ftadd@exp2& (0+255),w,b
  5956  002BF6  5DB0               	subwf	___ftadd@exp1& (0+255),w,b
  5957  002BF8  B0D8               	btfsc	status,0,c
  5958  002BFA  D00D               	goto	l5210
  5959                           
  5960                           ; BSR set to: 0
  5961  002BFC  51B0               	movf	___ftadd@exp1& (0+255),w,b
  5962  002BFE  5DAF               	subwf	___ftadd@exp2& (0+255),w,b
  5963  002C00  6FAB               	movwf	??___ftadd& (0+255),b
  5964  002C02  0E18               	movlw	24
  5965  002C04  65AB               	cpfsgt	??___ftadd& (0+255),b
  5966  002C06  D007               	goto	l5210
  5967  002C08                     u6250:
  5968                           
  5969                           ; BSR set to: 0
  5970  002C08  C0A8  F0A5         	movff	___ftadd@f2,?___ftadd
  5971  002C0C  C0A9  F0A6         	movff	___ftadd@f2+1,?___ftadd+1
  5972  002C10  C0AA  F0A7         	movff	___ftadd@f2+2,?___ftadd+2
  5973  002C14  0012               	return	
  5974  002C16                     l5210:
  5975                           
  5976                           ; BSR set to: 0
  5977  002C16  51AF               	movf	___ftadd@exp2& (0+255),w,b
  5978  002C18  B4D8               	btfsc	status,2,c
  5979  002C1A  D00A               	goto	u6280
  5980                           
  5981                           ; BSR set to: 0
  5982  002C1C  51B0               	movf	___ftadd@exp1& (0+255),w,b
  5983  002C1E  5DAF               	subwf	___ftadd@exp2& (0+255),w,b
  5984  002C20  B0D8               	btfsc	status,0,c
  5985  002C22  D00D               	goto	l5216
  5986                           
  5987                           ; BSR set to: 0
  5988  002C24  51AF               	movf	___ftadd@exp2& (0+255),w,b
  5989  002C26  5DB0               	subwf	___ftadd@exp1& (0+255),w,b
  5990  002C28  6FAB               	movwf	??___ftadd& (0+255),b
  5991  002C2A  0E18               	movlw	24
  5992  002C2C  65AB               	cpfsgt	??___ftadd& (0+255),b
  5993  002C2E  D007               	goto	l5216
  5994  002C30                     u6280:
  5995                           
  5996                           ; BSR set to: 0
  5997  002C30  C0A5  F0A5         	movff	___ftadd@f1,?___ftadd
  5998  002C34  C0A6  F0A6         	movff	___ftadd@f1+1,?___ftadd+1
  5999  002C38  C0A7  F0A7         	movff	___ftadd@f1+2,?___ftadd+2
  6000  002C3C  0012               	return	
  6001  002C3E                     l5216:
  6002                           
  6003                           ; BSR set to: 0
  6004  002C3E  0E06               	movlw	6
  6005  002C40  6FAE               	movwf	___ftadd@sign& (0+255),b
  6006                           
  6007                           ; BSR set to: 0
  6008  002C42  BFA7               	btfsc	(___ftadd@f1+2)& (0+255),7,b
  6009                           
  6010                           ; BSR set to: 0
  6011  002C44  8FAE               	bsf	___ftadd@sign& (0+255),7,b
  6012                           
  6013                           ; BSR set to: 0
  6014  002C46  BFAA               	btfsc	(___ftadd@f2+2)& (0+255),7,b
  6015                           
  6016                           ; BSR set to: 0
  6017  002C48  8DAE               	bsf	___ftadd@sign& (0+255),6,b
  6018                           
  6019                           ; BSR set to: 0
  6020  002C4A  8FA6               	bsf	(___ftadd@f1+1)& (0+255),7,b
  6021                           
  6022                           ; BSR set to: 0
  6023  002C4C  0EFF               	movlw	255
  6024  002C4E  17A5               	andwf	___ftadd@f1& (0+255),f,b
  6025  002C50  0EFF               	movlw	255
  6026  002C52  17A6               	andwf	(___ftadd@f1+1)& (0+255),f,b
  6027  002C54  0E00               	movlw	0
  6028  002C56  17A7               	andwf	(___ftadd@f1+2)& (0+255),f,b
  6029  002C58  8FA9               	bsf	(___ftadd@f2+1)& (0+255),7,b
  6030                           
  6031                           ; BSR set to: 0
  6032  002C5A  0EFF               	movlw	255
  6033  002C5C  17A8               	andwf	___ftadd@f2& (0+255),f,b
  6034  002C5E  0EFF               	movlw	255
  6035  002C60  17A9               	andwf	(___ftadd@f2+1)& (0+255),f,b
  6036  002C62  0E00               	movlw	0
  6037  002C64  17AA               	andwf	(___ftadd@f2+2)& (0+255),f,b
  6038                           
  6039                           ; BSR set to: 0
  6040  002C66  51AF               	movf	___ftadd@exp2& (0+255),w,b
  6041  002C68  5DB0               	subwf	___ftadd@exp1& (0+255),w,b
  6042  002C6A  B0D8               	btfsc	status,0,c
  6043  002C6C  D01B               	goto	l5242
  6044  002C6E                     u6310:
  6045                           
  6046                           ; BSR set to: 0
  6047  002C6E  90D8               	bcf	status,0,c
  6048  002C70  37A8               	rlcf	___ftadd@f2& (0+255),f,b
  6049  002C72  37A9               	rlcf	(___ftadd@f2+1)& (0+255),f,b
  6050  002C74  37AA               	rlcf	(___ftadd@f2+2)& (0+255),f,b
  6051  002C76  07AF               	decf	___ftadd@exp2& (0+255),f,b
  6052                           
  6053                           ; BSR set to: 0
  6054  002C78  51B0               	movf	___ftadd@exp1& (0+255),w,b
  6055  002C7A  19AF               	xorwf	___ftadd@exp2& (0+255),w,b
  6056  002C7C  B4D8               	btfsc	status,2,c
  6057  002C7E  D00D               	goto	l5240
  6058                           
  6059                           ; BSR set to: 0
  6060  002C80  07AE               	decf	___ftadd@sign& (0+255),f,b
  6061  002C82  C0AE  F0AB         	movff	___ftadd@sign,??___ftadd
  6062  002C86  0E07               	movlw	7
  6063  002C88  17AB               	andwf	??___ftadd& (0+255),f,b
  6064  002C8A  B4D8               	btfsc	status,2,c
  6065  002C8C  D006               	goto	l5240
  6066  002C8E  D7EF               	goto	u6310
  6067  002C90                     l5238:
  6068                           
  6069                           ; BSR set to: 0
  6070  002C90  90D8               	bcf	status,0,c
  6071  002C92  33A7               	rrcf	(___ftadd@f1+2)& (0+255),f,b
  6072  002C94  33A6               	rrcf	(___ftadd@f1+1)& (0+255),f,b
  6073  002C96  33A5               	rrcf	___ftadd@f1& (0+255),f,b
  6074  002C98  2BB0               	incf	___ftadd@exp1& (0+255),f,b
  6075  002C9A                     l5240:
  6076                           
  6077                           ; BSR set to: 0
  6078  002C9A  51AF               	movf	___ftadd@exp2& (0+255),w,b
  6079  002C9C  19B0               	xorwf	___ftadd@exp1& (0+255),w,b
  6080  002C9E  B4D8               	btfsc	status,2,c
  6081  002CA0  D01F               	goto	u6380
  6082  002CA2  D7F6               	goto	l5238
  6083  002CA4                     l5242:
  6084                           
  6085                           ; BSR set to: 0
  6086  002CA4  51B0               	movf	___ftadd@exp1& (0+255),w,b
  6087  002CA6  5DAF               	subwf	___ftadd@exp2& (0+255),w,b
  6088  002CA8  B0D8               	btfsc	status,0,c
  6089  002CAA  D01A               	goto	u6380
  6090  002CAC                     u6350:
  6091                           
  6092                           ; BSR set to: 0
  6093  002CAC  90D8               	bcf	status,0,c
  6094  002CAE  37A5               	rlcf	___ftadd@f1& (0+255),f,b
  6095  002CB0  37A6               	rlcf	(___ftadd@f1+1)& (0+255),f,b
  6096  002CB2  37A7               	rlcf	(___ftadd@f1+2)& (0+255),f,b
  6097  002CB4  07B0               	decf	___ftadd@exp1& (0+255),f,b
  6098                           
  6099                           ; BSR set to: 0
  6100  002CB6  51B0               	movf	___ftadd@exp1& (0+255),w,b
  6101  002CB8  19AF               	xorwf	___ftadd@exp2& (0+255),w,b
  6102  002CBA  B4D8               	btfsc	status,2,c
  6103  002CBC  D00D               	goto	l5252
  6104                           
  6105                           ; BSR set to: 0
  6106  002CBE  07AE               	decf	___ftadd@sign& (0+255),f,b
  6107  002CC0  C0AE  F0AB         	movff	___ftadd@sign,??___ftadd
  6108  002CC4  0E07               	movlw	7
  6109  002CC6  17AB               	andwf	??___ftadd& (0+255),f,b
  6110  002CC8  B4D8               	btfsc	status,2,c
  6111  002CCA  D006               	goto	l5252
  6112  002CCC  D7EF               	goto	u6350
  6113  002CCE                     l5250:
  6114                           
  6115                           ; BSR set to: 0
  6116  002CCE  90D8               	bcf	status,0,c
  6117  002CD0  33AA               	rrcf	(___ftadd@f2+2)& (0+255),f,b
  6118  002CD2  33A9               	rrcf	(___ftadd@f2+1)& (0+255),f,b
  6119  002CD4  33A8               	rrcf	___ftadd@f2& (0+255),f,b
  6120  002CD6  2BAF               	incf	___ftadd@exp2& (0+255),f,b
  6121  002CD8                     l5252:
  6122                           
  6123                           ; BSR set to: 0
  6124  002CD8  51AF               	movf	___ftadd@exp2& (0+255),w,b
  6125  002CDA  19B0               	xorwf	___ftadd@exp1& (0+255),w,b
  6126  002CDC  A4D8               	btfss	status,2,c
  6127  002CDE  D7F7               	goto	l5250
  6128  002CE0                     u6380:
  6129                           
  6130                           ; BSR set to: 0
  6131  002CE0  AFAE               	btfss	___ftadd@sign& (0+255),7,b
  6132  002CE2  D00C               	goto	l615
  6133                           
  6134                           ; BSR set to: 0
  6135  002CE4  0EFF               	movlw	255
  6136  002CE6  1BA5               	xorwf	___ftadd@f1& (0+255),f,b
  6137  002CE8  0EFF               	movlw	255
  6138  002CEA  1BA6               	xorwf	(___ftadd@f1+1)& (0+255),f,b
  6139  002CEC  0EFF               	movlw	255
  6140  002CEE  1BA7               	xorwf	(___ftadd@f1+2)& (0+255),f,b
  6141  002CF0  0E01               	movlw	1
  6142  002CF2  27A5               	addwf	___ftadd@f1& (0+255),f,b
  6143  002CF4  0E00               	movlw	0
  6144  002CF6  23A6               	addwfc	(___ftadd@f1+1)& (0+255),f,b
  6145  002CF8  0E00               	movlw	0
  6146  002CFA  23A7               	addwfc	(___ftadd@f1+2)& (0+255),f,b
  6147  002CFC                     l615:
  6148                           
  6149                           ; BSR set to: 0
  6150  002CFC  ADAE               	btfss	___ftadd@sign& (0+255),6,b
  6151  002CFE  D00C               	goto	l5258
  6152                           
  6153                           ; BSR set to: 0
  6154  002D00  0EFF               	movlw	255
  6155  002D02  1BA8               	xorwf	___ftadd@f2& (0+255),f,b
  6156  002D04  0EFF               	movlw	255
  6157  002D06  1BA9               	xorwf	(___ftadd@f2+1)& (0+255),f,b
  6158  002D08  0EFF               	movlw	255
  6159  002D0A  1BAA               	xorwf	(___ftadd@f2+2)& (0+255),f,b
  6160  002D0C  0E01               	movlw	1
  6161  002D0E  27A8               	addwf	___ftadd@f2& (0+255),f,b
  6162  002D10  0E00               	movlw	0
  6163  002D12  23A9               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  6164  002D14  0E00               	movlw	0
  6165  002D16  23AA               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  6166  002D18                     l5258:
  6167                           
  6168                           ; BSR set to: 0
  6169  002D18  0E00               	movlw	0
  6170  002D1A  6FAE               	movwf	___ftadd@sign& (0+255),b
  6171                           
  6172                           ; BSR set to: 0
  6173  002D1C  51A5               	movf	___ftadd@f1& (0+255),w,b
  6174  002D1E  27A8               	addwf	___ftadd@f2& (0+255),f,b
  6175  002D20  51A6               	movf	(___ftadd@f1+1)& (0+255),w,b
  6176  002D22  23A9               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  6177  002D24  51A7               	movf	(___ftadd@f1+2)& (0+255),w,b
  6178  002D26  23AA               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  6179                           
  6180                           ; BSR set to: 0
  6181  002D28  AFAA               	btfss	(___ftadd@f2+2)& (0+255),7,b
  6182  002D2A  D00E               	goto	l5268
  6183                           
  6184                           ; BSR set to: 0
  6185  002D2C  0EFF               	movlw	255
  6186  002D2E  1BA8               	xorwf	___ftadd@f2& (0+255),f,b
  6187  002D30  0EFF               	movlw	255
  6188  002D32  1BA9               	xorwf	(___ftadd@f2+1)& (0+255),f,b
  6189  002D34  0EFF               	movlw	255
  6190  002D36  1BAA               	xorwf	(___ftadd@f2+2)& (0+255),f,b
  6191  002D38  0E01               	movlw	1
  6192  002D3A  27A8               	addwf	___ftadd@f2& (0+255),f,b
  6193  002D3C  0E00               	movlw	0
  6194  002D3E  23A9               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  6195  002D40  0E00               	movlw	0
  6196  002D42  23AA               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  6197                           
  6198                           ; BSR set to: 0
  6199  002D44  0E01               	movlw	1
  6200  002D46  6FAE               	movwf	___ftadd@sign& (0+255),b
  6201  002D48                     l5268:
  6202                           
  6203                           ; BSR set to: 0
  6204  002D48  C0A8  F07A         	movff	___ftadd@f2,___ftpack@arg
  6205  002D4C  C0A9  F07B         	movff	___ftadd@f2+1,___ftpack@arg+1
  6206  002D50  C0AA  F07C         	movff	___ftadd@f2+2,___ftpack@arg+2
  6207  002D54  C0B0  F07D         	movff	___ftadd@exp1,___ftpack@exp
  6208  002D58  C0AE  F07E         	movff	___ftadd@sign,___ftpack@sign
  6209  002D5C  EC25  F01C         	call	___ftpack	;wreg free
  6210  002D60  C07A  F0A5         	movff	?___ftpack,?___ftadd
  6211  002D64  C07B  F0A6         	movff	?___ftpack+1,?___ftadd+1
  6212  002D68  C07C  F0A7         	movff	?___ftpack+2,?___ftadd+2
  6213                           
  6214                           ; BSR set to: 0
  6215  002D6C  0012               	return		;funcret
  6216  002D6E                     __end_of___ftadd:
  6217                           	callstack 0
  6218                           
  6219 ;; *************** function ___ftdiv *****************
  6220 ;; Defined at:
  6221 ;;		line 54 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\ftdiv.c"
  6222 ;; Parameters:    Size  Location     Type
  6223 ;;  f1              3   34[BANK0 ] float 
  6224 ;;  f2              3   37[BANK0 ] float 
  6225 ;; Auto vars:     Size  Location     Type
  6226 ;;  f3              3   44[BANK0 ] float 
  6227 ;;  sign            1   48[BANK0 ] unsigned char 
  6228 ;;  exp             1   47[BANK0 ] unsigned char 
  6229 ;;  cntr            1   43[BANK0 ] unsigned char 
  6230 ;; Return value:  Size  Location     Type
  6231 ;;                  3   34[BANK0 ] float 
  6232 ;; Registers used:
  6233 ;;		wreg, status,2, status,0, cstack
  6234 ;; Tracked objects:
  6235 ;;		On entry : 3F/0
  6236 ;;		On exit  : 3F/0
  6237 ;;		Unchanged: 0/0
  6238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6239 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6240 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6241 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6242 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6243 ;;Total ram usage:       15 bytes
  6244 ;; Hardware stack levels used: 1
  6245 ;; Hardware stack levels required when called: 6
  6246 ;; This function calls:
  6247 ;;		___ftpack
  6248 ;; This function is called by:
  6249 ;;		_deg2time
  6250 ;; This function uses a non-reentrant model
  6251 ;;
  6252                           
  6253                           	psect	text24
  6254  0034E4                     __ptext24:
  6255                           	callstack 0
  6256  0034E4                     ___ftdiv:
  6257                           	callstack 23
  6258                           
  6259                           ; BSR set to: 0
  6260                           
  6261                           ; BSR set to: 0
  6262                           ;incstack = 0
  6263  0034E4  C084  F088         	movff	___ftdiv@f1+2,??___ftdiv
  6264  0034E8  6B89               	clrf	(??___ftdiv+1)& (0+255),b
  6265  0034EA  6B8A               	clrf	(??___ftdiv+2)& (0+255),b
  6266  0034EC  3583               	rlcf	(___ftdiv@f1+1)& (0+255),w,b
  6267  0034EE  3788               	rlcf	??___ftdiv& (0+255),f,b
  6268  0034F0  E301               	bnc	u7361
  6269  0034F2  8189               	bsf	(??___ftdiv+1)& (0+255),0,b
  6270  0034F4                     u7361:
  6271  0034F4  5188               	movf	??___ftdiv& (0+255),w,b
  6272  0034F6  6F8F               	movwf	___ftdiv@exp& (0+255),b
  6273  0034F8  518F               	movf	___ftdiv@exp& (0+255),w,b
  6274  0034FA  A4D8               	btfss	status,2,c
  6275  0034FC  D007               	goto	l5946
  6276                           
  6277                           ; BSR set to: 0
  6278  0034FE  0E00               	movlw	0
  6279  003500  6F82               	movwf	?___ftdiv& (0+255),b
  6280  003502  0E00               	movlw	0
  6281  003504  6F83               	movwf	(?___ftdiv+1)& (0+255),b
  6282  003506  0E00               	movlw	0
  6283  003508  6F84               	movwf	(?___ftdiv+2)& (0+255),b
  6284  00350A  0012               	return	
  6285  00350C                     l5946:
  6286                           
  6287                           ; BSR set to: 0
  6288  00350C  C087  F088         	movff	___ftdiv@f2+2,??___ftdiv
  6289  003510  6B89               	clrf	(??___ftdiv+1)& (0+255),b
  6290  003512  6B8A               	clrf	(??___ftdiv+2)& (0+255),b
  6291  003514  3586               	rlcf	(___ftdiv@f2+1)& (0+255),w,b
  6292  003516  3788               	rlcf	??___ftdiv& (0+255),f,b
  6293  003518  E301               	bnc	u7381
  6294  00351A  8189               	bsf	(??___ftdiv+1)& (0+255),0,b
  6295  00351C                     u7381:
  6296  00351C  5188               	movf	??___ftdiv& (0+255),w,b
  6297  00351E  6F90               	movwf	___ftdiv@sign& (0+255),b
  6298  003520  5190               	movf	___ftdiv@sign& (0+255),w,b
  6299  003522  A4D8               	btfss	status,2,c
  6300  003524  D007               	goto	l5952
  6301                           
  6302                           ; BSR set to: 0
  6303  003526  0E00               	movlw	0
  6304  003528  6F82               	movwf	?___ftdiv& (0+255),b
  6305  00352A  0E00               	movlw	0
  6306  00352C  6F83               	movwf	(?___ftdiv+1)& (0+255),b
  6307  00352E  0E00               	movlw	0
  6308  003530  6F84               	movwf	(?___ftdiv+2)& (0+255),b
  6309  003532  0012               	return	
  6310  003534                     l5952:
  6311                           
  6312                           ; BSR set to: 0
  6313  003534  0E00               	movlw	0
  6314  003536  6F8C               	movwf	___ftdiv@f3& (0+255),b
  6315  003538  0E00               	movlw	0
  6316  00353A  6F8D               	movwf	(___ftdiv@f3+1)& (0+255),b
  6317  00353C  0E00               	movlw	0
  6318  00353E  6F8E               	movwf	(___ftdiv@f3+2)& (0+255),b
  6319                           
  6320                           ; BSR set to: 0
  6321  003540  5190               	movf	___ftdiv@sign& (0+255),w,b
  6322  003542  0F89               	addlw	137
  6323  003544  5F8F               	subwf	___ftdiv@exp& (0+255),f,b
  6324                           
  6325                           ; BSR set to: 0
  6326  003546  C084  F090         	movff	___ftdiv@f1+2,___ftdiv@sign
  6327                           
  6328                           ; BSR set to: 0
  6329  00354A  5187               	movf	(___ftdiv@f2+2)& (0+255),w,b
  6330  00354C  1B90               	xorwf	___ftdiv@sign& (0+255),f,b
  6331                           
  6332                           ; BSR set to: 0
  6333  00354E  0E80               	movlw	128
  6334  003550  1790               	andwf	___ftdiv@sign& (0+255),f,b
  6335                           
  6336                           ; BSR set to: 0
  6337  003552  8F83               	bsf	(___ftdiv@f1+1)& (0+255),7,b
  6338                           
  6339                           ; BSR set to: 0
  6340  003554  0EFF               	movlw	255
  6341  003556  1782               	andwf	___ftdiv@f1& (0+255),f,b
  6342  003558  0EFF               	movlw	255
  6343  00355A  1783               	andwf	(___ftdiv@f1+1)& (0+255),f,b
  6344  00355C  0E00               	movlw	0
  6345  00355E  1784               	andwf	(___ftdiv@f1+2)& (0+255),f,b
  6346                           
  6347                           ; BSR set to: 0
  6348  003560  8F86               	bsf	(___ftdiv@f2+1)& (0+255),7,b
  6349                           
  6350                           ; BSR set to: 0
  6351  003562  0EFF               	movlw	255
  6352  003564  1785               	andwf	___ftdiv@f2& (0+255),f,b
  6353  003566  0EFF               	movlw	255
  6354  003568  1786               	andwf	(___ftdiv@f2+1)& (0+255),f,b
  6355  00356A  0E00               	movlw	0
  6356  00356C  1787               	andwf	(___ftdiv@f2+2)& (0+255),f,b
  6357                           
  6358                           ; BSR set to: 0
  6359  00356E  0E18               	movlw	24
  6360  003570  6F8B               	movwf	___ftdiv@cntr& (0+255),b
  6361  003572                     l5972:
  6362                           
  6363                           ; BSR set to: 0
  6364  003572  90D8               	bcf	status,0,c
  6365  003574  378C               	rlcf	___ftdiv@f3& (0+255),f,b
  6366  003576  378D               	rlcf	(___ftdiv@f3+1)& (0+255),f,b
  6367  003578  378E               	rlcf	(___ftdiv@f3+2)& (0+255),f,b
  6368                           
  6369                           ; BSR set to: 0
  6370  00357A  5185               	movf	___ftdiv@f2& (0+255),w,b
  6371  00357C  5D82               	subwf	___ftdiv@f1& (0+255),w,b
  6372  00357E  5186               	movf	(___ftdiv@f2+1)& (0+255),w,b
  6373  003580  5983               	subwfb	(___ftdiv@f1+1)& (0+255),w,b
  6374  003582  5187               	movf	(___ftdiv@f2+2)& (0+255),w,b
  6375  003584  5984               	subwfb	(___ftdiv@f1+2)& (0+255),w,b
  6376  003586  A0D8               	btfss	status,0,c
  6377  003588  D007               	goto	l626
  6378                           
  6379                           ; BSR set to: 0
  6380  00358A  5185               	movf	___ftdiv@f2& (0+255),w,b
  6381  00358C  5F82               	subwf	___ftdiv@f1& (0+255),f,b
  6382  00358E  5186               	movf	(___ftdiv@f2+1)& (0+255),w,b
  6383  003590  5B83               	subwfb	(___ftdiv@f1+1)& (0+255),f,b
  6384  003592  5187               	movf	(___ftdiv@f2+2)& (0+255),w,b
  6385  003594  5B84               	subwfb	(___ftdiv@f1+2)& (0+255),f,b
  6386                           
  6387                           ; BSR set to: 0
  6388  003596  818C               	bsf	___ftdiv@f3& (0+255),0,b
  6389  003598                     l626:
  6390                           
  6391                           ; BSR set to: 0
  6392  003598  90D8               	bcf	status,0,c
  6393  00359A  3782               	rlcf	___ftdiv@f1& (0+255),f,b
  6394  00359C  3783               	rlcf	(___ftdiv@f1+1)& (0+255),f,b
  6395  00359E  3784               	rlcf	(___ftdiv@f1+2)& (0+255),f,b
  6396                           
  6397                           ; BSR set to: 0
  6398  0035A0  2F8B               	decfsz	___ftdiv@cntr& (0+255),f,b
  6399  0035A2  D7E7               	goto	l5972
  6400                           
  6401                           ; BSR set to: 0
  6402  0035A4  C08C  F07A         	movff	___ftdiv@f3,___ftpack@arg
  6403  0035A8  C08D  F07B         	movff	___ftdiv@f3+1,___ftpack@arg+1
  6404  0035AC  C08E  F07C         	movff	___ftdiv@f3+2,___ftpack@arg+2
  6405  0035B0  C08F  F07D         	movff	___ftdiv@exp,___ftpack@exp
  6406  0035B4  C090  F07E         	movff	___ftdiv@sign,___ftpack@sign
  6407  0035B8  EC25  F01C         	call	___ftpack	;wreg free
  6408  0035BC  C07A  F082         	movff	?___ftpack,?___ftdiv
  6409  0035C0  C07B  F083         	movff	?___ftpack+1,?___ftdiv+1
  6410  0035C4  C07C  F084         	movff	?___ftpack+2,?___ftdiv+2
  6411                           
  6412                           ; BSR set to: 0
  6413  0035C8  0012               	return		;funcret
  6414  0035CA                     __end_of___ftdiv:
  6415                           	callstack 0
  6416                           
  6417 ;; *************** function ___ftpack *****************
  6418 ;; Defined at:
  6419 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\float.c"
  6420 ;; Parameters:    Size  Location     Type
  6421 ;;  arg             3   26[BANK0 ] unsigned um
  6422 ;;  exp             1   29[BANK0 ] unsigned char 
  6423 ;;  sign            1   30[BANK0 ] unsigned char 
  6424 ;; Auto vars:     Size  Location     Type
  6425 ;;		None
  6426 ;; Return value:  Size  Location     Type
  6427 ;;                  3   26[BANK0 ] float 
  6428 ;; Registers used:
  6429 ;;		wreg, status,2, status,0
  6430 ;; Tracked objects:
  6431 ;;		On entry : 3F/0
  6432 ;;		On exit  : 3F/0
  6433 ;;		Unchanged: 0/0
  6434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6435 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6436 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6437 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6438 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6439 ;;Total ram usage:        8 bytes
  6440 ;; Hardware stack levels used: 1
  6441 ;; Hardware stack levels required when called: 5
  6442 ;; This function calls:
  6443 ;;		Nothing
  6444 ;; This function is called by:
  6445 ;;		___ftadd
  6446 ;;		___ftdiv
  6447 ;;		___ftmul
  6448 ;;		___lltoft
  6449 ;; This function uses a non-reentrant model
  6450 ;;
  6451                           
  6452                           	psect	text25
  6453  00384A                     __ptext25:
  6454                           	callstack 0
  6455  00384A                     ___ftpack:
  6456                           	callstack 22
  6457                           
  6458                           ; BSR set to: 0
  6459                           
  6460                           ; BSR set to: 0
  6461                           ;incstack = 0
  6462  00384A  517D               	movf	___ftpack@exp& (0+255),w,b
  6463  00384C  B4D8               	btfsc	status,2,c
  6464  00384E  D005               	goto	u6060
  6465                           
  6466                           ; BSR set to: 0
  6467  003850  517A               	movf	___ftpack@arg& (0+255),w,b
  6468  003852  117B               	iorwf	(___ftpack@arg+1)& (0+255),w,b
  6469  003854  117C               	iorwf	(___ftpack@arg+2)& (0+255),w,b
  6470  003856  A4D8               	btfss	status,2,c
  6471  003858  D00C               	goto	l5116
  6472  00385A                     u6060:
  6473                           
  6474                           ; BSR set to: 0
  6475  00385A  0E00               	movlw	0
  6476  00385C  6F7A               	movwf	?___ftpack& (0+255),b
  6477  00385E  0E00               	movlw	0
  6478  003860  6F7B               	movwf	(?___ftpack+1)& (0+255),b
  6479  003862  0E00               	movlw	0
  6480  003864  6F7C               	movwf	(?___ftpack+2)& (0+255),b
  6481  003866  0012               	return	
  6482  003868                     l5114:
  6483                           
  6484                           ; BSR set to: 0
  6485  003868  2B7D               	incf	___ftpack@exp& (0+255),f,b
  6486  00386A  90D8               	bcf	status,0,c
  6487  00386C  337C               	rrcf	(___ftpack@arg+2)& (0+255),f,b
  6488  00386E  337B               	rrcf	(___ftpack@arg+1)& (0+255),f,b
  6489  003870  337A               	rrcf	___ftpack@arg& (0+255),f,b
  6490  003872                     l5116:
  6491                           
  6492                           ; BSR set to: 0
  6493  003872  0E00               	movlw	0
  6494  003874  157A               	andwf	___ftpack@arg& (0+255),w,b
  6495  003876  6F7F               	movwf	??___ftpack& (0+255),b
  6496  003878  0E00               	movlw	0
  6497  00387A  157B               	andwf	(___ftpack@arg+1)& (0+255),w,b
  6498  00387C  6F80               	movwf	(??___ftpack+1)& (0+255),b
  6499  00387E  0EFE               	movlw	254
  6500  003880  157C               	andwf	(___ftpack@arg+2)& (0+255),w,b
  6501  003882  6F81               	movwf	(??___ftpack+2)& (0+255),b
  6502  003884  517F               	movf	??___ftpack& (0+255),w,b
  6503  003886  1180               	iorwf	(??___ftpack+1)& (0+255),w,b
  6504  003888  1181               	iorwf	(??___ftpack+2)& (0+255),w,b
  6505  00388A  B4D8               	btfsc	status,2,c
  6506  00388C  D00C               	goto	l5122
  6507  00388E  D7EC               	goto	l5114
  6508  003890                     l5118:
  6509                           
  6510                           ; BSR set to: 0
  6511  003890  2B7D               	incf	___ftpack@exp& (0+255),f,b
  6512                           
  6513                           ; BSR set to: 0
  6514  003892  0E01               	movlw	1
  6515  003894  277A               	addwf	___ftpack@arg& (0+255),f,b
  6516  003896  0E00               	movlw	0
  6517  003898  237B               	addwfc	(___ftpack@arg+1)& (0+255),f,b
  6518  00389A  0E00               	movlw	0
  6519  00389C  237C               	addwfc	(___ftpack@arg+2)& (0+255),f,b
  6520  00389E  90D8               	bcf	status,0,c
  6521  0038A0  337C               	rrcf	(___ftpack@arg+2)& (0+255),f,b
  6522  0038A2  337B               	rrcf	(___ftpack@arg+1)& (0+255),f,b
  6523  0038A4  337A               	rrcf	___ftpack@arg& (0+255),f,b
  6524  0038A6                     l5122:
  6525                           
  6526                           ; BSR set to: 0
  6527  0038A6  0E00               	movlw	0
  6528  0038A8  157A               	andwf	___ftpack@arg& (0+255),w,b
  6529  0038AA  6F7F               	movwf	??___ftpack& (0+255),b
  6530  0038AC  0E00               	movlw	0
  6531  0038AE  157B               	andwf	(___ftpack@arg+1)& (0+255),w,b
  6532  0038B0  6F80               	movwf	(??___ftpack+1)& (0+255),b
  6533  0038B2  0EFF               	movlw	255
  6534  0038B4  157C               	andwf	(___ftpack@arg+2)& (0+255),w,b
  6535  0038B6  6F81               	movwf	(??___ftpack+2)& (0+255),b
  6536  0038B8  517F               	movf	??___ftpack& (0+255),w,b
  6537  0038BA  1180               	iorwf	(??___ftpack+1)& (0+255),w,b
  6538  0038BC  1181               	iorwf	(??___ftpack+2)& (0+255),w,b
  6539  0038BE  B4D8               	btfsc	status,2,c
  6540  0038C0  D006               	goto	l5126
  6541  0038C2  D7E6               	goto	l5118
  6542  0038C4                     l5124:
  6543                           
  6544                           ; BSR set to: 0
  6545  0038C4  077D               	decf	___ftpack@exp& (0+255),f,b
  6546  0038C6  90D8               	bcf	status,0,c
  6547  0038C8  377A               	rlcf	___ftpack@arg& (0+255),f,b
  6548  0038CA  377B               	rlcf	(___ftpack@arg+1)& (0+255),f,b
  6549  0038CC  377C               	rlcf	(___ftpack@arg+2)& (0+255),f,b
  6550  0038CE                     l5126:
  6551                           
  6552                           ; BSR set to: 0
  6553  0038CE  BF7B               	btfsc	(___ftpack@arg+1)& (0+255),7,b
  6554  0038D0  D003               	goto	u6100
  6555                           
  6556                           ; BSR set to: 0
  6557  0038D2  0E02               	movlw	2
  6558  0038D4  617D               	cpfslt	___ftpack@exp& (0+255),b
  6559  0038D6  D7F6               	goto	l5124
  6560  0038D8                     u6100:
  6561                           
  6562                           ; BSR set to: 0
  6563  0038D8  A17D               	btfss	___ftpack@exp& (0+255),0,b
  6564                           
  6565                           ; BSR set to: 0
  6566  0038DA  9F7B               	bcf	(___ftpack@arg+1)& (0+255),7,b
  6567                           
  6568                           ; BSR set to: 0
  6569  0038DC  90D8               	bcf	status,0,c
  6570  0038DE  337D               	rrcf	___ftpack@exp& (0+255),f,b
  6571  0038E0  517D               	movf	___ftpack@exp& (0+255),w,b
  6572  0038E2  137C               	iorwf	(___ftpack@arg+2)& (0+255),f,b
  6573                           
  6574                           ; BSR set to: 0
  6575  0038E4  517E               	movf	___ftpack@sign& (0+255),w,b
  6576  0038E6  A4D8               	btfss	status,2,c
  6577                           
  6578                           ; BSR set to: 0
  6579  0038E8  8F7C               	bsf	(___ftpack@arg+2)& (0+255),7,b
  6580                           
  6581                           ; BSR set to: 0
  6582  0038EA  C07A  F07A         	movff	___ftpack@arg,?___ftpack
  6583  0038EE  C07B  F07B         	movff	___ftpack@arg+1,?___ftpack+1
  6584  0038F2  C07C  F07C         	movff	___ftpack@arg+2,?___ftpack+2
  6585                           
  6586                           ; BSR set to: 0
  6587  0038F6  0012               	return		;funcret
  6588  0038F8                     __end_of___ftpack:
  6589                           	callstack 0
  6590                           
  6591 ;; *************** function _DataLCD *****************
  6592 ;; Defined at:
  6593 ;;		line 274 in file "PruevaServosPic.c"
  6594 ;; Parameters:    Size  Location     Type
  6595 ;;		None
  6596 ;; Auto vars:     Size  Location     Type
  6597 ;;		None
  6598 ;; Return value:  Size  Location     Type
  6599 ;;                  1    wreg      void 
  6600 ;; Registers used:
  6601 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6602 ;; Tracked objects:
  6603 ;;		On entry : 3F/1
  6604 ;;		On exit  : 3F/0
  6605 ;;		Unchanged: 0/0
  6606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6607 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6608 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6609 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6610 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6611 ;;Total ram usage:        2 bytes
  6612 ;; Hardware stack levels used: 1
  6613 ;; Hardware stack levels required when called: 7
  6614 ;; This function calls:
  6615 ;;		_WriteLCD
  6616 ;;		_strlen
  6617 ;; This function is called by:
  6618 ;;		_main
  6619 ;; This function uses a non-reentrant model
  6620 ;;
  6621                           
  6622                           	psect	text26
  6623  004186                     __ptext26:
  6624                           	callstack 0
  6625  004186                     _DataLCD:
  6626                           	callstack 23
  6627                           
  6628                           ; BSR set to: 1
  6629                           ;PruevaServosPic.c: 275: for (i = 0; i <= strlen(text)-1; i++) {
  6630                           
  6631                           ; BSR set to: 0
  6632                           ;incstack = 0
  6633  004186  0E00               	movlw	0
  6634  004188  0100               	movlb	0	; () banked
  6635  00418A  6FDA               	movwf	(_i+1)& (0+255),b
  6636  00418C  0E00               	movlw	0
  6637  00418E  6FD9               	movwf	_i& (0+255),b
  6638  004190  D00C               	goto	l6716
  6639  004192                     l6712:
  6640                           
  6641                           ; BSR set to: 0
  6642                           ;PruevaServosPic.c: 276: WriteLCD(text[i]);
  6643  004192  0E1F               	movlw	low _text
  6644  004194  25D9               	addwf	_i& (0+255),w,b
  6645  004196  6ED9               	movwf	fsr2l,c
  6646  004198  0E01               	movlw	high _text
  6647  00419A  21DA               	addwfc	(_i+1)& (0+255),w,b
  6648  00419C  6EDA               	movwf	fsr2h,c
  6649  00419E  50DF               	movf	indf2,w,c
  6650  0041A0  EC88  F022         	call	_WriteLCD
  6651  0041A4  0100               	movlb	0	; () banked
  6652  0041A6  4BD9               	infsnz	_i& (0+255),f,b
  6653  0041A8  2BDA               	incf	(_i+1)& (0+255),f,b
  6654  0041AA                     l6716:
  6655                           
  6656                           ; BSR set to: 0
  6657  0041AA  0EFF               	movlw	255
  6658  0041AC  6F7E               	movwf	??_DataLCD& (0+255),b
  6659  0041AE  0EFF               	movlw	255
  6660  0041B0  6F7F               	movwf	(??_DataLCD+1)& (0+255),b
  6661  0041B2  0E1F               	movlw	low _text
  6662  0041B4  6F7A               	movwf	strlen@s& (0+255),b
  6663  0041B6  0E01               	movlw	high _text
  6664  0041B8  6F7B               	movwf	(strlen@s+1)& (0+255),b
  6665  0041BA  ECBE  F021         	call	_strlen	;wreg free
  6666  0041BE  517E               	movf	??_DataLCD& (0+255),w,b
  6667  0041C0  277A               	addwf	?_strlen& (0+255),f,b
  6668  0041C2  517F               	movf	(??_DataLCD+1)& (0+255),w,b
  6669  0041C4  237B               	addwfc	(?_strlen+1)& (0+255),f,b
  6670  0041C6  51D9               	movf	_i& (0+255),w,b
  6671  0041C8  5D7A               	subwf	?_strlen& (0+255),w,b
  6672  0041CA  51DA               	movf	(_i+1)& (0+255),w,b
  6673  0041CC  597B               	subwfb	(?_strlen+1)& (0+255),w,b
  6674  0041CE  A0D8               	btfss	status,0,c
  6675  0041D0  0012               	return	
  6676  0041D2  D7DF               	goto	l6712
  6677  0041D4                     __end_of_DataLCD:
  6678                           	callstack 0
  6679                           
  6680 ;; *************** function _strlen *****************
  6681 ;; Defined at:
  6682 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\strlen.c"
  6683 ;; Parameters:    Size  Location     Type
  6684 ;;  s               2   26[BANK0 ] PTR const unsigned char 
  6685 ;;		 -> text(20), 
  6686 ;; Auto vars:     Size  Location     Type
  6687 ;;  cp              2   28[BANK0 ] PTR const unsigned char 
  6688 ;;		 -> text(20), 
  6689 ;; Return value:  Size  Location     Type
  6690 ;;                  2   26[BANK0 ] unsigned int 
  6691 ;; Registers used:
  6692 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6693 ;; Tracked objects:
  6694 ;;		On entry : 3F/0
  6695 ;;		On exit  : 3F/0
  6696 ;;		Unchanged: 0/0
  6697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6698 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6699 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6700 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6701 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6702 ;;Total ram usage:        4 bytes
  6703 ;; Hardware stack levels used: 1
  6704 ;; Hardware stack levels required when called: 5
  6705 ;; This function calls:
  6706 ;;		Nothing
  6707 ;; This function is called by:
  6708 ;;		_DataLCD
  6709 ;; This function uses a non-reentrant model
  6710 ;;
  6711                           
  6712                           	psect	text27
  6713  00437C                     __ptext27:
  6714                           	callstack 0
  6715  00437C                     _strlen:
  6716                           	callstack 24
  6717                           
  6718                           ; BSR set to: 0
  6719                           
  6720                           ; BSR set to: 0
  6721                           ;incstack = 0
  6722  00437C  C07A  F07C         	movff	strlen@s,strlen@cp
  6723  004380  C07B  F07D         	movff	strlen@s+1,strlen@cp+1
  6724  004384  D002               	goto	l5718
  6725  004386                     l5716:
  6726                           
  6727                           ; BSR set to: 0
  6728  004386  4B7C               	infsnz	strlen@cp& (0+255),f,b
  6729  004388  2B7D               	incf	(strlen@cp+1)& (0+255),f,b
  6730  00438A                     l5718:
  6731                           
  6732                           ; BSR set to: 0
  6733  00438A  C07C  FFD9         	movff	strlen@cp,fsr2l
  6734  00438E  C07D  FFDA         	movff	strlen@cp+1,fsr2h
  6735  004392  50DF               	movf	indf2,w,c
  6736  004394  A4D8               	btfss	status,2,c
  6737  004396  D7F7               	goto	l5716
  6738                           
  6739                           ; BSR set to: 0
  6740  004398  517A               	movf	strlen@s& (0+255),w,b
  6741  00439A  5D7C               	subwf	strlen@cp& (0+255),w,b
  6742  00439C  6F7A               	movwf	?_strlen& (0+255),b
  6743  00439E  517B               	movf	(strlen@s+1)& (0+255),w,b
  6744  0043A0  597D               	subwfb	(strlen@cp+1)& (0+255),w,b
  6745  0043A2  6F7B               	movwf	(?_strlen+1)& (0+255),b
  6746                           
  6747                           ; BSR set to: 0
  6748  0043A4  0012               	return		;funcret
  6749  0043A6                     __end_of_strlen:
  6750                           	callstack 0
  6751                           
  6752 ;; *************** function _WriteLCD *****************
  6753 ;; Defined at:
  6754 ;;		line 253 in file "PruevaServosPic.c"
  6755 ;; Parameters:    Size  Location     Type
  6756 ;;  word            1    wreg     unsigned char 
  6757 ;; Auto vars:     Size  Location     Type
  6758 ;;  word            1   28[BANK0 ] unsigned char 
  6759 ;; Return value:  Size  Location     Type
  6760 ;;                  1    wreg      void 
  6761 ;; Registers used:
  6762 ;;		wreg, status,2, status,0, cstack
  6763 ;; Tracked objects:
  6764 ;;		On entry : 3F/0
  6765 ;;		On exit  : 0/0
  6766 ;;		Unchanged: 0/0
  6767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6768 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6769 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6770 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6771 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6772 ;;Total ram usage:        1 bytes
  6773 ;; Hardware stack levels used: 1
  6774 ;; Hardware stack levels required when called: 6
  6775 ;; This function calls:
  6776 ;;		_LCD
  6777 ;; This function is called by:
  6778 ;;		_DataLCD
  6779 ;; This function uses a non-reentrant model
  6780 ;;
  6781                           
  6782                           	psect	text28
  6783  004510                     __ptext28:
  6784                           	callstack 0
  6785  004510                     _WriteLCD:
  6786                           	callstack 23
  6787                           
  6788                           ; BSR set to: 0
  6789                           ;incstack = 0
  6790                           ;WriteLCD@word stored from wreg
  6791  004510  6F7C               	movwf	WriteLCD@word& (0+255),b
  6792                           
  6793                           ;PruevaServosPic.c: 254: LATEbits.LATE1 = 1;
  6794  004512  828D               	bsf	141,1,c	;volatile
  6795                           
  6796                           ;PruevaServosPic.c: 255: LCD(word >> 4);
  6797  004514  0100               	movlb	0	; () banked
  6798  004516  397C               	swapf	WriteLCD@word& (0+255),w,b
  6799  004518  0B0F               	andlw	15
  6800  00451A  ECD3  F01C         	call	_LCD
  6801                           
  6802                           ;PruevaServosPic.c: 256: LCD(word & 0x0F);
  6803  00451E  0100               	movlb	0	; () banked
  6804  004520  517C               	movf	WriteLCD@word& (0+255),w,b
  6805  004522  0B0F               	andlw	15
  6806  004524  ECD3  F01C         	call	_LCD
  6807  004528  0012               	return		;funcret
  6808  00452A                     __end_of_WriteLCD:
  6809                           	callstack 0
  6810                           
  6811 ;; *************** function _LCD *****************
  6812 ;; Defined at:
  6813 ;;		line 259 in file "PruevaServosPic.c"
  6814 ;; Parameters:    Size  Location     Type
  6815 ;;  data            1    wreg     unsigned char 
  6816 ;; Auto vars:     Size  Location     Type
  6817 ;;  data            1   27[BANK0 ] unsigned char 
  6818 ;; Return value:  Size  Location     Type
  6819 ;;                  1    wreg      void 
  6820 ;; Registers used:
  6821 ;;		wreg, status,2, status,0, cstack
  6822 ;; Tracked objects:
  6823 ;;		On entry : 3F/0
  6824 ;;		On exit  : 0/0
  6825 ;;		Unchanged: 0/0
  6826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6827 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6828 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6829 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6830 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6831 ;;Total ram usage:        2 bytes
  6832 ;; Hardware stack levels used: 1
  6833 ;; Hardware stack levels required when called: 5
  6834 ;; This function calls:
  6835 ;;		Nothing
  6836 ;; This function is called by:
  6837 ;;		_SettingsLCD
  6838 ;;		_WriteLCD
  6839 ;; This function uses a non-reentrant model
  6840 ;;
  6841                           
  6842                           	psect	text29
  6843  0039A6                     __ptext29:
  6844                           	callstack 0
  6845  0039A6                     _LCD:
  6846                           	callstack 23
  6847                           
  6848                           ;incstack = 0
  6849                           ;LCD@data stored from wreg
  6850  0039A6  6F7B               	movwf	LCD@data& (0+255),b
  6851                           
  6852                           ;PruevaServosPic.c: 260: LATEbits.LATE0 = 1;
  6853  0039A8  808D               	bsf	141,0,c	;volatile
  6854                           
  6855                           ;PruevaServosPic.c: 261: _delay((unsigned long)((10)*(16000000/4000000.0)));
  6856  0039AA  0E0D               	movlw	13
  6857  0039AC                     u9087:
  6858  0039AC  2EE8               	decfsz	wreg,f,c
  6859  0039AE  D7FE               	bra	u9087
  6860  0039B0  F000               	nop	
  6861                           
  6862                           ;PruevaServosPic.c: 262: LATDbits.LATD0 = (data & 0x01);
  6863  0039B2  C07B  F07A         	movff	LCD@data,??_LCD
  6864  0039B6  0E01               	movlw	1
  6865  0039B8  0100               	movlb	0	; () banked
  6866  0039BA  177A               	andwf	??_LCD& (0+255),f,b
  6867  0039BC  508C               	movf	140,w,c	;volatile
  6868  0039BE  197A               	xorwf	??_LCD& (0+255),w,b
  6869  0039C0  0BFE               	andlw	-2
  6870  0039C2  197A               	xorwf	??_LCD& (0+255),w,b
  6871  0039C4  6E8C               	movwf	140,c	;volatile
  6872                           
  6873                           ; BSR set to: 0
  6874                           ;PruevaServosPic.c: 263: _delay((unsigned long)((10)*(16000000/4000000.0)));
  6875  0039C6  0E0D               	movlw	13
  6876  0039C8                     u9097:
  6877  0039C8  2EE8               	decfsz	wreg,f,c
  6878  0039CA  D7FE               	bra	u9097
  6879  0039CC  F000               	nop	
  6880                           
  6881                           ;PruevaServosPic.c: 264: LATDbits.LATD1 = (data & 0x02) >> 1;
  6882  0039CE  C07B  F07A         	movff	LCD@data,??_LCD
  6883  0039D2  0100               	movlb	0	; () banked
  6884  0039D4  90D8               	bcf	status,0,c
  6885  0039D6  337A               	rrcf	??_LCD& (0+255),f,b
  6886  0039D8  0E01               	movlw	1
  6887  0039DA  177A               	andwf	??_LCD& (0+255),f,b
  6888  0039DC  477A               	rlncf	??_LCD& (0+255),f,b
  6889  0039DE  508C               	movf	140,w,c	;volatile
  6890  0039E0  197A               	xorwf	??_LCD& (0+255),w,b
  6891  0039E2  0BFD               	andlw	-3
  6892  0039E4  197A               	xorwf	??_LCD& (0+255),w,b
  6893  0039E6  6E8C               	movwf	140,c	;volatile
  6894                           
  6895                           ; BSR set to: 0
  6896                           ;PruevaServosPic.c: 265: _delay((unsigned long)((10)*(16000000/4000000.0)));
  6897  0039E8  0E0D               	movlw	13
  6898  0039EA                     u9107:
  6899  0039EA  2EE8               	decfsz	wreg,f,c
  6900  0039EC  D7FE               	bra	u9107
  6901  0039EE  F000               	nop	
  6902                           
  6903                           ;PruevaServosPic.c: 266: LATDbits.LATD2 = (data & 0x04) >> 2;
  6904  0039F0  C07B  F07A         	movff	LCD@data,??_LCD
  6905  0039F4  0100               	movlb	0	; () banked
  6906  0039F6  90D8               	bcf	status,0,c
  6907  0039F8  337A               	rrcf	??_LCD& (0+255),f,b
  6908  0039FA  90D8               	bcf	status,0,c
  6909  0039FC  337A               	rrcf	??_LCD& (0+255),f,b
  6910  0039FE  0E01               	movlw	1
  6911  003A00  177A               	andwf	??_LCD& (0+255),f,b
  6912  003A02  477A               	rlncf	??_LCD& (0+255),f,b
  6913  003A04  477A               	rlncf	??_LCD& (0+255),f,b
  6914  003A06  508C               	movf	140,w,c	;volatile
  6915  003A08  197A               	xorwf	??_LCD& (0+255),w,b
  6916  003A0A  0BFB               	andlw	-5
  6917  003A0C  197A               	xorwf	??_LCD& (0+255),w,b
  6918  003A0E  6E8C               	movwf	140,c	;volatile
  6919                           
  6920                           ; BSR set to: 0
  6921                           ;PruevaServosPic.c: 267: _delay((unsigned long)((10)*(16000000/4000000.0)));
  6922  003A10  0E0D               	movlw	13
  6923  003A12                     u9117:
  6924  003A12  2EE8               	decfsz	wreg,f,c
  6925  003A14  D7FE               	bra	u9117
  6926  003A16  F000               	nop	
  6927                           
  6928                           ;PruevaServosPic.c: 268: LATDbits.LATD3 = (data & 0x08) >> 3;
  6929  003A18  C07B  F07A         	movff	LCD@data,??_LCD
  6930  003A1C  0100               	movlb	0	; () banked
  6931  003A1E  90D8               	bcf	status,0,c
  6932  003A20  337A               	rrcf	??_LCD& (0+255),f,b
  6933  003A22  90D8               	bcf	status,0,c
  6934  003A24  337A               	rrcf	??_LCD& (0+255),f,b
  6935  003A26  90D8               	bcf	status,0,c
  6936  003A28  337A               	rrcf	??_LCD& (0+255),f,b
  6937  003A2A  0E01               	movlw	1
  6938  003A2C  177A               	andwf	??_LCD& (0+255),f,b
  6939  003A2E  477A               	rlncf	??_LCD& (0+255),f,b
  6940  003A30  477A               	rlncf	??_LCD& (0+255),f,b
  6941  003A32  477A               	rlncf	??_LCD& (0+255),f,b
  6942  003A34  508C               	movf	140,w,c	;volatile
  6943  003A36  197A               	xorwf	??_LCD& (0+255),w,b
  6944  003A38  0BF7               	andlw	-9
  6945  003A3A  197A               	xorwf	??_LCD& (0+255),w,b
  6946  003A3C  6E8C               	movwf	140,c	;volatile
  6947                           
  6948                           ; BSR set to: 0
  6949                           ;PruevaServosPic.c: 269: _delay((unsigned long)((10)*(16000000/4000000.0)));
  6950  003A3E  0E0D               	movlw	13
  6951  003A40                     u9127:
  6952  003A40  2EE8               	decfsz	wreg,f,c
  6953  003A42  D7FE               	bra	u9127
  6954  003A44  F000               	nop	
  6955                           
  6956                           ;PruevaServosPic.c: 270: LATEbits.LATE0 = 0;
  6957  003A46  908D               	bcf	141,0,c	;volatile
  6958                           
  6959                           ;PruevaServosPic.c: 271: _delay((unsigned long)((10)*(16000000/4000000.0)));
  6960  003A48  0E0D               	movlw	13
  6961  003A4A                     u9137:
  6962  003A4A  2EE8               	decfsz	wreg,f,c
  6963  003A4C  D7FE               	bra	u9137
  6964  003A4E  F000               	nop	
  6965  003A50  0012               	return		;funcret
  6966  003A52                     __end_of_LCD:
  6967                           	callstack 0
  6968                           
  6969 ;; *************** function _TMR1_ISR *****************
  6970 ;; Defined at:
  6971 ;;		line 110 in file "PruevaServosPic.c"
  6972 ;; Parameters:    Size  Location     Type
  6973 ;;		None
  6974 ;; Auto vars:     Size  Location     Type
  6975 ;;  d               1   25[BANK0 ] unsigned char 
  6976 ;; Return value:  Size  Location     Type
  6977 ;;                  1    wreg      void 
  6978 ;; Registers used:
  6979 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6980 ;; Tracked objects:
  6981 ;;		On entry : 0/0
  6982 ;;		On exit  : 0/0
  6983 ;;		Unchanged: 0/0
  6984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6985 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6986 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6987 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6988 ;;      Totals:         8       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6989 ;;Total ram usage:       12 bytes
  6990 ;; Hardware stack levels used: 1
  6991 ;; Hardware stack levels required when called: 4
  6992 ;; This function calls:
  6993 ;;		___awtoft
  6994 ;;		___lwtoft
  6995 ;;		i2_DataLCD
  6996 ;;		i2_SettingsLCD
  6997 ;;		i2___ftadd
  6998 ;;		i2___ftmul
  6999 ;;		i2___fttol
  7000 ;;		i2___wmul
  7001 ;;		i2_sprintf
  7002 ;; This function is called by:
  7003 ;;		Interrupt level 2
  7004 ;; This function uses a non-reentrant model
  7005 ;;
  7006                           
  7007                           	psect	intcode
  7008  000008                     __pintcode:
  7009                           	callstack 0
  7010  000008                     _TMR1_ISR:
  7011                           	callstack 22
  7012                           
  7013                           ;incstack = 0
  7014  000008  825C               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  7015  00000A  CFD9 F053          	movff	fsr2l,??_TMR1_ISR
  7016  00000E  CFDA F054          	movff	fsr2h,??_TMR1_ISR+1
  7017  000012  CFF3 F055          	movff	prodl,??_TMR1_ISR+2
  7018  000016  CFF4 F056          	movff	prodh,??_TMR1_ISR+3
  7019  00001A  CFF6 F057          	movff	tblptrl,??_TMR1_ISR+4
  7020  00001E  CFF7 F058          	movff	tblptrh,??_TMR1_ISR+5
  7021  000022  CFF8 F059          	movff	tblptru,??_TMR1_ISR+6
  7022  000026  CFF5 F05A          	movff	tablat,??_TMR1_ISR+7
  7023                           
  7024                           ;PruevaServosPic.c: 111: unsigned char d;;PruevaServosPic.c: 112: if (TMR1IF) {
  7025  00002A  A09E               	btfss	3998,0,c	;volatile
  7026  00002C  D029               	goto	i2l108
  7027                           
  7028                           ;PruevaServosPic.c: 113: if (servo == 'A'){
  7029  00002E  0E41               	movlw	65
  7030  000030  185B               	xorwf	_servo^0,w,c
  7031  000032  A4D8               	btfss	status,2,c
  7032  000034  D010               	goto	i2l7006
  7033                           
  7034                           ;PruevaServosPic.c: 114: LATD7 = 0;
  7035  000036  9E8C               	bcf	3980,7,c	;volatile
  7036                           
  7037                           ;PruevaServosPic.c: 115: if (LATD6 == 1) {
  7038  000038  AC8C               	btfss	3980,6,c	;volatile
  7039  00003A  D006               	goto	i2l110
  7040                           
  7041                           ;PruevaServosPic.c: 116: TMR1 = th;
  7042  00003C  C0E1  FFCE         	movff	_th,4046	;volatile
  7043  000040  C0E2  FFCF         	movff	_th+1,4047	;volatile
  7044                           
  7045                           ;PruevaServosPic.c: 117: LATD6 = 0;
  7046  000044  9C8C               	bcf	3980,6,c	;volatile
  7047                           
  7048                           ;PruevaServosPic.c: 118: } else if (LATD6 == 0) {
  7049  000046  D007               	goto	i2l7006
  7050  000048                     i2l110:
  7051  000048  BC8C               	btfsc	3980,6,c	;volatile
  7052  00004A  D005               	goto	i2l7006
  7053                           
  7054                           ;PruevaServosPic.c: 119: TMR1 = tl;
  7055  00004C  C0DF  FFCE         	movff	_tl,4046	;volatile
  7056  000050  C0E0  FFCF         	movff	_tl+1,4047	;volatile
  7057                           
  7058                           ;PruevaServosPic.c: 120: LATD6 = 1;
  7059  000054  8C8C               	bsf	3980,6,c	;volatile
  7060  000056                     i2l7006:
  7061                           
  7062                           ;PruevaServosPic.c: 121: };PruevaServosPic.c: 122: };PruevaServosPic.c: 123: if (servo =
      +                          = 'B'){
  7063  000056  0E42               	movlw	66
  7064  000058  185B               	xorwf	_servo^0,w,c
  7065  00005A  A4D8               	btfss	status,2,c
  7066  00005C  D010               	goto	i2l113
  7067                           
  7068                           ;PruevaServosPic.c: 124: LATD6 = 0;
  7069  00005E  9C8C               	bcf	3980,6,c	;volatile
  7070                           
  7071                           ;PruevaServosPic.c: 125: if (LATD7 == 1) {
  7072  000060  AE8C               	btfss	3980,7,c	;volatile
  7073  000062  D006               	goto	i2l114
  7074                           
  7075                           ;PruevaServosPic.c: 126: TMR1 = th;
  7076  000064  C0E1  FFCE         	movff	_th,4046	;volatile
  7077  000068  C0E2  FFCF         	movff	_th+1,4047	;volatile
  7078                           
  7079                           ;PruevaServosPic.c: 127: LATD7 = 0;
  7080  00006C  9E8C               	bcf	3980,7,c	;volatile
  7081                           
  7082                           ;PruevaServosPic.c: 128: } else if (LATD7 == 0) {
  7083  00006E  D007               	goto	i2l113
  7084  000070                     i2l114:
  7085  000070  BE8C               	btfsc	3980,7,c	;volatile
  7086  000072  D005               	goto	i2l113
  7087                           
  7088                           ;PruevaServosPic.c: 129: TMR1 = tl;
  7089  000074  C0DF  FFCE         	movff	_tl,4046	;volatile
  7090  000078  C0E0  FFCF         	movff	_tl+1,4047	;volatile
  7091                           
  7092                           ;PruevaServosPic.c: 130: LATD7 = 1;
  7093  00007C  8E8C               	bsf	3980,7,c	;volatile
  7094  00007E                     i2l113:
  7095                           
  7096                           ;PruevaServosPic.c: 131: };PruevaServosPic.c: 132: };PruevaServosPic.c: 134: TMR1IF = 0;
  7097  00007E  909E               	bcf	3998,0,c	;volatile
  7098  000080                     i2l108:
  7099                           
  7100                           ;PruevaServosPic.c: 135: };PruevaServosPic.c: 137: if (RC1IF) {
  7101  000080  AA9E               	btfss	3998,5,c	;volatile
  7102  000082  D176               	goto	i2l139
  7103                           
  7104                           ;PruevaServosPic.c: 138: d = RCREG1;
  7105  000084  CFAE F079          	movff	4014,TMR1_ISR@d	;volatile
  7106                           
  7107                           ;PruevaServosPic.c: 139: if (d == 'A' || d == 'B'){
  7108  000088  0E41               	movlw	65
  7109  00008A  0100               	movlb	0	; () banked
  7110  00008C  1979               	xorwf	TMR1_ISR@d& (0+255),w,b
  7111  00008E  B4D8               	btfsc	status,2,c
  7112  000090  D004               	goto	i2u888_40
  7113                           
  7114                           ; BSR set to: 0
  7115  000092  0E42               	movlw	66
  7116  000094  1979               	xorwf	TMR1_ISR@d& (0+255),w,b
  7117  000096  A4D8               	btfss	status,2,c
  7118  000098  D003               	goto	i2l7020
  7119  00009A                     i2u888_40:
  7120                           
  7121                           ; BSR set to: 0
  7122                           ;PruevaServosPic.c: 140: servo = d;
  7123  00009A  C079  F05B         	movff	TMR1_ISR@d,_servo
  7124                           
  7125                           ;PruevaServosPic.c: 141: }
  7126  00009E  D168               	goto	i2l139
  7127  0000A0                     i2l7020:
  7128                           
  7129                           ; BSR set to: 0
  7130                           ;PruevaServosPic.c: 143: else if (d == '0' || d == '1' || d == '2' || d == '3' || d == '
      +                          4' || d == '5' || d == '6' || d == '7' || d == '8' || d == '9') {
  7131  0000A0  0E30               	movlw	48
  7132  0000A2  1979               	xorwf	TMR1_ISR@d& (0+255),w,b
  7133  0000A4  B4D8               	btfsc	status,2,c
  7134  0000A6  D024               	goto	i2u898_40
  7135                           
  7136                           ; BSR set to: 0
  7137  0000A8  0E31               	movlw	49
  7138  0000AA  1979               	xorwf	TMR1_ISR@d& (0+255),w,b
  7139  0000AC  B4D8               	btfsc	status,2,c
  7140  0000AE  D020               	goto	i2u898_40
  7141                           
  7142                           ; BSR set to: 0
  7143  0000B0  0E32               	movlw	50
  7144  0000B2  1979               	xorwf	TMR1_ISR@d& (0+255),w,b
  7145  0000B4  B4D8               	btfsc	status,2,c
  7146  0000B6  D01C               	goto	i2u898_40
  7147                           
  7148                           ; BSR set to: 0
  7149  0000B8  0E33               	movlw	51
  7150  0000BA  1979               	xorwf	TMR1_ISR@d& (0+255),w,b
  7151  0000BC  B4D8               	btfsc	status,2,c
  7152  0000BE  D018               	goto	i2u898_40
  7153                           
  7154                           ; BSR set to: 0
  7155  0000C0  0E34               	movlw	52
  7156  0000C2  1979               	xorwf	TMR1_ISR@d& (0+255),w,b
  7157  0000C4  B4D8               	btfsc	status,2,c
  7158  0000C6  D014               	goto	i2u898_40
  7159                           
  7160                           ; BSR set to: 0
  7161  0000C8  0E35               	movlw	53
  7162  0000CA  1979               	xorwf	TMR1_ISR@d& (0+255),w,b
  7163  0000CC  B4D8               	btfsc	status,2,c
  7164  0000CE  D010               	goto	i2u898_40
  7165                           
  7166                           ; BSR set to: 0
  7167  0000D0  0E36               	movlw	54
  7168  0000D2  1979               	xorwf	TMR1_ISR@d& (0+255),w,b
  7169  0000D4  B4D8               	btfsc	status,2,c
  7170  0000D6  D00C               	goto	i2u898_40
  7171                           
  7172                           ; BSR set to: 0
  7173  0000D8  0E37               	movlw	55
  7174  0000DA  1979               	xorwf	TMR1_ISR@d& (0+255),w,b
  7175  0000DC  B4D8               	btfsc	status,2,c
  7176  0000DE  D008               	goto	i2u898_40
  7177                           
  7178                           ; BSR set to: 0
  7179  0000E0  0E38               	movlw	56
  7180  0000E2  1979               	xorwf	TMR1_ISR@d& (0+255),w,b
  7181  0000E4  B4D8               	btfsc	status,2,c
  7182  0000E6  D004               	goto	i2u898_40
  7183                           
  7184                           ; BSR set to: 0
  7185  0000E8  0E39               	movlw	57
  7186  0000EA  1979               	xorwf	TMR1_ISR@d& (0+255),w,b
  7187  0000EC  A4D8               	btfss	status,2,c
  7188  0000EE  D0A9               	goto	i2l7062
  7189  0000F0                     i2u898_40:
  7190                           
  7191                           ; BSR set to: 0
  7192                           ;PruevaServosPic.c: 144: if (flag == 1) {
  7193  0000F0  05E3               	decf	_flag& (0+255),w,b
  7194  0000F2  11E4               	iorwf	(_flag+1)& (0+255),w,b
  7195  0000F4  A4D8               	btfss	status,2,c
  7196  0000F6  D00A               	goto	i2l7046
  7197                           
  7198                           ; BSR set to: 0
  7199                           ;PruevaServosPic.c: 145: a = d - 48;
  7200  0000F8  0ED0               	movlw	208
  7201  0000FA  2579               	addwf	TMR1_ISR@d& (0+255),w,b
  7202  0000FC  6FDD               	movwf	_a& (0+255),b
  7203  0000FE  6BDE               	clrf	(_a+1)& (0+255),b
  7204  000100  0EFF               	movlw	255
  7205  000102  23DE               	addwfc	(_a+1)& (0+255),f,b
  7206                           
  7207                           ; BSR set to: 0
  7208                           ;PruevaServosPic.c: 146: flag = 2;
  7209  000104  0E00               	movlw	0
  7210  000106  6FE4               	movwf	(_flag+1)& (0+255),b
  7211  000108  0E02               	movlw	2
  7212  00010A  D0A2               	goto	L5
  7213  00010C                     i2l7046:
  7214                           
  7215                           ; BSR set to: 0
  7216                           ;PruevaServosPic.c: 148: else if(flag == 2){
  7217  00010C  0E02               	movlw	2
  7218  00010E  19E3               	xorwf	_flag& (0+255),w,b
  7219  000110  11E4               	iorwf	(_flag+1)& (0+255),w,b
  7220  000112  A4D8               	btfss	status,2,c
  7221  000114  D016               	goto	i2l7050
  7222                           
  7223                           ; BSR set to: 0
  7224                           ;PruevaServosPic.c: 149: a = (a * 10) + (d - 48);
  7225  000116  C0DD  F001         	movff	_a,i2___wmul@multiplier
  7226  00011A  C0DE  F002         	movff	_a+1,i2___wmul@multiplier+1
  7227  00011E  0E00               	movlw	0
  7228  000120  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  7229  000122  0E0A               	movlw	10
  7230  000124  6E03               	movwf	i2___wmul@multiplicand^0,c
  7231  000126  EC23  F022         	call	i2___wmul	;wreg free
  7232  00012A  0100               	movlb	0	; () banked
  7233  00012C  5179               	movf	TMR1_ISR@d& (0+255),w,b
  7234  00012E  2601               	addwf	?i2___wmul^0,f,c
  7235  000130  0E00               	movlw	0
  7236  000132  2202               	addwfc	(?i2___wmul+1)^0,f,c
  7237  000134  0ED0               	movlw	208
  7238  000136  2401               	addwf	?i2___wmul^0,w,c
  7239  000138  6FDD               	movwf	_a& (0+255),b
  7240  00013A  0EFF               	movlw	255
  7241  00013C  2002               	addwfc	(?i2___wmul+1)^0,w,c
  7242  00013E  6FDE               	movwf	(_a+1)& (0+255),b
  7243                           
  7244                           ;PruevaServosPic.c: 150: }
  7245  000140  D117               	goto	i2l139
  7246  000142                     i2l7050:
  7247                           
  7248                           ; BSR set to: 0
  7249                           ;PruevaServosPic.c: 152: else if(flag == 3){
  7250  000142  0E03               	movlw	3
  7251  000144  19E3               	xorwf	_flag& (0+255),w,b
  7252  000146  11E4               	iorwf	(_flag+1)& (0+255),w,b
  7253  000148  A4D8               	btfss	status,2,c
  7254  00014A  D03B               	goto	i2l7056
  7255                           
  7256                           ; BSR set to: 0
  7257                           ;PruevaServosPic.c: 153: a = a + (d-48)*0.1;
  7258  00014C  0ECD               	movlw	205
  7259  00014E  6E12               	movwf	i2___ftmul@f2^0,c
  7260  000150  0ECC               	movlw	204
  7261  000152  6E13               	movwf	(i2___ftmul@f2+1)^0,c
  7262  000154  0E3D               	movlw	61
  7263  000156  6E14               	movwf	(i2___ftmul@f2+2)^0,c
  7264  000158  0ED0               	movlw	208
  7265  00015A  2579               	addwf	TMR1_ISR@d& (0+255),w,b
  7266  00015C  6E09               	movwf	___awtoft@c^0,c
  7267  00015E  6A0A               	clrf	(___awtoft@c+1)^0,c
  7268  000160  0EFF               	movlw	255
  7269  000162  220A               	addwfc	(___awtoft@c+1)^0,f,c
  7270  000164  EC8C  F021         	call	___awtoft	;wreg free
  7271  000168  C009  F00F         	movff	?___awtoft,i2___ftmul@f1
  7272  00016C  C00A  F010         	movff	?___awtoft+1,i2___ftmul@f1+1
  7273  000170  C00B  F011         	movff	?___awtoft+2,i2___ftmul@f1+2
  7274  000174  EC7E  F019         	call	i2___ftmul	;wreg free
  7275  000178  C00F  F02F         	movff	?i2___ftmul,i2___ftadd@f2
  7276  00017C  C010  F030         	movff	?i2___ftmul+1,i2___ftadd@f2+1
  7277  000180  C011  F031         	movff	?i2___ftmul+2,i2___ftadd@f2+2
  7278  000184  C0DD  F009         	movff	_a,___lwtoft@c
  7279  000188  C0DE  F00A         	movff	_a+1,___lwtoft@c+1
  7280  00018C  EC48  F022         	call	___lwtoft	;wreg free
  7281  000190  C009  F02C         	movff	?___lwtoft,i2___ftadd@f1
  7282  000194  C00A  F02D         	movff	?___lwtoft+1,i2___ftadd@f1+1
  7283  000198  C00B  F02E         	movff	?___lwtoft+2,i2___ftadd@f1+2
  7284  00019C  ECB7  F016         	call	i2___ftadd	;wreg free
  7285  0001A0  C02C  F038         	movff	?i2___ftadd,i2___fttol@f1
  7286  0001A4  C02D  F039         	movff	?i2___ftadd+1,i2___fttol@f1+1
  7287  0001A8  C02E  F03A         	movff	?i2___ftadd+2,i2___fttol@f1+2
  7288  0001AC  ECBC  F01B         	call	i2___fttol	;wreg free
  7289  0001B0  C038  F0DD         	movff	?i2___fttol,_a
  7290  0001B4  C039  F0DE         	movff	?i2___fttol+1,_a+1
  7291                           
  7292                           ;PruevaServosPic.c: 154: flag = 4;
  7293  0001B8  0E00               	movlw	0
  7294  0001BA  0100               	movlb	0	; () banked
  7295  0001BC  6FE4               	movwf	(_flag+1)& (0+255),b
  7296  0001BE  0E04               	movlw	4
  7297  0001C0  D047               	goto	L5
  7298  0001C2                     i2l7056:
  7299                           
  7300                           ; BSR set to: 0
  7301                           ;PruevaServosPic.c: 156: else if(flag == 4){
  7302  0001C2  0E04               	movlw	4
  7303  0001C4  19E3               	xorwf	_flag& (0+255),w,b
  7304  0001C6  11E4               	iorwf	(_flag+1)& (0+255),w,b
  7305  0001C8  A4D8               	btfss	status,2,c
  7306  0001CA  D0D2               	goto	i2l139
  7307                           
  7308                           ; BSR set to: 0
  7309                           ;PruevaServosPic.c: 157: a = a + (d-48)*0.01;
  7310  0001CC  0ED7               	movlw	215
  7311  0001CE  6E12               	movwf	i2___ftmul@f2^0,c
  7312  0001D0  0E23               	movlw	35
  7313  0001D2  6E13               	movwf	(i2___ftmul@f2+1)^0,c
  7314  0001D4  0E3C               	movlw	60
  7315  0001D6  6E14               	movwf	(i2___ftmul@f2+2)^0,c
  7316  0001D8  0ED0               	movlw	208
  7317  0001DA  2579               	addwf	TMR1_ISR@d& (0+255),w,b
  7318  0001DC  6E09               	movwf	___awtoft@c^0,c
  7319  0001DE  6A0A               	clrf	(___awtoft@c+1)^0,c
  7320  0001E0  0EFF               	movlw	255
  7321  0001E2  220A               	addwfc	(___awtoft@c+1)^0,f,c
  7322  0001E4  EC8C  F021         	call	___awtoft	;wreg free
  7323  0001E8  C009  F00F         	movff	?___awtoft,i2___ftmul@f1
  7324  0001EC  C00A  F010         	movff	?___awtoft+1,i2___ftmul@f1+1
  7325  0001F0  C00B  F011         	movff	?___awtoft+2,i2___ftmul@f1+2
  7326  0001F4  EC7E  F019         	call	i2___ftmul	;wreg free
  7327  0001F8  C00F  F02F         	movff	?i2___ftmul,i2___ftadd@f2
  7328  0001FC  C010  F030         	movff	?i2___ftmul+1,i2___ftadd@f2+1
  7329  000200  C011  F031         	movff	?i2___ftmul+2,i2___ftadd@f2+2
  7330  000204  C0DD  F009         	movff	_a,___lwtoft@c
  7331  000208  C0DE  F00A         	movff	_a+1,___lwtoft@c+1
  7332  00020C  EC48  F022         	call	___lwtoft	;wreg free
  7333  000210  C009  F02C         	movff	?___lwtoft,i2___ftadd@f1
  7334  000214  C00A  F02D         	movff	?___lwtoft+1,i2___ftadd@f1+1
  7335  000218  C00B  F02E         	movff	?___lwtoft+2,i2___ftadd@f1+2
  7336  00021C  ECB7  F016         	call	i2___ftadd	;wreg free
  7337  000220  C02C  F038         	movff	?i2___ftadd,i2___fttol@f1
  7338  000224  C02D  F039         	movff	?i2___ftadd+1,i2___fttol@f1+1
  7339  000228  C02E  F03A         	movff	?i2___ftadd+2,i2___fttol@f1+2
  7340  00022C  ECBC  F01B         	call	i2___fttol	;wreg free
  7341  000230  C038  F0DD         	movff	?i2___fttol,_a
  7342  000234  C039  F0DE         	movff	?i2___fttol+1,_a+1
  7343                           
  7344                           ;PruevaServosPic.c: 158: flag = 5;
  7345  000238  0E00               	movlw	0
  7346  00023A  0100               	movlb	0	; () banked
  7347  00023C  6FE4               	movwf	(_flag+1)& (0+255),b
  7348  00023E  0E05               	movlw	5
  7349  000240  D007               	goto	L5
  7350  000242                     i2l7062:
  7351                           
  7352                           ; BSR set to: 0
  7353                           ;PruevaServosPic.c: 162: else if(d == '.'){
  7354  000242  0E2E               	movlw	46
  7355  000244  1979               	xorwf	TMR1_ISR@d& (0+255),w,b
  7356  000246  A4D8               	btfss	status,2,c
  7357  000248  D005               	goto	i2l7066
  7358                           
  7359                           ; BSR set to: 0
  7360                           ;PruevaServosPic.c: 163: flag = 3;
  7361  00024A  0E00               	movlw	0
  7362  00024C  6FE4               	movwf	(_flag+1)& (0+255),b
  7363  00024E  0E03               	movlw	3
  7364  000250                     L5:
  7365  000250  6FE3               	movwf	_flag& (0+255),b
  7366                           
  7367                           ;PruevaServosPic.c: 164: }
  7368  000252  D08E               	goto	i2l139
  7369  000254                     i2l7066:
  7370                           
  7371                           ; BSR set to: 0
  7372                           ;PruevaServosPic.c: 166: else if (d == 'O') {
  7373  000254  0E4F               	movlw	79
  7374  000256  1979               	xorwf	TMR1_ISR@d& (0+255),w,b
  7375  000258  A4D8               	btfss	status,2,c
  7376  00025A  D08A               	goto	i2l139
  7377                           
  7378                           ; BSR set to: 0
  7379                           ;PruevaServosPic.c: 167: b = a;
  7380  00025C  C0DD  F0DB         	movff	_a,_b
  7381  000260  C0DE  F0DC         	movff	_a+1,_b+1
  7382                           
  7383                           ; BSR set to: 0
  7384                           ;PruevaServosPic.c: 168: flag = 1;
  7385  000264  0E00               	movlw	0
  7386  000266  6FE4               	movwf	(_flag+1)& (0+255),b
  7387  000268  0E01               	movlw	1
  7388  00026A  6FE3               	movwf	_flag& (0+255),b
  7389                           
  7390                           ;PruevaServosPic.c: 169: a = 0;
  7391  00026C  0E00               	movlw	0
  7392  00026E  6FDE               	movwf	(_a+1)& (0+255),b
  7393  000270  0E00               	movlw	0
  7394  000272  6FDD               	movwf	_a& (0+255),b
  7395                           
  7396                           ; BSR set to: 0
  7397                           ;PruevaServosPic.c: 171: if(servo == 'A'){
  7398  000274  0E41               	movlw	65
  7399  000276  185B               	xorwf	_servo^0,w,c
  7400  000278  A4D8               	btfss	status,2,c
  7401  00027A  D03C               	goto	i2l7088
  7402                           
  7403                           ; BSR set to: 0
  7404                           ;PruevaServosPic.c: 173: SettingsLCD(0x01);
  7405  00027C  0E01               	movlw	1
  7406  00027E  EC95  F022         	call	i2_SettingsLCD
  7407                           
  7408                           ;PruevaServosPic.c: 175: SettingsLCD(0x80);
  7409  000282  0E80               	movlw	128
  7410  000284  EC95  F022         	call	i2_SettingsLCD
  7411                           
  7412                           ;PruevaServosPic.c: 176: sprintf(text,"Servo 1:%d",b);
  7413  000288  0E1F               	movlw	low _text
  7414  00028A  6E47               	movwf	i2sprintf@sp^0,c
  7415  00028C  0E01               	movlw	high _text
  7416  00028E  6E48               	movwf	(i2sprintf@sp+1)^0,c
  7417  000290  0E84               	movlw	low STR_2
  7418  000292  6E49               	movwf	i2sprintf@f^0,c
  7419  000294  C0DB  F04A         	movff	_b,?i2_sprintf+3
  7420  000298  C0DC  F04B         	movff	_b+1,?i2_sprintf+4
  7421  00029C  EC6C  F00C         	call	i2_sprintf	;wreg free
  7422                           
  7423                           ; BSR set to: 0
  7424                           ;PruevaServosPic.c: 178: DataLCD();
  7425  0002A0  ECEA  F020         	call	i2_DataLCD	;wreg free
  7426                           
  7427                           ; BSR set to: 0
  7428                           ;PruevaServosPic.c: 180: SettingsLCD(0xC0);
  7429  0002A4  0EC0               	movlw	192
  7430  0002A6  EC95  F022         	call	i2_SettingsLCD
  7431                           
  7432                           ;PruevaServosPic.c: 181: sprintf(text,"DC:%.2f ms",time_high*1000);
  7433  0002AA  C0D1  F00F         	movff	_time_high,i2___ftmul@f1
  7434  0002AE  C0D2  F010         	movff	_time_high+1,i2___ftmul@f1+1
  7435  0002B2  C0D3  F011         	movff	_time_high+2,i2___ftmul@f1+2
  7436  0002B6  0E00               	movlw	0
  7437  0002B8  6E12               	movwf	i2___ftmul@f2^0,c
  7438  0002BA  0E7A               	movlw	122
  7439  0002BC  6E13               	movwf	(i2___ftmul@f2+1)^0,c
  7440  0002BE  0E44               	movlw	68
  7441  0002C0  6E14               	movwf	(i2___ftmul@f2+2)^0,c
  7442  0002C2  EC7E  F019         	call	i2___ftmul	;wreg free
  7443  0002C6  C00F  F076         	movff	?i2___ftmul,_TMR1_ISR$1137
  7444  0002CA  C010  F077         	movff	?i2___ftmul+1,_TMR1_ISR$1137+1
  7445  0002CE  C011  F078         	movff	?i2___ftmul+2,_TMR1_ISR$1137+2
  7446                           
  7447                           ;PruevaServosPic.c: 181: sprintf(text,"DC:%.2f ms",time_high*1000);
  7448  0002D2  0E1F               	movlw	low _text
  7449  0002D4  6E47               	movwf	i2sprintf@sp^0,c
  7450  0002D6  0E01               	movlw	high _text
  7451  0002D8  6E48               	movwf	(i2sprintf@sp+1)^0,c
  7452  0002DA  0E9A               	movlw	low STR_3
  7453  0002DC  6E49               	movwf	i2sprintf@f^0,c
  7454  0002DE  C076  F04A         	movff	_TMR1_ISR$1137,?i2_sprintf+3
  7455  0002E2  C077  F04B         	movff	_TMR1_ISR$1137+1,?i2_sprintf+4
  7456  0002E6  C078  F04C         	movff	_TMR1_ISR$1137+2,?i2_sprintf+5
  7457  0002EA  EC6C  F00C         	call	i2_sprintf	;wreg free
  7458  0002EE                     i2l7086:
  7459                           
  7460                           ; BSR set to: 0
  7461                           ;PruevaServosPic.c: 183: DataLCD();
  7462  0002EE  ECEA  F020         	call	i2_DataLCD	;wreg free
  7463                           
  7464                           ;PruevaServosPic.c: 187: }
  7465  0002F2  D03E               	goto	i2l139
  7466  0002F4                     i2l7088:
  7467                           
  7468                           ; BSR set to: 0
  7469                           ;PruevaServosPic.c: 188: else if (servo == 'B'){
  7470  0002F4  0E42               	movlw	66
  7471  0002F6  185B               	xorwf	_servo^0,w,c
  7472  0002F8  A4D8               	btfss	status,2,c
  7473  0002FA  D03A               	goto	i2l139
  7474                           
  7475                           ; BSR set to: 0
  7476                           ;PruevaServosPic.c: 189: SettingsLCD(0x01);
  7477  0002FC  0E01               	movlw	1
  7478  0002FE  EC95  F022         	call	i2_SettingsLCD
  7479                           
  7480                           ;PruevaServosPic.c: 191: SettingsLCD(0x80);
  7481  000302  0E80               	movlw	128
  7482  000304  EC95  F022         	call	i2_SettingsLCD
  7483                           
  7484                           ;PruevaServosPic.c: 192: sprintf(text,"Servo 2:%d",b);
  7485  000308  0E1F               	movlw	low _text
  7486  00030A  6E47               	movwf	i2sprintf@sp^0,c
  7487  00030C  0E01               	movlw	high _text
  7488  00030E  6E48               	movwf	(i2sprintf@sp+1)^0,c
  7489  000310  0E8F               	movlw	low STR_4
  7490  000312  6E49               	movwf	i2sprintf@f^0,c
  7491  000314  C0DB  F04A         	movff	_b,?i2_sprintf+3
  7492  000318  C0DC  F04B         	movff	_b+1,?i2_sprintf+4
  7493  00031C  EC6C  F00C         	call	i2_sprintf	;wreg free
  7494                           
  7495                           ; BSR set to: 0
  7496                           ;PruevaServosPic.c: 194: DataLCD();
  7497  000320  ECEA  F020         	call	i2_DataLCD	;wreg free
  7498                           
  7499                           ; BSR set to: 0
  7500                           ;PruevaServosPic.c: 195: SettingsLCD(0xC0);
  7501  000324  0EC0               	movlw	192
  7502  000326  EC95  F022         	call	i2_SettingsLCD
  7503                           
  7504                           ;PruevaServosPic.c: 196: sprintf(text,"DC:%.2f ms",time_high*1000);
  7505  00032A  C0D1  F00F         	movff	_time_high,i2___ftmul@f1
  7506  00032E  C0D2  F010         	movff	_time_high+1,i2___ftmul@f1+1
  7507  000332  C0D3  F011         	movff	_time_high+2,i2___ftmul@f1+2
  7508  000336  0E00               	movlw	0
  7509  000338  6E12               	movwf	i2___ftmul@f2^0,c
  7510  00033A  0E7A               	movlw	122
  7511  00033C  6E13               	movwf	(i2___ftmul@f2+1)^0,c
  7512  00033E  0E44               	movlw	68
  7513  000340  6E14               	movwf	(i2___ftmul@f2+2)^0,c
  7514  000342  EC7E  F019         	call	i2___ftmul	;wreg free
  7515  000346  C00F  F076         	movff	?i2___ftmul,_TMR1_ISR$1137
  7516  00034A  C010  F077         	movff	?i2___ftmul+1,_TMR1_ISR$1137+1
  7517  00034E  C011  F078         	movff	?i2___ftmul+2,_TMR1_ISR$1137+2
  7518                           
  7519                           ;PruevaServosPic.c: 196: sprintf(text,"DC:%.2f ms",time_high*1000);
  7520  000352  0E1F               	movlw	low _text
  7521  000354  6E47               	movwf	i2sprintf@sp^0,c
  7522  000356  0E01               	movlw	high _text
  7523  000358  6E48               	movwf	(i2sprintf@sp+1)^0,c
  7524  00035A  0E9A               	movlw	low STR_3
  7525  00035C  6E49               	movwf	i2sprintf@f^0,c
  7526  00035E  C076  F04A         	movff	_TMR1_ISR$1137,?i2_sprintf+3
  7527  000362  C077  F04B         	movff	_TMR1_ISR$1137+1,?i2_sprintf+4
  7528  000366  C078  F04C         	movff	_TMR1_ISR$1137+2,?i2_sprintf+5
  7529  00036A  EC6C  F00C         	call	i2_sprintf	;wreg free
  7530  00036E  D7BF               	goto	i2l7086
  7531  000370                     i2l139:
  7532  000370  C05A  FFF5         	movff	??_TMR1_ISR+7,tablat
  7533  000374  C059  FFF8         	movff	??_TMR1_ISR+6,tblptru
  7534  000378  C058  FFF7         	movff	??_TMR1_ISR+5,tblptrh
  7535  00037C  C057  FFF6         	movff	??_TMR1_ISR+4,tblptrl
  7536  000380  C056  FFF4         	movff	??_TMR1_ISR+3,prodh
  7537  000384  C055  FFF3         	movff	??_TMR1_ISR+2,prodl
  7538  000388  C054  FFDA         	movff	??_TMR1_ISR+1,fsr2h
  7539  00038C  C053  FFD9         	movff	??_TMR1_ISR,fsr2l
  7540  000390  925C               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  7541  000392  0011               	retfie		f
  7542  000394                     __end_of_TMR1_ISR:
  7543                           	callstack 0
  7544                           
  7545 ;; *************** function i2_sprintf *****************
  7546 ;; Defined at:
  7547 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c"
  7548 ;; Parameters:    Size  Location     Type
  7549 ;;  sp              2   70[COMRAM] PTR unsigned char 
  7550 ;;		 -> text(20), 
  7551 ;;  f               1   72[COMRAM] PTR const unsigned char 
  7552 ;;		 -> STR_5(11), STR_4(11), STR_3(11), STR_2(11), 
  7553 ;;		 -> STR_1(13), 
  7554 ;; Auto vars:     Size  Location     Type
  7555 ;;  val             4   12[BANK0 ] unsigned long 
  7556 ;;  tmpval          4    8[BANK0 ] struct .
  7557 ;;  fval            3   18[BANK0 ] struct .
  7558 ;;  cp              3    0        PTR const unsigned char 
  7559 ;;  prec            2   16[BANK0 ] int 
  7560 ;;  eexp            2    6[BANK0 ] int 
  7561 ;;  flag            2    4[BANK0 ] unsigned short 
  7562 ;;  len             2    0        unsigned int 
  7563 ;;  width           2    0        int 
  7564 ;;  c               1   21[BANK0 ] unsigned char 
  7565 ;;  ap              1    3[BANK0 ] PTR void [1]
  7566 ;;		 -> ?i2_sprintf(2), ?_sprintf(2), 
  7567 ;;  d               1    0        unsigned char 
  7568 ;; Return value:  Size  Location     Type
  7569 ;;                  2   70[COMRAM] int 
  7570 ;; Registers used:
  7571 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7572 ;; Tracked objects:
  7573 ;;		On entry : 0/0
  7574 ;;		On exit  : 3F/0
  7575 ;;		Unchanged: 0/0
  7576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7577 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7578 ;;      Locals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7579 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7580 ;;      Totals:        12      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7581 ;;Total ram usage:       34 bytes
  7582 ;; Hardware stack levels used: 1
  7583 ;; Hardware stack levels required when called: 3
  7584 ;; This function calls:
  7585 ;;		i2___awdiv
  7586 ;;		i2___ftadd
  7587 ;;		i2___ftge
  7588 ;;		i2___ftmul
  7589 ;;		i2___ftneg
  7590 ;;		i2___ftsub
  7591 ;;		i2___fttol
  7592 ;;		i2___lldiv
  7593 ;;		i2___llmod
  7594 ;;		i2___lltoft
  7595 ;;		i2___wmul
  7596 ;;		i2__div_to_l_
  7597 ;;		i2__tdiv_to_l_
  7598 ;;		i2_fround
  7599 ;;		i2_isdigit
  7600 ;;		i2_scale
  7601 ;; This function is called by:
  7602 ;;		_TMR1_ISR
  7603 ;; This function uses a non-reentrant model
  7604 ;;
  7605                           
  7606                           	psect	text31
  7607  0018D8                     __ptext31:
  7608                           	callstack 0
  7609  0018D8                     i2_sprintf:
  7610                           	callstack 22
  7611                           
  7612                           ;doprnt.c: 507: va_list ap;;doprnt.c: 512: char c;;doprnt.c: 514: int width;;doprnt.c: 5
      +                          17: int prec;;doprnt.c: 525: unsigned short flag;;doprnt.c: 532: char d;;doprnt.c: 533: 
      +                          double fval;;doprnt.c: 534: int eexp;;doprnt.c: 540: union {;doprnt.c: 541: unsigned lon
      +                          g vd;;doprnt.c: 542: double integ;;doprnt.c: 543: } tmpval;;doprnt.c: 545: unsigned long
      +                           val;;doprnt.c: 546: unsigned len;;doprnt.c: 547: const char * cp;;doprnt.c: 550: *ap = 
      +                          __va_start();
  7613                           
  7614                           ;incstack = 0
  7615  0018D8  0E4A               	movlw	low (?i2_sprintf+3)
  7616  0018DA  0100               	movlb	0	; () banked
  7617  0018DC  6F63               	movwf	i2sprintf@ap& (0+255),b
  7618                           
  7619                           ;doprnt.c: 553: while((c = *f++)) {
  7620  0018DE  D3E7               	goto	i2u877_40
  7621  0018E0                     i2l6748:
  7622                           
  7623                           ; BSR set to: 0
  7624                           ;doprnt.c: 555: if(c != '%')
  7625  0018E0  0E25               	movlw	37
  7626  0018E2  1975               	xorwf	i2sprintf@c& (0+255),w,b
  7627  0018E4  B4D8               	btfsc	status,2,c
  7628  0018E6  D009               	goto	i2l6754
  7629                           
  7630                           ; BSR set to: 0
  7631                           ;doprnt.c: 557: {;doprnt.c: 558: ((*sp++ = (c)));
  7632  0018E8  C047  FFD9         	movff	i2sprintf@sp,fsr2l
  7633  0018EC  C048  FFDA         	movff	i2sprintf@sp+1,fsr2h
  7634  0018F0  C075  FFDF         	movff	i2sprintf@c,indf2
  7635                           
  7636                           ; BSR set to: 0
  7637  0018F4  4A47               	infsnz	i2sprintf@sp^0,f,c
  7638  0018F6  2A48               	incf	(i2sprintf@sp+1)^0,f,c
  7639                           
  7640                           ;doprnt.c: 559: continue;
  7641  0018F8  D3DA               	goto	i2u877_40
  7642  0018FA                     i2l6754:
  7643                           
  7644                           ; BSR set to: 0
  7645                           ;doprnt.c: 560: };doprnt.c: 565: flag = 0;
  7646  0018FA  0E00               	movlw	0
  7647  0018FC  6F65               	movwf	(i2sprintf@flag+1)& (0+255),b
  7648  0018FE  0E00               	movlw	0
  7649  001900  6F64               	movwf	i2sprintf@flag& (0+255),b
  7650                           
  7651                           ; BSR set to: 0
  7652                           ;doprnt.c: 628: if(*f == '.') {
  7653  001902  C049  FFF6         	movff	i2sprintf@f,tblptrl
  7654  001906                     	if	1	;There is more than 1 active tblptr byte
  7655  001906  0E10               	movlw	high __smallconst
  7656  001908  6EF7               	movwf	tblptrh,c
  7657  00190A                     	endif
  7658  00190A                     	if	0	;tblptru may be non-zero
  7659  00190A                     	endif
  7660  00190A                     	if	0	;tblptru may be non-zero
  7661  00190A                     	endif
  7662  00190A  0008               	tblrd		*
  7663  00190C  50F5               	movf	tablat,w,c
  7664  00190E  0A2E               	xorlw	46
  7665  001910  A4D8               	btfss	status,2,c
  7666  001912  D036               	goto	i2l6770
  7667                           
  7668                           ; BSR set to: 0
  7669                           ;doprnt.c: 629: flag |= 0x4000;
  7670  001914  8D65               	bsf	(i2sprintf@flag+1)& (0+255),6,b
  7671                           
  7672                           ;doprnt.c: 630: f++;
  7673  001916  2A49               	incf	i2sprintf@f^0,f,c
  7674                           
  7675                           ; BSR set to: 0
  7676                           ;doprnt.c: 644: {;doprnt.c: 645: prec = 0;
  7677  001918  0E00               	movlw	0
  7678  00191A  6F71               	movwf	(i2sprintf@prec+1)& (0+255),b
  7679  00191C  0E00               	movlw	0
  7680  00191E  6F70               	movwf	i2sprintf@prec& (0+255),b
  7681                           
  7682                           ;doprnt.c: 646: while(isdigit((unsigned)*f)) {
  7683  001920  D024               	goto	i2l6768
  7684  001922                     i2l6762:
  7685                           
  7686                           ;doprnt.c: 647: prec *= 10;
  7687  001922  C070  F001         	movff	i2sprintf@prec,i2___wmul@multiplier
  7688  001926  C071  F002         	movff	i2sprintf@prec+1,i2___wmul@multiplier+1
  7689  00192A  0E00               	movlw	0
  7690  00192C  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  7691  00192E  0E0A               	movlw	10
  7692  001930  6E03               	movwf	i2___wmul@multiplicand^0,c
  7693  001932  EC23  F022         	call	i2___wmul	;wreg free
  7694  001936  C001  F070         	movff	?i2___wmul,i2sprintf@prec
  7695  00193A  C002  F071         	movff	?i2___wmul+1,i2sprintf@prec+1
  7696                           
  7697                           ;doprnt.c: 648: prec += *f++ - '0';
  7698  00193E  0ED0               	movlw	208
  7699  001940  6E4D               	movwf	??i2_sprintf^0,c
  7700  001942  0EFF               	movlw	255
  7701  001944  6E4E               	movwf	(??i2_sprintf+1)^0,c
  7702  001946  C049  FFF6         	movff	i2sprintf@f,tblptrl
  7703  00194A                     	if	1	;There is more than 1 active tblptr byte
  7704  00194A  0E10               	movlw	high __smallconst
  7705  00194C  6EF7               	movwf	tblptrh,c
  7706  00194E                     	endif
  7707  00194E                     	if	0	;tblptru may be non-zero
  7708  00194E                     	endif
  7709  00194E                     	if	0	;tblptru may be non-zero
  7710  00194E                     	endif
  7711  00194E  0008               	tblrd		*
  7712  001950  50F5               	movf	tablat,w,c
  7713  001952  6E4F               	movwf	(??i2_sprintf+2)^0,c
  7714  001954  6A50               	clrf	(??i2_sprintf+3)^0,c
  7715  001956  504D               	movf	??i2_sprintf^0,w,c
  7716  001958  264F               	addwf	(??i2_sprintf+2)^0,f,c
  7717  00195A  504E               	movf	(??i2_sprintf+1)^0,w,c
  7718  00195C  2250               	addwfc	(??i2_sprintf+3)^0,f,c
  7719  00195E  504F               	movf	(??i2_sprintf+2)^0,w,c
  7720  001960  0100               	movlb	0	; () banked
  7721  001962  2770               	addwf	i2sprintf@prec& (0+255),f,b
  7722  001964  5050               	movf	(??i2_sprintf+3)^0,w,c
  7723  001966  2371               	addwfc	(i2sprintf@prec+1)& (0+255),f,b
  7724                           
  7725                           ; BSR set to: 0
  7726  001968  2A49               	incf	i2sprintf@f^0,f,c
  7727  00196A                     i2l6768:
  7728                           
  7729                           ; BSR set to: 0
  7730  00196A  C049  FFF6         	movff	i2sprintf@f,tblptrl
  7731  00196E                     	if	1	;There is more than 1 active tblptr byte
  7732  00196E  0E10               	movlw	high __smallconst
  7733  001970  6EF7               	movwf	tblptrh,c
  7734  001972                     	endif
  7735  001972                     	if	0	;tblptru may be non-zero
  7736  001972                     	endif
  7737  001972                     	if	0	;tblptru may be non-zero
  7738  001972                     	endif
  7739  001972  0008               	tblrd		*
  7740  001974  50F5               	movf	tablat,w,c
  7741  001976  EC6B  F022         	call	i2_isdigit
  7742  00197A  A0D8               	btfss	status,0,c
  7743  00197C  D009               	goto	i2l6778
  7744  00197E  D7D1               	goto	i2l6762
  7745  001980                     i2l6770:
  7746                           
  7747                           ; BSR set to: 0
  7748                           ;doprnt.c: 652: prec = 0;
  7749  001980  0E00               	movlw	0
  7750  001982  6F71               	movwf	(i2sprintf@prec+1)& (0+255),b
  7751  001984  0E00               	movlw	0
  7752  001986  6F70               	movwf	i2sprintf@prec& (0+255),b
  7753                           
  7754                           ; BSR set to: 0
  7755                           ;doprnt.c: 654: flag |= 0x1000;
  7756  001988  8965               	bsf	(i2sprintf@flag+1)& (0+255),4,b
  7757  00198A  D002               	goto	i2l6778
  7758  00198C                     i2l6774:
  7759                           
  7760                           ; BSR set to: 0
  7761                           ;doprnt.c: 689: flag |= 0x400;
  7762  00198C  8565               	bsf	(i2sprintf@flag+1)& (0+255),2,b
  7763                           
  7764                           ;doprnt.c: 690: break;
  7765  00198E  D018               	goto	i2l6780
  7766  001990                     i2l6778:
  7767  001990  2A49               	incf	i2sprintf@f^0,f,c
  7768  001992  0449               	decf	i2sprintf@f^0,w,c
  7769  001994  6E4D               	movwf	??i2_sprintf^0,c
  7770  001996  C04D  FFF6         	movff	??i2_sprintf,tblptrl
  7771  00199A                     	if	1	;There is more than 1 active tblptr byte
  7772  00199A  0E10               	movlw	high __smallconst
  7773  00199C  6EF7               	movwf	tblptrh,c
  7774  00199E                     	endif
  7775  00199E                     	if	0	;tblptru may be non-zero
  7776  00199E                     	endif
  7777  00199E                     	if	0	;tblptru may be non-zero
  7778  00199E                     	endif
  7779  00199E  0008               	tblrd		*
  7780  0019A0  CFF5 F075          	movff	tablat,i2sprintf@c
  7781  0019A4  0100               	movlb	0	; () banked
  7782  0019A6  5175               	movf	i2sprintf@c& (0+255),w,b
  7783                           
  7784                           ; Switch size 1, requested type "simple"
  7785                           ; Number of cases is 4, Range of values is 0 to 105
  7786                           ; switch strategies available:
  7787                           ; Name         Instructions Cycles
  7788                           ; simple_byte           13     7 (average)
  7789                           ;	Chosen strategy is simple_byte
  7790  0019A8  0A00               	xorlw	0	; case 0
  7791  0019AA  B4D8               	btfsc	status,2,c
  7792  0019AC  D38D               	goto	i2u878_40
  7793  0019AE  0A64               	xorlw	100	; case 100
  7794  0019B0  B4D8               	btfsc	status,2,c
  7795  0019B2  D006               	goto	i2l6780
  7796  0019B4  0A02               	xorlw	2	; case 102
  7797  0019B6  B4D8               	btfsc	status,2,c
  7798  0019B8  D7E9               	goto	i2l6774
  7799  0019BA  0A0F               	xorlw	15	; case 105
  7800  0019BC  A4D8               	btfss	status,2,c
  7801  0019BE  D377               	goto	i2u877_40
  7802  0019C0                     i2l6780:
  7803                           
  7804                           ; BSR set to: 0
  7805                           ;doprnt.c: 851: if(flag & (0x700)) {
  7806  0019C0  0E07               	movlw	7
  7807  0019C2  1565               	andwf	(i2sprintf@flag+1)& (0+255),w,b
  7808  0019C4  B4D8               	btfsc	status,2,c
  7809  0019C6  D2C0               	goto	i2l6928
  7810                           
  7811                           ; BSR set to: 0
  7812                           ;doprnt.c: 853: if(flag & 0x1000)
  7813  0019C8  A965               	btfss	(i2sprintf@flag+1)& (0+255),4,b
  7814  0019CA  D004               	goto	i2l6786
  7815                           
  7816                           ; BSR set to: 0
  7817                           ;doprnt.c: 855: prec = 6;
  7818  0019CC  0E00               	movlw	0
  7819  0019CE  6F71               	movwf	(i2sprintf@prec+1)& (0+255),b
  7820  0019D0  0E06               	movlw	6
  7821  0019D2  6F70               	movwf	i2sprintf@prec& (0+255),b
  7822  0019D4                     i2l6786:
  7823                           
  7824                           ; BSR set to: 0
  7825                           ;doprnt.c: 856: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  7826  0019D4  5163               	movf	i2sprintf@ap& (0+255),w,b
  7827  0019D6  6ED9               	movwf	fsr2l,c
  7828  0019D8  6ADA               	clrf	fsr2h,c
  7829  0019DA  CFDE F072          	movff	postinc2,i2sprintf@fval
  7830  0019DE  CFDE F073          	movff	postinc2,i2sprintf@fval+1
  7831  0019E2  CFDD F074          	movff	postdec2,i2sprintf@fval+2
  7832                           
  7833                           ; BSR set to: 0
  7834  0019E6  0E03               	movlw	3
  7835  0019E8  2763               	addwf	i2sprintf@ap& (0+255),f,b
  7836                           
  7837                           ; BSR set to: 0
  7838                           ;doprnt.c: 857: if(fval < 0.0) {
  7839  0019EA  AF74               	btfss	(i2sprintf@fval+2)& (0+255),7,b
  7840  0019EC  D010               	goto	i2l6796
  7841                           
  7842                           ; BSR set to: 0
  7843                           ;doprnt.c: 858: fval = -fval;
  7844  0019EE  C072  F001         	movff	i2sprintf@fval,i2___ftneg@f1
  7845  0019F2  C073  F002         	movff	i2sprintf@fval+1,i2___ftneg@f1+1
  7846  0019F6  C074  F003         	movff	i2sprintf@fval+2,i2___ftneg@f1+2
  7847  0019FA  EC36  F022         	call	i2___ftneg	;wreg free
  7848  0019FE  C001  F072         	movff	?i2___ftneg,i2sprintf@fval
  7849  001A02  C002  F073         	movff	?i2___ftneg+1,i2sprintf@fval+1
  7850  001A06  C003  F074         	movff	?i2___ftneg+2,i2sprintf@fval+2
  7851                           
  7852                           ; BSR set to: 0
  7853                           ;doprnt.c: 859: flag |= 0x03;
  7854  001A0A  0E03               	movlw	3
  7855  001A0C  1364               	iorwf	i2sprintf@flag& (0+255),f,b
  7856  001A0E                     i2l6796:
  7857                           
  7858                           ; BSR set to: 0
  7859                           ;doprnt.c: 860: };doprnt.c: 861: eexp = 0;
  7860  001A0E  0E00               	movlw	0
  7861  001A10  6F67               	movwf	(i2sprintf@eexp+1)& (0+255),b
  7862  001A12  0E00               	movlw	0
  7863  001A14  6F66               	movwf	i2sprintf@eexp& (0+255),b
  7864                           
  7865                           ; BSR set to: 0
  7866                           ;doprnt.c: 862: if( fval!=0) {
  7867  001A16  5172               	movf	i2sprintf@fval& (0+255),w,b
  7868  001A18  1173               	iorwf	(i2sprintf@fval+1)& (0+255),w,b
  7869  001A1A  1174               	iorwf	(i2sprintf@fval+2)& (0+255),w,b
  7870  001A1C  B4D8               	btfsc	status,2,c
  7871  001A1E  D086               	goto	i2l6824
  7872                           
  7873                           ; BSR set to: 0
  7874                           ;doprnt.c: 863: (void)(*(&eexp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
  7875  001A20  0E82               	movlw	130
  7876  001A22  6E4D               	movwf	??i2_sprintf^0,c
  7877  001A24  0EFF               	movlw	255
  7878  001A26  6E4E               	movwf	(??i2_sprintf+1)^0,c
  7879  001A28  C072  F04F         	movff	i2sprintf@fval,??i2_sprintf+2
  7880  001A2C  C073  F050         	movff	i2sprintf@fval+1,??i2_sprintf+3
  7881  001A30  C074  F051         	movff	i2sprintf@fval+2,??i2_sprintf+4
  7882  001A34  C075  F052         	movff	i2sprintf@fval+3,??i2_sprintf+5
  7883  001A38  0E10               	movlw	16
  7884  001A3A  D005               	goto	i2u850_40
  7885  001A3C                     i2u850_45:
  7886  001A3C  90D8               	bcf	status,0,c
  7887  001A3E  3252               	rrcf	(??i2_sprintf+5)^0,f,c
  7888  001A40  3251               	rrcf	(??i2_sprintf+4)^0,f,c
  7889  001A42  3250               	rrcf	(??i2_sprintf+3)^0,f,c
  7890  001A44  324F               	rrcf	(??i2_sprintf+2)^0,f,c
  7891  001A46                     i2u850_40:
  7892  001A46  2EE8               	decfsz	wreg,f,c
  7893  001A48  D7F9               	goto	i2u850_45
  7894  001A4A  504F               	movf	(??i2_sprintf+2)^0,w,c
  7895  001A4C  244D               	addwf	??i2_sprintf^0,w,c
  7896  001A4E  6F66               	movwf	i2sprintf@eexp& (0+255),b
  7897  001A50  0E00               	movlw	0
  7898  001A52  204E               	addwfc	(??i2_sprintf+1)^0,w,c
  7899  001A54  6F67               	movwf	(i2sprintf@eexp+1)& (0+255),b
  7900                           
  7901                           ; BSR set to: 0
  7902                           ;doprnt.c: 864: eexp--;
  7903  001A56  0766               	decf	i2sprintf@eexp& (0+255),f,b
  7904  001A58  A0D8               	btfss	status,0,c
  7905  001A5A  0767               	decf	(i2sprintf@eexp+1)& (0+255),f,b
  7906                           
  7907                           ; BSR set to: 0
  7908                           ;doprnt.c: 865: eexp *= 3;
  7909  001A5C  C066  F001         	movff	i2sprintf@eexp,i2___wmul@multiplier
  7910  001A60  C067  F002         	movff	i2sprintf@eexp+1,i2___wmul@multiplier+1
  7911  001A64  0E00               	movlw	0
  7912  001A66  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  7913  001A68  0E03               	movlw	3
  7914  001A6A  6E03               	movwf	i2___wmul@multiplicand^0,c
  7915  001A6C  EC23  F022         	call	i2___wmul	;wreg free
  7916  001A70  C001  F066         	movff	?i2___wmul,i2sprintf@eexp
  7917  001A74  C002  F067         	movff	?i2___wmul+1,i2sprintf@eexp+1
  7918                           
  7919                           ;doprnt.c: 866: eexp /= 10;
  7920  001A78  C066  F007         	movff	i2sprintf@eexp,i2___awdiv@dividend
  7921  001A7C  C067  F008         	movff	i2sprintf@eexp+1,i2___awdiv@dividend+1
  7922  001A80  0E00               	movlw	0
  7923  001A82  6E0A               	movwf	(i2___awdiv@divisor+1)^0,c
  7924  001A84  0E0A               	movlw	10
  7925  001A86  6E09               	movwf	i2___awdiv@divisor^0,c
  7926  001A88  ECFF  F01D         	call	i2___awdiv	;wreg free
  7927  001A8C  C007  F066         	movff	?i2___awdiv,i2sprintf@eexp
  7928  001A90  C008  F067         	movff	?i2___awdiv+1,i2sprintf@eexp+1
  7929                           
  7930                           ;doprnt.c: 867: if(eexp < 0)
  7931  001A94  0100               	movlb	0	; () banked
  7932  001A96  AF67               	btfss	(i2sprintf@eexp+1)& (0+255),7,b
  7933  001A98  D003               	goto	i2l6812
  7934                           
  7935                           ; BSR set to: 0
  7936                           ;doprnt.c: 868: eexp--;
  7937  001A9A  0766               	decf	i2sprintf@eexp& (0+255),f,b
  7938  001A9C  A0D8               	btfss	status,0,c
  7939  001A9E  0767               	decf	(i2sprintf@eexp+1)& (0+255),f,b
  7940  001AA0                     i2l6812:
  7941                           
  7942                           ; BSR set to: 0
  7943                           ;doprnt.c: 872: tmpval.integ = scale(-eexp);
  7944  001AA0  5166               	movf	i2sprintf@eexp& (0+255),w,b
  7945  001AA2  0800               	sublw	0
  7946  001AA4  EC39  F012         	call	i2_scale
  7947  001AA8  C01E  F068         	movff	?i2_scale,i2sprintf@tmpval
  7948  001AAC  C01F  F069         	movff	?i2_scale+1,i2sprintf@tmpval+1
  7949  001AB0  C020  F06A         	movff	?i2_scale+2,i2sprintf@tmpval+2
  7950                           
  7951                           ;doprnt.c: 873: tmpval.integ *= fval;
  7952  001AB4  C068  F00F         	movff	i2sprintf@tmpval,i2___ftmul@f1
  7953  001AB8  C069  F010         	movff	i2sprintf@tmpval+1,i2___ftmul@f1+1
  7954  001ABC  C06A  F011         	movff	i2sprintf@tmpval+2,i2___ftmul@f1+2
  7955  001AC0  C072  F012         	movff	i2sprintf@fval,i2___ftmul@f2
  7956  001AC4  C073  F013         	movff	i2sprintf@fval+1,i2___ftmul@f2+1
  7957  001AC8  C074  F014         	movff	i2sprintf@fval+2,i2___ftmul@f2+2
  7958  001ACC  EC7E  F019         	call	i2___ftmul	;wreg free
  7959  001AD0  C00F  F068         	movff	?i2___ftmul,i2sprintf@tmpval
  7960  001AD4  C010  F069         	movff	?i2___ftmul+1,i2sprintf@tmpval+1
  7961  001AD8  C011  F06A         	movff	?i2___ftmul+2,i2sprintf@tmpval+2
  7962                           
  7963                           ;doprnt.c: 874: if(tmpval.integ < 1.0)
  7964  001ADC  C068  F001         	movff	i2sprintf@tmpval,i2___ftge@ff1
  7965  001AE0  C069  F002         	movff	i2sprintf@tmpval+1,i2___ftge@ff1+1
  7966  001AE4  C06A  F003         	movff	i2sprintf@tmpval+2,i2___ftge@ff1+2
  7967  001AE8  0E00               	movlw	0
  7968  001AEA  6E04               	movwf	i2___ftge@ff2^0,c
  7969  001AEC  0E80               	movlw	128
  7970  001AEE  6E05               	movwf	(i2___ftge@ff2+1)^0,c
  7971  001AF0  0E3F               	movlw	63
  7972  001AF2  6E06               	movwf	(i2___ftge@ff2+2)^0,c
  7973  001AF4  ECF7  F01E         	call	i2___ftge	;wreg free
  7974  001AF8  B0D8               	btfsc	status,0,c
  7975  001AFA  D005               	goto	i2l6820
  7976                           
  7977                           ;doprnt.c: 875: eexp--;
  7978  001AFC  0100               	movlb	0	; () banked
  7979  001AFE  0766               	decf	i2sprintf@eexp& (0+255),f,b
  7980  001B00  A0D8               	btfss	status,0,c
  7981  001B02  0767               	decf	(i2sprintf@eexp+1)& (0+255),f,b
  7982  001B04  D013               	goto	i2l6824
  7983  001B06                     i2l6820:
  7984                           
  7985                           ;doprnt.c: 876: else if(tmpval.integ >= 10.0)
  7986  001B06  C068  F001         	movff	i2sprintf@tmpval,i2___ftge@ff1
  7987  001B0A  C069  F002         	movff	i2sprintf@tmpval+1,i2___ftge@ff1+1
  7988  001B0E  C06A  F003         	movff	i2sprintf@tmpval+2,i2___ftge@ff1+2
  7989  001B12  0E00               	movlw	0
  7990  001B14  6E04               	movwf	i2___ftge@ff2^0,c
  7991  001B16  0E20               	movlw	32
  7992  001B18  6E05               	movwf	(i2___ftge@ff2+1)^0,c
  7993  001B1A  0E41               	movlw	65
  7994  001B1C  6E06               	movwf	(i2___ftge@ff2+2)^0,c
  7995  001B1E  ECF7  F01E         	call	i2___ftge	;wreg free
  7996  001B22  A0D8               	btfss	status,0,c
  7997  001B24  D003               	goto	i2l6824
  7998                           
  7999                           ;doprnt.c: 877: eexp++;
  8000  001B26  0100               	movlb	0	; () banked
  8001  001B28  4B66               	infsnz	i2sprintf@eexp& (0+255),f,b
  8002  001B2A  2B67               	incf	(i2sprintf@eexp+1)& (0+255),f,b
  8003  001B2C                     i2l6824:
  8004                           
  8005                           ;doprnt.c: 878: };doprnt.c: 1138: if(prec <= 12)
  8006  001B2C  0100               	movlb	0	; () banked
  8007  001B2E  BF71               	btfsc	(i2sprintf@prec+1)& (0+255),7,b
  8008  001B30  D006               	goto	i2u854_40
  8009  001B32  5171               	movf	(i2sprintf@prec+1)& (0+255),w,b
  8010  001B34  E11B               	bnz	i2l6828
  8011  001B36  0E0D               	movlw	13
  8012  001B38  5D70               	subwf	i2sprintf@prec& (0+255),w,b
  8013  001B3A  B0D8               	btfsc	status,0,c
  8014  001B3C  D017               	goto	i2l6828
  8015  001B3E                     i2u854_40:
  8016                           
  8017                           ; BSR set to: 0
  8018                           ;doprnt.c: 1139: fval += fround((unsigned int)prec);
  8019  001B3E  C072  F02C         	movff	i2sprintf@fval,i2___ftadd@f1
  8020  001B42  C073  F02D         	movff	i2sprintf@fval+1,i2___ftadd@f1+1
  8021  001B46  C074  F02E         	movff	i2sprintf@fval+2,i2___ftadd@f1+2
  8022  001B4A  5170               	movf	i2sprintf@prec& (0+255),w,b
  8023  001B4C  ECF5  F014         	call	i2_fround
  8024  001B50  C01E  F02F         	movff	?i2_fround,i2___ftadd@f2
  8025  001B54  C01F  F030         	movff	?i2_fround+1,i2___ftadd@f2+1
  8026  001B58  C020  F031         	movff	?i2_fround+2,i2___ftadd@f2+2
  8027  001B5C  ECB7  F016         	call	i2___ftadd	;wreg free
  8028  001B60  C02C  F072         	movff	?i2___ftadd,i2sprintf@fval
  8029  001B64  C02D  F073         	movff	?i2___ftadd+1,i2sprintf@fval+1
  8030  001B68  C02E  F074         	movff	?i2___ftadd+2,i2sprintf@fval+2
  8031  001B6C                     i2l6828:
  8032                           
  8033                           ;doprnt.c: 1142: if((eexp > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  8034  001B6C  0100               	movlb	0	; () banked
  8035  001B6E  BF67               	btfsc	(i2sprintf@eexp+1)& (0+255),7,b
  8036  001B70  D006               	goto	i2u855_40
  8037  001B72  5167               	movf	(i2sprintf@eexp+1)& (0+255),w,b
  8038  001B74  E120               	bnz	i2l6836
  8039  001B76  0E0A               	movlw	10
  8040  001B78  5D66               	subwf	i2sprintf@eexp& (0+255),w,b
  8041  001B7A  B0D8               	btfsc	status,0,c
  8042  001B7C  D01C               	goto	i2u858_40
  8043  001B7E                     i2u855_40:
  8044                           
  8045                           ; BSR set to: 0
  8046  001B7E  5172               	movf	i2sprintf@fval& (0+255),w,b
  8047  001B80  1173               	iorwf	(i2sprintf@fval+1)& (0+255),w,b
  8048  001B82  1174               	iorwf	(i2sprintf@fval+2)& (0+255),w,b
  8049  001B84  B4D8               	btfsc	status,2,c
  8050  001B86  D056               	goto	i2l6850
  8051                           
  8052                           ; BSR set to: 0
  8053  001B88  C072  F038         	movff	i2sprintf@fval,i2___fttol@f1
  8054  001B8C  C073  F039         	movff	i2sprintf@fval+1,i2___fttol@f1+1
  8055  001B90  C074  F03A         	movff	i2sprintf@fval+2,i2___fttol@f1+2
  8056  001B94  ECBC  F01B         	call	i2___fttol	;wreg free
  8057  001B98  5038               	movf	?i2___fttol^0,w,c
  8058  001B9A  1039               	iorwf	(?i2___fttol+1)^0,w,c
  8059  001B9C  103A               	iorwf	(?i2___fttol+2)^0,w,c
  8060  001B9E  103B               	iorwf	(?i2___fttol+3)^0,w,c
  8061  001BA0  A4D8               	btfss	status,2,c
  8062  001BA2  D048               	goto	i2l6850
  8063  001BA4  0100               	movlb	0	; () banked
  8064  001BA6  BF67               	btfsc	(i2sprintf@eexp+1)& (0+255),7,b
  8065  001BA8  D045               	goto	i2l6850
  8066  001BAA  5167               	movf	(i2sprintf@eexp+1)& (0+255),w,b
  8067  001BAC  E104               	bnz	i2u858_40
  8068  001BAE  0E02               	movlw	2
  8069  001BB0  5D66               	subwf	i2sprintf@eexp& (0+255),w,b
  8070  001BB2  A0D8               	btfss	status,0,c
  8071  001BB4  D03F               	goto	i2l6850
  8072  001BB6                     i2u858_40:
  8073  001BB6                     i2l6836:
  8074                           
  8075                           ; BSR set to: 0
  8076                           ;doprnt.c: 1146: if(tmpval.integ < 4.294967296){
  8077  001BB6  C068  F001         	movff	i2sprintf@tmpval,i2___ftge@ff1
  8078  001BBA  C069  F002         	movff	i2sprintf@tmpval+1,i2___ftge@ff1+1
  8079  001BBE  C06A  F003         	movff	i2sprintf@tmpval+2,i2___ftge@ff1+2
  8080  001BC2  0E70               	movlw	112
  8081  001BC4  6E04               	movwf	i2___ftge@ff2^0,c
  8082  001BC6  0E89               	movlw	137
  8083  001BC8  6E05               	movwf	(i2___ftge@ff2+1)^0,c
  8084  001BCA  0E40               	movlw	64
  8085  001BCC  6E06               	movwf	(i2___ftge@ff2+2)^0,c
  8086  001BCE  ECF7  F01E         	call	i2___ftge	;wreg free
  8087  001BD2  B0D8               	btfsc	status,0,c
  8088  001BD4  D003               	goto	i2l6840
  8089                           
  8090                           ;doprnt.c: 1147: eexp -= (sizeof dpowers/sizeof dpowers[0])-1;
  8091  001BD6  0100               	movlb	0	; () banked
  8092  001BD8  0EF7               	movlw	247
  8093  001BDA  D002               	goto	L6
  8094  001BDC                     i2l6840:
  8095                           
  8096                           ;doprnt.c: 1149: eexp -= (sizeof dpowers/sizeof dpowers[0])-2;
  8097  001BDC  0100               	movlb	0	; () banked
  8098  001BDE  0EF8               	movlw	248
  8099  001BE0                     L6:
  8100  001BE0  2766               	addwf	i2sprintf@eexp& (0+255),f,b
  8101  001BE2  0EFF               	movlw	255
  8102  001BE4  2367               	addwfc	(i2sprintf@eexp+1)& (0+255),f,b
  8103                           
  8104                           ; BSR set to: 0
  8105                           ;doprnt.c: 1150: };doprnt.c: 1151: tmpval.integ = scale(eexp);
  8106  001BE6  5166               	movf	i2sprintf@eexp& (0+255),w,b
  8107  001BE8  EC39  F012         	call	i2_scale
  8108  001BEC  C01E  F068         	movff	?i2_scale,i2sprintf@tmpval
  8109  001BF0  C01F  F069         	movff	?i2_scale+1,i2sprintf@tmpval+1
  8110  001BF4  C020  F06A         	movff	?i2_scale+2,i2sprintf@tmpval+2
  8111                           
  8112                           ;doprnt.c: 1152: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  8113  001BF8  C072  F001         	movff	i2sprintf@fval,i2__tdiv_to_l_@f1
  8114  001BFC  C073  F002         	movff	i2sprintf@fval+1,i2__tdiv_to_l_@f1+1
  8115  001C00  C074  F003         	movff	i2sprintf@fval+2,i2__tdiv_to_l_@f1+2
  8116  001C04  C068  F004         	movff	i2sprintf@tmpval,i2__tdiv_to_l_@f2
  8117  001C08  C069  F005         	movff	i2sprintf@tmpval+1,i2__tdiv_to_l_@f2+1
  8118  001C0C  C06A  F006         	movff	i2sprintf@tmpval+2,i2__tdiv_to_l_@f2+2
  8119  001C10  EC0A  F018         	call	i2__tdiv_to_l_	;wreg free
  8120  001C14  C001  F06C         	movff	?i2__tdiv_to_l_,i2sprintf@val
  8121  001C18  C002  F06D         	movff	?i2__tdiv_to_l_+1,i2sprintf@val+1
  8122  001C1C  C003  F06E         	movff	?i2__tdiv_to_l_+2,i2sprintf@val+2
  8123  001C20  C004  F06F         	movff	?i2__tdiv_to_l_+3,i2sprintf@val+3
  8124                           
  8125                           ;doprnt.c: 1155: fval = 0.0;
  8126  001C24  0E00               	movlw	0
  8127  001C26  0100               	movlb	0	; () banked
  8128  001C28  6F72               	movwf	i2sprintf@fval& (0+255),b
  8129  001C2A  0E00               	movlw	0
  8130  001C2C  6F73               	movwf	(i2sprintf@fval+1)& (0+255),b
  8131  001C2E  0E00               	movlw	0
  8132  001C30  6F74               	movwf	(i2sprintf@fval+2)& (0+255),b
  8133                           
  8134                           ;doprnt.c: 1156: } else {
  8135  001C32  D033               	goto	i2l6854
  8136  001C34                     i2l6850:
  8137                           
  8138                           ;doprnt.c: 1157: val = (unsigned long)fval;
  8139  001C34  C072  F038         	movff	i2sprintf@fval,i2___fttol@f1
  8140  001C38  C073  F039         	movff	i2sprintf@fval+1,i2___fttol@f1+1
  8141  001C3C  C074  F03A         	movff	i2sprintf@fval+2,i2___fttol@f1+2
  8142  001C40  ECBC  F01B         	call	i2___fttol	;wreg free
  8143  001C44  C038  F06C         	movff	?i2___fttol,i2sprintf@val
  8144  001C48  C039  F06D         	movff	?i2___fttol+1,i2sprintf@val+1
  8145  001C4C  C03A  F06E         	movff	?i2___fttol+2,i2sprintf@val+2
  8146  001C50  C03B  F06F         	movff	?i2___fttol+3,i2sprintf@val+3
  8147                           
  8148                           ;doprnt.c: 1158: fval -= (double)val;
  8149  001C54  C072  F038         	movff	i2sprintf@fval,i2___ftsub@f1
  8150  001C58  C073  F039         	movff	i2sprintf@fval+1,i2___ftsub@f1+1
  8151  001C5C  C074  F03A         	movff	i2sprintf@fval+2,i2___ftsub@f1+2
  8152  001C60  C06C  F009         	movff	i2sprintf@val,i2___lltoft@c
  8153  001C64  C06D  F00A         	movff	i2sprintf@val+1,i2___lltoft@c+1
  8154  001C68  C06E  F00B         	movff	i2sprintf@val+2,i2___lltoft@c+2
  8155  001C6C  C06F  F00C         	movff	i2sprintf@val+3,i2___lltoft@c+3
  8156  001C70  EC6D  F020         	call	i2___lltoft	;wreg free
  8157  001C74  C009  F03B         	movff	?i2___lltoft,i2___ftsub@f2
  8158  001C78  C00A  F03C         	movff	?i2___lltoft+1,i2___ftsub@f2+1
  8159  001C7C  C00B  F03D         	movff	?i2___lltoft+2,i2___ftsub@f2+2
  8160  001C80  EC31  F021         	call	i2___ftsub	;wreg free
  8161  001C84  C038  F072         	movff	?i2___ftsub,i2sprintf@fval
  8162  001C88  C039  F073         	movff	?i2___ftsub+1,i2sprintf@fval+1
  8163  001C8C  C03A  F074         	movff	?i2___ftsub+2,i2sprintf@fval+2
  8164                           
  8165                           ;doprnt.c: 1159: eexp = 0;
  8166  001C90  0E00               	movlw	0
  8167  001C92  0100               	movlb	0	; () banked
  8168  001C94  6F67               	movwf	(i2sprintf@eexp+1)& (0+255),b
  8169  001C96  0E00               	movlw	0
  8170  001C98  6F66               	movwf	i2sprintf@eexp& (0+255),b
  8171  001C9A                     i2l6854:
  8172                           
  8173                           ; BSR set to: 0
  8174                           ;doprnt.c: 1160: };doprnt.c: 1162: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ;
      +                           c++)
  8175  001C9A  0E01               	movlw	1
  8176  001C9C  6F75               	movwf	i2sprintf@c& (0+255),b
  8177  001C9E                     i2l6860:
  8178                           
  8179                           ; BSR set to: 0
  8180                           ;doprnt.c: 1163: if(val < dpowers[c])
  8181  001C9E  5175               	movf	i2sprintf@c& (0+255),w,b
  8182  001CA0  0D04               	mullw	4
  8183  001CA2  50F3               	movf	243,w,c
  8184  001CA4  0F4F               	addlw	low _dpowers
  8185  001CA6  6E4D               	movwf	??i2_sprintf^0,c
  8186  001CA8  C04D  FFF6         	movff	??i2_sprintf,tblptrl
  8187  001CAC                     	if	1	;There is more than 1 active tblptr byte
  8188  001CAC  0E10               	movlw	high __smallconst
  8189  001CAE  6EF7               	movwf	tblptrh,c
  8190  001CB0                     	endif
  8191  001CB0                     	if	0	;tblptru may be non-zero
  8192  001CB0                     	endif
  8193  001CB0                     	if	0	;tblptru may be non-zero
  8194  001CB0                     	endif
  8195  001CB0  0009               	tblrd		*+
  8196  001CB2  50F5               	movf	tablat,w,c
  8197  001CB4  5D6C               	subwf	i2sprintf@val& (0+255),w,b
  8198  001CB6  0009               	tblrd		*+
  8199  001CB8  50F5               	movf	tablat,w,c
  8200  001CBA  596D               	subwfb	(i2sprintf@val+1)& (0+255),w,b
  8201  001CBC  0009               	tblrd		*+
  8202  001CBE  50F5               	movf	tablat,w,c
  8203  001CC0  596E               	subwfb	(i2sprintf@val+2)& (0+255),w,b
  8204  001CC2  0009               	tblrd		*+
  8205  001CC4  50F5               	movf	tablat,w,c
  8206  001CC6  596F               	subwfb	(i2sprintf@val+3)& (0+255),w,b
  8207  001CC8  A0D8               	btfss	status,0,c
  8208  001CCA  D005               	goto	i2u861_40
  8209                           
  8210                           ; BSR set to: 0
  8211  001CCC  2B75               	incf	i2sprintf@c& (0+255),f,b
  8212                           
  8213                           ; BSR set to: 0
  8214  001CCE  0E0A               	movlw	10
  8215  001CD0  1975               	xorwf	i2sprintf@c& (0+255),w,b
  8216  001CD2  A4D8               	btfss	status,2,c
  8217  001CD4  D7E4               	goto	i2l6860
  8218  001CD6                     i2u861_40:
  8219                           
  8220                           ; BSR set to: 0
  8221                           ;doprnt.c: 1201: {;doprnt.c: 1214: if(flag & 0x03)
  8222  001CD6  C064  F04D         	movff	i2sprintf@flag,??i2_sprintf
  8223  001CDA  0E03               	movlw	3
  8224  001CDC  164D               	andwf	??i2_sprintf^0,f,c
  8225  001CDE  B4D8               	btfsc	status,2,c
  8226  001CE0  D051               	goto	i2l6882
  8227                           
  8228                           ; BSR set to: 0
  8229                           ;doprnt.c: 1216: ((*sp++ = ('-')));
  8230  001CE2  C047  FFD9         	movff	i2sprintf@sp,fsr2l
  8231  001CE6  C048  FFDA         	movff	i2sprintf@sp+1,fsr2h
  8232  001CEA  0E2D               	movlw	45
  8233  001CEC  6EDF               	movwf	indf2,c
  8234                           
  8235                           ; BSR set to: 0
  8236  001CEE  4A47               	infsnz	i2sprintf@sp^0,f,c
  8237  001CF0  2A48               	incf	(i2sprintf@sp+1)^0,f,c
  8238  001CF2  D048               	goto	i2l6882
  8239  001CF4                     i2l6874:
  8240                           
  8241                           ; BSR set to: 0
  8242                           ;doprnt.c: 1226: {;doprnt.c: 1227: tmpval.vd = val/dpowers[c];
  8243  001CF4  C06C  F001         	movff	i2sprintf@val,i2___lldiv@dividend
  8244  001CF8  C06D  F002         	movff	i2sprintf@val+1,i2___lldiv@dividend+1
  8245  001CFC  C06E  F003         	movff	i2sprintf@val+2,i2___lldiv@dividend+2
  8246  001D00  C06F  F004         	movff	i2sprintf@val+3,i2___lldiv@dividend+3
  8247  001D04  5175               	movf	i2sprintf@c& (0+255),w,b
  8248  001D06  0D04               	mullw	4
  8249  001D08  50F3               	movf	243,w,c
  8250  001D0A  0F4F               	addlw	low _dpowers
  8251  001D0C  6E4D               	movwf	??i2_sprintf^0,c
  8252  001D0E  C04D  FFF6         	movff	??i2_sprintf,tblptrl
  8253  001D12                     	if	1	;There is more than 1 active tblptr byte
  8254  001D12  0E10               	movlw	high __smallconst
  8255  001D14  6EF7               	movwf	tblptrh,c
  8256  001D16                     	endif
  8257  001D16                     	if	0	;tblptru may be non-zero
  8258  001D16                     	endif
  8259  001D16                     	if	0	;tblptru may be non-zero
  8260  001D16                     	endif
  8261  001D16  0009               	tblrd		*+
  8262  001D18  CFF5 F005          	movff	tablat,i2___lldiv@divisor
  8263  001D1C  0009               	tblrd		*+
  8264  001D1E  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
  8265  001D22  0009               	tblrd		*+
  8266  001D24  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
  8267  001D28  000A               	tblrd		*-
  8268  001D2A  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
  8269  001D2E  EC41  F01E         	call	i2___lldiv	;wreg free
  8270  001D32  C001  F068         	movff	?i2___lldiv,i2sprintf@tmpval
  8271  001D36  C002  F069         	movff	?i2___lldiv+1,i2sprintf@tmpval+1
  8272  001D3A  C003  F06A         	movff	?i2___lldiv+2,i2sprintf@tmpval+2
  8273  001D3E  C004  F06B         	movff	?i2___lldiv+3,i2sprintf@tmpval+3
  8274                           
  8275                           ; BSR set to: 0
  8276                           ;doprnt.c: 1228: tmpval.vd %= 10;
  8277  001D42  C068  F00E         	movff	i2sprintf@tmpval,i2___llmod@dividend
  8278  001D46  C069  F00F         	movff	i2sprintf@tmpval+1,i2___llmod@dividend+1
  8279  001D4A  C06A  F010         	movff	i2sprintf@tmpval+2,i2___llmod@dividend+2
  8280  001D4E  C06B  F011         	movff	i2sprintf@tmpval+3,i2___llmod@dividend+3
  8281  001D52  0E0A               	movlw	10
  8282  001D54  6E12               	movwf	i2___llmod@divisor^0,c
  8283  001D56  0E00               	movlw	0
  8284  001D58  6E13               	movwf	(i2___llmod@divisor+1)^0,c
  8285  001D5A  0E00               	movlw	0
  8286  001D5C  6E14               	movwf	(i2___llmod@divisor+2)^0,c
  8287  001D5E  0E00               	movlw	0
  8288  001D60  6E15               	movwf	(i2___llmod@divisor+3)^0,c
  8289  001D62  EC0C  F020         	call	i2___llmod	;wreg free
  8290  001D66  C00E  F068         	movff	?i2___llmod,i2sprintf@tmpval
  8291  001D6A  C00F  F069         	movff	?i2___llmod+1,i2sprintf@tmpval+1
  8292  001D6E  C010  F06A         	movff	?i2___llmod+2,i2sprintf@tmpval+2
  8293  001D72  C011  F06B         	movff	?i2___llmod+3,i2sprintf@tmpval+3
  8294                           
  8295                           ; BSR set to: 0
  8296                           ;doprnt.c: 1229: ((*sp++ = ('0' + tmpval.vd)));
  8297  001D76  5168               	movf	i2sprintf@tmpval& (0+255),w,b
  8298  001D78  0F30               	addlw	48
  8299  001D7A  C047  FFD9         	movff	i2sprintf@sp,fsr2l
  8300  001D7E  C048  FFDA         	movff	i2sprintf@sp+1,fsr2h
  8301  001D82  D7B4               	goto	L7
  8302  001D84                     i2l6882:
  8303                           
  8304                           ; BSR set to: 0
  8305  001D84  0775               	decf	i2sprintf@c& (0+255),f,b
  8306  001D86  2975               	incf	i2sprintf@c& (0+255),w,b
  8307  001D88  B4D8               	btfsc	status,2,c
  8308  001D8A  D00C               	goto	i2l6890
  8309  001D8C  D7B3               	goto	i2l6874
  8310  001D8E                     i2l6884:
  8311                           
  8312                           ; BSR set to: 0
  8313                           ;doprnt.c: 1234: ((*sp++ = ('0')));
  8314  001D8E  C047  FFD9         	movff	i2sprintf@sp,fsr2l
  8315  001D92  C048  FFDA         	movff	i2sprintf@sp+1,fsr2h
  8316  001D96  0E30               	movlw	48
  8317  001D98  6EDF               	movwf	indf2,c
  8318                           
  8319                           ; BSR set to: 0
  8320  001D9A  4A47               	infsnz	i2sprintf@sp^0,f,c
  8321  001D9C  2A48               	incf	(i2sprintf@sp+1)^0,f,c
  8322                           
  8323                           ; BSR set to: 0
  8324                           ;doprnt.c: 1235: eexp--;
  8325  001D9E  0766               	decf	i2sprintf@eexp& (0+255),f,b
  8326  001DA0  A0D8               	btfss	status,0,c
  8327  001DA2  0767               	decf	(i2sprintf@eexp+1)& (0+255),f,b
  8328  001DA4                     i2l6890:
  8329                           
  8330                           ; BSR set to: 0
  8331  001DA4  BF67               	btfsc	(i2sprintf@eexp+1)& (0+255),7,b
  8332  001DA6  D005               	goto	i2u864_40
  8333  001DA8  5167               	movf	(i2sprintf@eexp+1)& (0+255),w,b
  8334  001DAA  E1F1               	bnz	i2l6884
  8335  001DAC  0566               	decf	i2sprintf@eexp& (0+255),w,b
  8336  001DAE  B0D8               	btfsc	status,0,c
  8337  001DB0  D7EE               	goto	i2l6884
  8338  001DB2                     i2u864_40:
  8339                           
  8340                           ; BSR set to: 0
  8341                           ;doprnt.c: 1236: };doprnt.c: 1237: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2)
      +                          )
  8342  001DB2  BF71               	btfsc	(i2sprintf@prec+1)& (0+255),7,b
  8343  001DB4  D009               	goto	i2l243
  8344  001DB6  5171               	movf	(i2sprintf@prec+1)& (0+255),w,b
  8345  001DB8  E104               	bnz	i2u865_40
  8346  001DBA  0E09               	movlw	9
  8347  001DBC  5D70               	subwf	i2sprintf@prec& (0+255),w,b
  8348  001DBE  A0D8               	btfss	status,0,c
  8349  001DC0  D003               	goto	i2l243
  8350  001DC2                     i2u865_40:
  8351                           
  8352                           ; BSR set to: 0
  8353                           ;doprnt.c: 1238: c = (sizeof dpowers/sizeof dpowers[0])-2;
  8354  001DC2  0E08               	movlw	8
  8355  001DC4  6F75               	movwf	i2sprintf@c& (0+255),b
  8356  001DC6  D002               	goto	i2l6896
  8357  001DC8                     i2l243:
  8358                           
  8359                           ; BSR set to: 0
  8360                           ;doprnt.c: 1239: else;doprnt.c: 1240: c = (char)prec;
  8361  001DC8  C070  F075         	movff	i2sprintf@prec,i2sprintf@c
  8362  001DCC                     i2l6896:
  8363                           
  8364                           ; BSR set to: 0
  8365                           ;doprnt.c: 1241: prec -= (int)c;
  8366  001DCC  5175               	movf	i2sprintf@c& (0+255),w,b
  8367  001DCE  5F70               	subwf	i2sprintf@prec& (0+255),f,b
  8368  001DD0  0E00               	movlw	0
  8369  001DD2  5B71               	subwfb	(i2sprintf@prec+1)& (0+255),f,b
  8370                           
  8371                           ; BSR set to: 0
  8372                           ;doprnt.c: 1245: if(c)
  8373  001DD4  5175               	movf	i2sprintf@c& (0+255),w,b
  8374  001DD6  B4D8               	btfsc	status,2,c
  8375  001DD8  D008               	goto	i2l6904
  8376                           
  8377                           ; BSR set to: 0
  8378                           ;doprnt.c: 1247: ((*sp++ = ('.')));
  8379  001DDA  C047  FFD9         	movff	i2sprintf@sp,fsr2l
  8380  001DDE  C048  FFDA         	movff	i2sprintf@sp+1,fsr2h
  8381  001DE2  0E2E               	movlw	46
  8382  001DE4  6EDF               	movwf	indf2,c
  8383                           
  8384                           ; BSR set to: 0
  8385  001DE6  4A47               	infsnz	i2sprintf@sp^0,f,c
  8386  001DE8  2A48               	incf	(i2sprintf@sp+1)^0,f,c
  8387  001DEA                     i2l6904:
  8388                           
  8389                           ; BSR set to: 0
  8390                           ;doprnt.c: 1253: val = (unsigned long)(fval * scale((signed char)c));
  8391  001DEA  5175               	movf	i2sprintf@c& (0+255),w,b
  8392  001DEC  EC39  F012         	call	i2_scale
  8393  001DF0  C01E  F060         	movff	?i2_scale,i2_sprintf$1141
  8394  001DF4  C01F  F061         	movff	?i2_scale+1,i2_sprintf$1141+1
  8395  001DF8  C020  F062         	movff	?i2_scale+2,i2_sprintf$1141+2
  8396                           
  8397                           ;doprnt.c: 1253: val = (unsigned long)(fval * scale((signed char)c));
  8398  001DFC  C072  F012         	movff	i2sprintf@fval,i2___ftmul@f2
  8399  001E00  C073  F013         	movff	i2sprintf@fval+1,i2___ftmul@f2+1
  8400  001E04  C074  F014         	movff	i2sprintf@fval+2,i2___ftmul@f2+2
  8401  001E08  C060  F00F         	movff	i2_sprintf$1141,i2___ftmul@f1
  8402  001E0C  C061  F010         	movff	i2_sprintf$1141+1,i2___ftmul@f1+1
  8403  001E10  C062  F011         	movff	i2_sprintf$1141+2,i2___ftmul@f1+2
  8404  001E14  EC7E  F019         	call	i2___ftmul	;wreg free
  8405  001E18  C00F  F038         	movff	?i2___ftmul,i2___fttol@f1
  8406  001E1C  C010  F039         	movff	?i2___ftmul+1,i2___fttol@f1+1
  8407  001E20  C011  F03A         	movff	?i2___ftmul+2,i2___fttol@f1+2
  8408  001E24  ECBC  F01B         	call	i2___fttol	;wreg free
  8409  001E28  C038  F06C         	movff	?i2___fttol,i2sprintf@val
  8410  001E2C  C039  F06D         	movff	?i2___fttol+1,i2sprintf@val+1
  8411  001E30  C03A  F06E         	movff	?i2___fttol+2,i2sprintf@val+2
  8412  001E34  C03B  F06F         	movff	?i2___fttol+3,i2sprintf@val+3
  8413                           
  8414                           ;doprnt.c: 1254: while(c--) {
  8415  001E38  D071               	goto	i2l6918
  8416  001E3A                     i2l6908:
  8417                           
  8418                           ; BSR set to: 0
  8419                           ;doprnt.c: 1255: tmpval.vd = val/dpowers[c];
  8420  001E3A  C06C  F001         	movff	i2sprintf@val,i2___lldiv@dividend
  8421  001E3E  C06D  F002         	movff	i2sprintf@val+1,i2___lldiv@dividend+1
  8422  001E42  C06E  F003         	movff	i2sprintf@val+2,i2___lldiv@dividend+2
  8423  001E46  C06F  F004         	movff	i2sprintf@val+3,i2___lldiv@dividend+3
  8424  001E4A  5175               	movf	i2sprintf@c& (0+255),w,b
  8425  001E4C  0D04               	mullw	4
  8426  001E4E  50F3               	movf	243,w,c
  8427  001E50  0F4F               	addlw	low _dpowers
  8428  001E52  6E4D               	movwf	??i2_sprintf^0,c
  8429  001E54  C04D  FFF6         	movff	??i2_sprintf,tblptrl
  8430  001E58                     	if	1	;There is more than 1 active tblptr byte
  8431  001E58  0E10               	movlw	high __smallconst
  8432  001E5A  6EF7               	movwf	tblptrh,c
  8433  001E5C                     	endif
  8434  001E5C                     	if	0	;tblptru may be non-zero
  8435  001E5C                     	endif
  8436  001E5C                     	if	0	;tblptru may be non-zero
  8437  001E5C                     	endif
  8438  001E5C  0009               	tblrd		*+
  8439  001E5E  CFF5 F005          	movff	tablat,i2___lldiv@divisor
  8440  001E62  0009               	tblrd		*+
  8441  001E64  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
  8442  001E68  0009               	tblrd		*+
  8443  001E6A  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
  8444  001E6E  000A               	tblrd		*-
  8445  001E70  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
  8446  001E74  EC41  F01E         	call	i2___lldiv	;wreg free
  8447  001E78  C001  F068         	movff	?i2___lldiv,i2sprintf@tmpval
  8448  001E7C  C002  F069         	movff	?i2___lldiv+1,i2sprintf@tmpval+1
  8449  001E80  C003  F06A         	movff	?i2___lldiv+2,i2sprintf@tmpval+2
  8450  001E84  C004  F06B         	movff	?i2___lldiv+3,i2sprintf@tmpval+3
  8451                           
  8452                           ; BSR set to: 0
  8453                           ;doprnt.c: 1256: tmpval.vd %= 10;
  8454  001E88  C068  F00E         	movff	i2sprintf@tmpval,i2___llmod@dividend
  8455  001E8C  C069  F00F         	movff	i2sprintf@tmpval+1,i2___llmod@dividend+1
  8456  001E90  C06A  F010         	movff	i2sprintf@tmpval+2,i2___llmod@dividend+2
  8457  001E94  C06B  F011         	movff	i2sprintf@tmpval+3,i2___llmod@dividend+3
  8458  001E98  0E0A               	movlw	10
  8459  001E9A  6E12               	movwf	i2___llmod@divisor^0,c
  8460  001E9C  0E00               	movlw	0
  8461  001E9E  6E13               	movwf	(i2___llmod@divisor+1)^0,c
  8462  001EA0  0E00               	movlw	0
  8463  001EA2  6E14               	movwf	(i2___llmod@divisor+2)^0,c
  8464  001EA4  0E00               	movlw	0
  8465  001EA6  6E15               	movwf	(i2___llmod@divisor+3)^0,c
  8466  001EA8  EC0C  F020         	call	i2___llmod	;wreg free
  8467  001EAC  C00E  F068         	movff	?i2___llmod,i2sprintf@tmpval
  8468  001EB0  C00F  F069         	movff	?i2___llmod+1,i2sprintf@tmpval+1
  8469  001EB4  C010  F06A         	movff	?i2___llmod+2,i2sprintf@tmpval+2
  8470  001EB8  C011  F06B         	movff	?i2___llmod+3,i2sprintf@tmpval+3
  8471                           
  8472                           ; BSR set to: 0
  8473                           ;doprnt.c: 1257: ((*sp++ = ('0' + tmpval.vd)));
  8474  001EBC  5168               	movf	i2sprintf@tmpval& (0+255),w,b
  8475  001EBE  0F30               	addlw	48
  8476  001EC0  C047  FFD9         	movff	i2sprintf@sp,fsr2l
  8477  001EC4  C048  FFDA         	movff	i2sprintf@sp+1,fsr2h
  8478  001EC8  6EDF               	movwf	indf2,c
  8479                           
  8480                           ; BSR set to: 0
  8481  001ECA  4A47               	infsnz	i2sprintf@sp^0,f,c
  8482  001ECC  2A48               	incf	(i2sprintf@sp+1)^0,f,c
  8483                           
  8484                           ; BSR set to: 0
  8485                           ;doprnt.c: 1258: val %= dpowers[c];
  8486  001ECE  C06C  F00E         	movff	i2sprintf@val,i2___llmod@dividend
  8487  001ED2  C06D  F00F         	movff	i2sprintf@val+1,i2___llmod@dividend+1
  8488  001ED6  C06E  F010         	movff	i2sprintf@val+2,i2___llmod@dividend+2
  8489  001EDA  C06F  F011         	movff	i2sprintf@val+3,i2___llmod@dividend+3
  8490  001EDE  5175               	movf	i2sprintf@c& (0+255),w,b
  8491  001EE0  0D04               	mullw	4
  8492  001EE2  50F3               	movf	243,w,c
  8493  001EE4  0F4F               	addlw	low _dpowers
  8494  001EE6  6E4D               	movwf	??i2_sprintf^0,c
  8495  001EE8  C04D  FFF6         	movff	??i2_sprintf,tblptrl
  8496  001EEC                     	if	1	;There is more than 1 active tblptr byte
  8497  001EEC  0E10               	movlw	high __smallconst
  8498  001EEE  6EF7               	movwf	tblptrh,c
  8499  001EF0                     	endif
  8500  001EF0                     	if	0	;tblptru may be non-zero
  8501  001EF0                     	endif
  8502  001EF0                     	if	0	;tblptru may be non-zero
  8503  001EF0                     	endif
  8504  001EF0  0009               	tblrd		*+
  8505  001EF2  CFF5 F012          	movff	tablat,i2___llmod@divisor
  8506  001EF6  0009               	tblrd		*+
  8507  001EF8  CFF5 F013          	movff	tablat,i2___llmod@divisor+1
  8508  001EFC  0009               	tblrd		*+
  8509  001EFE  CFF5 F014          	movff	tablat,i2___llmod@divisor+2
  8510  001F02  000A               	tblrd		*-
  8511  001F04  CFF5 F015          	movff	tablat,i2___llmod@divisor+3
  8512  001F08  EC0C  F020         	call	i2___llmod	;wreg free
  8513  001F0C  C00E  F06C         	movff	?i2___llmod,i2sprintf@val
  8514  001F10  C00F  F06D         	movff	?i2___llmod+1,i2sprintf@val+1
  8515  001F14  C010  F06E         	movff	?i2___llmod+2,i2sprintf@val+2
  8516  001F18  C011  F06F         	movff	?i2___llmod+3,i2sprintf@val+3
  8517  001F1C                     i2l6918:
  8518  001F1C  0100               	movlb	0	; () banked
  8519  001F1E  0775               	decf	i2sprintf@c& (0+255),f,b
  8520  001F20  2975               	incf	i2sprintf@c& (0+255),w,b
  8521  001F22  B4D8               	btfsc	status,2,c
  8522  001F24  D00C               	goto	i2l6926
  8523  001F26  D789               	goto	i2l6908
  8524  001F28                     i2l6920:
  8525                           
  8526                           ; BSR set to: 0
  8527                           ;doprnt.c: 1262: ((*sp++ = ('0')));
  8528  001F28  C047  FFD9         	movff	i2sprintf@sp,fsr2l
  8529  001F2C  C048  FFDA         	movff	i2sprintf@sp+1,fsr2h
  8530  001F30  0E30               	movlw	48
  8531  001F32  6EDF               	movwf	indf2,c
  8532                           
  8533                           ; BSR set to: 0
  8534  001F34  4A47               	infsnz	i2sprintf@sp^0,f,c
  8535  001F36  2A48               	incf	(i2sprintf@sp+1)^0,f,c
  8536                           
  8537                           ; BSR set to: 0
  8538                           ;doprnt.c: 1263: prec--;
  8539  001F38  0770               	decf	i2sprintf@prec& (0+255),f,b
  8540  001F3A  A0D8               	btfss	status,0,c
  8541  001F3C  0771               	decf	(i2sprintf@prec+1)& (0+255),f,b
  8542  001F3E                     i2l6926:
  8543                           
  8544                           ; BSR set to: 0
  8545  001F3E  5170               	movf	i2sprintf@prec& (0+255),w,b
  8546  001F40  1171               	iorwf	(i2sprintf@prec+1)& (0+255),w,b
  8547  001F42  B4D8               	btfsc	status,2,c
  8548  001F44  D0B4               	goto	i2u877_40
  8549  001F46  D7F0               	goto	i2l6920
  8550  001F48                     i2l6928:
  8551                           
  8552                           ; BSR set to: 0
  8553                           ;doprnt.c: 1272: };doprnt.c: 1279: {;doprnt.c: 1285: val = (unsigned long)(*(int *)__va_
      +                          arg((*(int **)ap), (int)0));
  8554  001F48  5163               	movf	i2sprintf@ap& (0+255),w,b
  8555  001F4A  6ED9               	movwf	fsr2l,c
  8556  001F4C  6ADA               	clrf	fsr2h,c
  8557  001F4E  CFDE F06C          	movff	postinc2,i2sprintf@val
  8558  001F52  CFDD F06D          	movff	postdec2,i2sprintf@val+1
  8559  001F56  0E00               	movlw	0
  8560  001F58  BF6D               	btfsc	(i2sprintf@val+1)& (0+255),7,b
  8561  001F5A  0EFF               	movlw	-1
  8562  001F5C  6F6E               	movwf	(i2sprintf@val+2)& (0+255),b
  8563  001F5E  6F6F               	movwf	(i2sprintf@val+3)& (0+255),b
  8564                           
  8565                           ; BSR set to: 0
  8566  001F60  0E02               	movlw	2
  8567  001F62  2763               	addwf	i2sprintf@ap& (0+255),f,b
  8568                           
  8569                           ; BSR set to: 0
  8570                           ;doprnt.c: 1287: if((long)val < 0) {
  8571  001F64  AF6F               	btfss	(i2sprintf@val+3)& (0+255),7,b
  8572  001F66  D00A               	goto	i2l6938
  8573                           
  8574                           ; BSR set to: 0
  8575                           ;doprnt.c: 1288: flag |= 0x03;
  8576  001F68  0E03               	movlw	3
  8577  001F6A  1364               	iorwf	i2sprintf@flag& (0+255),f,b
  8578                           
  8579                           ; BSR set to: 0
  8580                           ;doprnt.c: 1289: val = -val;
  8581  001F6C  1F6F               	comf	(i2sprintf@val+3)& (0+255),f,b
  8582  001F6E  1F6E               	comf	(i2sprintf@val+2)& (0+255),f,b
  8583  001F70  1F6D               	comf	(i2sprintf@val+1)& (0+255),f,b
  8584  001F72  6D6C               	negf	i2sprintf@val& (0+255),b
  8585  001F74  0E00               	movlw	0
  8586  001F76  236D               	addwfc	(i2sprintf@val+1)& (0+255),f,b
  8587  001F78  236E               	addwfc	(i2sprintf@val+2)& (0+255),f,b
  8588  001F7A  236F               	addwfc	(i2sprintf@val+3)& (0+255),f,b
  8589  001F7C                     i2l6938:
  8590                           
  8591                           ; BSR set to: 0
  8592                           ;doprnt.c: 1290: };doprnt.c: 1292: };doprnt.c: 1316: if(prec == 0 && val == 0)
  8593  001F7C  5170               	movf	i2sprintf@prec& (0+255),w,b
  8594  001F7E  1171               	iorwf	(i2sprintf@prec+1)& (0+255),w,b
  8595  001F80  A4D8               	btfss	status,2,c
  8596  001F82  D008               	goto	i2l6944
  8597                           
  8598                           ; BSR set to: 0
  8599  001F84  516C               	movf	i2sprintf@val& (0+255),w,b
  8600  001F86  116D               	iorwf	(i2sprintf@val+1)& (0+255),w,b
  8601  001F88  116E               	iorwf	(i2sprintf@val+2)& (0+255),w,b
  8602  001F8A  116F               	iorwf	(i2sprintf@val+3)& (0+255),w,b
  8603  001F8C  A4D8               	btfss	status,2,c
  8604  001F8E  D002               	goto	i2l6944
  8605                           
  8606                           ; BSR set to: 0
  8607                           ;doprnt.c: 1317: prec++;
  8608  001F90  4B70               	infsnz	i2sprintf@prec& (0+255),f,b
  8609  001F92  2B71               	incf	(i2sprintf@prec+1)& (0+255),f,b
  8610  001F94                     i2l6944:
  8611                           
  8612                           ; BSR set to: 0
  8613                           ;doprnt.c: 1331: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  8614  001F94  0E01               	movlw	1
  8615  001F96  6F75               	movwf	i2sprintf@c& (0+255),b
  8616  001F98                     i2l6950:
  8617                           
  8618                           ; BSR set to: 0
  8619                           ;doprnt.c: 1332: if(val < dpowers[c])
  8620  001F98  5175               	movf	i2sprintf@c& (0+255),w,b
  8621  001F9A  0D04               	mullw	4
  8622  001F9C  50F3               	movf	243,w,c
  8623  001F9E  0F4F               	addlw	low _dpowers
  8624  001FA0  6E4D               	movwf	??i2_sprintf^0,c
  8625  001FA2  C04D  FFF6         	movff	??i2_sprintf,tblptrl
  8626  001FA6                     	if	1	;There is more than 1 active tblptr byte
  8627  001FA6  0E10               	movlw	high __smallconst
  8628  001FA8  6EF7               	movwf	tblptrh,c
  8629  001FAA                     	endif
  8630  001FAA                     	if	0	;tblptru may be non-zero
  8631  001FAA                     	endif
  8632  001FAA                     	if	0	;tblptru may be non-zero
  8633  001FAA                     	endif
  8634  001FAA  0009               	tblrd		*+
  8635  001FAC  50F5               	movf	tablat,w,c
  8636  001FAE  5D6C               	subwf	i2sprintf@val& (0+255),w,b
  8637  001FB0  0009               	tblrd		*+
  8638  001FB2  50F5               	movf	tablat,w,c
  8639  001FB4  596D               	subwfb	(i2sprintf@val+1)& (0+255),w,b
  8640  001FB6  0009               	tblrd		*+
  8641  001FB8  50F5               	movf	tablat,w,c
  8642  001FBA  596E               	subwfb	(i2sprintf@val+2)& (0+255),w,b
  8643  001FBC  0009               	tblrd		*+
  8644  001FBE  50F5               	movf	tablat,w,c
  8645  001FC0  596F               	subwfb	(i2sprintf@val+3)& (0+255),w,b
  8646  001FC2  A0D8               	btfss	status,0,c
  8647  001FC4  D005               	goto	i2u873_40
  8648                           
  8649                           ; BSR set to: 0
  8650  001FC6  2B75               	incf	i2sprintf@c& (0+255),f,b
  8651                           
  8652                           ; BSR set to: 0
  8653  001FC8  0E0A               	movlw	10
  8654  001FCA  1975               	xorwf	i2sprintf@c& (0+255),w,b
  8655  001FCC  A4D8               	btfss	status,2,c
  8656  001FCE  D7E4               	goto	i2l6950
  8657  001FD0                     i2u873_40:
  8658                           
  8659                           ; BSR set to: 0
  8660                           ;doprnt.c: 1365: if(c < prec)
  8661  001FD0  5175               	movf	i2sprintf@c& (0+255),w,b
  8662  001FD2  6E4D               	movwf	??i2_sprintf^0,c
  8663  001FD4  6A4E               	clrf	(??i2_sprintf+1)^0,c
  8664  001FD6  5170               	movf	i2sprintf@prec& (0+255),w,b
  8665  001FD8  5C4D               	subwf	??i2_sprintf^0,w,c
  8666  001FDA  504E               	movf	(??i2_sprintf+1)^0,w,c
  8667  001FDC  0A80               	xorlw	128
  8668  001FDE  6E4F               	movwf	(??i2_sprintf+2)^0,c
  8669  001FE0  5171               	movf	(i2sprintf@prec+1)& (0+255),w,b
  8670  001FE2  0A80               	xorlw	128
  8671  001FE4  584F               	subwfb	(??i2_sprintf+2)^0,w,c
  8672  001FE6  A0D8               	btfss	status,0,c
  8673  001FE8  D010               	goto	i2l6966
  8674                           
  8675                           ; BSR set to: 0
  8676                           ;doprnt.c: 1367: else if(prec < c)
  8677                           
  8678                           ; BSR set to: 0
  8679  001FEA  5175               	movf	i2sprintf@c& (0+255),w,b
  8680  001FEC  6E4D               	movwf	??i2_sprintf^0,c
  8681  001FEE  6A4E               	clrf	(??i2_sprintf+1)^0,c
  8682  001FF0  504D               	movf	??i2_sprintf^0,w,c
  8683  001FF2  5D70               	subwf	i2sprintf@prec& (0+255),w,b
  8684  001FF4  5171               	movf	(i2sprintf@prec+1)& (0+255),w,b
  8685  001FF6  0A80               	xorlw	128
  8686  001FF8  6E4F               	movwf	(??i2_sprintf+2)^0,c
  8687  001FFA  504E               	movf	(??i2_sprintf+1)^0,w,c
  8688  001FFC  0A80               	xorlw	128
  8689  001FFE  584F               	subwfb	(??i2_sprintf+2)^0,w,c
  8690  002000  B0D8               	btfsc	status,0,c
  8691  002002  D003               	goto	i2l6966
  8692                           
  8693                           ; BSR set to: 0
  8694                           ;doprnt.c: 1368: prec = c;
  8695  002004  C075  F070         	movff	i2sprintf@c,i2sprintf@prec
  8696  002008  6B71               	clrf	(i2sprintf@prec+1)& (0+255),b
  8697  00200A                     i2l6966:
  8698                           
  8699                           ; BSR set to: 0
  8700                           ;doprnt.c: 1448: {;doprnt.c: 1464: if(flag & 0x03)
  8701  00200A  C064  F04D         	movff	i2sprintf@flag,??i2_sprintf
  8702  00200E  0E03               	movlw	3
  8703  002010  164D               	andwf	??i2_sprintf^0,f,c
  8704  002012  B4D8               	btfsc	status,2,c
  8705  002014  D044               	goto	i2l6978
  8706                           
  8707                           ; BSR set to: 0
  8708                           ;doprnt.c: 1465: ((*sp++ = ('-')));
  8709  002016  C047  FFD9         	movff	i2sprintf@sp,fsr2l
  8710  00201A  C048  FFDA         	movff	i2sprintf@sp+1,fsr2h
  8711  00201E  0E2D               	movlw	45
  8712  002020  6EDF               	movwf	indf2,c
  8713  002022                     i2l6970:
  8714                           
  8715                           ; BSR set to: 0
  8716  002022  4A47               	infsnz	i2sprintf@sp^0,f,c
  8717  002024  2A48               	incf	(i2sprintf@sp+1)^0,f,c
  8718  002026  D03B               	goto	i2l6978
  8719  002028                     i2l6972:
  8720                           
  8721                           ; BSR set to: 0
  8722                           ;doprnt.c: 1504: {;doprnt.c: 1515: c = (val / dpowers[(unsigned int)prec]) % 10 + '0';
  8723  002028  5170               	movf	i2sprintf@prec& (0+255),w,b
  8724  00202A  0D04               	mullw	4
  8725  00202C  50F3               	movf	243,w,c
  8726  00202E  0F4F               	addlw	low _dpowers
  8727  002030  6E4D               	movwf	??i2_sprintf^0,c
  8728  002032  C04D  FFF6         	movff	??i2_sprintf,tblptrl
  8729  002036                     	if	1	;There is more than 1 active tblptr byte
  8730  002036  0E10               	movlw	high __smallconst
  8731  002038  6EF7               	movwf	tblptrh,c
  8732  00203A                     	endif
  8733  00203A                     	if	0	;tblptru may be non-zero
  8734  00203A                     	endif
  8735  00203A                     	if	0	;tblptru may be non-zero
  8736  00203A                     	endif
  8737  00203A  0009               	tblrd		*+
  8738  00203C  CFF5 F005          	movff	tablat,i2___lldiv@divisor
  8739  002040  0009               	tblrd		*+
  8740  002042  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
  8741  002046  0009               	tblrd		*+
  8742  002048  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
  8743  00204C  000A               	tblrd		*-
  8744  00204E  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
  8745  002052  C06C  F001         	movff	i2sprintf@val,i2___lldiv@dividend
  8746  002056  C06D  F002         	movff	i2sprintf@val+1,i2___lldiv@dividend+1
  8747  00205A  C06E  F003         	movff	i2sprintf@val+2,i2___lldiv@dividend+2
  8748  00205E  C06F  F004         	movff	i2sprintf@val+3,i2___lldiv@dividend+3
  8749  002062  EC41  F01E         	call	i2___lldiv	;wreg free
  8750  002066  C001  F00E         	movff	?i2___lldiv,i2___llmod@dividend
  8751  00206A  C002  F00F         	movff	?i2___lldiv+1,i2___llmod@dividend+1
  8752  00206E  C003  F010         	movff	?i2___lldiv+2,i2___llmod@dividend+2
  8753  002072  C004  F011         	movff	?i2___lldiv+3,i2___llmod@dividend+3
  8754  002076  0E0A               	movlw	10
  8755  002078  6E12               	movwf	i2___llmod@divisor^0,c
  8756  00207A  0E00               	movlw	0
  8757  00207C  6E13               	movwf	(i2___llmod@divisor+1)^0,c
  8758  00207E  0E00               	movlw	0
  8759  002080  6E14               	movwf	(i2___llmod@divisor+2)^0,c
  8760  002082  0E00               	movlw	0
  8761  002084  6E15               	movwf	(i2___llmod@divisor+3)^0,c
  8762  002086  EC0C  F020         	call	i2___llmod	;wreg free
  8763  00208A  500E               	movf	?i2___llmod^0,w,c
  8764  00208C  0F30               	addlw	48
  8765  00208E  6F75               	movwf	i2sprintf@c& (0+255),b
  8766                           
  8767                           ; BSR set to: 0
  8768                           ;doprnt.c: 1549: };doprnt.c: 1550: ((*sp++ = (c)));
  8769  002090  C047  FFD9         	movff	i2sprintf@sp,fsr2l
  8770  002094  C048  FFDA         	movff	i2sprintf@sp+1,fsr2h
  8771  002098  C075  FFDF         	movff	i2sprintf@c,indf2
  8772  00209C  D7C2               	goto	i2l6970
  8773  00209E                     i2l6978:
  8774                           
  8775                           ; BSR set to: 0
  8776  00209E  0770               	decf	i2sprintf@prec& (0+255),f,b
  8777  0020A0  A0D8               	btfss	status,0,c
  8778  0020A2  0771               	decf	(i2sprintf@prec+1)& (0+255),f,b
  8779  0020A4  2970               	incf	i2sprintf@prec& (0+255),w,b
  8780  0020A6  E1C0               	bnz	i2l6972
  8781  0020A8  2971               	incf	(i2sprintf@prec+1)& (0+255),w,b
  8782  0020AA  A4D8               	btfss	status,2,c
  8783  0020AC  D7BD               	goto	i2l6972
  8784  0020AE                     i2u877_40:
  8785                           
  8786                           ; BSR set to: 0
  8787  0020AE  2A49               	incf	i2sprintf@f^0,f,c
  8788  0020B0  0449               	decf	i2sprintf@f^0,w,c
  8789  0020B2  6E4D               	movwf	??i2_sprintf^0,c
  8790  0020B4  C04D  FFF6         	movff	??i2_sprintf,tblptrl
  8791  0020B8                     	if	1	;There is more than 1 active tblptr byte
  8792  0020B8  0E10               	movlw	high __smallconst
  8793  0020BA  6EF7               	movwf	tblptrh,c
  8794  0020BC                     	endif
  8795  0020BC                     	if	0	;tblptru may be non-zero
  8796  0020BC                     	endif
  8797  0020BC                     	if	0	;tblptru may be non-zero
  8798  0020BC                     	endif
  8799  0020BC  0008               	tblrd		*
  8800  0020BE  CFF5 F075          	movff	tablat,i2sprintf@c
  8801  0020C2  5175               	movf	i2sprintf@c& (0+255),w,b
  8802  0020C4  A4D8               	btfss	status,2,c
  8803  0020C6  D40C               	goto	i2l6748
  8804  0020C8                     i2u878_40:
  8805                           
  8806                           ; BSR set to: 0
  8807                           ;doprnt.c: 1564: *sp = 0;
  8808  0020C8  C047  FFD9         	movff	i2sprintf@sp,fsr2l
  8809  0020CC  C048  FFDA         	movff	i2sprintf@sp+1,fsr2h
  8810  0020D0  0E00               	movlw	0
  8811  0020D2  6EDF               	movwf	indf2,c
  8812                           
  8813                           ; BSR set to: 0
  8814  0020D4  0012               	return		;funcret
  8815  0020D6                     __end_ofi2_sprintf:
  8816                           	callstack 0
  8817                           
  8818 ;; *************** function i2_scale *****************
  8819 ;; Defined at:
  8820 ;;		line 433 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c"
  8821 ;; Parameters:    Size  Location     Type
  8822 ;;  scl             1    wreg     char 
  8823 ;; Auto vars:     Size  Location     Type
  8824 ;;  scl             1   39[COMRAM] char 
  8825 ;; Return value:  Size  Location     Type
  8826 ;;                  3   29[COMRAM] char 
  8827 ;; Registers used:
  8828 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8829 ;; Tracked objects:
  8830 ;;		On entry : 3F/0
  8831 ;;		On exit  : 0/0
  8832 ;;		Unchanged: 0/0
  8833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8834 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8835 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8836 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8837 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8838 ;;Total ram usage:       11 bytes
  8839 ;; Hardware stack levels used: 1
  8840 ;; Hardware stack levels required when called: 2
  8841 ;; This function calls:
  8842 ;;		i2___awdiv
  8843 ;;		i2___awmod
  8844 ;;		i2___ftmul
  8845 ;; This function is called by:
  8846 ;;		i2_sprintf
  8847 ;; This function uses a non-reentrant model
  8848 ;;
  8849                           
  8850                           	psect	text32
  8851  002472                     __ptext32:
  8852                           	callstack 0
  8853  002472                     i2_scale:
  8854                           	callstack 22
  8855                           
  8856                           ; BSR set to: 0
  8857                           ;incstack = 0
  8858                           ;i2scale@scl stored from wreg
  8859  002472  6E28               	movwf	i2scale@scl^0,c
  8860                           
  8861                           ;doprnt.c: 436: if(scl < 0) {
  8862  002474  AE28               	btfss	i2scale@scl^0,7,c
  8863  002476  D0E5               	goto	i2l6134
  8864                           
  8865                           ;doprnt.c: 437: scl = -scl;
  8866  002478  6C28               	negf	i2scale@scl^0,c
  8867                           
  8868                           ;doprnt.c: 438: if(scl>=110)
  8869  00247A  5028               	movf	i2scale@scl^0,w,c
  8870  00247C  0A80               	xorlw	128
  8871  00247E  0F12               	addlw	-238
  8872  002480  A0D8               	btfss	status,0,c
  8873  002482  D080               	goto	i2l6124
  8874                           
  8875                           ;doprnt.c: 439: return _npowers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char
      +                          )((scl%100)/10+9)] * _npowers_[(unsigned char)(scl%10)];
  8876  002484  0E00               	movlw	0
  8877  002486  6E0A               	movwf	(i2___awdiv@divisor+1)^0,c
  8878  002488  0E0A               	movlw	10
  8879  00248A  6E09               	movwf	i2___awdiv@divisor^0,c
  8880  00248C  0E00               	movlw	0
  8881  00248E  6E04               	movwf	(i2___awmod@divisor+1)^0,c
  8882  002490  0E64               	movlw	100
  8883  002492  6E03               	movwf	i2___awmod@divisor^0,c
  8884  002494  5028               	movf	i2scale@scl^0,w,c
  8885  002496  6E01               	movwf	i2___awmod@dividend^0,c
  8886  002498  6A02               	clrf	(i2___awmod@dividend+1)^0,c
  8887  00249A  BE01               	btfsc	i2___awmod@dividend^0,7,c
  8888  00249C  0602               	decf	(i2___awmod@dividend+1)^0,f,c
  8889  00249E  EC69  F01F         	call	i2___awmod	;wreg free
  8890  0024A2  C001  F007         	movff	?i2___awmod,i2___awdiv@dividend
  8891  0024A6  C002  F008         	movff	?i2___awmod+1,i2___awdiv@dividend+1
  8892  0024AA  ECFF  F01D         	call	i2___awdiv	;wreg free
  8893  0024AE  5007               	movf	?i2___awdiv^0,w,c
  8894  0024B0  0D03               	mullw	3
  8895  0024B2  CFF3 F021          	movff	prodl,??i2_scale
  8896  0024B6  0E1B               	movlw	27
  8897  0024B8  2621               	addwf	??i2_scale^0,f,c
  8898  0024BA  5021               	movf	??i2_scale^0,w,c
  8899  0024BC  0F28               	addlw	low __npowers_
  8900  0024BE  6E22               	movwf	(??i2_scale+1)^0,c
  8901  0024C0  C022  FFF6         	movff	??i2_scale+1,tblptrl
  8902  0024C4                     	if	1	;There is more than 1 active tblptr byte
  8903  0024C4  0E10               	movlw	high __smallconst
  8904  0024C6  6EF7               	movwf	tblptrh,c
  8905  0024C8                     	endif
  8906  0024C8                     	if	0	;tblptru may be non-zero
  8907  0024C8                     	endif
  8908  0024C8                     	if	0	;tblptru may be non-zero
  8909  0024C8                     	endif
  8910  0024C8  0009               	tblrd		*+
  8911  0024CA  CFF5 F012          	movff	tablat,i2___ftmul@f2
  8912  0024CE  0009               	tblrd		*+
  8913  0024D0  CFF5 F013          	movff	tablat,i2___ftmul@f2+1
  8914  0024D4  000A               	tblrd		*-
  8915  0024D6  CFF5 F014          	movff	tablat,i2___ftmul@f2+2
  8916  0024DA  0E00               	movlw	0
  8917  0024DC  6E0A               	movwf	(i2___awdiv@divisor+1)^0,c
  8918  0024DE  0E64               	movlw	100
  8919  0024E0  6E09               	movwf	i2___awdiv@divisor^0,c
  8920  0024E2  5028               	movf	i2scale@scl^0,w,c
  8921  0024E4  6E07               	movwf	i2___awdiv@dividend^0,c
  8922  0024E6  6A08               	clrf	(i2___awdiv@dividend+1)^0,c
  8923  0024E8  BE07               	btfsc	i2___awdiv@dividend^0,7,c
  8924  0024EA  0608               	decf	(i2___awdiv@dividend+1)^0,f,c
  8925  0024EC  ECFF  F01D         	call	i2___awdiv	;wreg free
  8926  0024F0  5007               	movf	?i2___awdiv^0,w,c
  8927  0024F2  0D03               	mullw	3
  8928  0024F4  CFF3 F023          	movff	prodl,??i2_scale+2
  8929  0024F8  0E36               	movlw	54
  8930  0024FA  2623               	addwf	(??i2_scale+2)^0,f,c
  8931  0024FC  5023               	movf	(??i2_scale+2)^0,w,c
  8932  0024FE  0F28               	addlw	low __npowers_
  8933  002500  6E24               	movwf	(??i2_scale+3)^0,c
  8934  002502  C024  FFF6         	movff	??i2_scale+3,tblptrl
  8935  002506                     	if	1	;There is more than 1 active tblptr byte
  8936  002506  0E10               	movlw	high __smallconst
  8937  002508  6EF7               	movwf	tblptrh,c
  8938  00250A                     	endif
  8939  00250A                     	if	0	;tblptru may be non-zero
  8940  00250A                     	endif
  8941  00250A                     	if	0	;tblptru may be non-zero
  8942  00250A                     	endif
  8943  00250A  0009               	tblrd		*+
  8944  00250C  CFF5 F00F          	movff	tablat,i2___ftmul@f1
  8945  002510  0009               	tblrd		*+
  8946  002512  CFF5 F010          	movff	tablat,i2___ftmul@f1+1
  8947  002516  000A               	tblrd		*-
  8948  002518  CFF5 F011          	movff	tablat,i2___ftmul@f1+2
  8949  00251C  EC7E  F019         	call	i2___ftmul	;wreg free
  8950  002520  C00F  F025         	movff	?i2___ftmul,i2_scale$1140
  8951  002524  C010  F026         	movff	?i2___ftmul+1,i2_scale$1140+1
  8952  002528  C011  F027         	movff	?i2___ftmul+2,i2_scale$1140+2
  8953                           
  8954                           ;doprnt.c: 439: return _npowers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char
      +                          )((scl%100)/10+9)] * _npowers_[(unsigned char)(scl%10)];
  8955  00252C  C025  F00F         	movff	i2_scale$1140,i2___ftmul@f1
  8956  002530  C026  F010         	movff	i2_scale$1140+1,i2___ftmul@f1+1
  8957  002534  C027  F011         	movff	i2_scale$1140+2,i2___ftmul@f1+2
  8958  002538  0E00               	movlw	0
  8959  00253A  6E04               	movwf	(i2___awmod@divisor+1)^0,c
  8960  00253C  0E0A               	movlw	10
  8961  00253E  6E03               	movwf	i2___awmod@divisor^0,c
  8962  002540  5028               	movf	i2scale@scl^0,w,c
  8963  002542  6E01               	movwf	i2___awmod@dividend^0,c
  8964  002544  6A02               	clrf	(i2___awmod@dividend+1)^0,c
  8965  002546  BE01               	btfsc	i2___awmod@dividend^0,7,c
  8966  002548  0602               	decf	(i2___awmod@dividend+1)^0,f,c
  8967  00254A  EC69  F01F         	call	i2___awmod	;wreg free
  8968  00254E  5001               	movf	?i2___awmod^0,w,c
  8969  002550  0D03               	mullw	3
  8970  002552  50F3               	movf	243,w,c
  8971  002554  0F28               	addlw	low __npowers_
  8972  002556  6E21               	movwf	??i2_scale^0,c
  8973  002558  C021  FFF6         	movff	??i2_scale,tblptrl
  8974  00255C                     	if	1	;There is more than 1 active tblptr byte
  8975  00255C  0E10               	movlw	high __smallconst
  8976  00255E  6EF7               	movwf	tblptrh,c
  8977  002560                     	endif
  8978  002560                     	if	0	;tblptru may be non-zero
  8979  002560                     	endif
  8980  002560                     	if	0	;tblptru may be non-zero
  8981  002560                     	endif
  8982  002560  0009               	tblrd		*+
  8983  002562  CFF5 F012          	movff	tablat,i2___ftmul@f2
  8984  002566  0009               	tblrd		*+
  8985  002568  CFF5 F013          	movff	tablat,i2___ftmul@f2+1
  8986  00256C  000A               	tblrd		*-
  8987  00256E  CFF5 F014          	movff	tablat,i2___ftmul@f2+2
  8988  002572  EC7E  F019         	call	i2___ftmul	;wreg free
  8989  002576  C00F  F01E         	movff	?i2___ftmul,?i2_scale
  8990  00257A  C010  F01F         	movff	?i2___ftmul+1,?i2_scale+1
  8991  00257E  C011  F020         	movff	?i2___ftmul+2,?i2_scale+2
  8992  002582  0012               	return	
  8993  002584                     i2l6124:
  8994                           
  8995                           ;doprnt.c: 440: else if(scl > 10)
  8996  002584  5028               	movf	i2scale@scl^0,w,c
  8997  002586  0A80               	xorlw	128
  8998  002588  0F75               	addlw	-139
  8999  00258A  A0D8               	btfss	status,0,c
  9000  00258C  D047               	goto	i2l6130
  9001                           
  9002                           ;doprnt.c: 441: return _npowers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(
      +                          scl%10)];
  9003  00258E  0E00               	movlw	0
  9004  002590  6E0A               	movwf	(i2___awdiv@divisor+1)^0,c
  9005  002592  0E0A               	movlw	10
  9006  002594  6E09               	movwf	i2___awdiv@divisor^0,c
  9007  002596  5028               	movf	i2scale@scl^0,w,c
  9008  002598  6E07               	movwf	i2___awdiv@dividend^0,c
  9009  00259A  6A08               	clrf	(i2___awdiv@dividend+1)^0,c
  9010  00259C  BE07               	btfsc	i2___awdiv@dividend^0,7,c
  9011  00259E  0608               	decf	(i2___awdiv@dividend+1)^0,f,c
  9012  0025A0  ECFF  F01D         	call	i2___awdiv	;wreg free
  9013  0025A4  5007               	movf	?i2___awdiv^0,w,c
  9014  0025A6  0D03               	mullw	3
  9015  0025A8  CFF3 F021          	movff	prodl,??i2_scale
  9016  0025AC  0E1B               	movlw	27
  9017  0025AE  2621               	addwf	??i2_scale^0,f,c
  9018  0025B0  5021               	movf	??i2_scale^0,w,c
  9019  0025B2  0F28               	addlw	low __npowers_
  9020  0025B4  6E22               	movwf	(??i2_scale+1)^0,c
  9021  0025B6  C022  FFF6         	movff	??i2_scale+1,tblptrl
  9022  0025BA                     	if	1	;There is more than 1 active tblptr byte
  9023  0025BA  0E10               	movlw	high __smallconst
  9024  0025BC  6EF7               	movwf	tblptrh,c
  9025  0025BE                     	endif
  9026  0025BE                     	if	0	;tblptru may be non-zero
  9027  0025BE                     	endif
  9028  0025BE                     	if	0	;tblptru may be non-zero
  9029  0025BE                     	endif
  9030  0025BE  0009               	tblrd		*+
  9031  0025C0  CFF5 F00F          	movff	tablat,i2___ftmul@f1
  9032  0025C4  0009               	tblrd		*+
  9033  0025C6  CFF5 F010          	movff	tablat,i2___ftmul@f1+1
  9034  0025CA  000A               	tblrd		*-
  9035  0025CC  CFF5 F011          	movff	tablat,i2___ftmul@f1+2
  9036  0025D0  0E00               	movlw	0
  9037  0025D2  6E04               	movwf	(i2___awmod@divisor+1)^0,c
  9038  0025D4  0E0A               	movlw	10
  9039  0025D6  6E03               	movwf	i2___awmod@divisor^0,c
  9040  0025D8  5028               	movf	i2scale@scl^0,w,c
  9041  0025DA  6E01               	movwf	i2___awmod@dividend^0,c
  9042  0025DC  6A02               	clrf	(i2___awmod@dividend+1)^0,c
  9043  0025DE  BE01               	btfsc	i2___awmod@dividend^0,7,c
  9044  0025E0  0602               	decf	(i2___awmod@dividend+1)^0,f,c
  9045  0025E2  EC69  F01F         	call	i2___awmod	;wreg free
  9046  0025E6  5001               	movf	?i2___awmod^0,w,c
  9047  0025E8  0D03               	mullw	3
  9048  0025EA  50F3               	movf	243,w,c
  9049  0025EC  0F28               	addlw	low __npowers_
  9050  0025EE  6E23               	movwf	(??i2_scale+2)^0,c
  9051  0025F0  C023  FFF6         	movff	??i2_scale+2,tblptrl
  9052  0025F4                     	if	1	;There is more than 1 active tblptr byte
  9053  0025F4  0E10               	movlw	high __smallconst
  9054  0025F6  6EF7               	movwf	tblptrh,c
  9055  0025F8                     	endif
  9056  0025F8                     	if	0	;tblptru may be non-zero
  9057  0025F8                     	endif
  9058  0025F8                     	if	0	;tblptru may be non-zero
  9059  0025F8                     	endif
  9060  0025F8  0009               	tblrd		*+
  9061  0025FA  CFF5 F012          	movff	tablat,i2___ftmul@f2
  9062  0025FE  0009               	tblrd		*+
  9063  002600  CFF5 F013          	movff	tablat,i2___ftmul@f2+1
  9064  002604  000A               	tblrd		*-
  9065  002606  CFF5 F014          	movff	tablat,i2___ftmul@f2+2
  9066  00260A  EC7E  F019         	call	i2___ftmul	;wreg free
  9067  00260E  C00F  F01E         	movff	?i2___ftmul,?i2_scale
  9068  002612  C010  F01F         	movff	?i2___ftmul+1,?i2_scale+1
  9069  002616  C011  F020         	movff	?i2___ftmul+2,?i2_scale+2
  9070  00261A  0012               	return	
  9071  00261C                     i2l6130:
  9072                           
  9073                           ;doprnt.c: 442: return _npowers_[(unsigned char)scl];
  9074  00261C  5028               	movf	i2scale@scl^0,w,c
  9075  00261E  0D03               	mullw	3
  9076  002620  50F3               	movf	243,w,c
  9077  002622  0F28               	addlw	low __npowers_
  9078  002624  6E21               	movwf	??i2_scale^0,c
  9079  002626  C021  FFF6         	movff	??i2_scale,tblptrl
  9080  00262A                     	if	1	;There is more than 1 active tblptr byte
  9081  00262A  0E10               	movlw	high __smallconst
  9082  00262C  6EF7               	movwf	tblptrh,c
  9083  00262E                     	endif
  9084  00262E                     	if	0	;tblptru may be non-zero
  9085  00262E                     	endif
  9086  00262E                     	if	0	;tblptru may be non-zero
  9087  00262E                     	endif
  9088  00262E  0009               	tblrd		*+
  9089  002630  CFF5 F01E          	movff	tablat,?i2_scale
  9090  002634  0009               	tblrd		*+
  9091  002636  CFF5 F01F          	movff	tablat,?i2_scale+1
  9092  00263A  000A               	tblrd		*-
  9093  00263C  CFF5 F020          	movff	tablat,?i2_scale+2
  9094  002640  0012               	return	
  9095  002642                     i2l6134:
  9096                           
  9097                           ;doprnt.c: 443: };doprnt.c: 444: if(scl>=110)
  9098  002642  5028               	movf	i2scale@scl^0,w,c
  9099  002644  0A80               	xorlw	128
  9100  002646  0F12               	addlw	-238
  9101  002648  A0D8               	btfss	status,0,c
  9102  00264A  D080               	goto	i2l6142
  9103                           
  9104                           ;doprnt.c: 445: return _powers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)(
      +                          (scl%100)/10+9)] * _powers_[(unsigned char)(scl%10)];
  9105  00264C  0E00               	movlw	0
  9106  00264E  6E0A               	movwf	(i2___awdiv@divisor+1)^0,c
  9107  002650  0E0A               	movlw	10
  9108  002652  6E09               	movwf	i2___awdiv@divisor^0,c
  9109  002654  0E00               	movlw	0
  9110  002656  6E04               	movwf	(i2___awmod@divisor+1)^0,c
  9111  002658  0E64               	movlw	100
  9112  00265A  6E03               	movwf	i2___awmod@divisor^0,c
  9113  00265C  5028               	movf	i2scale@scl^0,w,c
  9114  00265E  6E01               	movwf	i2___awmod@dividend^0,c
  9115  002660  6A02               	clrf	(i2___awmod@dividend+1)^0,c
  9116  002662  BE01               	btfsc	i2___awmod@dividend^0,7,c
  9117  002664  0602               	decf	(i2___awmod@dividend+1)^0,f,c
  9118  002666  EC69  F01F         	call	i2___awmod	;wreg free
  9119  00266A  C001  F007         	movff	?i2___awmod,i2___awdiv@dividend
  9120  00266E  C002  F008         	movff	?i2___awmod+1,i2___awdiv@dividend+1
  9121  002672  ECFF  F01D         	call	i2___awdiv	;wreg free
  9122  002676  5007               	movf	?i2___awdiv^0,w,c
  9123  002678  0D03               	mullw	3
  9124  00267A  CFF3 F021          	movff	prodl,??i2_scale
  9125  00267E  0E1B               	movlw	27
  9126  002680  2621               	addwf	??i2_scale^0,f,c
  9127  002682  5021               	movf	??i2_scale^0,w,c
  9128  002684  0F01               	addlw	low __powers_
  9129  002686  6E22               	movwf	(??i2_scale+1)^0,c
  9130  002688  C022  FFF6         	movff	??i2_scale+1,tblptrl
  9131  00268C                     	if	1	;There is more than 1 active tblptr byte
  9132  00268C  0E10               	movlw	high __smallconst
  9133  00268E  6EF7               	movwf	tblptrh,c
  9134  002690                     	endif
  9135  002690                     	if	0	;tblptru may be non-zero
  9136  002690                     	endif
  9137  002690                     	if	0	;tblptru may be non-zero
  9138  002690                     	endif
  9139  002690  0009               	tblrd		*+
  9140  002692  CFF5 F012          	movff	tablat,i2___ftmul@f2
  9141  002696  0009               	tblrd		*+
  9142  002698  CFF5 F013          	movff	tablat,i2___ftmul@f2+1
  9143  00269C  000A               	tblrd		*-
  9144  00269E  CFF5 F014          	movff	tablat,i2___ftmul@f2+2
  9145  0026A2  0E00               	movlw	0
  9146  0026A4  6E0A               	movwf	(i2___awdiv@divisor+1)^0,c
  9147  0026A6  0E64               	movlw	100
  9148  0026A8  6E09               	movwf	i2___awdiv@divisor^0,c
  9149  0026AA  5028               	movf	i2scale@scl^0,w,c
  9150  0026AC  6E07               	movwf	i2___awdiv@dividend^0,c
  9151  0026AE  6A08               	clrf	(i2___awdiv@dividend+1)^0,c
  9152  0026B0  BE07               	btfsc	i2___awdiv@dividend^0,7,c
  9153  0026B2  0608               	decf	(i2___awdiv@dividend+1)^0,f,c
  9154  0026B4  ECFF  F01D         	call	i2___awdiv	;wreg free
  9155  0026B8  5007               	movf	?i2___awdiv^0,w,c
  9156  0026BA  0D03               	mullw	3
  9157  0026BC  CFF3 F023          	movff	prodl,??i2_scale+2
  9158  0026C0  0E36               	movlw	54
  9159  0026C2  2623               	addwf	(??i2_scale+2)^0,f,c
  9160  0026C4  5023               	movf	(??i2_scale+2)^0,w,c
  9161  0026C6  0F01               	addlw	low __powers_
  9162  0026C8  6E24               	movwf	(??i2_scale+3)^0,c
  9163  0026CA  C024  FFF6         	movff	??i2_scale+3,tblptrl
  9164  0026CE                     	if	1	;There is more than 1 active tblptr byte
  9165  0026CE  0E10               	movlw	high __smallconst
  9166  0026D0  6EF7               	movwf	tblptrh,c
  9167  0026D2                     	endif
  9168  0026D2                     	if	0	;tblptru may be non-zero
  9169  0026D2                     	endif
  9170  0026D2                     	if	0	;tblptru may be non-zero
  9171  0026D2                     	endif
  9172  0026D2  0009               	tblrd		*+
  9173  0026D4  CFF5 F00F          	movff	tablat,i2___ftmul@f1
  9174  0026D8  0009               	tblrd		*+
  9175  0026DA  CFF5 F010          	movff	tablat,i2___ftmul@f1+1
  9176  0026DE  000A               	tblrd		*-
  9177  0026E0  CFF5 F011          	movff	tablat,i2___ftmul@f1+2
  9178  0026E4  EC7E  F019         	call	i2___ftmul	;wreg free
  9179  0026E8  C00F  F025         	movff	?i2___ftmul,i2_scale$1140
  9180  0026EC  C010  F026         	movff	?i2___ftmul+1,i2_scale$1140+1
  9181  0026F0  C011  F027         	movff	?i2___ftmul+2,i2_scale$1140+2
  9182                           
  9183                           ;doprnt.c: 445: return _powers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)(
      +                          (scl%100)/10+9)] * _powers_[(unsigned char)(scl%10)];
  9184  0026F4  C025  F00F         	movff	i2_scale$1140,i2___ftmul@f1
  9185  0026F8  C026  F010         	movff	i2_scale$1140+1,i2___ftmul@f1+1
  9186  0026FC  C027  F011         	movff	i2_scale$1140+2,i2___ftmul@f1+2
  9187  002700  0E00               	movlw	0
  9188  002702  6E04               	movwf	(i2___awmod@divisor+1)^0,c
  9189  002704  0E0A               	movlw	10
  9190  002706  6E03               	movwf	i2___awmod@divisor^0,c
  9191  002708  5028               	movf	i2scale@scl^0,w,c
  9192  00270A  6E01               	movwf	i2___awmod@dividend^0,c
  9193  00270C  6A02               	clrf	(i2___awmod@dividend+1)^0,c
  9194  00270E  BE01               	btfsc	i2___awmod@dividend^0,7,c
  9195  002710  0602               	decf	(i2___awmod@dividend+1)^0,f,c
  9196  002712  EC69  F01F         	call	i2___awmod	;wreg free
  9197  002716  5001               	movf	?i2___awmod^0,w,c
  9198  002718  0D03               	mullw	3
  9199  00271A  50F3               	movf	243,w,c
  9200  00271C  0F01               	addlw	low __powers_
  9201  00271E  6E21               	movwf	??i2_scale^0,c
  9202  002720  C021  FFF6         	movff	??i2_scale,tblptrl
  9203  002724                     	if	1	;There is more than 1 active tblptr byte
  9204  002724  0E10               	movlw	high __smallconst
  9205  002726  6EF7               	movwf	tblptrh,c
  9206  002728                     	endif
  9207  002728                     	if	0	;tblptru may be non-zero
  9208  002728                     	endif
  9209  002728                     	if	0	;tblptru may be non-zero
  9210  002728                     	endif
  9211  002728  0009               	tblrd		*+
  9212  00272A  CFF5 F012          	movff	tablat,i2___ftmul@f2
  9213  00272E  0009               	tblrd		*+
  9214  002730  CFF5 F013          	movff	tablat,i2___ftmul@f2+1
  9215  002734  000A               	tblrd		*-
  9216  002736  CFF5 F014          	movff	tablat,i2___ftmul@f2+2
  9217  00273A  EC7E  F019         	call	i2___ftmul	;wreg free
  9218  00273E  C00F  F01E         	movff	?i2___ftmul,?i2_scale
  9219  002742  C010  F01F         	movff	?i2___ftmul+1,?i2_scale+1
  9220  002746  C011  F020         	movff	?i2___ftmul+2,?i2_scale+2
  9221  00274A  0012               	return	
  9222  00274C                     i2l6142:
  9223                           
  9224                           ;doprnt.c: 446: else if(scl > 10)
  9225  00274C  5028               	movf	i2scale@scl^0,w,c
  9226  00274E  0A80               	xorlw	128
  9227  002750  0F75               	addlw	-139
  9228  002752  A0D8               	btfss	status,0,c
  9229  002754  D047               	goto	i2l6148
  9230                           
  9231                           ;doprnt.c: 447: return _powers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(sc
      +                          l%10)];
  9232  002756  0E00               	movlw	0
  9233  002758  6E0A               	movwf	(i2___awdiv@divisor+1)^0,c
  9234  00275A  0E0A               	movlw	10
  9235  00275C  6E09               	movwf	i2___awdiv@divisor^0,c
  9236  00275E  5028               	movf	i2scale@scl^0,w,c
  9237  002760  6E07               	movwf	i2___awdiv@dividend^0,c
  9238  002762  6A08               	clrf	(i2___awdiv@dividend+1)^0,c
  9239  002764  BE07               	btfsc	i2___awdiv@dividend^0,7,c
  9240  002766  0608               	decf	(i2___awdiv@dividend+1)^0,f,c
  9241  002768  ECFF  F01D         	call	i2___awdiv	;wreg free
  9242  00276C  5007               	movf	?i2___awdiv^0,w,c
  9243  00276E  0D03               	mullw	3
  9244  002770  CFF3 F021          	movff	prodl,??i2_scale
  9245  002774  0E1B               	movlw	27
  9246  002776  2621               	addwf	??i2_scale^0,f,c
  9247  002778  5021               	movf	??i2_scale^0,w,c
  9248  00277A  0F01               	addlw	low __powers_
  9249  00277C  6E22               	movwf	(??i2_scale+1)^0,c
  9250  00277E  C022  FFF6         	movff	??i2_scale+1,tblptrl
  9251  002782                     	if	1	;There is more than 1 active tblptr byte
  9252  002782  0E10               	movlw	high __smallconst
  9253  002784  6EF7               	movwf	tblptrh,c
  9254  002786                     	endif
  9255  002786                     	if	0	;tblptru may be non-zero
  9256  002786                     	endif
  9257  002786                     	if	0	;tblptru may be non-zero
  9258  002786                     	endif
  9259  002786  0009               	tblrd		*+
  9260  002788  CFF5 F00F          	movff	tablat,i2___ftmul@f1
  9261  00278C  0009               	tblrd		*+
  9262  00278E  CFF5 F010          	movff	tablat,i2___ftmul@f1+1
  9263  002792  000A               	tblrd		*-
  9264  002794  CFF5 F011          	movff	tablat,i2___ftmul@f1+2
  9265  002798  0E00               	movlw	0
  9266  00279A  6E04               	movwf	(i2___awmod@divisor+1)^0,c
  9267  00279C  0E0A               	movlw	10
  9268  00279E  6E03               	movwf	i2___awmod@divisor^0,c
  9269  0027A0  5028               	movf	i2scale@scl^0,w,c
  9270  0027A2  6E01               	movwf	i2___awmod@dividend^0,c
  9271  0027A4  6A02               	clrf	(i2___awmod@dividend+1)^0,c
  9272  0027A6  BE01               	btfsc	i2___awmod@dividend^0,7,c
  9273  0027A8  0602               	decf	(i2___awmod@dividend+1)^0,f,c
  9274  0027AA  EC69  F01F         	call	i2___awmod	;wreg free
  9275  0027AE  5001               	movf	?i2___awmod^0,w,c
  9276  0027B0  0D03               	mullw	3
  9277  0027B2  50F3               	movf	243,w,c
  9278  0027B4  0F01               	addlw	low __powers_
  9279  0027B6  6E23               	movwf	(??i2_scale+2)^0,c
  9280  0027B8  C023  FFF6         	movff	??i2_scale+2,tblptrl
  9281  0027BC                     	if	1	;There is more than 1 active tblptr byte
  9282  0027BC  0E10               	movlw	high __smallconst
  9283  0027BE  6EF7               	movwf	tblptrh,c
  9284  0027C0                     	endif
  9285  0027C0                     	if	0	;tblptru may be non-zero
  9286  0027C0                     	endif
  9287  0027C0                     	if	0	;tblptru may be non-zero
  9288  0027C0                     	endif
  9289  0027C0  0009               	tblrd		*+
  9290  0027C2  CFF5 F012          	movff	tablat,i2___ftmul@f2
  9291  0027C6  0009               	tblrd		*+
  9292  0027C8  CFF5 F013          	movff	tablat,i2___ftmul@f2+1
  9293  0027CC  000A               	tblrd		*-
  9294  0027CE  CFF5 F014          	movff	tablat,i2___ftmul@f2+2
  9295  0027D2  EC7E  F019         	call	i2___ftmul	;wreg free
  9296  0027D6  C00F  F01E         	movff	?i2___ftmul,?i2_scale
  9297  0027DA  C010  F01F         	movff	?i2___ftmul+1,?i2_scale+1
  9298  0027DE  C011  F020         	movff	?i2___ftmul+2,?i2_scale+2
  9299  0027E2  0012               	return	
  9300  0027E4                     i2l6148:
  9301                           
  9302                           ;doprnt.c: 448: return _powers_[(unsigned char)scl];
  9303  0027E4  5028               	movf	i2scale@scl^0,w,c
  9304  0027E6  0D03               	mullw	3
  9305  0027E8  50F3               	movf	243,w,c
  9306  0027EA  0F01               	addlw	low __powers_
  9307  0027EC  6E21               	movwf	??i2_scale^0,c
  9308  0027EE  C021  FFF6         	movff	??i2_scale,tblptrl
  9309  0027F2                     	if	1	;There is more than 1 active tblptr byte
  9310  0027F2  0E10               	movlw	high __smallconst
  9311  0027F4  6EF7               	movwf	tblptrh,c
  9312  0027F6                     	endif
  9313  0027F6                     	if	0	;tblptru may be non-zero
  9314  0027F6                     	endif
  9315  0027F6                     	if	0	;tblptru may be non-zero
  9316  0027F6                     	endif
  9317  0027F6  0009               	tblrd		*+
  9318  0027F8  CFF5 F01E          	movff	tablat,?i2_scale
  9319  0027FC  0009               	tblrd		*+
  9320  0027FE  CFF5 F01F          	movff	tablat,?i2_scale+1
  9321  002802  000A               	tblrd		*-
  9322  002804  CFF5 F020          	movff	tablat,?i2_scale+2
  9323  002808  0012               	return		;funcret
  9324  00280A                     __end_ofi2_scale:
  9325                           	callstack 0
  9326                           
  9327 ;; *************** function i2___awmod *****************
  9328 ;; Defined at:
  9329 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\awmod.c"
  9330 ;; Parameters:    Size  Location     Type
  9331 ;;  dividend        2    0[COMRAM] int 
  9332 ;;  divisor         2    2[COMRAM] int 
  9333 ;; Auto vars:     Size  Location     Type
  9334 ;;  sign            1    5[COMRAM] unsigned char 
  9335 ;;  counter         1    4[COMRAM] unsigned char 
  9336 ;; Return value:  Size  Location     Type
  9337 ;;                  2    0[COMRAM] int 
  9338 ;; Registers used:
  9339 ;;		wreg, status,2, status,0
  9340 ;; Tracked objects:
  9341 ;;		On entry : 0/0
  9342 ;;		On exit  : 0/0
  9343 ;;		Unchanged: 0/0
  9344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9345 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9346 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9347 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9348 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9349 ;;Total ram usage:        6 bytes
  9350 ;; Hardware stack levels used: 1
  9351 ;; This function calls:
  9352 ;;		Nothing
  9353 ;; This function is called by:
  9354 ;;		i2_scale
  9355 ;; This function uses a non-reentrant model
  9356 ;;
  9357                           
  9358                           	psect	text33
  9359  003ED2                     __ptext33:
  9360                           	callstack 0
  9361  003ED2                     i2___awmod:
  9362                           	callstack 23
  9363                           
  9364                           ;incstack = 0
  9365  003ED2  0E00               	movlw	0
  9366  003ED4  6E06               	movwf	i2___awmod@sign^0,c
  9367  003ED6  AE02               	btfss	(i2___awmod@dividend+1)^0,7,c
  9368  003ED8  D006               	goto	i2l5518
  9369  003EDA  6C01               	negf	i2___awmod@dividend^0,c
  9370  003EDC  1E02               	comf	(i2___awmod@dividend+1)^0,f,c
  9371  003EDE  B0D8               	btfsc	status,0,c
  9372  003EE0  2A02               	incf	(i2___awmod@dividend+1)^0,f,c
  9373  003EE2  0E01               	movlw	1
  9374  003EE4  6E06               	movwf	i2___awmod@sign^0,c
  9375  003EE6                     i2l5518:
  9376  003EE6  AE04               	btfss	(i2___awmod@divisor+1)^0,7,c
  9377  003EE8  D004               	goto	i2l5522
  9378  003EEA  6C03               	negf	i2___awmod@divisor^0,c
  9379  003EEC  1E04               	comf	(i2___awmod@divisor+1)^0,f,c
  9380  003EEE  B0D8               	btfsc	status,0,c
  9381  003EF0  2A04               	incf	(i2___awmod@divisor+1)^0,f,c
  9382  003EF2                     i2l5522:
  9383  003EF2  5003               	movf	i2___awmod@divisor^0,w,c
  9384  003EF4  1004               	iorwf	(i2___awmod@divisor+1)^0,w,c
  9385  003EF6  B4D8               	btfsc	status,2,c
  9386  003EF8  D018               	goto	i2l5538
  9387  003EFA  0E01               	movlw	1
  9388  003EFC  6E05               	movwf	i2___awmod@counter^0,c
  9389  003EFE  D004               	goto	i2l5528
  9390  003F00                     i2l5526:
  9391  003F00  90D8               	bcf	status,0,c
  9392  003F02  3603               	rlcf	i2___awmod@divisor^0,f,c
  9393  003F04  3604               	rlcf	(i2___awmod@divisor+1)^0,f,c
  9394  003F06  2A05               	incf	i2___awmod@counter^0,f,c
  9395  003F08                     i2l5528:
  9396  003F08  AE04               	btfss	(i2___awmod@divisor+1)^0,7,c
  9397  003F0A  D7FA               	goto	i2l5526
  9398  003F0C                     i2u673_40:
  9399  003F0C  5003               	movf	i2___awmod@divisor^0,w,c
  9400  003F0E  5C01               	subwf	i2___awmod@dividend^0,w,c
  9401  003F10  5004               	movf	(i2___awmod@divisor+1)^0,w,c
  9402  003F12  5802               	subwfb	(i2___awmod@dividend+1)^0,w,c
  9403  003F14  A0D8               	btfss	status,0,c
  9404  003F16  D004               	goto	i2l5534
  9405  003F18  5003               	movf	i2___awmod@divisor^0,w,c
  9406  003F1A  5E01               	subwf	i2___awmod@dividend^0,f,c
  9407  003F1C  5004               	movf	(i2___awmod@divisor+1)^0,w,c
  9408  003F1E  5A02               	subwfb	(i2___awmod@dividend+1)^0,f,c
  9409  003F20                     i2l5534:
  9410  003F20  90D8               	bcf	status,0,c
  9411  003F22  3204               	rrcf	(i2___awmod@divisor+1)^0,f,c
  9412  003F24  3203               	rrcf	i2___awmod@divisor^0,f,c
  9413  003F26  2E05               	decfsz	i2___awmod@counter^0,f,c
  9414  003F28  D7F1               	goto	i2u673_40
  9415  003F2A                     i2l5538:
  9416  003F2A  5006               	movf	i2___awmod@sign^0,w,c
  9417  003F2C  B4D8               	btfsc	status,2,c
  9418  003F2E  D004               	goto	i2l5542
  9419  003F30  6C01               	negf	i2___awmod@dividend^0,c
  9420  003F32  1E02               	comf	(i2___awmod@dividend+1)^0,f,c
  9421  003F34  B0D8               	btfsc	status,0,c
  9422  003F36  2A02               	incf	(i2___awmod@dividend+1)^0,f,c
  9423  003F38                     i2l5542:
  9424  003F38  C001  F001         	movff	i2___awmod@dividend,?i2___awmod
  9425  003F3C  C002  F002         	movff	i2___awmod@dividend+1,?i2___awmod+1
  9426  003F40  0012               	return		;funcret
  9427  003F42                     __end_ofi2___awmod:
  9428                           	callstack 0
  9429                           
  9430 ;; *************** function i2___awdiv *****************
  9431 ;; Defined at:
  9432 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\awdiv.c"
  9433 ;; Parameters:    Size  Location     Type
  9434 ;;  dividend        2    6[COMRAM] int 
  9435 ;;  divisor         2    8[COMRAM] int 
  9436 ;; Auto vars:     Size  Location     Type
  9437 ;;  quotient        2   12[COMRAM] int 
  9438 ;;  sign            1   11[COMRAM] unsigned char 
  9439 ;;  counter         1   10[COMRAM] unsigned char 
  9440 ;; Return value:  Size  Location     Type
  9441 ;;                  2    6[COMRAM] int 
  9442 ;; Registers used:
  9443 ;;		wreg, status,2, status,0
  9444 ;; Tracked objects:
  9445 ;;		On entry : 0/0
  9446 ;;		On exit  : 0/0
  9447 ;;		Unchanged: 0/0
  9448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9449 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9450 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9451 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9452 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9453 ;;Total ram usage:        8 bytes
  9454 ;; Hardware stack levels used: 1
  9455 ;; This function calls:
  9456 ;;		Nothing
  9457 ;; This function is called by:
  9458 ;;		i2_scale
  9459 ;;		i2_sprintf
  9460 ;; This function uses a non-reentrant model
  9461 ;;
  9462                           
  9463                           	psect	text34
  9464  003BFE                     __ptext34:
  9465                           	callstack 0
  9466  003BFE                     i2___awdiv:
  9467                           	callstack 23
  9468                           
  9469                           ;incstack = 0
  9470  003BFE  0E00               	movlw	0
  9471  003C00  6E0C               	movwf	i2___awdiv@sign^0,c
  9472  003C02  AE0A               	btfss	(i2___awdiv@divisor+1)^0,7,c
  9473  003C04  D006               	goto	i2l5474
  9474  003C06  6C09               	negf	i2___awdiv@divisor^0,c
  9475  003C08  1E0A               	comf	(i2___awdiv@divisor+1)^0,f,c
  9476  003C0A  B0D8               	btfsc	status,0,c
  9477  003C0C  2A0A               	incf	(i2___awdiv@divisor+1)^0,f,c
  9478  003C0E  0E01               	movlw	1
  9479  003C10  6E0C               	movwf	i2___awdiv@sign^0,c
  9480  003C12                     i2l5474:
  9481  003C12  AE08               	btfss	(i2___awdiv@dividend+1)^0,7,c
  9482  003C14  D006               	goto	i2l5480
  9483  003C16  6C07               	negf	i2___awdiv@dividend^0,c
  9484  003C18  1E08               	comf	(i2___awdiv@dividend+1)^0,f,c
  9485  003C1A  B0D8               	btfsc	status,0,c
  9486  003C1C  2A08               	incf	(i2___awdiv@dividend+1)^0,f,c
  9487  003C1E  0E01               	movlw	1
  9488  003C20  1A0C               	xorwf	i2___awdiv@sign^0,f,c
  9489  003C22                     i2l5480:
  9490  003C22  0E00               	movlw	0
  9491  003C24  6E0E               	movwf	(i2___awdiv@quotient+1)^0,c
  9492  003C26  0E00               	movlw	0
  9493  003C28  6E0D               	movwf	i2___awdiv@quotient^0,c
  9494  003C2A  5009               	movf	i2___awdiv@divisor^0,w,c
  9495  003C2C  100A               	iorwf	(i2___awdiv@divisor+1)^0,w,c
  9496  003C2E  B4D8               	btfsc	status,2,c
  9497  003C30  D01C               	goto	i2l5502
  9498  003C32  0E01               	movlw	1
  9499  003C34  6E0B               	movwf	i2___awdiv@counter^0,c
  9500  003C36  D004               	goto	i2l5488
  9501  003C38                     i2l5486:
  9502  003C38  90D8               	bcf	status,0,c
  9503  003C3A  3609               	rlcf	i2___awdiv@divisor^0,f,c
  9504  003C3C  360A               	rlcf	(i2___awdiv@divisor+1)^0,f,c
  9505  003C3E  2A0B               	incf	i2___awdiv@counter^0,f,c
  9506  003C40                     i2l5488:
  9507  003C40  AE0A               	btfss	(i2___awdiv@divisor+1)^0,7,c
  9508  003C42  D7FA               	goto	i2l5486
  9509  003C44                     i2u667_40:
  9510  003C44  90D8               	bcf	status,0,c
  9511  003C46  360D               	rlcf	i2___awdiv@quotient^0,f,c
  9512  003C48  360E               	rlcf	(i2___awdiv@quotient+1)^0,f,c
  9513  003C4A  5009               	movf	i2___awdiv@divisor^0,w,c
  9514  003C4C  5C07               	subwf	i2___awdiv@dividend^0,w,c
  9515  003C4E  500A               	movf	(i2___awdiv@divisor+1)^0,w,c
  9516  003C50  5808               	subwfb	(i2___awdiv@dividend+1)^0,w,c
  9517  003C52  A0D8               	btfss	status,0,c
  9518  003C54  D005               	goto	i2l5498
  9519  003C56  5009               	movf	i2___awdiv@divisor^0,w,c
  9520  003C58  5E07               	subwf	i2___awdiv@dividend^0,f,c
  9521  003C5A  500A               	movf	(i2___awdiv@divisor+1)^0,w,c
  9522  003C5C  5A08               	subwfb	(i2___awdiv@dividend+1)^0,f,c
  9523  003C5E  800D               	bsf	i2___awdiv@quotient^0,0,c
  9524  003C60                     i2l5498:
  9525  003C60  90D8               	bcf	status,0,c
  9526  003C62  320A               	rrcf	(i2___awdiv@divisor+1)^0,f,c
  9527  003C64  3209               	rrcf	i2___awdiv@divisor^0,f,c
  9528  003C66  2E0B               	decfsz	i2___awdiv@counter^0,f,c
  9529  003C68  D7ED               	goto	i2u667_40
  9530  003C6A                     i2l5502:
  9531  003C6A  500C               	movf	i2___awdiv@sign^0,w,c
  9532  003C6C  B4D8               	btfsc	status,2,c
  9533  003C6E  D004               	goto	i2l5506
  9534  003C70  6C0D               	negf	i2___awdiv@quotient^0,c
  9535  003C72  1E0E               	comf	(i2___awdiv@quotient+1)^0,f,c
  9536  003C74  B0D8               	btfsc	status,0,c
  9537  003C76  2A0E               	incf	(i2___awdiv@quotient+1)^0,f,c
  9538  003C78                     i2l5506:
  9539  003C78  C00D  F007         	movff	i2___awdiv@quotient,?i2___awdiv
  9540  003C7C  C00E  F008         	movff	i2___awdiv@quotient+1,?i2___awdiv+1
  9541  003C80  0012               	return		;funcret
  9542  003C82                     __end_ofi2___awdiv:
  9543                           	callstack 0
  9544                           
  9545 ;; *************** function i2_isdigit *****************
  9546 ;; Defined at:
  9547 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\isdigit.c"
  9548 ;; Parameters:    Size  Location     Type
  9549 ;;  c               1    wreg     unsigned char 
  9550 ;; Auto vars:     Size  Location     Type
  9551 ;;  c               1    2[COMRAM] unsigned char 
  9552 ;; Return value:  Size  Location     Type
  9553 ;;		None               void
  9554 ;; Registers used:
  9555 ;;		wreg, status,2, status,0
  9556 ;; Tracked objects:
  9557 ;;		On entry : 3F/0
  9558 ;;		On exit  : 0/0
  9559 ;;		Unchanged: 0/0
  9560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9561 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9562 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9563 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9564 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9565 ;;Total ram usage:        3 bytes
  9566 ;; Hardware stack levels used: 1
  9567 ;; This function calls:
  9568 ;;		Nothing
  9569 ;; This function is called by:
  9570 ;;		i2_sprintf
  9571 ;; This function uses a non-reentrant model
  9572 ;;
  9573                           
  9574                           	psect	text35
  9575  0044D6                     __ptext35:
  9576                           	callstack 0
  9577  0044D6                     i2_isdigit:
  9578                           	callstack 24
  9579                           
  9580                           ;incstack = 0
  9581                           ;i2isdigit@c stored from wreg
  9582  0044D6  6E03               	movwf	i2isdigit@c^0,c
  9583  0044D8  0E00               	movlw	0
  9584  0044DA  6E02               	movwf	i2_isdigit$750^0,c
  9585  0044DC  0E3A               	movlw	58
  9586  0044DE  6003               	cpfslt	i2isdigit@c^0,c
  9587  0044E0  D005               	goto	i2l6406
  9588  0044E2  0E2F               	movlw	47
  9589  0044E4  6403               	cpfsgt	i2isdigit@c^0,c
  9590  0044E6  D002               	goto	i2l6406
  9591  0044E8  0E01               	movlw	1
  9592  0044EA  6E02               	movwf	i2_isdigit$750^0,c
  9593  0044EC                     i2l6406:
  9594  0044EC  C002  F001         	movff	i2_isdigit$750,??i2_isdigit
  9595  0044F0  3001               	rrcf	??i2_isdigit^0,w,c
  9596  0044F2  0012               	return		;funcret
  9597  0044F4                     __end_ofi2_isdigit:
  9598                           	callstack 0
  9599                           
  9600 ;; *************** function i2_fround *****************
  9601 ;; Defined at:
  9602 ;;		line 417 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c"
  9603 ;; Parameters:    Size  Location     Type
  9604 ;;  prec            1    wreg     unsigned char 
  9605 ;; Auto vars:     Size  Location     Type
  9606 ;;  prec            1   42[COMRAM] unsigned char 
  9607 ;; Return value:  Size  Location     Type
  9608 ;;                  3   29[COMRAM] unsigned char 
  9609 ;; Registers used:
  9610 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9611 ;; Tracked objects:
  9612 ;;		On entry : 3F/0
  9613 ;;		On exit  : 0/0
  9614 ;;		Unchanged: 0/0
  9615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9616 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9617 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9618 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9619 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9620 ;;Total ram usage:       14 bytes
  9621 ;; Hardware stack levels used: 1
  9622 ;; Hardware stack levels required when called: 2
  9623 ;; This function calls:
  9624 ;;		i2___ftmul
  9625 ;;		i2___lbdiv
  9626 ;;		i2___lbmod
  9627 ;; This function is called by:
  9628 ;;		i2_sprintf
  9629 ;; This function uses a non-reentrant model
  9630 ;;
  9631                           
  9632                           	psect	text36
  9633  0029EA                     __ptext36:
  9634                           	callstack 0
  9635  0029EA                     i2_fround:
  9636                           	callstack 22
  9637                           
  9638                           ;incstack = 0
  9639                           ;i2fround@prec stored from wreg
  9640  0029EA  6E2B               	movwf	i2fround@prec^0,c
  9641                           
  9642                           ;doprnt.c: 421: if(prec>=110)
  9643  0029EC  0E6D               	movlw	109
  9644  0029EE  642B               	cpfsgt	i2fround@prec^0,c
  9645  0029F0  D079               	goto	i2l6102
  9646                           
  9647                           ;doprnt.c: 422: return 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * 
      +                          _npowers_[prec%10U];
  9648  0029F2  0E0A               	movlw	10
  9649  0029F4  6E05               	movwf	i2___lbdiv@divisor^0,c
  9650  0029F6  0E64               	movlw	100
  9651  0029F8  6E01               	movwf	i2___lbmod@divisor^0,c
  9652  0029FA  502B               	movf	i2fround@prec^0,w,c
  9653  0029FC  ECD3  F021         	call	i2___lbmod
  9654  002A00  EC6F  F021         	call	i2___lbdiv
  9655  002A04  0D03               	mullw	3
  9656  002A06  CFF3 F021          	movff	prodl,??i2_fround
  9657  002A0A  0E1B               	movlw	27
  9658  002A0C  2621               	addwf	??i2_fround^0,f,c
  9659  002A0E  5021               	movf	??i2_fround^0,w,c
  9660  002A10  0F28               	addlw	low __npowers_
  9661  002A12  6E22               	movwf	(??i2_fround+1)^0,c
  9662  002A14  C022  FFF6         	movff	??i2_fround+1,tblptrl
  9663  002A18                     	if	1	;There is more than 1 active tblptr byte
  9664  002A18  0E10               	movlw	high __smallconst
  9665  002A1A  6EF7               	movwf	tblptrh,c
  9666  002A1C                     	endif
  9667  002A1C                     	if	0	;tblptru may be non-zero
  9668  002A1C                     	endif
  9669  002A1C                     	if	0	;tblptru may be non-zero
  9670  002A1C                     	endif
  9671  002A1C  0009               	tblrd		*+
  9672  002A1E  CFF5 F012          	movff	tablat,i2___ftmul@f2
  9673  002A22  0009               	tblrd		*+
  9674  002A24  CFF5 F013          	movff	tablat,i2___ftmul@f2+1
  9675  002A28  000A               	tblrd		*-
  9676  002A2A  CFF5 F014          	movff	tablat,i2___ftmul@f2+2
  9677  002A2E  0E64               	movlw	100
  9678  002A30  6E05               	movwf	i2___lbdiv@divisor^0,c
  9679  002A32  502B               	movf	i2fround@prec^0,w,c
  9680  002A34  EC6F  F021         	call	i2___lbdiv
  9681  002A38  0D03               	mullw	3
  9682  002A3A  CFF3 F023          	movff	prodl,??i2_fround+2
  9683  002A3E  0E36               	movlw	54
  9684  002A40  2623               	addwf	(??i2_fround+2)^0,f,c
  9685  002A42  5023               	movf	(??i2_fround+2)^0,w,c
  9686  002A44  0F28               	addlw	low __npowers_
  9687  002A46  6E24               	movwf	(??i2_fround+3)^0,c
  9688  002A48  C024  FFF6         	movff	??i2_fround+3,tblptrl
  9689  002A4C                     	if	1	;There is more than 1 active tblptr byte
  9690  002A4C  0E10               	movlw	high __smallconst
  9691  002A4E  6EF7               	movwf	tblptrh,c
  9692  002A50                     	endif
  9693  002A50                     	if	0	;tblptru may be non-zero
  9694  002A50                     	endif
  9695  002A50                     	if	0	;tblptru may be non-zero
  9696  002A50                     	endif
  9697  002A50  0009               	tblrd		*+
  9698  002A52  CFF5 F00F          	movff	tablat,i2___ftmul@f1
  9699  002A56  0009               	tblrd		*+
  9700  002A58  CFF5 F010          	movff	tablat,i2___ftmul@f1+1
  9701  002A5C  000A               	tblrd		*-
  9702  002A5E  CFF5 F011          	movff	tablat,i2___ftmul@f1+2
  9703  002A62  EC7E  F019         	call	i2___ftmul	;wreg free
  9704  002A66  C00F  F028         	movff	?i2___ftmul,i2_fround$1138
  9705  002A6A  C010  F029         	movff	?i2___ftmul+1,i2_fround$1138+1
  9706  002A6E  C011  F02A         	movff	?i2___ftmul+2,i2_fround$1138+2
  9707                           
  9708                           ;doprnt.c: 422: return 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * 
      +                          _npowers_[prec%10U];
  9709  002A72  0E0A               	movlw	10
  9710  002A74  6E01               	movwf	i2___lbmod@divisor^0,c
  9711  002A76  502B               	movf	i2fround@prec^0,w,c
  9712  002A78  ECD3  F021         	call	i2___lbmod
  9713  002A7C  0D03               	mullw	3
  9714  002A7E  50F3               	movf	243,w,c
  9715  002A80  0F28               	addlw	low __npowers_
  9716  002A82  6E21               	movwf	??i2_fround^0,c
  9717  002A84  C021  FFF6         	movff	??i2_fround,tblptrl
  9718  002A88                     	if	1	;There is more than 1 active tblptr byte
  9719  002A88  0E10               	movlw	high __smallconst
  9720  002A8A  6EF7               	movwf	tblptrh,c
  9721  002A8C                     	endif
  9722  002A8C                     	if	0	;tblptru may be non-zero
  9723  002A8C                     	endif
  9724  002A8C                     	if	0	;tblptru may be non-zero
  9725  002A8C                     	endif
  9726  002A8C  0009               	tblrd		*+
  9727  002A8E  CFF5 F012          	movff	tablat,i2___ftmul@f2
  9728  002A92  0009               	tblrd		*+
  9729  002A94  CFF5 F013          	movff	tablat,i2___ftmul@f2+1
  9730  002A98  000A               	tblrd		*-
  9731  002A9A  CFF5 F014          	movff	tablat,i2___ftmul@f2+2
  9732  002A9E  C028  F00F         	movff	i2_fround$1138,i2___ftmul@f1
  9733  002AA2  C029  F010         	movff	i2_fround$1138+1,i2___ftmul@f1+1
  9734  002AA6  C02A  F011         	movff	i2_fround$1138+2,i2___ftmul@f1+2
  9735  002AAA  EC7E  F019         	call	i2___ftmul	;wreg free
  9736  002AAE  C00F  F025         	movff	?i2___ftmul,i2_fround$1139
  9737  002AB2  C010  F026         	movff	?i2___ftmul+1,i2_fround$1139+1
  9738  002AB6  C011  F027         	movff	?i2___ftmul+2,i2_fround$1139+2
  9739                           
  9740                           ;doprnt.c: 422: return 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * 
      +                          _npowers_[prec%10U];
  9741  002ABA  C025  F00F         	movff	i2_fround$1139,i2___ftmul@f1
  9742  002ABE  C026  F010         	movff	i2_fround$1139+1,i2___ftmul@f1+1
  9743  002AC2  C027  F011         	movff	i2_fround$1139+2,i2___ftmul@f1+2
  9744  002AC6  0E00               	movlw	0
  9745  002AC8  6E12               	movwf	i2___ftmul@f2^0,c
  9746  002ACA  0E00               	movlw	0
  9747  002ACC  6E13               	movwf	(i2___ftmul@f2+1)^0,c
  9748  002ACE  0E3F               	movlw	63
  9749  002AD0  6E14               	movwf	(i2___ftmul@f2+2)^0,c
  9750  002AD2  EC7E  F019         	call	i2___ftmul	;wreg free
  9751  002AD6  C00F  F01E         	movff	?i2___ftmul,?i2_fround
  9752  002ADA  C010  F01F         	movff	?i2___ftmul+1,?i2_fround+1
  9753  002ADE  C011  F020         	movff	?i2___ftmul+2,?i2_fround+2
  9754  002AE2  0012               	return	
  9755  002AE4                     i2l6102:
  9756                           
  9757                           ;doprnt.c: 423: else if(prec > 10)
  9758  002AE4  0E0A               	movlw	10
  9759  002AE6  642B               	cpfsgt	i2fround@prec^0,c
  9760  002AE8  D04D               	goto	i2l6110
  9761                           
  9762                           ;doprnt.c: 424: return 0.5 * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  9763  002AEA  0E0A               	movlw	10
  9764  002AEC  6E01               	movwf	i2___lbmod@divisor^0,c
  9765  002AEE  502B               	movf	i2fround@prec^0,w,c
  9766  002AF0  ECD3  F021         	call	i2___lbmod
  9767  002AF4  0D03               	mullw	3
  9768  002AF6  50F3               	movf	243,w,c
  9769  002AF8  0F28               	addlw	low __npowers_
  9770  002AFA  6E21               	movwf	??i2_fround^0,c
  9771  002AFC  C021  FFF6         	movff	??i2_fround,tblptrl
  9772  002B00                     	if	1	;There is more than 1 active tblptr byte
  9773  002B00  0E10               	movlw	high __smallconst
  9774  002B02  6EF7               	movwf	tblptrh,c
  9775  002B04                     	endif
  9776  002B04                     	if	0	;tblptru may be non-zero
  9777  002B04                     	endif
  9778  002B04                     	if	0	;tblptru may be non-zero
  9779  002B04                     	endif
  9780  002B04  0009               	tblrd		*+
  9781  002B06  CFF5 F012          	movff	tablat,i2___ftmul@f2
  9782  002B0A  0009               	tblrd		*+
  9783  002B0C  CFF5 F013          	movff	tablat,i2___ftmul@f2+1
  9784  002B10  000A               	tblrd		*-
  9785  002B12  CFF5 F014          	movff	tablat,i2___ftmul@f2+2
  9786  002B16  0E0A               	movlw	10
  9787  002B18  6E05               	movwf	i2___lbdiv@divisor^0,c
  9788  002B1A  502B               	movf	i2fround@prec^0,w,c
  9789  002B1C  EC6F  F021         	call	i2___lbdiv
  9790  002B20  0D03               	mullw	3
  9791  002B22  CFF3 F022          	movff	prodl,??i2_fround+1
  9792  002B26  0E1B               	movlw	27
  9793  002B28  2622               	addwf	(??i2_fround+1)^0,f,c
  9794  002B2A  5022               	movf	(??i2_fround+1)^0,w,c
  9795  002B2C  0F28               	addlw	low __npowers_
  9796  002B2E  6E23               	movwf	(??i2_fround+2)^0,c
  9797  002B30  C023  FFF6         	movff	??i2_fround+2,tblptrl
  9798  002B34                     	if	1	;There is more than 1 active tblptr byte
  9799  002B34  0E10               	movlw	high __smallconst
  9800  002B36  6EF7               	movwf	tblptrh,c
  9801  002B38                     	endif
  9802  002B38                     	if	0	;tblptru may be non-zero
  9803  002B38                     	endif
  9804  002B38                     	if	0	;tblptru may be non-zero
  9805  002B38                     	endif
  9806  002B38  0009               	tblrd		*+
  9807  002B3A  CFF5 F00F          	movff	tablat,i2___ftmul@f1
  9808  002B3E  0009               	tblrd		*+
  9809  002B40  CFF5 F010          	movff	tablat,i2___ftmul@f1+1
  9810  002B44  000A               	tblrd		*-
  9811  002B46  CFF5 F011          	movff	tablat,i2___ftmul@f1+2
  9812  002B4A  EC7E  F019         	call	i2___ftmul	;wreg free
  9813  002B4E  C00F  F028         	movff	?i2___ftmul,i2_fround$1138
  9814  002B52  C010  F029         	movff	?i2___ftmul+1,i2_fround$1138+1
  9815  002B56  C011  F02A         	movff	?i2___ftmul+2,i2_fround$1138+2
  9816                           
  9817                           ;doprnt.c: 424: return 0.5 * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  9818  002B5A  C028  F00F         	movff	i2_fround$1138,i2___ftmul@f1
  9819  002B5E  C029  F010         	movff	i2_fround$1138+1,i2___ftmul@f1+1
  9820  002B62  C02A  F011         	movff	i2_fround$1138+2,i2___ftmul@f1+2
  9821  002B66  0E00               	movlw	0
  9822  002B68  6E12               	movwf	i2___ftmul@f2^0,c
  9823  002B6A  0E00               	movlw	0
  9824  002B6C  6E13               	movwf	(i2___ftmul@f2+1)^0,c
  9825  002B6E  0E3F               	movlw	63
  9826  002B70  6E14               	movwf	(i2___ftmul@f2+2)^0,c
  9827  002B72  EC7E  F019         	call	i2___ftmul	;wreg free
  9828  002B76  C00F  F01E         	movff	?i2___ftmul,?i2_fround
  9829  002B7A  C010  F01F         	movff	?i2___ftmul+1,?i2_fround+1
  9830  002B7E  C011  F020         	movff	?i2___ftmul+2,?i2_fround+2
  9831  002B82  0012               	return	
  9832  002B84                     i2l6110:
  9833                           
  9834                           ;doprnt.c: 425: return 0.5 * _npowers_[prec];
  9835  002B84  502B               	movf	i2fround@prec^0,w,c
  9836  002B86  0D03               	mullw	3
  9837  002B88  50F3               	movf	243,w,c
  9838  002B8A  0F28               	addlw	low __npowers_
  9839  002B8C  6E21               	movwf	??i2_fround^0,c
  9840  002B8E  C021  FFF6         	movff	??i2_fround,tblptrl
  9841  002B92                     	if	1	;There is more than 1 active tblptr byte
  9842  002B92  0E10               	movlw	high __smallconst
  9843  002B94  6EF7               	movwf	tblptrh,c
  9844  002B96                     	endif
  9845  002B96                     	if	0	;tblptru may be non-zero
  9846  002B96                     	endif
  9847  002B96                     	if	0	;tblptru may be non-zero
  9848  002B96                     	endif
  9849  002B96  0009               	tblrd		*+
  9850  002B98  CFF5 F00F          	movff	tablat,i2___ftmul@f1
  9851  002B9C  0009               	tblrd		*+
  9852  002B9E  CFF5 F010          	movff	tablat,i2___ftmul@f1+1
  9853  002BA2  000A               	tblrd		*-
  9854  002BA4  CFF5 F011          	movff	tablat,i2___ftmul@f1+2
  9855  002BA8  0E00               	movlw	0
  9856  002BAA  6E12               	movwf	i2___ftmul@f2^0,c
  9857  002BAC  0E00               	movlw	0
  9858  002BAE  6E13               	movwf	(i2___ftmul@f2+1)^0,c
  9859  002BB0  0E3F               	movlw	63
  9860  002BB2  6E14               	movwf	(i2___ftmul@f2+2)^0,c
  9861  002BB4  EC7E  F019         	call	i2___ftmul	;wreg free
  9862  002BB8  C00F  F01E         	movff	?i2___ftmul,?i2_fround
  9863  002BBC  C010  F01F         	movff	?i2___ftmul+1,?i2_fround+1
  9864  002BC0  C011  F020         	movff	?i2___ftmul+2,?i2_fround+2
  9865  002BC4  0012               	return		;funcret
  9866  002BC6                     __end_ofi2_fround:
  9867                           	callstack 0
  9868                           
  9869 ;; *************** function i2___lbmod *****************
  9870 ;; Defined at:
  9871 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\lbmod.c"
  9872 ;; Parameters:    Size  Location     Type
  9873 ;;  dividend        1    wreg     unsigned char 
  9874 ;;  divisor         1    0[COMRAM] unsigned char 
  9875 ;; Auto vars:     Size  Location     Type
  9876 ;;  dividend        1    1[COMRAM] unsigned char 
  9877 ;;  rem             1    3[COMRAM] unsigned char 
  9878 ;;  counter         1    2[COMRAM] unsigned char 
  9879 ;; Return value:  Size  Location     Type
  9880 ;;                  1    wreg      unsigned char 
  9881 ;; Registers used:
  9882 ;;		wreg, status,2, status,0
  9883 ;; Tracked objects:
  9884 ;;		On entry : 0/0
  9885 ;;		On exit  : 0/0
  9886 ;;		Unchanged: 0/0
  9887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9888 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9889 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9890 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9891 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9892 ;;Total ram usage:        4 bytes
  9893 ;; Hardware stack levels used: 1
  9894 ;; This function calls:
  9895 ;;		Nothing
  9896 ;; This function is called by:
  9897 ;;		i2_fround
  9898 ;; This function uses a non-reentrant model
  9899 ;;
  9900                           
  9901                           	psect	text37
  9902  0043A6                     __ptext37:
  9903                           	callstack 0
  9904  0043A6                     i2___lbmod:
  9905                           	callstack 23
  9906                           
  9907                           ;incstack = 0
  9908                           ;i2___lbmod@dividend stored from wreg
  9909  0043A6  6E02               	movwf	i2___lbmod@dividend^0,c
  9910  0043A8  0E08               	movlw	8
  9911  0043AA  6E03               	movwf	i2___lbmod@counter^0,c
  9912  0043AC  0E00               	movlw	0
  9913  0043AE  6E04               	movwf	i2___lbmod@rem^0,c
  9914  0043B0                     i2l5692:
  9915  0043B0  90D8               	bcf	status,0,c
  9916  0043B2  3402               	rlcf	i2___lbmod@dividend^0,w,c
  9917  0043B4  3404               	rlcf	i2___lbmod@rem^0,w,c
  9918  0043B6  6E04               	movwf	i2___lbmod@rem^0,c
  9919  0043B8  90D8               	bcf	status,0,c
  9920  0043BA  3602               	rlcf	i2___lbmod@dividend^0,f,c
  9921  0043BC  5001               	movf	i2___lbmod@divisor^0,w,c
  9922  0043BE  5C04               	subwf	i2___lbmod@rem^0,w,c
  9923  0043C0  A0D8               	btfss	status,0,c
  9924  0043C2  D002               	goto	i2l5700
  9925  0043C4  5001               	movf	i2___lbmod@divisor^0,w,c
  9926  0043C6  5E04               	subwf	i2___lbmod@rem^0,f,c
  9927  0043C8                     i2l5700:
  9928  0043C8  2E03               	decfsz	i2___lbmod@counter^0,f,c
  9929  0043CA  D7F2               	goto	i2l5692
  9930  0043CC  5004               	movf	i2___lbmod@rem^0,w,c
  9931  0043CE  0012               	return		;funcret
  9932  0043D0                     __end_ofi2___lbmod:
  9933                           	callstack 0
  9934                           
  9935 ;; *************** function i2___lbdiv *****************
  9936 ;; Defined at:
  9937 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\lbdiv.c"
  9938 ;; Parameters:    Size  Location     Type
  9939 ;;  dividend        1    wreg     unsigned char 
  9940 ;;  divisor         1    4[COMRAM] unsigned char 
  9941 ;; Auto vars:     Size  Location     Type
  9942 ;;  dividend        1    5[COMRAM] unsigned char 
  9943 ;;  quotient        1    7[COMRAM] unsigned char 
  9944 ;;  counter         1    6[COMRAM] unsigned char 
  9945 ;; Return value:  Size  Location     Type
  9946 ;;                  1    wreg      unsigned char 
  9947 ;; Registers used:
  9948 ;;		wreg, status,2, status,0
  9949 ;; Tracked objects:
  9950 ;;		On entry : 0/0
  9951 ;;		On exit  : 0/0
  9952 ;;		Unchanged: 0/0
  9953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9954 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9955 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9956 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9957 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9958 ;;Total ram usage:        4 bytes
  9959 ;; Hardware stack levels used: 1
  9960 ;; This function calls:
  9961 ;;		Nothing
  9962 ;; This function is called by:
  9963 ;;		i2_fround
  9964 ;; This function uses a non-reentrant model
  9965 ;;
  9966                           
  9967                           	psect	text38
  9968  0042DE                     __ptext38:
  9969                           	callstack 0
  9970  0042DE                     i2___lbdiv:
  9971                           	callstack 23
  9972                           
  9973                           ;incstack = 0
  9974                           ;i2___lbdiv@dividend stored from wreg
  9975  0042DE  6E06               	movwf	i2___lbdiv@dividend^0,c
  9976  0042E0  0E00               	movlw	0
  9977  0042E2  6E08               	movwf	i2___lbdiv@quotient^0,c
  9978  0042E4  5005               	movf	i2___lbdiv@divisor^0,w,c
  9979  0042E6  B4D8               	btfsc	status,2,c
  9980  0042E8  D015               	goto	i2l5686
  9981  0042EA  0E01               	movlw	1
  9982  0042EC  6E07               	movwf	i2___lbdiv@counter^0,c
  9983  0042EE  D003               	goto	i2l5674
  9984  0042F0                     i2l5670:
  9985  0042F0  90D8               	bcf	status,0,c
  9986  0042F2  3605               	rlcf	i2___lbdiv@divisor^0,f,c
  9987  0042F4  2A07               	incf	i2___lbdiv@counter^0,f,c
  9988  0042F6                     i2l5674:
  9989  0042F6  AE05               	btfss	i2___lbdiv@divisor^0,7,c
  9990  0042F8  D7FB               	goto	i2l5670
  9991  0042FA                     i2u704_40:
  9992  0042FA  90D8               	bcf	status,0,c
  9993  0042FC  3608               	rlcf	i2___lbdiv@quotient^0,f,c
  9994  0042FE  5005               	movf	i2___lbdiv@divisor^0,w,c
  9995  004300  5C06               	subwf	i2___lbdiv@dividend^0,w,c
  9996  004302  A0D8               	btfss	status,0,c
  9997  004304  D003               	goto	i2l5682
  9998  004306  5005               	movf	i2___lbdiv@divisor^0,w,c
  9999  004308  5E06               	subwf	i2___lbdiv@dividend^0,f,c
 10000  00430A  8008               	bsf	i2___lbdiv@quotient^0,0,c
 10001  00430C                     i2l5682:
 10002  00430C  90D8               	bcf	status,0,c
 10003  00430E  3205               	rrcf	i2___lbdiv@divisor^0,f,c
 10004  004310  2E07               	decfsz	i2___lbdiv@counter^0,f,c
 10005  004312  D7F3               	goto	i2u704_40
 10006  004314                     i2l5686:
 10007  004314  5008               	movf	i2___lbdiv@quotient^0,w,c
 10008  004316  0012               	return		;funcret
 10009  004318                     __end_ofi2___lbdiv:
 10010                           	callstack 0
 10011                           
 10012 ;; *************** function i2___ftmul *****************
 10013 ;; Defined at:
 10014 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\ftmul.c"
 10015 ;; Parameters:    Size  Location     Type
 10016 ;;  f1              3   14[COMRAM] float 
 10017 ;;  f2              3   17[COMRAM] float 
 10018 ;; Auto vars:     Size  Location     Type
 10019 ;;  f3_as_produc    3   24[COMRAM] unsigned um
 10020 ;;  sign            1   28[COMRAM] unsigned char 
 10021 ;;  cntr            1   27[COMRAM] unsigned char 
 10022 ;;  exp             1   23[COMRAM] unsigned char 
 10023 ;; Return value:  Size  Location     Type
 10024 ;;                  3   14[COMRAM] float 
 10025 ;; Registers used:
 10026 ;;		wreg, status,2, status,0, cstack
 10027 ;; Tracked objects:
 10028 ;;		On entry : 0/0
 10029 ;;		On exit  : 0/0
 10030 ;;		Unchanged: 0/0
 10031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10032 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10033 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10034 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10035 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10036 ;;Total ram usage:       15 bytes
 10037 ;; Hardware stack levels used: 1
 10038 ;; Hardware stack levels required when called: 1
 10039 ;; This function calls:
 10040 ;;		i2___ftpack
 10041 ;; This function is called by:
 10042 ;;		_TMR1_ISR
 10043 ;;		i2_fround
 10044 ;;		i2_scale
 10045 ;;		i2_sprintf
 10046 ;; This function uses a non-reentrant model
 10047 ;;
 10048                           
 10049                           	psect	text39
 10050  0032FC                     __ptext39:
 10051                           	callstack 0
 10052  0032FC                     i2___ftmul:
 10053                           	callstack 22
 10054                           
 10055                           ;incstack = 0
 10056  0032FC  C011  F015         	movff	i2___ftmul@f1+2,??i2___ftmul
 10057  003300  6A16               	clrf	(??i2___ftmul+1)^0,c
 10058  003302  6A17               	clrf	(??i2___ftmul+2)^0,c
 10059  003304  3410               	rlcf	(i2___ftmul@f1+1)^0,w,c
 10060  003306  3615               	rlcf	??i2___ftmul^0,f,c
 10061  003308  E301               	bnc	u697_41
 10062  00330A  8016               	bsf	(??i2___ftmul+1)^0,0,c
 10063  00330C                     u697_41:
 10064  00330C  5015               	movf	??i2___ftmul^0,w,c
 10065  00330E  6E18               	movwf	i2___ftmul@exp^0,c
 10066  003310  5018               	movf	i2___ftmul@exp^0,w,c
 10067  003312  A4D8               	btfss	status,2,c
 10068  003314  D007               	goto	i2l5622
 10069  003316  0E00               	movlw	0
 10070  003318  6E0F               	movwf	?i2___ftmul^0,c
 10071  00331A  0E00               	movlw	0
 10072  00331C  6E10               	movwf	(?i2___ftmul+1)^0,c
 10073  00331E  0E00               	movlw	0
 10074  003320  6E11               	movwf	(?i2___ftmul+2)^0,c
 10075  003322  0012               	return	
 10076  003324                     i2l5622:
 10077  003324  C014  F015         	movff	i2___ftmul@f2+2,??i2___ftmul
 10078  003328  6A16               	clrf	(??i2___ftmul+1)^0,c
 10079  00332A  6A17               	clrf	(??i2___ftmul+2)^0,c
 10080  00332C  3413               	rlcf	(i2___ftmul@f2+1)^0,w,c
 10081  00332E  3615               	rlcf	??i2___ftmul^0,f,c
 10082  003330  E301               	bnc	u699_41
 10083  003332  8016               	bsf	(??i2___ftmul+1)^0,0,c
 10084  003334                     u699_41:
 10085  003334  5015               	movf	??i2___ftmul^0,w,c
 10086  003336  6E1D               	movwf	i2___ftmul@sign^0,c
 10087  003338  501D               	movf	i2___ftmul@sign^0,w,c
 10088  00333A  A4D8               	btfss	status,2,c
 10089  00333C  D007               	goto	i2l5628
 10090  00333E  0E00               	movlw	0
 10091  003340  6E0F               	movwf	?i2___ftmul^0,c
 10092  003342  0E00               	movlw	0
 10093  003344  6E10               	movwf	(?i2___ftmul+1)^0,c
 10094  003346  0E00               	movlw	0
 10095  003348  6E11               	movwf	(?i2___ftmul+2)^0,c
 10096  00334A  0012               	return	
 10097  00334C                     i2l5628:
 10098  00334C  501D               	movf	i2___ftmul@sign^0,w,c
 10099  00334E  0F7B               	addlw	123
 10100  003350  2618               	addwf	i2___ftmul@exp^0,f,c
 10101  003352  C011  F01D         	movff	i2___ftmul@f1+2,i2___ftmul@sign
 10102  003356  5014               	movf	(i2___ftmul@f2+2)^0,w,c
 10103  003358  1A1D               	xorwf	i2___ftmul@sign^0,f,c
 10104  00335A  0E80               	movlw	128
 10105  00335C  161D               	andwf	i2___ftmul@sign^0,f,c
 10106  00335E  8E10               	bsf	(i2___ftmul@f1+1)^0,7,c
 10107  003360  8E13               	bsf	(i2___ftmul@f2+1)^0,7,c
 10108  003362  0EFF               	movlw	255
 10109  003364  1612               	andwf	i2___ftmul@f2^0,f,c
 10110  003366  0EFF               	movlw	255
 10111  003368  1613               	andwf	(i2___ftmul@f2+1)^0,f,c
 10112  00336A  0E00               	movlw	0
 10113  00336C  1614               	andwf	(i2___ftmul@f2+2)^0,f,c
 10114  00336E  0E00               	movlw	0
 10115  003370  6E19               	movwf	i2___ftmul@f3_as_product^0,c
 10116  003372  0E00               	movlw	0
 10117  003374  6E1A               	movwf	(i2___ftmul@f3_as_product+1)^0,c
 10118  003376  0E00               	movlw	0
 10119  003378  6E1B               	movwf	(i2___ftmul@f3_as_product+2)^0,c
 10120  00337A  0E07               	movlw	7
 10121  00337C  6E1C               	movwf	i2___ftmul@cntr^0,c
 10122  00337E                     i2l5642:
 10123  00337E  A00F               	btfss	i2___ftmul@f1^0,0,c
 10124  003380  D006               	goto	i2l5646
 10125  003382  5012               	movf	i2___ftmul@f2^0,w,c
 10126  003384  2619               	addwf	i2___ftmul@f3_as_product^0,f,c
 10127  003386  5013               	movf	(i2___ftmul@f2+1)^0,w,c
 10128  003388  221A               	addwfc	(i2___ftmul@f3_as_product+1)^0,f,c
 10129  00338A  5014               	movf	(i2___ftmul@f2+2)^0,w,c
 10130  00338C  221B               	addwfc	(i2___ftmul@f3_as_product+2)^0,f,c
 10131  00338E                     i2l5646:
 10132  00338E  90D8               	bcf	status,0,c
 10133  003390  3211               	rrcf	(i2___ftmul@f1+2)^0,f,c
 10134  003392  3210               	rrcf	(i2___ftmul@f1+1)^0,f,c
 10135  003394  320F               	rrcf	i2___ftmul@f1^0,f,c
 10136  003396  90D8               	bcf	status,0,c
 10137  003398  3612               	rlcf	i2___ftmul@f2^0,f,c
 10138  00339A  3613               	rlcf	(i2___ftmul@f2+1)^0,f,c
 10139  00339C  3614               	rlcf	(i2___ftmul@f2+2)^0,f,c
 10140  00339E  2E1C               	decfsz	i2___ftmul@cntr^0,f,c
 10141  0033A0  D7EE               	goto	i2l5642
 10142  0033A2  0E09               	movlw	9
 10143  0033A4  6E1C               	movwf	i2___ftmul@cntr^0,c
 10144  0033A6                     i2l5652:
 10145  0033A6  A00F               	btfss	i2___ftmul@f1^0,0,c
 10146  0033A8  D006               	goto	i2l5656
 10147  0033AA  5012               	movf	i2___ftmul@f2^0,w,c
 10148  0033AC  2619               	addwf	i2___ftmul@f3_as_product^0,f,c
 10149  0033AE  5013               	movf	(i2___ftmul@f2+1)^0,w,c
 10150  0033B0  221A               	addwfc	(i2___ftmul@f3_as_product+1)^0,f,c
 10151  0033B2  5014               	movf	(i2___ftmul@f2+2)^0,w,c
 10152  0033B4  221B               	addwfc	(i2___ftmul@f3_as_product+2)^0,f,c
 10153  0033B6                     i2l5656:
 10154  0033B6  90D8               	bcf	status,0,c
 10155  0033B8  3211               	rrcf	(i2___ftmul@f1+2)^0,f,c
 10156  0033BA  3210               	rrcf	(i2___ftmul@f1+1)^0,f,c
 10157  0033BC  320F               	rrcf	i2___ftmul@f1^0,f,c
 10158  0033BE  90D8               	bcf	status,0,c
 10159  0033C0  321B               	rrcf	(i2___ftmul@f3_as_product+2)^0,f,c
 10160  0033C2  321A               	rrcf	(i2___ftmul@f3_as_product+1)^0,f,c
 10161  0033C4  3219               	rrcf	i2___ftmul@f3_as_product^0,f,c
 10162  0033C6  2E1C               	decfsz	i2___ftmul@cntr^0,f,c
 10163  0033C8  D7EE               	goto	i2l5652
 10164  0033CA  C019  F001         	movff	i2___ftmul@f3_as_product,i2___ftpack@arg
 10165  0033CE  C01A  F002         	movff	i2___ftmul@f3_as_product+1,i2___ftpack@arg+1
 10166  0033D2  C01B  F003         	movff	i2___ftmul@f3_as_product+2,i2___ftpack@arg+2
 10167  0033D6  C018  F004         	movff	i2___ftmul@exp,i2___ftpack@exp
 10168  0033DA  C01D  F005         	movff	i2___ftmul@sign,i2___ftpack@sign
 10169  0033DE  EC7C  F01C         	call	i2___ftpack	;wreg free
 10170  0033E2  C001  F00F         	movff	?i2___ftpack,?i2___ftmul
 10171  0033E6  C002  F010         	movff	?i2___ftpack+1,?i2___ftmul+1
 10172  0033EA  C003  F011         	movff	?i2___ftpack+2,?i2___ftmul+2
 10173  0033EE  0012               	return		;funcret
 10174  0033F0                     __end_ofi2___ftmul:
 10175                           	callstack 0
 10176                           
 10177 ;; *************** function i2__tdiv_to_l_ *****************
 10178 ;; Defined at:
 10179 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\ftdivl.c"
 10180 ;; Parameters:    Size  Location     Type
 10181 ;;  f1              3    0[COMRAM] float 
 10182 ;;  f2              3    3[COMRAM] float 
 10183 ;; Auto vars:     Size  Location     Type
 10184 ;;  quot            4    9[COMRAM] unsigned long 
 10185 ;;  exp1            1   14[COMRAM] unsigned char 
 10186 ;;  cntr            1   13[COMRAM] unsigned char 
 10187 ;; Return value:  Size  Location     Type
 10188 ;;                  4    0[COMRAM] unsigned long 
 10189 ;; Registers used:
 10190 ;;		wreg, status,2, status,0
 10191 ;; Tracked objects:
 10192 ;;		On entry : 0/0
 10193 ;;		On exit  : 0/0
 10194 ;;		Unchanged: 0/0
 10195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10196 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10197 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10198 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10199 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10200 ;;Total ram usage:       15 bytes
 10201 ;; Hardware stack levels used: 1
 10202 ;; This function calls:
 10203 ;;		Nothing
 10204 ;; This function is called by:
 10205 ;;		i2_sprintf
 10206 ;; This function uses a non-reentrant model
 10207 ;;
 10208                           
 10209                           	psect	text40
 10210  003014                     __ptext40:
 10211                           	callstack 0
 10212  003014                     i2__tdiv_to_l_:
 10213                           	callstack 24
 10214                           
 10215                           ;incstack = 0
 10216  003014  C003  F007         	movff	i2__tdiv_to_l_@f1+2,??i2__tdiv_to_l_
 10217  003018  6A08               	clrf	(??i2__tdiv_to_l_+1)^0,c
 10218  00301A  6A09               	clrf	(??i2__tdiv_to_l_+2)^0,c
 10219  00301C  3402               	rlcf	(i2__tdiv_to_l_@f1+1)^0,w,c
 10220  00301E  3607               	rlcf	??i2__tdiv_to_l_^0,f,c
 10221  003020  E301               	bnc	u775_41
 10222  003022  8008               	bsf	(??i2__tdiv_to_l_+1)^0,0,c
 10223  003024                     u775_41:
 10224  003024  5007               	movf	??i2__tdiv_to_l_^0,w,c
 10225  003026  6E0F               	movwf	i2__tdiv_to_l_@exp1^0,c
 10226  003028  500F               	movf	i2__tdiv_to_l_@exp1^0,w,c
 10227  00302A  A4D8               	btfss	status,2,c
 10228  00302C  D009               	goto	i2l6246
 10229  00302E                     i2u776_40:
 10230  00302E  0E00               	movlw	0
 10231  003030  6E01               	movwf	?i2__tdiv_to_l_^0,c
 10232  003032  0E00               	movlw	0
 10233  003034  6E02               	movwf	(?i2__tdiv_to_l_+1)^0,c
 10234  003036  0E00               	movlw	0
 10235  003038  6E03               	movwf	(?i2__tdiv_to_l_+2)^0,c
 10236  00303A  0E00               	movlw	0
 10237  00303C  6E04               	movwf	(?i2__tdiv_to_l_+3)^0,c
 10238  00303E  0012               	return	
 10239  003040                     i2l6246:
 10240  003040  C006  F007         	movff	i2__tdiv_to_l_@f2+2,??i2__tdiv_to_l_
 10241  003044  6A08               	clrf	(??i2__tdiv_to_l_+1)^0,c
 10242  003046  6A09               	clrf	(??i2__tdiv_to_l_+2)^0,c
 10243  003048  3405               	rlcf	(i2__tdiv_to_l_@f2+1)^0,w,c
 10244  00304A  3607               	rlcf	??i2__tdiv_to_l_^0,f,c
 10245  00304C  E301               	bnc	u777_41
 10246  00304E  8008               	bsf	(??i2__tdiv_to_l_+1)^0,0,c
 10247  003050                     u777_41:
 10248  003050  5007               	movf	??i2__tdiv_to_l_^0,w,c
 10249  003052  6E0E               	movwf	i2__tdiv_to_l_@cntr^0,c
 10250  003054  500E               	movf	i2__tdiv_to_l_@cntr^0,w,c
 10251  003056  B4D8               	btfsc	status,2,c
 10252  003058  D7EA               	goto	i2u776_40
 10253  00305A  8E02               	bsf	(i2__tdiv_to_l_@f1+1)^0,7,c
 10254  00305C  0EFF               	movlw	255
 10255  00305E  1601               	andwf	i2__tdiv_to_l_@f1^0,f,c
 10256  003060  0EFF               	movlw	255
 10257  003062  1602               	andwf	(i2__tdiv_to_l_@f1+1)^0,f,c
 10258  003064  0E00               	movlw	0
 10259  003066  1603               	andwf	(i2__tdiv_to_l_@f1+2)^0,f,c
 10260  003068  8E05               	bsf	(i2__tdiv_to_l_@f2+1)^0,7,c
 10261  00306A  0EFF               	movlw	255
 10262  00306C  1604               	andwf	i2__tdiv_to_l_@f2^0,f,c
 10263  00306E  0EFF               	movlw	255
 10264  003070  1605               	andwf	(i2__tdiv_to_l_@f2+1)^0,f,c
 10265  003072  0E00               	movlw	0
 10266  003074  1606               	andwf	(i2__tdiv_to_l_@f2+2)^0,f,c
 10267  003076  0E00               	movlw	0
 10268  003078  6E0A               	movwf	i2__tdiv_to_l_@quot^0,c
 10269  00307A  0E00               	movlw	0
 10270  00307C  6E0B               	movwf	(i2__tdiv_to_l_@quot+1)^0,c
 10271  00307E  0E00               	movlw	0
 10272  003080  6E0C               	movwf	(i2__tdiv_to_l_@quot+2)^0,c
 10273  003082  0E00               	movlw	0
 10274  003084  6E0D               	movwf	(i2__tdiv_to_l_@quot+3)^0,c
 10275  003086  0E7F               	movlw	127
 10276  003088  5E0F               	subwf	i2__tdiv_to_l_@exp1^0,f,c
 10277  00308A  500E               	movf	i2__tdiv_to_l_@cntr^0,w,c
 10278  00308C  0F98               	addlw	152
 10279  00308E  5E0F               	subwf	i2__tdiv_to_l_@exp1^0,f,c
 10280  003090  0E18               	movlw	24
 10281  003092  6E0E               	movwf	i2__tdiv_to_l_@cntr^0,c
 10282  003094                     i2l633:
 10283  003094  90D8               	bcf	status,0,c
 10284  003096  360A               	rlcf	i2__tdiv_to_l_@quot^0,f,c
 10285  003098  360B               	rlcf	(i2__tdiv_to_l_@quot+1)^0,f,c
 10286  00309A  360C               	rlcf	(i2__tdiv_to_l_@quot+2)^0,f,c
 10287  00309C  360D               	rlcf	(i2__tdiv_to_l_@quot+3)^0,f,c
 10288  00309E  5004               	movf	i2__tdiv_to_l_@f2^0,w,c
 10289  0030A0  5C01               	subwf	i2__tdiv_to_l_@f1^0,w,c
 10290  0030A2  5005               	movf	(i2__tdiv_to_l_@f2+1)^0,w,c
 10291  0030A4  5802               	subwfb	(i2__tdiv_to_l_@f1+1)^0,w,c
 10292  0030A6  5006               	movf	(i2__tdiv_to_l_@f2+2)^0,w,c
 10293  0030A8  5803               	subwfb	(i2__tdiv_to_l_@f1+2)^0,w,c
 10294  0030AA  A0D8               	btfss	status,0,c
 10295  0030AC  D007               	goto	i2l634
 10296  0030AE  5004               	movf	i2__tdiv_to_l_@f2^0,w,c
 10297  0030B0  5E01               	subwf	i2__tdiv_to_l_@f1^0,f,c
 10298  0030B2  5005               	movf	(i2__tdiv_to_l_@f2+1)^0,w,c
 10299  0030B4  5A02               	subwfb	(i2__tdiv_to_l_@f1+1)^0,f,c
 10300  0030B6  5006               	movf	(i2__tdiv_to_l_@f2+2)^0,w,c
 10301  0030B8  5A03               	subwfb	(i2__tdiv_to_l_@f1+2)^0,f,c
 10302  0030BA  800A               	bsf	i2__tdiv_to_l_@quot^0,0,c
 10303  0030BC                     i2l634:
 10304  0030BC  90D8               	bcf	status,0,c
 10305  0030BE  3601               	rlcf	i2__tdiv_to_l_@f1^0,f,c
 10306  0030C0  3602               	rlcf	(i2__tdiv_to_l_@f1+1)^0,f,c
 10307  0030C2  3603               	rlcf	(i2__tdiv_to_l_@f1+2)^0,f,c
 10308  0030C4  2E0E               	decfsz	i2__tdiv_to_l_@cntr^0,f,c
 10309  0030C6  D7E6               	goto	i2l633
 10310  0030C8  AE0F               	btfss	i2__tdiv_to_l_@exp1^0,7,c
 10311  0030CA  D00D               	goto	i2l6286
 10312  0030CC  500F               	movf	i2__tdiv_to_l_@exp1^0,w,c
 10313  0030CE  0A80               	xorlw	128
 10314  0030D0  0F97               	addlw	151
 10315  0030D2  A0D8               	btfss	status,0,c
 10316  0030D4  D7AC               	goto	i2u776_40
 10317  0030D6                     i2l6282:
 10318  0030D6  90D8               	bcf	status,0,c
 10319  0030D8  320D               	rrcf	(i2__tdiv_to_l_@quot+3)^0,f,c
 10320  0030DA  320C               	rrcf	(i2__tdiv_to_l_@quot+2)^0,f,c
 10321  0030DC  320B               	rrcf	(i2__tdiv_to_l_@quot+1)^0,f,c
 10322  0030DE  320A               	rrcf	i2__tdiv_to_l_@quot^0,f,c
 10323  0030E0  3E0F               	incfsz	i2__tdiv_to_l_@exp1^0,f,c
 10324  0030E2  D7F9               	goto	i2l6282
 10325  0030E4  D00D               	goto	i2u783_40
 10326  0030E6                     i2l6286:
 10327  0030E6  0E17               	movlw	23
 10328  0030E8  640F               	cpfsgt	i2__tdiv_to_l_@exp1^0,c
 10329  0030EA  D007               	goto	i2l6294
 10330  0030EC  D7A0               	goto	i2u776_40
 10331  0030EE                     i2l6292:
 10332  0030EE  90D8               	bcf	status,0,c
 10333  0030F0  360A               	rlcf	i2__tdiv_to_l_@quot^0,f,c
 10334  0030F2  360B               	rlcf	(i2__tdiv_to_l_@quot+1)^0,f,c
 10335  0030F4  360C               	rlcf	(i2__tdiv_to_l_@quot+2)^0,f,c
 10336  0030F6  360D               	rlcf	(i2__tdiv_to_l_@quot+3)^0,f,c
 10337  0030F8  060F               	decf	i2__tdiv_to_l_@exp1^0,f,c
 10338  0030FA                     i2l6294:
 10339  0030FA  500F               	movf	i2__tdiv_to_l_@exp1^0,w,c
 10340  0030FC  A4D8               	btfss	status,2,c
 10341  0030FE  D7F7               	goto	i2l6292
 10342  003100                     i2u783_40:
 10343  003100  C00A  F001         	movff	i2__tdiv_to_l_@quot,?i2__tdiv_to_l_
 10344  003104  C00B  F002         	movff	i2__tdiv_to_l_@quot+1,?i2__tdiv_to_l_+1
 10345  003108  C00C  F003         	movff	i2__tdiv_to_l_@quot+2,?i2__tdiv_to_l_+2
 10346  00310C  C00D  F004         	movff	i2__tdiv_to_l_@quot+3,?i2__tdiv_to_l_+3
 10347  003110  0012               	return		;funcret
 10348  003112                     __end_ofi2__tdiv_to_l_:
 10349                           	callstack 0
 10350                           
 10351 ;; *************** function i2__div_to_l_ *****************
 10352 ;; Defined at:
 10353 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\fldivl.c"
 10354 ;; Parameters:    Size  Location     Type
 10355 ;;  f1              3    0[COMRAM] unsigned long 
 10356 ;;  f2              3    3[COMRAM] unsigned long 
 10357 ;; Auto vars:     Size  Location     Type
 10358 ;;  quot            4    6[COMRAM] unsigned long 
 10359 ;;  exp1            1   11[COMRAM] unsigned char 
 10360 ;;  cntr            1   10[COMRAM] unsigned char 
 10361 ;; Return value:  Size  Location     Type
 10362 ;;                  4    0[COMRAM] unsigned long 
 10363 ;; Registers used:
 10364 ;;		wreg, status,2, status,0
 10365 ;; Tracked objects:
 10366 ;;		On entry : 0/0
 10367 ;;		On exit  : 0/0
 10368 ;;		Unchanged: 0/0
 10369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10370 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10371 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10372 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10373 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10374 ;;Total ram usage:       12 bytes
 10375 ;; Hardware stack levels used: 1
 10376 ;; This function calls:
 10377 ;;		Nothing
 10378 ;; This function is called by:
 10379 ;;		i2_sprintf
 10380 ;; This function uses a non-reentrant model
 10381 ;;
 10382                           
 10383                           	psect	text41
 10384  0033F0                     __ptext41:
 10385                           	callstack 0
 10386  0033F0                     i2__div_to_l_:
 10387                           	callstack 24
 10388                           
 10389                           ;incstack = 0
 10390  0033F0  3403               	rlcf	(i2__div_to_l_@f1+2)^0,w,c
 10391  0033F2  3404               	rlcf	(i2__div_to_l_@f1+3)^0,w,c
 10392  0033F4  6E0C               	movwf	i2__div_to_l_@exp1^0,c
 10393  0033F6  500C               	movf	i2__div_to_l_@exp1^0,w,c
 10394  0033F8  A4D8               	btfss	status,2,c
 10395  0033FA  D009               	goto	i2l6186
 10396  0033FC                     i2u768_40:
 10397  0033FC  0E00               	movlw	0
 10398  0033FE  6E01               	movwf	?i2__div_to_l_^0,c
 10399  003400  0E00               	movlw	0
 10400  003402  6E02               	movwf	(?i2__div_to_l_+1)^0,c
 10401  003404  0E00               	movlw	0
 10402  003406  6E03               	movwf	(?i2__div_to_l_+2)^0,c
 10403  003408  0E00               	movlw	0
 10404  00340A  6E04               	movwf	(?i2__div_to_l_+3)^0,c
 10405  00340C  0012               	return	
 10406  00340E                     i2l6186:
 10407  00340E  3406               	rlcf	(i2__div_to_l_@f2+2)^0,w,c
 10408  003410  3407               	rlcf	(i2__div_to_l_@f2+3)^0,w,c
 10409  003412  6E0B               	movwf	i2__div_to_l_@cntr^0,c
 10410  003414  500B               	movf	i2__div_to_l_@cntr^0,w,c
 10411  003416  B4D8               	btfsc	status,2,c
 10412  003418  D7F1               	goto	i2u768_40
 10413  00341A  8E03               	bsf	(i2__div_to_l_@f1+2)^0,7,c
 10414  00341C  0EFF               	movlw	255
 10415  00341E  1601               	andwf	i2__div_to_l_@f1^0,f,c
 10416  003420  0EFF               	movlw	255
 10417  003422  1602               	andwf	(i2__div_to_l_@f1+1)^0,f,c
 10418  003424  0EFF               	movlw	255
 10419  003426  1603               	andwf	(i2__div_to_l_@f1+2)^0,f,c
 10420  003428  0E00               	movlw	0
 10421  00342A  1604               	andwf	(i2__div_to_l_@f1+3)^0,f,c
 10422  00342C  8E06               	bsf	(i2__div_to_l_@f2+2)^0,7,c
 10423  00342E  0EFF               	movlw	255
 10424  003430  1604               	andwf	i2__div_to_l_@f2^0,f,c
 10425  003432  0EFF               	movlw	255
 10426  003434  1605               	andwf	(i2__div_to_l_@f2+1)^0,f,c
 10427  003436  0EFF               	movlw	255
 10428  003438  1606               	andwf	(i2__div_to_l_@f2+2)^0,f,c
 10429  00343A  0E00               	movlw	0
 10430  00343C  1607               	andwf	(i2__div_to_l_@f2+3)^0,f,c
 10431  00343E  0E00               	movlw	0
 10432  003440  6E07               	movwf	i2__div_to_l_@quot^0,c
 10433  003442  0E00               	movlw	0
 10434  003444  6E08               	movwf	(i2__div_to_l_@quot+1)^0,c
 10435  003446  0E00               	movlw	0
 10436  003448  6E09               	movwf	(i2__div_to_l_@quot+2)^0,c
 10437  00344A  0E00               	movlw	0
 10438  00344C  6E0A               	movwf	(i2__div_to_l_@quot+3)^0,c
 10439  00344E  0E7F               	movlw	127
 10440  003450  5E0C               	subwf	i2__div_to_l_@exp1^0,f,c
 10441  003452  500B               	movf	i2__div_to_l_@cntr^0,w,c
 10442  003454  0FA0               	addlw	160
 10443  003456  5E0C               	subwf	i2__div_to_l_@exp1^0,f,c
 10444  003458  0E20               	movlw	32
 10445  00345A  6E0B               	movwf	i2__div_to_l_@cntr^0,c
 10446  00345C                     i2l6206:
 10447  00345C  90D8               	bcf	status,0,c
 10448  00345E  3607               	rlcf	i2__div_to_l_@quot^0,f,c
 10449  003460  3608               	rlcf	(i2__div_to_l_@quot+1)^0,f,c
 10450  003462  3609               	rlcf	(i2__div_to_l_@quot+2)^0,f,c
 10451  003464  360A               	rlcf	(i2__div_to_l_@quot+3)^0,f,c
 10452  003466  5004               	movf	i2__div_to_l_@f2^0,w,c
 10453  003468  5C01               	subwf	i2__div_to_l_@f1^0,w,c
 10454  00346A  5005               	movf	(i2__div_to_l_@f2+1)^0,w,c
 10455  00346C  5802               	subwfb	(i2__div_to_l_@f1+1)^0,w,c
 10456  00346E  5006               	movf	(i2__div_to_l_@f2+2)^0,w,c
 10457  003470  5803               	subwfb	(i2__div_to_l_@f1+2)^0,w,c
 10458  003472  5007               	movf	(i2__div_to_l_@f2+3)^0,w,c
 10459  003474  5804               	subwfb	(i2__div_to_l_@f1+3)^0,w,c
 10460  003476  A0D8               	btfss	status,0,c
 10461  003478  D009               	goto	i2l6214
 10462  00347A  5004               	movf	i2__div_to_l_@f2^0,w,c
 10463  00347C  5E01               	subwf	i2__div_to_l_@f1^0,f,c
 10464  00347E  5005               	movf	(i2__div_to_l_@f2+1)^0,w,c
 10465  003480  5A02               	subwfb	(i2__div_to_l_@f1+1)^0,f,c
 10466  003482  5006               	movf	(i2__div_to_l_@f2+2)^0,w,c
 10467  003484  5A03               	subwfb	(i2__div_to_l_@f1+2)^0,f,c
 10468  003486  5007               	movf	(i2__div_to_l_@f2+3)^0,w,c
 10469  003488  5A04               	subwfb	(i2__div_to_l_@f1+3)^0,f,c
 10470  00348A  8007               	bsf	i2__div_to_l_@quot^0,0,c
 10471  00348C                     i2l6214:
 10472  00348C  90D8               	bcf	status,0,c
 10473  00348E  3601               	rlcf	i2__div_to_l_@f1^0,f,c
 10474  003490  3602               	rlcf	(i2__div_to_l_@f1+1)^0,f,c
 10475  003492  3603               	rlcf	(i2__div_to_l_@f1+2)^0,f,c
 10476  003494  3604               	rlcf	(i2__div_to_l_@f1+3)^0,f,c
 10477  003496  2E0B               	decfsz	i2__div_to_l_@cntr^0,f,c
 10478  003498  D7E1               	goto	i2l6206
 10479  00349A  AE0C               	btfss	i2__div_to_l_@exp1^0,7,c
 10480  00349C  D00D               	goto	i2l6230
 10481  00349E  500C               	movf	i2__div_to_l_@exp1^0,w,c
 10482  0034A0  0A80               	xorlw	128
 10483  0034A2  0F9F               	addlw	159
 10484  0034A4  A0D8               	btfss	status,0,c
 10485  0034A6  D7AA               	goto	i2u768_40
 10486  0034A8                     i2l6226:
 10487  0034A8  90D8               	bcf	status,0,c
 10488  0034AA  320A               	rrcf	(i2__div_to_l_@quot+3)^0,f,c
 10489  0034AC  3209               	rrcf	(i2__div_to_l_@quot+2)^0,f,c
 10490  0034AE  3208               	rrcf	(i2__div_to_l_@quot+1)^0,f,c
 10491  0034B0  3207               	rrcf	i2__div_to_l_@quot^0,f,c
 10492  0034B2  3E0C               	incfsz	i2__div_to_l_@exp1^0,f,c
 10493  0034B4  D7F9               	goto	i2l6226
 10494  0034B6  D00D               	goto	i2u774_40
 10495  0034B8                     i2l6230:
 10496  0034B8  0E1F               	movlw	31
 10497  0034BA  640C               	cpfsgt	i2__div_to_l_@exp1^0,c
 10498  0034BC  D007               	goto	i2l6238
 10499  0034BE  D79E               	goto	i2u768_40
 10500  0034C0                     i2l6236:
 10501  0034C0  90D8               	bcf	status,0,c
 10502  0034C2  3607               	rlcf	i2__div_to_l_@quot^0,f,c
 10503  0034C4  3608               	rlcf	(i2__div_to_l_@quot+1)^0,f,c
 10504  0034C6  3609               	rlcf	(i2__div_to_l_@quot+2)^0,f,c
 10505  0034C8  360A               	rlcf	(i2__div_to_l_@quot+3)^0,f,c
 10506  0034CA  060C               	decf	i2__div_to_l_@exp1^0,f,c
 10507  0034CC                     i2l6238:
 10508  0034CC  500C               	movf	i2__div_to_l_@exp1^0,w,c
 10509  0034CE  A4D8               	btfss	status,2,c
 10510  0034D0  D7F7               	goto	i2l6236
 10511  0034D2                     i2u774_40:
 10512  0034D2  C007  F001         	movff	i2__div_to_l_@quot,?i2__div_to_l_
 10513  0034D6  C008  F002         	movff	i2__div_to_l_@quot+1,?i2__div_to_l_+1
 10514  0034DA  C009  F003         	movff	i2__div_to_l_@quot+2,?i2__div_to_l_+2
 10515  0034DE  C00A  F004         	movff	i2__div_to_l_@quot+3,?i2__div_to_l_+3
 10516  0034E2  0012               	return		;funcret
 10517  0034E4                     __end_ofi2__div_to_l_:
 10518                           	callstack 0
 10519                           
 10520 ;; *************** function i2___wmul *****************
 10521 ;; Defined at:
 10522 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\Umul16.c"
 10523 ;; Parameters:    Size  Location     Type
 10524 ;;  multiplier      2    0[COMRAM] unsigned int 
 10525 ;;  multiplicand    2    2[COMRAM] unsigned int 
 10526 ;; Auto vars:     Size  Location     Type
 10527 ;;  product         2    4[COMRAM] unsigned int 
 10528 ;; Return value:  Size  Location     Type
 10529 ;;                  2    0[COMRAM] unsigned int 
 10530 ;; Registers used:
 10531 ;;		wreg, status,2, status,0, prodl, prodh
 10532 ;; Tracked objects:
 10533 ;;		On entry : 0/0
 10534 ;;		On exit  : 0/0
 10535 ;;		Unchanged: 0/0
 10536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10537 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10538 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10539 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10540 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10541 ;;Total ram usage:        6 bytes
 10542 ;; Hardware stack levels used: 1
 10543 ;; This function calls:
 10544 ;;		Nothing
 10545 ;; This function is called by:
 10546 ;;		_TMR1_ISR
 10547 ;;		i2_sprintf
 10548 ;; This function uses a non-reentrant model
 10549 ;;
 10550                           
 10551                           	psect	text42
 10552  004446                     __ptext42:
 10553                           	callstack 0
 10554  004446                     i2___wmul:
 10555                           	callstack 24
 10556                           
 10557                           ;incstack = 0
 10558  004446  5001               	movf	i2___wmul@multiplier^0,w,c
 10559  004448  0203               	mulwf	i2___wmul@multiplicand^0,c
 10560  00444A  CFF3 F005          	movff	prodl,i2___wmul@product
 10561  00444E  CFF4 F006          	movff	prodh,i2___wmul@product+1
 10562  004452  5001               	movf	i2___wmul@multiplier^0,w,c
 10563  004454  0204               	mulwf	(i2___wmul@multiplicand+1)^0,c
 10564  004456  50F3               	movf	243,w,c
 10565  004458  2606               	addwf	(i2___wmul@product+1)^0,f,c
 10566  00445A  5002               	movf	(i2___wmul@multiplier+1)^0,w,c
 10567  00445C  0203               	mulwf	i2___wmul@multiplicand^0,c
 10568  00445E  50F3               	movf	243,w,c
 10569  004460  2606               	addwf	(i2___wmul@product+1)^0,f,c
 10570  004462  C005  F001         	movff	i2___wmul@product,?i2___wmul
 10571  004466  C006  F002         	movff	i2___wmul@product+1,?i2___wmul+1
 10572  00446A  0012               	return		;funcret
 10573  00446C                     __end_ofi2___wmul:
 10574                           	callstack 0
 10575                           
 10576 ;; *************** function i2___lltoft *****************
 10577 ;; Defined at:
 10578 ;;		line 35 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\lltoft.c"
 10579 ;; Parameters:    Size  Location     Type
 10580 ;;  c               4    8[COMRAM] unsigned long 
 10581 ;; Auto vars:     Size  Location     Type
 10582 ;;  exp             1   16[COMRAM] unsigned char 
 10583 ;; Return value:  Size  Location     Type
 10584 ;;                  3    8[COMRAM] float 
 10585 ;; Registers used:
 10586 ;;		wreg, status,2, status,0, cstack
 10587 ;; Tracked objects:
 10588 ;;		On entry : 0/0
 10589 ;;		On exit  : 0/0
 10590 ;;		Unchanged: 0/0
 10591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10592 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10593 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10594 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10595 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10596 ;;Total ram usage:        9 bytes
 10597 ;; Hardware stack levels used: 1
 10598 ;; Hardware stack levels required when called: 1
 10599 ;; This function calls:
 10600 ;;		i2___ftpack
 10601 ;; This function is called by:
 10602 ;;		i2_sprintf
 10603 ;; This function uses a non-reentrant model
 10604 ;;
 10605                           
 10606                           	psect	text43
 10607  0040DA                     __ptext43:
 10608                           	callstack 0
 10609  0040DA                     i2___lltoft:
 10610                           	callstack 23
 10611                           
 10612                           ;incstack = 0
 10613  0040DA  0E8E               	movlw	142
 10614  0040DC  6E11               	movwf	i2___lltoft@exp^0,c
 10615  0040DE  D006               	goto	i2l6392
 10616  0040E0                     i2l6390:
 10617  0040E0  90D8               	bcf	status,0,c
 10618  0040E2  320C               	rrcf	(i2___lltoft@c+3)^0,f,c
 10619  0040E4  320B               	rrcf	(i2___lltoft@c+2)^0,f,c
 10620  0040E6  320A               	rrcf	(i2___lltoft@c+1)^0,f,c
 10621  0040E8  3209               	rrcf	i2___lltoft@c^0,f,c
 10622  0040EA  2A11               	incf	i2___lltoft@exp^0,f,c
 10623  0040EC                     i2l6392:
 10624  0040EC  0E00               	movlw	0
 10625  0040EE  1409               	andwf	i2___lltoft@c^0,w,c
 10626  0040F0  6E0D               	movwf	??i2___lltoft^0,c
 10627  0040F2  0E00               	movlw	0
 10628  0040F4  140A               	andwf	(i2___lltoft@c+1)^0,w,c
 10629  0040F6  6E0E               	movwf	(??i2___lltoft+1)^0,c
 10630  0040F8  0E00               	movlw	0
 10631  0040FA  140B               	andwf	(i2___lltoft@c+2)^0,w,c
 10632  0040FC  6E0F               	movwf	(??i2___lltoft+2)^0,c
 10633  0040FE  0EFF               	movlw	255
 10634  004100  140C               	andwf	(i2___lltoft@c+3)^0,w,c
 10635  004102  6E10               	movwf	(??i2___lltoft+3)^0,c
 10636  004104  500D               	movf	??i2___lltoft^0,w,c
 10637  004106  100E               	iorwf	(??i2___lltoft+1)^0,w,c
 10638  004108  100F               	iorwf	(??i2___lltoft+2)^0,w,c
 10639  00410A  1010               	iorwf	(??i2___lltoft+3)^0,w,c
 10640  00410C  A4D8               	btfss	status,2,c
 10641  00410E  D7E8               	goto	i2l6390
 10642  004110  C009  F001         	movff	i2___lltoft@c,i2___ftpack@arg
 10643  004114  C00A  F002         	movff	i2___lltoft@c+1,i2___ftpack@arg+1
 10644  004118  C00B  F003         	movff	i2___lltoft@c+2,i2___ftpack@arg+2
 10645  00411C  C011  F004         	movff	i2___lltoft@exp,i2___ftpack@exp
 10646  004120  0E00               	movlw	0
 10647  004122  6E05               	movwf	i2___ftpack@sign^0,c
 10648  004124  EC7C  F01C         	call	i2___ftpack	;wreg free
 10649  004128  C001  F009         	movff	?i2___ftpack,?i2___lltoft
 10650  00412C  C002  F00A         	movff	?i2___ftpack+1,?i2___lltoft+1
 10651  004130  C003  F00B         	movff	?i2___ftpack+2,?i2___lltoft+2
 10652  004134  0012               	return		;funcret
 10653  004136                     __end_ofi2___lltoft:
 10654                           	callstack 0
 10655                           
 10656 ;; *************** function i2___llmod *****************
 10657 ;; Defined at:
 10658 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\llmod.c"
 10659 ;; Parameters:    Size  Location     Type
 10660 ;;  dividend        4   13[COMRAM] unsigned long 
 10661 ;;  divisor         4   17[COMRAM] unsigned long 
 10662 ;; Auto vars:     Size  Location     Type
 10663 ;;  counter         1   21[COMRAM] unsigned char 
 10664 ;; Return value:  Size  Location     Type
 10665 ;;                  4   13[COMRAM] unsigned long 
 10666 ;; Registers used:
 10667 ;;		wreg, status,2, status,0
 10668 ;; Tracked objects:
 10669 ;;		On entry : 3F/0
 10670 ;;		On exit  : 3F/0
 10671 ;;		Unchanged: 3F/0
 10672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10673 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10674 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10675 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10676 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10677 ;;Total ram usage:        9 bytes
 10678 ;; Hardware stack levels used: 1
 10679 ;; This function calls:
 10680 ;;		Nothing
 10681 ;; This function is called by:
 10682 ;;		i2_sprintf
 10683 ;; This function uses a non-reentrant model
 10684 ;;
 10685                           
 10686                           	psect	text44
 10687  004018                     __ptext44:
 10688                           	callstack 0
 10689  004018                     i2___llmod:
 10690                           	callstack 24
 10691                           
 10692                           ; BSR set to: 0
 10693                           
 10694                           ;incstack = 0
 10695  004018  5012               	movf	i2___llmod@divisor^0,w,c
 10696  00401A  1013               	iorwf	(i2___llmod@divisor+1)^0,w,c
 10697  00401C  1014               	iorwf	(i2___llmod@divisor+2)^0,w,c
 10698  00401E  1015               	iorwf	(i2___llmod@divisor+3)^0,w,c
 10699  004020  B4D8               	btfsc	status,2,c
 10700  004022  D024               	goto	i2l710
 10701                           
 10702                           ; BSR set to: 0
 10703  004024  0E01               	movlw	1
 10704  004026  6E16               	movwf	i2___llmod@counter^0,c
 10705  004028  D006               	goto	i2l6378
 10706  00402A                     i2l6376:
 10707                           
 10708                           ; BSR set to: 0
 10709  00402A  90D8               	bcf	status,0,c
 10710  00402C  3612               	rlcf	i2___llmod@divisor^0,f,c
 10711  00402E  3613               	rlcf	(i2___llmod@divisor+1)^0,f,c
 10712  004030  3614               	rlcf	(i2___llmod@divisor+2)^0,f,c
 10713  004032  3615               	rlcf	(i2___llmod@divisor+3)^0,f,c
 10714  004034  2A16               	incf	i2___llmod@counter^0,f,c
 10715  004036                     i2l6378:
 10716                           
 10717                           ; BSR set to: 0
 10718  004036  AE15               	btfss	(i2___llmod@divisor+3)^0,7,c
 10719  004038  D7F8               	goto	i2l6376
 10720  00403A                     i2u798_40:
 10721                           
 10722                           ; BSR set to: 0
 10723  00403A  5012               	movf	i2___llmod@divisor^0,w,c
 10724  00403C  5C0E               	subwf	i2___llmod@dividend^0,w,c
 10725  00403E  5013               	movf	(i2___llmod@divisor+1)^0,w,c
 10726  004040  580F               	subwfb	(i2___llmod@dividend+1)^0,w,c
 10727  004042  5014               	movf	(i2___llmod@divisor+2)^0,w,c
 10728  004044  5810               	subwfb	(i2___llmod@dividend+2)^0,w,c
 10729  004046  5015               	movf	(i2___llmod@divisor+3)^0,w,c
 10730  004048  5811               	subwfb	(i2___llmod@dividend+3)^0,w,c
 10731  00404A  A0D8               	btfss	status,0,c
 10732  00404C  D008               	goto	i2l6384
 10733                           
 10734                           ; BSR set to: 0
 10735  00404E  5012               	movf	i2___llmod@divisor^0,w,c
 10736  004050  5E0E               	subwf	i2___llmod@dividend^0,f,c
 10737  004052  5013               	movf	(i2___llmod@divisor+1)^0,w,c
 10738  004054  5A0F               	subwfb	(i2___llmod@dividend+1)^0,f,c
 10739  004056  5014               	movf	(i2___llmod@divisor+2)^0,w,c
 10740  004058  5A10               	subwfb	(i2___llmod@dividend+2)^0,f,c
 10741  00405A  5015               	movf	(i2___llmod@divisor+3)^0,w,c
 10742  00405C  5A11               	subwfb	(i2___llmod@dividend+3)^0,f,c
 10743  00405E                     i2l6384:
 10744                           
 10745                           ; BSR set to: 0
 10746  00405E  90D8               	bcf	status,0,c
 10747  004060  3215               	rrcf	(i2___llmod@divisor+3)^0,f,c
 10748  004062  3214               	rrcf	(i2___llmod@divisor+2)^0,f,c
 10749  004064  3213               	rrcf	(i2___llmod@divisor+1)^0,f,c
 10750  004066  3212               	rrcf	i2___llmod@divisor^0,f,c
 10751                           
 10752                           ; BSR set to: 0
 10753  004068  2E16               	decfsz	i2___llmod@counter^0,f,c
 10754  00406A  D7E7               	goto	i2u798_40
 10755  00406C                     i2l710:
 10756                           
 10757                           ; BSR set to: 0
 10758  00406C  C00E  F00E         	movff	i2___llmod@dividend,?i2___llmod
 10759  004070  C00F  F00F         	movff	i2___llmod@dividend+1,?i2___llmod+1
 10760  004074  C010  F010         	movff	i2___llmod@dividend+2,?i2___llmod+2
 10761  004078  C011  F011         	movff	i2___llmod@dividend+3,?i2___llmod+3
 10762                           
 10763                           ; BSR set to: 0
 10764  00407C  0012               	return		;funcret
 10765  00407E                     __end_ofi2___llmod:
 10766                           	callstack 0
 10767                           
 10768 ;; *************** function i2___lldiv *****************
 10769 ;; Defined at:
 10770 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\__lldiv.c"
 10771 ;; Parameters:    Size  Location     Type
 10772 ;;  dividend        4    0[COMRAM] unsigned long 
 10773 ;;  divisor         4    4[COMRAM] unsigned long 
 10774 ;; Auto vars:     Size  Location     Type
 10775 ;;  quotient        4    8[COMRAM] unsigned long 
 10776 ;;  counter         1   12[COMRAM] unsigned char 
 10777 ;; Return value:  Size  Location     Type
 10778 ;;                  4    0[COMRAM] unsigned long 
 10779 ;; Registers used:
 10780 ;;		wreg, status,2, status,0
 10781 ;; Tracked objects:
 10782 ;;		On entry : 3F/0
 10783 ;;		On exit  : 3F/0
 10784 ;;		Unchanged: 3F/0
 10785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10786 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10787 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10788 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10789 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10790 ;;Total ram usage:       13 bytes
 10791 ;; Hardware stack levels used: 1
 10792 ;; This function calls:
 10793 ;;		Nothing
 10794 ;; This function is called by:
 10795 ;;		i2_sprintf
 10796 ;; This function uses a non-reentrant model
 10797 ;;
 10798                           
 10799                           	psect	text45
 10800  003C82                     __ptext45:
 10801                           	callstack 0
 10802  003C82                     i2___lldiv:
 10803                           	callstack 24
 10804                           
 10805                           ; BSR set to: 0
 10806                           
 10807                           ; BSR set to: 0
 10808                           ;incstack = 0
 10809  003C82  0E00               	movlw	0
 10810  003C84  6E09               	movwf	i2___lldiv@quotient^0,c
 10811  003C86  0E00               	movlw	0
 10812  003C88  6E0A               	movwf	(i2___lldiv@quotient+1)^0,c
 10813  003C8A  0E00               	movlw	0
 10814  003C8C  6E0B               	movwf	(i2___lldiv@quotient+2)^0,c
 10815  003C8E  0E00               	movlw	0
 10816  003C90  6E0C               	movwf	(i2___lldiv@quotient+3)^0,c
 10817                           
 10818                           ; BSR set to: 0
 10819  003C92  5005               	movf	i2___lldiv@divisor^0,w,c
 10820  003C94  1006               	iorwf	(i2___lldiv@divisor+1)^0,w,c
 10821  003C96  1007               	iorwf	(i2___lldiv@divisor+2)^0,w,c
 10822  003C98  1008               	iorwf	(i2___lldiv@divisor+3)^0,w,c
 10823  003C9A  B4D8               	btfsc	status,2,c
 10824  003C9C  D02A               	goto	i2l295
 10825                           
 10826                           ; BSR set to: 0
 10827  003C9E  0E01               	movlw	1
 10828  003CA0  6E0D               	movwf	i2___lldiv@counter^0,c
 10829  003CA2  D006               	goto	i2l6166
 10830  003CA4                     i2l6164:
 10831                           
 10832                           ; BSR set to: 0
 10833  003CA4  90D8               	bcf	status,0,c
 10834  003CA6  3605               	rlcf	i2___lldiv@divisor^0,f,c
 10835  003CA8  3606               	rlcf	(i2___lldiv@divisor+1)^0,f,c
 10836  003CAA  3607               	rlcf	(i2___lldiv@divisor+2)^0,f,c
 10837  003CAC  3608               	rlcf	(i2___lldiv@divisor+3)^0,f,c
 10838  003CAE  2A0D               	incf	i2___lldiv@counter^0,f,c
 10839  003CB0                     i2l6166:
 10840                           
 10841                           ; BSR set to: 0
 10842  003CB0  AE08               	btfss	(i2___lldiv@divisor+3)^0,7,c
 10843  003CB2  D7F8               	goto	i2l6164
 10844  003CB4                     i2u766_40:
 10845                           
 10846                           ; BSR set to: 0
 10847  003CB4  90D8               	bcf	status,0,c
 10848  003CB6  3609               	rlcf	i2___lldiv@quotient^0,f,c
 10849  003CB8  360A               	rlcf	(i2___lldiv@quotient+1)^0,f,c
 10850  003CBA  360B               	rlcf	(i2___lldiv@quotient+2)^0,f,c
 10851  003CBC  360C               	rlcf	(i2___lldiv@quotient+3)^0,f,c
 10852                           
 10853                           ; BSR set to: 0
 10854  003CBE  5005               	movf	i2___lldiv@divisor^0,w,c
 10855  003CC0  5C01               	subwf	i2___lldiv@dividend^0,w,c
 10856  003CC2  5006               	movf	(i2___lldiv@divisor+1)^0,w,c
 10857  003CC4  5802               	subwfb	(i2___lldiv@dividend+1)^0,w,c
 10858  003CC6  5007               	movf	(i2___lldiv@divisor+2)^0,w,c
 10859  003CC8  5803               	subwfb	(i2___lldiv@dividend+2)^0,w,c
 10860  003CCA  5008               	movf	(i2___lldiv@divisor+3)^0,w,c
 10861  003CCC  5804               	subwfb	(i2___lldiv@dividend+3)^0,w,c
 10862  003CCE  A0D8               	btfss	status,0,c
 10863  003CD0  D009               	goto	i2l6176
 10864                           
 10865                           ; BSR set to: 0
 10866  003CD2  5005               	movf	i2___lldiv@divisor^0,w,c
 10867  003CD4  5E01               	subwf	i2___lldiv@dividend^0,f,c
 10868  003CD6  5006               	movf	(i2___lldiv@divisor+1)^0,w,c
 10869  003CD8  5A02               	subwfb	(i2___lldiv@dividend+1)^0,f,c
 10870  003CDA  5007               	movf	(i2___lldiv@divisor+2)^0,w,c
 10871  003CDC  5A03               	subwfb	(i2___lldiv@dividend+2)^0,f,c
 10872  003CDE  5008               	movf	(i2___lldiv@divisor+3)^0,w,c
 10873  003CE0  5A04               	subwfb	(i2___lldiv@dividend+3)^0,f,c
 10874                           
 10875                           ; BSR set to: 0
 10876  003CE2  8009               	bsf	i2___lldiv@quotient^0,0,c
 10877  003CE4                     i2l6176:
 10878                           
 10879                           ; BSR set to: 0
 10880  003CE4  90D8               	bcf	status,0,c
 10881  003CE6  3208               	rrcf	(i2___lldiv@divisor+3)^0,f,c
 10882  003CE8  3207               	rrcf	(i2___lldiv@divisor+2)^0,f,c
 10883  003CEA  3206               	rrcf	(i2___lldiv@divisor+1)^0,f,c
 10884  003CEC  3205               	rrcf	i2___lldiv@divisor^0,f,c
 10885                           
 10886                           ; BSR set to: 0
 10887  003CEE  2E0D               	decfsz	i2___lldiv@counter^0,f,c
 10888  003CF0  D7E1               	goto	i2u766_40
 10889  003CF2                     i2l295:
 10890                           
 10891                           ; BSR set to: 0
 10892  003CF2  C009  F001         	movff	i2___lldiv@quotient,?i2___lldiv
 10893  003CF6  C00A  F002         	movff	i2___lldiv@quotient+1,?i2___lldiv+1
 10894  003CFA  C00B  F003         	movff	i2___lldiv@quotient+2,?i2___lldiv+2
 10895  003CFE  C00C  F004         	movff	i2___lldiv@quotient+3,?i2___lldiv+3
 10896                           
 10897                           ; BSR set to: 0
 10898  003D02  0012               	return		;funcret
 10899  003D04                     __end_ofi2___lldiv:
 10900                           	callstack 0
 10901                           
 10902 ;; *************** function i2___fttol *****************
 10903 ;; Defined at:
 10904 ;;		line 44 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\fttol.c"
 10905 ;; Parameters:    Size  Location     Type
 10906 ;;  f1              3   55[COMRAM] float 
 10907 ;; Auto vars:     Size  Location     Type
 10908 ;;  lval            4   65[COMRAM] unsigned long 
 10909 ;;  exp1            1   69[COMRAM] unsigned char 
 10910 ;;  sign1           1   64[COMRAM] unsigned char 
 10911 ;; Return value:  Size  Location     Type
 10912 ;;                  4   55[COMRAM] long 
 10913 ;; Registers used:
 10914 ;;		wreg, status,2, status,0
 10915 ;; Tracked objects:
 10916 ;;		On entry : 0/0
 10917 ;;		On exit  : 0/0
 10918 ;;		Unchanged: 0/0
 10919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10920 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10921 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10922 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10923 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10924 ;;Total ram usage:       15 bytes
 10925 ;; Hardware stack levels used: 1
 10926 ;; This function calls:
 10927 ;;		Nothing
 10928 ;; This function is called by:
 10929 ;;		_TMR1_ISR
 10930 ;;		i2_sprintf
 10931 ;; This function uses a non-reentrant model
 10932 ;;
 10933                           
 10934                           	psect	text46
 10935  003778                     __ptext46:
 10936                           	callstack 0
 10937  003778                     i2___fttol:
 10938                           	callstack 24
 10939                           
 10940                           ; BSR set to: 0
 10941                           ;incstack = 0
 10942  003778  C03A  F03C         	movff	i2___fttol@f1+2,??i2___fttol
 10943  00377C  6A3D               	clrf	(??i2___fttol+1)^0,c
 10944  00377E  6A3E               	clrf	(??i2___fttol+2)^0,c
 10945  003780  3439               	rlcf	(i2___fttol@f1+1)^0,w,c
 10946  003782  363C               	rlcf	??i2___fttol^0,f,c
 10947  003784  E301               	bnc	u789_41
 10948  003786  803D               	bsf	(??i2___fttol+1)^0,0,c
 10949  003788                     u789_41:
 10950  003788  503C               	movf	??i2___fttol^0,w,c
 10951  00378A  6E46               	movwf	i2___fttol@exp1^0,c
 10952  00378C  5046               	movf	i2___fttol@exp1^0,w,c
 10953  00378E  A4D8               	btfss	status,2,c
 10954  003790  D009               	goto	i2l6332
 10955  003792                     i2u790_40:
 10956  003792  0E00               	movlw	0
 10957  003794  6E38               	movwf	?i2___fttol^0,c
 10958  003796  0E00               	movlw	0
 10959  003798  6E39               	movwf	(?i2___fttol+1)^0,c
 10960  00379A  0E00               	movlw	0
 10961  00379C  6E3A               	movwf	(?i2___fttol+2)^0,c
 10962  00379E  0E00               	movlw	0
 10963  0037A0  6E3B               	movwf	(?i2___fttol+3)^0,c
 10964  0037A2  0012               	return	
 10965  0037A4                     i2l6332:
 10966  0037A4  0E17               	movlw	23
 10967  0037A6  6E3C               	movwf	??i2___fttol^0,c
 10968  0037A8  C038  F03D         	movff	i2___fttol@f1,??i2___fttol+1
 10969  0037AC  C039  F03E         	movff	i2___fttol@f1+1,??i2___fttol+2
 10970  0037B0  C03A  F03F         	movff	i2___fttol@f1+2,??i2___fttol+3
 10971  0037B4  283C               	incf	??i2___fttol^0,w,c
 10972  0037B6  6E40               	movwf	(??i2___fttol+4)^0,c
 10973  0037B8  D004               	goto	i2u791_40
 10974  0037BA                     i2u791_45:
 10975  0037BA  90D8               	bcf	status,0,c
 10976  0037BC  323F               	rrcf	(??i2___fttol+3)^0,f,c
 10977  0037BE  323E               	rrcf	(??i2___fttol+2)^0,f,c
 10978  0037C0  323D               	rrcf	(??i2___fttol+1)^0,f,c
 10979  0037C2                     i2u791_40:
 10980  0037C2  2E40               	decfsz	(??i2___fttol+4)^0,f,c
 10981  0037C4  D7FA               	goto	i2u791_45
 10982  0037C6  503D               	movf	(??i2___fttol+1)^0,w,c
 10983  0037C8  6E41               	movwf	i2___fttol@sign1^0,c
 10984  0037CA  8E39               	bsf	(i2___fttol@f1+1)^0,7,c
 10985  0037CC  0EFF               	movlw	255
 10986  0037CE  1638               	andwf	i2___fttol@f1^0,f,c
 10987  0037D0  0EFF               	movlw	255
 10988  0037D2  1639               	andwf	(i2___fttol@f1+1)^0,f,c
 10989  0037D4  0E00               	movlw	0
 10990  0037D6  163A               	andwf	(i2___fttol@f1+2)^0,f,c
 10991  0037D8  5038               	movf	i2___fttol@f1^0,w,c
 10992  0037DA  6E42               	movwf	i2___fttol@lval^0,c
 10993  0037DC  5039               	movf	(i2___fttol@f1+1)^0,w,c
 10994  0037DE  6E43               	movwf	(i2___fttol@lval+1)^0,c
 10995  0037E0  503A               	movf	(i2___fttol@f1+2)^0,w,c
 10996  0037E2  6E44               	movwf	(i2___fttol@lval+2)^0,c
 10997  0037E4  6A45               	clrf	(i2___fttol@lval+3)^0,c
 10998  0037E6  0E8E               	movlw	142
 10999  0037E8  5E46               	subwf	i2___fttol@exp1^0,f,c
 11000  0037EA  AE46               	btfss	i2___fttol@exp1^0,7,c
 11001  0037EC  D00D               	goto	i2l6354
 11002  0037EE  5046               	movf	i2___fttol@exp1^0,w,c
 11003  0037F0  0A80               	xorlw	128
 11004  0037F2  0F8F               	addlw	143
 11005  0037F4  A0D8               	btfss	status,0,c
 11006  0037F6  D7CD               	goto	i2u790_40
 11007  0037F8                     i2l6350:
 11008  0037F8  90D8               	bcf	status,0,c
 11009  0037FA  3245               	rrcf	(i2___fttol@lval+3)^0,f,c
 11010  0037FC  3244               	rrcf	(i2___fttol@lval+2)^0,f,c
 11011  0037FE  3243               	rrcf	(i2___fttol@lval+1)^0,f,c
 11012  003800  3242               	rrcf	i2___fttol@lval^0,f,c
 11013  003802  3E46               	incfsz	i2___fttol@exp1^0,f,c
 11014  003804  D7F9               	goto	i2l6350
 11015  003806  D00D               	goto	i2u795_40
 11016  003808                     i2l6354:
 11017  003808  0E17               	movlw	23
 11018  00380A  6446               	cpfsgt	i2___fttol@exp1^0,c
 11019  00380C  D007               	goto	i2l6362
 11020  00380E  D7C1               	goto	i2u790_40
 11021  003810                     i2l6360:
 11022  003810  90D8               	bcf	status,0,c
 11023  003812  3642               	rlcf	i2___fttol@lval^0,f,c
 11024  003814  3643               	rlcf	(i2___fttol@lval+1)^0,f,c
 11025  003816  3644               	rlcf	(i2___fttol@lval+2)^0,f,c
 11026  003818  3645               	rlcf	(i2___fttol@lval+3)^0,f,c
 11027  00381A  0646               	decf	i2___fttol@exp1^0,f,c
 11028  00381C                     i2l6362:
 11029  00381C  5046               	movf	i2___fttol@exp1^0,w,c
 11030  00381E  A4D8               	btfss	status,2,c
 11031  003820  D7F7               	goto	i2l6360
 11032  003822                     i2u795_40:
 11033  003822  5041               	movf	i2___fttol@sign1^0,w,c
 11034  003824  B4D8               	btfsc	status,2,c
 11035  003826  D008               	goto	i2l6368
 11036  003828  1E45               	comf	(i2___fttol@lval+3)^0,f,c
 11037  00382A  1E44               	comf	(i2___fttol@lval+2)^0,f,c
 11038  00382C  1E43               	comf	(i2___fttol@lval+1)^0,f,c
 11039  00382E  6C42               	negf	i2___fttol@lval^0,c
 11040  003830  0E00               	movlw	0
 11041  003832  2243               	addwfc	(i2___fttol@lval+1)^0,f,c
 11042  003834  2244               	addwfc	(i2___fttol@lval+2)^0,f,c
 11043  003836  2245               	addwfc	(i2___fttol@lval+3)^0,f,c
 11044  003838                     i2l6368:
 11045  003838  C042  F038         	movff	i2___fttol@lval,?i2___fttol
 11046  00383C  C043  F039         	movff	i2___fttol@lval+1,?i2___fttol+1
 11047  003840  C044  F03A         	movff	i2___fttol@lval+2,?i2___fttol+2
 11048  003844  C045  F03B         	movff	i2___fttol@lval+3,?i2___fttol+3
 11049  003848  0012               	return		;funcret
 11050  00384A                     __end_ofi2___fttol:
 11051                           	callstack 0
 11052                           
 11053 ;; *************** function i2___ftsub *****************
 11054 ;; Defined at:
 11055 ;;		line 19 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\ftsub.c"
 11056 ;; Parameters:    Size  Location     Type
 11057 ;;  f1              3   55[COMRAM] float 
 11058 ;;  f2              3   58[COMRAM] float 
 11059 ;; Auto vars:     Size  Location     Type
 11060 ;;		None
 11061 ;; Return value:  Size  Location     Type
 11062 ;;                  3   55[COMRAM] float 
 11063 ;; Registers used:
 11064 ;;		wreg, status,2, status,0, cstack
 11065 ;; Tracked objects:
 11066 ;;		On entry : 0/0
 11067 ;;		On exit  : 0/0
 11068 ;;		Unchanged: 0/0
 11069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11070 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11071 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11072 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11073 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11074 ;;Total ram usage:        6 bytes
 11075 ;; Hardware stack levels used: 1
 11076 ;; Hardware stack levels required when called: 2
 11077 ;; This function calls:
 11078 ;;		i2___ftadd
 11079 ;; This function is called by:
 11080 ;;		i2_sprintf
 11081 ;; This function uses a non-reentrant model
 11082 ;;
 11083                           
 11084                           	psect	text47
 11085  004262                     __ptext47:
 11086                           	callstack 0
 11087  004262                     i2___ftsub:
 11088                           	callstack 22
 11089                           
 11090                           ;incstack = 0
 11091  004262  503B               	movf	i2___ftsub@f2^0,w,c
 11092  004264  103C               	iorwf	(i2___ftsub@f2+1)^0,w,c
 11093  004266  103D               	iorwf	(i2___ftsub@f2+2)^0,w,c
 11094  004268  B4D8               	btfsc	status,2,c
 11095  00426A  D006               	goto	i2l6322
 11096  00426C  0E00               	movlw	0
 11097  00426E  1A3B               	xorwf	i2___ftsub@f2^0,f,c
 11098  004270  0E00               	movlw	0
 11099  004272  1A3C               	xorwf	(i2___ftsub@f2+1)^0,f,c
 11100  004274  0E80               	movlw	128
 11101  004276  1A3D               	xorwf	(i2___ftsub@f2+2)^0,f,c
 11102  004278                     i2l6322:
 11103  004278  C038  F02C         	movff	i2___ftsub@f1,i2___ftadd@f1
 11104  00427C  C039  F02D         	movff	i2___ftsub@f1+1,i2___ftadd@f1+1
 11105  004280  C03A  F02E         	movff	i2___ftsub@f1+2,i2___ftadd@f1+2
 11106  004284  C03B  F02F         	movff	i2___ftsub@f2,i2___ftadd@f2
 11107  004288  C03C  F030         	movff	i2___ftsub@f2+1,i2___ftadd@f2+1
 11108  00428C  C03D  F031         	movff	i2___ftsub@f2+2,i2___ftadd@f2+2
 11109  004290  ECB7  F016         	call	i2___ftadd	;wreg free
 11110  004294  C02C  F038         	movff	?i2___ftadd,?i2___ftsub
 11111  004298  C02D  F039         	movff	?i2___ftadd+1,?i2___ftsub+1
 11112  00429C  C02E  F03A         	movff	?i2___ftadd+2,?i2___ftsub+2
 11113  0042A0  0012               	return		;funcret
 11114  0042A2                     __end_ofi2___ftsub:
 11115                           	callstack 0
 11116                           
 11117 ;; *************** function i2___ftadd *****************
 11118 ;; Defined at:
 11119 ;;		line 86 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\ftadd.c"
 11120 ;; Parameters:    Size  Location     Type
 11121 ;;  f1              3   43[COMRAM] float 
 11122 ;;  f2              3   46[COMRAM] float 
 11123 ;; Auto vars:     Size  Location     Type
 11124 ;;  exp1            1   54[COMRAM] unsigned char 
 11125 ;;  exp2            1   53[COMRAM] unsigned char 
 11126 ;;  sign            1   52[COMRAM] unsigned char 
 11127 ;; Return value:  Size  Location     Type
 11128 ;;                  3   43[COMRAM] float 
 11129 ;; Registers used:
 11130 ;;		wreg, status,2, status,0, cstack
 11131 ;; Tracked objects:
 11132 ;;		On entry : 0/0
 11133 ;;		On exit  : 0/0
 11134 ;;		Unchanged: 0/0
 11135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11136 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11137 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11138 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11139 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11140 ;;Total ram usage:       12 bytes
 11141 ;; Hardware stack levels used: 1
 11142 ;; Hardware stack levels required when called: 1
 11143 ;; This function calls:
 11144 ;;		i2___ftpack
 11145 ;; This function is called by:
 11146 ;;		_TMR1_ISR
 11147 ;;		i2_sprintf
 11148 ;;		i2___ftsub
 11149 ;; This function uses a non-reentrant model
 11150 ;;
 11151                           
 11152                           	psect	text48
 11153  002D6E                     __ptext48:
 11154                           	callstack 0
 11155  002D6E                     i2___ftadd:
 11156                           	callstack 22
 11157                           
 11158                           ;incstack = 0
 11159  002D6E  C02E  F032         	movff	i2___ftadd@f1+2,??i2___ftadd
 11160  002D72  6A33               	clrf	(??i2___ftadd+1)^0,c
 11161  002D74  6A34               	clrf	(??i2___ftadd+2)^0,c
 11162  002D76  342D               	rlcf	(i2___ftadd@f1+1)^0,w,c
 11163  002D78  3632               	rlcf	??i2___ftadd^0,f,c
 11164  002D7A  E301               	bnc	u676_41
 11165  002D7C  8033               	bsf	(??i2___ftadd+1)^0,0,c
 11166  002D7E                     u676_41:
 11167  002D7E  5032               	movf	??i2___ftadd^0,w,c
 11168  002D80  6E37               	movwf	i2___ftadd@exp1^0,c
 11169  002D82  C031  F032         	movff	i2___ftadd@f2+2,??i2___ftadd
 11170  002D86  6A33               	clrf	(??i2___ftadd+1)^0,c
 11171  002D88  6A34               	clrf	(??i2___ftadd+2)^0,c
 11172  002D8A  3430               	rlcf	(i2___ftadd@f2+1)^0,w,c
 11173  002D8C  3632               	rlcf	??i2___ftadd^0,f,c
 11174  002D8E  E301               	bnc	u677_41
 11175  002D90  8033               	bsf	(??i2___ftadd+1)^0,0,c
 11176  002D92                     u677_41:
 11177  002D92  5032               	movf	??i2___ftadd^0,w,c
 11178  002D94  6E36               	movwf	i2___ftadd@exp2^0,c
 11179  002D96  5037               	movf	i2___ftadd@exp1^0,w,c
 11180  002D98  B4D8               	btfsc	status,2,c
 11181  002D9A  D00A               	goto	i2u680_40
 11182  002D9C  5036               	movf	i2___ftadd@exp2^0,w,c
 11183  002D9E  5C37               	subwf	i2___ftadd@exp1^0,w,c
 11184  002DA0  B0D8               	btfsc	status,0,c
 11185  002DA2  D00D               	goto	i2l5554
 11186  002DA4  5037               	movf	i2___ftadd@exp1^0,w,c
 11187  002DA6  5C36               	subwf	i2___ftadd@exp2^0,w,c
 11188  002DA8  6E32               	movwf	??i2___ftadd^0,c
 11189  002DAA  0E18               	movlw	24
 11190  002DAC  6432               	cpfsgt	??i2___ftadd^0,c
 11191  002DAE  D007               	goto	i2l5554
 11192  002DB0                     i2u680_40:
 11193  002DB0  C02F  F02C         	movff	i2___ftadd@f2,?i2___ftadd
 11194  002DB4  C030  F02D         	movff	i2___ftadd@f2+1,?i2___ftadd+1
 11195  002DB8  C031  F02E         	movff	i2___ftadd@f2+2,?i2___ftadd+2
 11196  002DBC  0012               	return	
 11197  002DBE                     i2l5554:
 11198  002DBE  5036               	movf	i2___ftadd@exp2^0,w,c
 11199  002DC0  B4D8               	btfsc	status,2,c
 11200  002DC2  D00A               	goto	i2u683_40
 11201  002DC4  5037               	movf	i2___ftadd@exp1^0,w,c
 11202  002DC6  5C36               	subwf	i2___ftadd@exp2^0,w,c
 11203  002DC8  B0D8               	btfsc	status,0,c
 11204  002DCA  D00D               	goto	i2l5560
 11205  002DCC  5036               	movf	i2___ftadd@exp2^0,w,c
 11206  002DCE  5C37               	subwf	i2___ftadd@exp1^0,w,c
 11207  002DD0  6E32               	movwf	??i2___ftadd^0,c
 11208  002DD2  0E18               	movlw	24
 11209  002DD4  6432               	cpfsgt	??i2___ftadd^0,c
 11210  002DD6  D007               	goto	i2l5560
 11211  002DD8                     i2u683_40:
 11212  002DD8  C02C  F02C         	movff	i2___ftadd@f1,?i2___ftadd
 11213  002DDC  C02D  F02D         	movff	i2___ftadd@f1+1,?i2___ftadd+1
 11214  002DE0  C02E  F02E         	movff	i2___ftadd@f1+2,?i2___ftadd+2
 11215  002DE4  0012               	return	
 11216  002DE6                     i2l5560:
 11217  002DE6  0E06               	movlw	6
 11218  002DE8  6E35               	movwf	i2___ftadd@sign^0,c
 11219  002DEA  BE2E               	btfsc	(i2___ftadd@f1+2)^0,7,c
 11220  002DEC  8E35               	bsf	i2___ftadd@sign^0,7,c
 11221  002DEE  BE31               	btfsc	(i2___ftadd@f2+2)^0,7,c
 11222  002DF0  8C35               	bsf	i2___ftadd@sign^0,6,c
 11223  002DF2  8E2D               	bsf	(i2___ftadd@f1+1)^0,7,c
 11224  002DF4  0EFF               	movlw	255
 11225  002DF6  162C               	andwf	i2___ftadd@f1^0,f,c
 11226  002DF8  0EFF               	movlw	255
 11227  002DFA  162D               	andwf	(i2___ftadd@f1+1)^0,f,c
 11228  002DFC  0E00               	movlw	0
 11229  002DFE  162E               	andwf	(i2___ftadd@f1+2)^0,f,c
 11230  002E00  8E30               	bsf	(i2___ftadd@f2+1)^0,7,c
 11231  002E02  0EFF               	movlw	255
 11232  002E04  162F               	andwf	i2___ftadd@f2^0,f,c
 11233  002E06  0EFF               	movlw	255
 11234  002E08  1630               	andwf	(i2___ftadd@f2+1)^0,f,c
 11235  002E0A  0E00               	movlw	0
 11236  002E0C  1631               	andwf	(i2___ftadd@f2+2)^0,f,c
 11237  002E0E  5036               	movf	i2___ftadd@exp2^0,w,c
 11238  002E10  5C37               	subwf	i2___ftadd@exp1^0,w,c
 11239  002E12  B0D8               	btfsc	status,0,c
 11240  002E14  D01B               	goto	i2l5586
 11241  002E16                     i2u686_40:
 11242  002E16  90D8               	bcf	status,0,c
 11243  002E18  362F               	rlcf	i2___ftadd@f2^0,f,c
 11244  002E1A  3630               	rlcf	(i2___ftadd@f2+1)^0,f,c
 11245  002E1C  3631               	rlcf	(i2___ftadd@f2+2)^0,f,c
 11246  002E1E  0636               	decf	i2___ftadd@exp2^0,f,c
 11247  002E20  5037               	movf	i2___ftadd@exp1^0,w,c
 11248  002E22  1836               	xorwf	i2___ftadd@exp2^0,w,c
 11249  002E24  B4D8               	btfsc	status,2,c
 11250  002E26  D00D               	goto	i2l5584
 11251  002E28  0635               	decf	i2___ftadd@sign^0,f,c
 11252  002E2A  C035  F032         	movff	i2___ftadd@sign,??i2___ftadd
 11253  002E2E  0E07               	movlw	7
 11254  002E30  1632               	andwf	??i2___ftadd^0,f,c
 11255  002E32  B4D8               	btfsc	status,2,c
 11256  002E34  D006               	goto	i2l5584
 11257  002E36  D7EF               	goto	i2u686_40
 11258  002E38                     i2l5582:
 11259  002E38  90D8               	bcf	status,0,c
 11260  002E3A  322E               	rrcf	(i2___ftadd@f1+2)^0,f,c
 11261  002E3C  322D               	rrcf	(i2___ftadd@f1+1)^0,f,c
 11262  002E3E  322C               	rrcf	i2___ftadd@f1^0,f,c
 11263  002E40  2A37               	incf	i2___ftadd@exp1^0,f,c
 11264  002E42                     i2l5584:
 11265  002E42  5036               	movf	i2___ftadd@exp2^0,w,c
 11266  002E44  1837               	xorwf	i2___ftadd@exp1^0,w,c
 11267  002E46  B4D8               	btfsc	status,2,c
 11268  002E48  D01F               	goto	i2u693_40
 11269  002E4A  D7F6               	goto	i2l5582
 11270  002E4C                     i2l5586:
 11271  002E4C  5037               	movf	i2___ftadd@exp1^0,w,c
 11272  002E4E  5C36               	subwf	i2___ftadd@exp2^0,w,c
 11273  002E50  B0D8               	btfsc	status,0,c
 11274  002E52  D01A               	goto	i2u693_40
 11275  002E54                     i2u690_40:
 11276  002E54  90D8               	bcf	status,0,c
 11277  002E56  362C               	rlcf	i2___ftadd@f1^0,f,c
 11278  002E58  362D               	rlcf	(i2___ftadd@f1+1)^0,f,c
 11279  002E5A  362E               	rlcf	(i2___ftadd@f1+2)^0,f,c
 11280  002E5C  0637               	decf	i2___ftadd@exp1^0,f,c
 11281  002E5E  5037               	movf	i2___ftadd@exp1^0,w,c
 11282  002E60  1836               	xorwf	i2___ftadd@exp2^0,w,c
 11283  002E62  B4D8               	btfsc	status,2,c
 11284  002E64  D00D               	goto	i2l5596
 11285  002E66  0635               	decf	i2___ftadd@sign^0,f,c
 11286  002E68  C035  F032         	movff	i2___ftadd@sign,??i2___ftadd
 11287  002E6C  0E07               	movlw	7
 11288  002E6E  1632               	andwf	??i2___ftadd^0,f,c
 11289  002E70  B4D8               	btfsc	status,2,c
 11290  002E72  D006               	goto	i2l5596
 11291  002E74  D7EF               	goto	i2u690_40
 11292  002E76                     i2l5594:
 11293  002E76  90D8               	bcf	status,0,c
 11294  002E78  3231               	rrcf	(i2___ftadd@f2+2)^0,f,c
 11295  002E7A  3230               	rrcf	(i2___ftadd@f2+1)^0,f,c
 11296  002E7C  322F               	rrcf	i2___ftadd@f2^0,f,c
 11297  002E7E  2A36               	incf	i2___ftadd@exp2^0,f,c
 11298  002E80                     i2l5596:
 11299  002E80  5036               	movf	i2___ftadd@exp2^0,w,c
 11300  002E82  1837               	xorwf	i2___ftadd@exp1^0,w,c
 11301  002E84  A4D8               	btfss	status,2,c
 11302  002E86  D7F7               	goto	i2l5594
 11303  002E88                     i2u693_40:
 11304  002E88  AE35               	btfss	i2___ftadd@sign^0,7,c
 11305  002E8A  D00C               	goto	i2l615
 11306  002E8C  0EFF               	movlw	255
 11307  002E8E  1A2C               	xorwf	i2___ftadd@f1^0,f,c
 11308  002E90  0EFF               	movlw	255
 11309  002E92  1A2D               	xorwf	(i2___ftadd@f1+1)^0,f,c
 11310  002E94  0EFF               	movlw	255
 11311  002E96  1A2E               	xorwf	(i2___ftadd@f1+2)^0,f,c
 11312  002E98  0E01               	movlw	1
 11313  002E9A  262C               	addwf	i2___ftadd@f1^0,f,c
 11314  002E9C  0E00               	movlw	0
 11315  002E9E  222D               	addwfc	(i2___ftadd@f1+1)^0,f,c
 11316  002EA0  0E00               	movlw	0
 11317  002EA2  222E               	addwfc	(i2___ftadd@f1+2)^0,f,c
 11318  002EA4                     i2l615:
 11319  002EA4  AC35               	btfss	i2___ftadd@sign^0,6,c
 11320  002EA6  D00C               	goto	i2l5602
 11321  002EA8  0EFF               	movlw	255
 11322  002EAA  1A2F               	xorwf	i2___ftadd@f2^0,f,c
 11323  002EAC  0EFF               	movlw	255
 11324  002EAE  1A30               	xorwf	(i2___ftadd@f2+1)^0,f,c
 11325  002EB0  0EFF               	movlw	255
 11326  002EB2  1A31               	xorwf	(i2___ftadd@f2+2)^0,f,c
 11327  002EB4  0E01               	movlw	1
 11328  002EB6  262F               	addwf	i2___ftadd@f2^0,f,c
 11329  002EB8  0E00               	movlw	0
 11330  002EBA  2230               	addwfc	(i2___ftadd@f2+1)^0,f,c
 11331  002EBC  0E00               	movlw	0
 11332  002EBE  2231               	addwfc	(i2___ftadd@f2+2)^0,f,c
 11333  002EC0                     i2l5602:
 11334  002EC0  0E00               	movlw	0
 11335  002EC2  6E35               	movwf	i2___ftadd@sign^0,c
 11336  002EC4  502C               	movf	i2___ftadd@f1^0,w,c
 11337  002EC6  262F               	addwf	i2___ftadd@f2^0,f,c
 11338  002EC8  502D               	movf	(i2___ftadd@f1+1)^0,w,c
 11339  002ECA  2230               	addwfc	(i2___ftadd@f2+1)^0,f,c
 11340  002ECC  502E               	movf	(i2___ftadd@f1+2)^0,w,c
 11341  002ECE  2231               	addwfc	(i2___ftadd@f2+2)^0,f,c
 11342  002ED0  AE31               	btfss	(i2___ftadd@f2+2)^0,7,c
 11343  002ED2  D00E               	goto	i2l5612
 11344  002ED4  0EFF               	movlw	255
 11345  002ED6  1A2F               	xorwf	i2___ftadd@f2^0,f,c
 11346  002ED8  0EFF               	movlw	255
 11347  002EDA  1A30               	xorwf	(i2___ftadd@f2+1)^0,f,c
 11348  002EDC  0EFF               	movlw	255
 11349  002EDE  1A31               	xorwf	(i2___ftadd@f2+2)^0,f,c
 11350  002EE0  0E01               	movlw	1
 11351  002EE2  262F               	addwf	i2___ftadd@f2^0,f,c
 11352  002EE4  0E00               	movlw	0
 11353  002EE6  2230               	addwfc	(i2___ftadd@f2+1)^0,f,c
 11354  002EE8  0E00               	movlw	0
 11355  002EEA  2231               	addwfc	(i2___ftadd@f2+2)^0,f,c
 11356  002EEC  0E01               	movlw	1
 11357  002EEE  6E35               	movwf	i2___ftadd@sign^0,c
 11358  002EF0                     i2l5612:
 11359  002EF0  C02F  F001         	movff	i2___ftadd@f2,i2___ftpack@arg
 11360  002EF4  C030  F002         	movff	i2___ftadd@f2+1,i2___ftpack@arg+1
 11361  002EF8  C031  F003         	movff	i2___ftadd@f2+2,i2___ftpack@arg+2
 11362  002EFC  C037  F004         	movff	i2___ftadd@exp1,i2___ftpack@exp
 11363  002F00  C035  F005         	movff	i2___ftadd@sign,i2___ftpack@sign
 11364  002F04  EC7C  F01C         	call	i2___ftpack	;wreg free
 11365  002F08  C001  F02C         	movff	?i2___ftpack,?i2___ftadd
 11366  002F0C  C002  F02D         	movff	?i2___ftpack+1,?i2___ftadd+1
 11367  002F10  C003  F02E         	movff	?i2___ftpack+2,?i2___ftadd+2
 11368  002F14  0012               	return		;funcret
 11369  002F16                     __end_ofi2___ftadd:
 11370                           	callstack 0
 11371                           
 11372 ;; *************** function i2___ftneg *****************
 11373 ;; Defined at:
 11374 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\ftneg.c"
 11375 ;; Parameters:    Size  Location     Type
 11376 ;;  f1              3    0[COMRAM] float 
 11377 ;; Auto vars:     Size  Location     Type
 11378 ;;		None
 11379 ;; Return value:  Size  Location     Type
 11380 ;;                  3    0[COMRAM] float 
 11381 ;; Registers used:
 11382 ;;		wreg, status,2, status,0
 11383 ;; Tracked objects:
 11384 ;;		On entry : 3F/0
 11385 ;;		On exit  : 3F/0
 11386 ;;		Unchanged: 3F/0
 11387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11388 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11389 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11390 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11391 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11392 ;;Total ram usage:        3 bytes
 11393 ;; Hardware stack levels used: 1
 11394 ;; This function calls:
 11395 ;;		Nothing
 11396 ;; This function is called by:
 11397 ;;		i2_sprintf
 11398 ;; This function uses a non-reentrant model
 11399 ;;
 11400                           
 11401                           	psect	text49
 11402  00446C                     __ptext49:
 11403                           	callstack 0
 11404  00446C                     i2___ftneg:
 11405                           	callstack 24
 11406                           
 11407                           ; BSR set to: 0
 11408                           
 11409                           ;incstack = 0
 11410  00446C  5001               	movf	i2___ftneg@f1^0,w,c
 11411  00446E  1002               	iorwf	(i2___ftneg@f1+1)^0,w,c
 11412  004470  1003               	iorwf	(i2___ftneg@f1+2)^0,w,c
 11413  004472  B4D8               	btfsc	status,2,c
 11414  004474  D006               	goto	i2l665
 11415                           
 11416                           ; BSR set to: 0
 11417  004476  0E00               	movlw	0
 11418  004478  1A01               	xorwf	i2___ftneg@f1^0,f,c
 11419  00447A  0E00               	movlw	0
 11420  00447C  1A02               	xorwf	(i2___ftneg@f1+1)^0,f,c
 11421  00447E  0E80               	movlw	128
 11422  004480  1A03               	xorwf	(i2___ftneg@f1+2)^0,f,c
 11423  004482                     i2l665:
 11424                           
 11425                           ; BSR set to: 0
 11426  004482  C001  F001         	movff	i2___ftneg@f1,?i2___ftneg
 11427  004486  C002  F002         	movff	i2___ftneg@f1+1,?i2___ftneg+1
 11428  00448A  C003  F003         	movff	i2___ftneg@f1+2,?i2___ftneg+2
 11429                           
 11430                           ; BSR set to: 0
 11431  00448E  0012               	return		;funcret
 11432  004490                     __end_ofi2___ftneg:
 11433                           	callstack 0
 11434                           
 11435 ;; *************** function i2___ftge *****************
 11436 ;; Defined at:
 11437 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\ftge.c"
 11438 ;; Parameters:    Size  Location     Type
 11439 ;;  ff1             3    0[COMRAM] float 
 11440 ;;  ff2             3    3[COMRAM] float 
 11441 ;; Auto vars:     Size  Location     Type
 11442 ;;		None
 11443 ;; Return value:  Size  Location     Type
 11444 ;;		None               void
 11445 ;; Registers used:
 11446 ;;		wreg, status,2, status,0
 11447 ;; Tracked objects:
 11448 ;;		On entry : 0/0
 11449 ;;		On exit  : 0/0
 11450 ;;		Unchanged: 0/0
 11451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11452 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11453 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11454 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11455 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11456 ;;Total ram usage:        9 bytes
 11457 ;; Hardware stack levels used: 1
 11458 ;; This function calls:
 11459 ;;		Nothing
 11460 ;; This function is called by:
 11461 ;;		i2_sprintf
 11462 ;; This function uses a non-reentrant model
 11463 ;;
 11464                           
 11465                           	psect	text50
 11466  003DEE                     __ptext50:
 11467                           	callstack 0
 11468  003DEE                     i2___ftge:
 11469                           	callstack 24
 11470                           
 11471                           ; BSR set to: 0
 11472                           ;incstack = 0
 11473  003DEE  AE03               	btfss	(i2___ftge@ff1+2)^0,7,c
 11474  003DF0  D00F               	goto	i2l6300
 11475  003DF2  0E00               	movlw	0
 11476  003DF4  6E07               	movwf	??i2___ftge^0,c
 11477  003DF6  0E00               	movlw	0
 11478  003DF8  6E08               	movwf	(??i2___ftge+1)^0,c
 11479  003DFA  0E80               	movlw	128
 11480  003DFC  6E09               	movwf	(??i2___ftge+2)^0,c
 11481  003DFE  5001               	movf	i2___ftge@ff1^0,w,c
 11482  003E00  5C07               	subwf	??i2___ftge^0,w,c
 11483  003E02  6E01               	movwf	i2___ftge@ff1^0,c
 11484  003E04  5002               	movf	(i2___ftge@ff1+1)^0,w,c
 11485  003E06  5808               	subwfb	(??i2___ftge+1)^0,w,c
 11486  003E08  6E02               	movwf	(i2___ftge@ff1+1)^0,c
 11487  003E0A  5003               	movf	(i2___ftge@ff1+2)^0,w,c
 11488  003E0C  5809               	subwfb	(??i2___ftge+2)^0,w,c
 11489  003E0E  6E03               	movwf	(i2___ftge@ff1+2)^0,c
 11490  003E10                     i2l6300:
 11491  003E10  AE06               	btfss	(i2___ftge@ff2+2)^0,7,c
 11492  003E12  D00F               	goto	i2l6304
 11493  003E14  0E00               	movlw	0
 11494  003E16  6E07               	movwf	??i2___ftge^0,c
 11495  003E18  0E00               	movlw	0
 11496  003E1A  6E08               	movwf	(??i2___ftge+1)^0,c
 11497  003E1C  0E80               	movlw	128
 11498  003E1E  6E09               	movwf	(??i2___ftge+2)^0,c
 11499  003E20  5004               	movf	i2___ftge@ff2^0,w,c
 11500  003E22  5C07               	subwf	??i2___ftge^0,w,c
 11501  003E24  6E04               	movwf	i2___ftge@ff2^0,c
 11502  003E26  5005               	movf	(i2___ftge@ff2+1)^0,w,c
 11503  003E28  5808               	subwfb	(??i2___ftge+1)^0,w,c
 11504  003E2A  6E05               	movwf	(i2___ftge@ff2+1)^0,c
 11505  003E2C  5006               	movf	(i2___ftge@ff2+2)^0,w,c
 11506  003E2E  5809               	subwfb	(??i2___ftge+2)^0,w,c
 11507  003E30  6E06               	movwf	(i2___ftge@ff2+2)^0,c
 11508  003E32                     i2l6304:
 11509  003E32  0E00               	movlw	0
 11510  003E34  1A01               	xorwf	i2___ftge@ff1^0,f,c
 11511  003E36  0E00               	movlw	0
 11512  003E38  1A02               	xorwf	(i2___ftge@ff1+1)^0,f,c
 11513  003E3A  0E80               	movlw	128
 11514  003E3C  1A03               	xorwf	(i2___ftge@ff1+2)^0,f,c
 11515  003E3E  0E00               	movlw	0
 11516  003E40  1A04               	xorwf	i2___ftge@ff2^0,f,c
 11517  003E42  0E00               	movlw	0
 11518  003E44  1A05               	xorwf	(i2___ftge@ff2+1)^0,f,c
 11519  003E46  0E80               	movlw	128
 11520  003E48  1A06               	xorwf	(i2___ftge@ff2+2)^0,f,c
 11521  003E4A  5004               	movf	i2___ftge@ff2^0,w,c
 11522  003E4C  5C01               	subwf	i2___ftge@ff1^0,w,c
 11523  003E4E  5005               	movf	(i2___ftge@ff2+1)^0,w,c
 11524  003E50  5802               	subwfb	(i2___ftge@ff1+1)^0,w,c
 11525  003E52  5006               	movf	(i2___ftge@ff2+2)^0,w,c
 11526  003E54  5803               	subwfb	(i2___ftge@ff1+2)^0,w,c
 11527  003E56  B0D8               	btfsc	status,0,c
 11528  003E58  D002               	goto	i2l6310
 11529  003E5A  90D8               	bcf	status,0,c
 11530  003E5C  0012               	return	
 11531  003E5E                     i2l6310:
 11532  003E5E  80D8               	bsf	status,0,c
 11533  003E60  0012               	return		;funcret
 11534  003E62                     __end_ofi2___ftge:
 11535                           	callstack 0
 11536                           
 11537 ;; *************** function i2_SettingsLCD *****************
 11538 ;; Defined at:
 11539 ;;		line 247 in file "PruevaServosPic.c"
 11540 ;; Parameters:    Size  Location     Type
 11541 ;;  word            1    wreg     unsigned char 
 11542 ;; Auto vars:     Size  Location     Type
 11543 ;;  word            1    2[COMRAM] unsigned char 
 11544 ;; Return value:  Size  Location     Type
 11545 ;;                  1    wreg      void 
 11546 ;; Registers used:
 11547 ;;		wreg, status,2, status,0, cstack
 11548 ;; Tracked objects:
 11549 ;;		On entry : 0/0
 11550 ;;		On exit  : 0/0
 11551 ;;		Unchanged: 0/0
 11552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11553 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11554 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11555 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11556 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11557 ;;Total ram usage:        1 bytes
 11558 ;; Hardware stack levels used: 1
 11559 ;; Hardware stack levels required when called: 1
 11560 ;; This function calls:
 11561 ;;		i2_LCD
 11562 ;; This function is called by:
 11563 ;;		_TMR1_ISR
 11564 ;; This function uses a non-reentrant model
 11565 ;;
 11566                           
 11567                           	psect	text51
 11568  00452A                     __ptext51:
 11569                           	callstack 0
 11570  00452A                     i2_SettingsLCD:
 11571                           	callstack 24
 11572                           
 11573                           ;incstack = 0
 11574                           ;i2SettingsLCD@word stored from wreg
 11575  00452A  6E03               	movwf	i2SettingsLCD@word^0,c
 11576                           
 11577                           ;PruevaServosPic.c: 248: LATEbits.LATE1 = 0;
 11578  00452C  928D               	bcf	141,1,c	;volatile
 11579                           
 11580                           ;PruevaServosPic.c: 249: LCD(word >> 4);
 11581  00452E  3803               	swapf	i2SettingsLCD@word^0,w,c
 11582  004530  0B0F               	andlw	15
 11583  004532  EC29  F01D         	call	i2_LCD
 11584                           
 11585                           ;PruevaServosPic.c: 250: LCD(word & 0x0F);
 11586  004536  5003               	movf	i2SettingsLCD@word^0,w,c
 11587  004538  0B0F               	andlw	15
 11588  00453A  EC29  F01D         	call	i2_LCD
 11589  00453E  0012               	return		;funcret
 11590  004540                     __end_ofi2_SettingsLCD:
 11591                           	callstack 0
 11592                           
 11593 ;; *************** function i2_DataLCD *****************
 11594 ;; Defined at:
 11595 ;;		line 274 in file "PruevaServosPic.c"
 11596 ;; Parameters:    Size  Location     Type
 11597 ;;		None
 11598 ;; Auto vars:     Size  Location     Type
 11599 ;;		None
 11600 ;; Return value:  Size  Location     Type
 11601 ;;                  1    wreg      void 
 11602 ;; Registers used:
 11603 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11604 ;; Tracked objects:
 11605 ;;		On entry : 0/0
 11606 ;;		On exit  : 3F/0
 11607 ;;		Unchanged: 0/0
 11608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11609 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11610 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11611 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11612 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11613 ;;Total ram usage:        2 bytes
 11614 ;; Hardware stack levels used: 1
 11615 ;; Hardware stack levels required when called: 2
 11616 ;; This function calls:
 11617 ;;		i2_WriteLCD
 11618 ;;		i2_strlen
 11619 ;; This function is called by:
 11620 ;;		_TMR1_ISR
 11621 ;; This function uses a non-reentrant model
 11622 ;;
 11623                           
 11624                           	psect	text52
 11625  0041D4                     __ptext52:
 11626                           	callstack 0
 11627  0041D4                     i2_DataLCD:
 11628                           	callstack 23
 11629                           
 11630                           ;PruevaServosPic.c: 275: for (i = 0; i <= strlen(text)-1; i++) {
 11631                           
 11632                           ;incstack = 0
 11633  0041D4  0E00               	movlw	0
 11634  0041D6  0100               	movlb	0	; () banked
 11635  0041D8  6FDA               	movwf	(_i+1)& (0+255),b
 11636  0041DA  0E00               	movlw	0
 11637  0041DC  6FD9               	movwf	_i& (0+255),b
 11638  0041DE  D00C               	goto	i2l6744
 11639  0041E0                     i2l6740:
 11640                           
 11641                           ; BSR set to: 0
 11642                           ;PruevaServosPic.c: 276: WriteLCD(text[i]);
 11643  0041E0  0E1F               	movlw	low _text
 11644  0041E2  25D9               	addwf	_i& (0+255),w,b
 11645  0041E4  6ED9               	movwf	fsr2l,c
 11646  0041E6  0E01               	movlw	high _text
 11647  0041E8  21DA               	addwfc	(_i+1)& (0+255),w,b
 11648  0041EA  6EDA               	movwf	fsr2h,c
 11649  0041EC  50DF               	movf	indf2,w,c
 11650  0041EE  ECA0  F022         	call	i2_WriteLCD
 11651  0041F2  0100               	movlb	0	; () banked
 11652  0041F4  4BD9               	infsnz	_i& (0+255),f,b
 11653  0041F6  2BDA               	incf	(_i+1)& (0+255),f,b
 11654  0041F8                     i2l6744:
 11655                           
 11656                           ; BSR set to: 0
 11657  0041F8  0EFF               	movlw	255
 11658  0041FA  6E05               	movwf	??i2_DataLCD^0,c
 11659  0041FC  0EFF               	movlw	255
 11660  0041FE  6E06               	movwf	(??i2_DataLCD+1)^0,c
 11661  004200  0E1F               	movlw	low _text
 11662  004202  6E01               	movwf	i2strlen@s^0,c
 11663  004204  0E01               	movlw	high _text
 11664  004206  6E02               	movwf	(i2strlen@s+1)^0,c
 11665  004208  ECE8  F021         	call	i2_strlen	;wreg free
 11666  00420C  5005               	movf	??i2_DataLCD^0,w,c
 11667  00420E  2601               	addwf	?i2_strlen^0,f,c
 11668  004210  5006               	movf	(??i2_DataLCD+1)^0,w,c
 11669  004212  2202               	addwfc	(?i2_strlen+1)^0,f,c
 11670  004214  51D9               	movf	_i& (0+255),w,b
 11671  004216  5C01               	subwf	?i2_strlen^0,w,c
 11672  004218  51DA               	movf	(_i+1)& (0+255),w,b
 11673  00421A  5802               	subwfb	(?i2_strlen+1)^0,w,c
 11674  00421C  A0D8               	btfss	status,0,c
 11675  00421E  0012               	return	
 11676  004220  D7DF               	goto	i2l6740
 11677  004222                     __end_ofi2_DataLCD:
 11678                           	callstack 0
 11679                           
 11680 ;; *************** function i2_strlen *****************
 11681 ;; Defined at:
 11682 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\strlen.c"
 11683 ;; Parameters:    Size  Location     Type
 11684 ;;  s               2    0[COMRAM] PTR const unsigned char 
 11685 ;;		 -> text(20), 
 11686 ;; Auto vars:     Size  Location     Type
 11687 ;;  cp              2    2[COMRAM] PTR const unsigned char 
 11688 ;;		 -> text(20), 
 11689 ;; Return value:  Size  Location     Type
 11690 ;;                  2    0[COMRAM] unsigned int 
 11691 ;; Registers used:
 11692 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11693 ;; Tracked objects:
 11694 ;;		On entry : 3F/0
 11695 ;;		On exit  : 3F/0
 11696 ;;		Unchanged: 3F/0
 11697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11698 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11699 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11700 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11701 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11702 ;;Total ram usage:        4 bytes
 11703 ;; Hardware stack levels used: 1
 11704 ;; This function calls:
 11705 ;;		Nothing
 11706 ;; This function is called by:
 11707 ;;		i2_DataLCD
 11708 ;; This function uses a non-reentrant model
 11709 ;;
 11710                           
 11711                           	psect	text53
 11712  0043D0                     __ptext53:
 11713                           	callstack 0
 11714  0043D0                     i2_strlen:
 11715                           	callstack 24
 11716                           
 11717                           ; BSR set to: 0
 11718                           
 11719                           ; BSR set to: 0
 11720                           ;incstack = 0
 11721  0043D0  C001  F003         	movff	i2strlen@s,i2strlen@cp
 11722  0043D4  C002  F004         	movff	i2strlen@s+1,i2strlen@cp+1
 11723  0043D8  D002               	goto	i2l6414
 11724  0043DA                     i2l6412:
 11725                           
 11726                           ; BSR set to: 0
 11727  0043DA  4A03               	infsnz	i2strlen@cp^0,f,c
 11728  0043DC  2A04               	incf	(i2strlen@cp+1)^0,f,c
 11729  0043DE                     i2l6414:
 11730                           
 11731                           ; BSR set to: 0
 11732  0043DE  C003  FFD9         	movff	i2strlen@cp,fsr2l
 11733  0043E2  C004  FFDA         	movff	i2strlen@cp+1,fsr2h
 11734  0043E6  50DF               	movf	indf2,w,c
 11735  0043E8  A4D8               	btfss	status,2,c
 11736  0043EA  D7F7               	goto	i2l6412
 11737                           
 11738                           ; BSR set to: 0
 11739  0043EC  5001               	movf	i2strlen@s^0,w,c
 11740  0043EE  5C03               	subwf	i2strlen@cp^0,w,c
 11741  0043F0  6E01               	movwf	?i2_strlen^0,c
 11742  0043F2  5002               	movf	(i2strlen@s+1)^0,w,c
 11743  0043F4  5804               	subwfb	(i2strlen@cp+1)^0,w,c
 11744  0043F6  6E02               	movwf	(?i2_strlen+1)^0,c
 11745                           
 11746                           ; BSR set to: 0
 11747  0043F8  0012               	return		;funcret
 11748  0043FA                     __end_ofi2_strlen:
 11749                           	callstack 0
 11750                           
 11751 ;; *************** function i2_WriteLCD *****************
 11752 ;; Defined at:
 11753 ;;		line 253 in file "PruevaServosPic.c"
 11754 ;; Parameters:    Size  Location     Type
 11755 ;;  word            1    wreg     unsigned char 
 11756 ;; Auto vars:     Size  Location     Type
 11757 ;;  word            1    2[COMRAM] unsigned char 
 11758 ;; Return value:  Size  Location     Type
 11759 ;;                  1    wreg      void 
 11760 ;; Registers used:
 11761 ;;		wreg, status,2, status,0, cstack
 11762 ;; Tracked objects:
 11763 ;;		On entry : 3F/0
 11764 ;;		On exit  : 0/0
 11765 ;;		Unchanged: 0/0
 11766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11767 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11768 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11769 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11770 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11771 ;;Total ram usage:        1 bytes
 11772 ;; Hardware stack levels used: 1
 11773 ;; Hardware stack levels required when called: 1
 11774 ;; This function calls:
 11775 ;;		i2_LCD
 11776 ;; This function is called by:
 11777 ;;		i2_DataLCD
 11778 ;; This function uses a non-reentrant model
 11779 ;;
 11780                           
 11781                           	psect	text54
 11782  004540                     __ptext54:
 11783                           	callstack 0
 11784  004540                     i2_WriteLCD:
 11785                           	callstack 23
 11786                           
 11787                           ; BSR set to: 0
 11788                           ;incstack = 0
 11789                           ;i2WriteLCD@word stored from wreg
 11790  004540  6E03               	movwf	i2WriteLCD@word^0,c
 11791                           
 11792                           ;PruevaServosPic.c: 254: LATEbits.LATE1 = 1;
 11793  004542  828D               	bsf	141,1,c	;volatile
 11794                           
 11795                           ;PruevaServosPic.c: 255: LCD(word >> 4);
 11796  004544  3803               	swapf	i2WriteLCD@word^0,w,c
 11797  004546  0B0F               	andlw	15
 11798  004548  EC29  F01D         	call	i2_LCD
 11799                           
 11800                           ;PruevaServosPic.c: 256: LCD(word & 0x0F);
 11801  00454C  5003               	movf	i2WriteLCD@word^0,w,c
 11802  00454E  0B0F               	andlw	15
 11803  004550  EC29  F01D         	call	i2_LCD
 11804  004554  0012               	return		;funcret
 11805  004556                     __end_ofi2_WriteLCD:
 11806                           	callstack 0
 11807                           
 11808 ;; *************** function i2_LCD *****************
 11809 ;; Defined at:
 11810 ;;		line 259 in file "PruevaServosPic.c"
 11811 ;; Parameters:    Size  Location     Type
 11812 ;;  data            1    wreg     unsigned char 
 11813 ;; Auto vars:     Size  Location     Type
 11814 ;;  data            1    1[COMRAM] unsigned char 
 11815 ;; Return value:  Size  Location     Type
 11816 ;;                  1    wreg      void 
 11817 ;; Registers used:
 11818 ;;		wreg, status,2, status,0, cstack
 11819 ;; Tracked objects:
 11820 ;;		On entry : 0/0
 11821 ;;		On exit  : 0/0
 11822 ;;		Unchanged: 0/0
 11823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11824 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11825 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11826 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11827 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11828 ;;Total ram usage:        2 bytes
 11829 ;; Hardware stack levels used: 1
 11830 ;; This function calls:
 11831 ;;		Nothing
 11832 ;; This function is called by:
 11833 ;;		i2_SettingsLCD
 11834 ;;		i2_WriteLCD
 11835 ;; This function uses a non-reentrant model
 11836 ;;
 11837                           
 11838                           	psect	text55
 11839  003A52                     __ptext55:
 11840                           	callstack 0
 11841  003A52                     i2_LCD:
 11842                           	callstack 24
 11843                           
 11844                           ;incstack = 0
 11845                           ;i2LCD@data stored from wreg
 11846  003A52  6E02               	movwf	i2LCD@data^0,c
 11847                           
 11848                           ;PruevaServosPic.c: 260: LATEbits.LATE0 = 1;
 11849  003A54  808D               	bsf	141,0,c	;volatile
 11850                           
 11851                           ;PruevaServosPic.c: 261: _delay((unsigned long)((10)*(16000000/4000000.0)));
 11852  003A56  0E0D               	movlw	13
 11853  003A58                     i2u914_47:
 11854  003A58  2EE8               	decfsz	wreg,f,c
 11855  003A5A  D7FE               	bra	i2u914_47
 11856  003A5C  F000               	nop	
 11857                           
 11858                           ;PruevaServosPic.c: 262: LATDbits.LATD0 = (data & 0x01);
 11859  003A5E  C002  F001         	movff	i2LCD@data,??i2_LCD
 11860  003A62  0E01               	movlw	1
 11861  003A64  1601               	andwf	??i2_LCD^0,f,c
 11862  003A66  508C               	movf	140,w,c	;volatile
 11863  003A68  1801               	xorwf	??i2_LCD^0,w,c
 11864  003A6A  0BFE               	andlw	-2
 11865  003A6C  1801               	xorwf	??i2_LCD^0,w,c
 11866  003A6E  6E8C               	movwf	140,c	;volatile
 11867                           
 11868                           ;PruevaServosPic.c: 263: _delay((unsigned long)((10)*(16000000/4000000.0)));
 11869  003A70  0E0D               	movlw	13
 11870  003A72                     i2u915_47:
 11871  003A72  2EE8               	decfsz	wreg,f,c
 11872  003A74  D7FE               	bra	i2u915_47
 11873  003A76  F000               	nop	
 11874                           
 11875                           ;PruevaServosPic.c: 264: LATDbits.LATD1 = (data & 0x02) >> 1;
 11876  003A78  C002  F001         	movff	i2LCD@data,??i2_LCD
 11877  003A7C  90D8               	bcf	status,0,c
 11878  003A7E  3201               	rrcf	??i2_LCD^0,f,c
 11879  003A80  0E01               	movlw	1
 11880  003A82  1601               	andwf	??i2_LCD^0,f,c
 11881  003A84  4601               	rlncf	??i2_LCD^0,f,c
 11882  003A86  508C               	movf	140,w,c	;volatile
 11883  003A88  1801               	xorwf	??i2_LCD^0,w,c
 11884  003A8A  0BFD               	andlw	-3
 11885  003A8C  1801               	xorwf	??i2_LCD^0,w,c
 11886  003A8E  6E8C               	movwf	140,c	;volatile
 11887                           
 11888                           ;PruevaServosPic.c: 265: _delay((unsigned long)((10)*(16000000/4000000.0)));
 11889  003A90  0E0D               	movlw	13
 11890  003A92                     i2u916_47:
 11891  003A92  2EE8               	decfsz	wreg,f,c
 11892  003A94  D7FE               	bra	i2u916_47
 11893  003A96  F000               	nop	
 11894                           
 11895                           ;PruevaServosPic.c: 266: LATDbits.LATD2 = (data & 0x04) >> 2;
 11896  003A98  C002  F001         	movff	i2LCD@data,??i2_LCD
 11897  003A9C  90D8               	bcf	status,0,c
 11898  003A9E  3201               	rrcf	??i2_LCD^0,f,c
 11899  003AA0  90D8               	bcf	status,0,c
 11900  003AA2  3201               	rrcf	??i2_LCD^0,f,c
 11901  003AA4  0E01               	movlw	1
 11902  003AA6  1601               	andwf	??i2_LCD^0,f,c
 11903  003AA8  4601               	rlncf	??i2_LCD^0,f,c
 11904  003AAA  4601               	rlncf	??i2_LCD^0,f,c
 11905  003AAC  508C               	movf	140,w,c	;volatile
 11906  003AAE  1801               	xorwf	??i2_LCD^0,w,c
 11907  003AB0  0BFB               	andlw	-5
 11908  003AB2  1801               	xorwf	??i2_LCD^0,w,c
 11909  003AB4  6E8C               	movwf	140,c	;volatile
 11910                           
 11911                           ;PruevaServosPic.c: 267: _delay((unsigned long)((10)*(16000000/4000000.0)));
 11912  003AB6  0E0D               	movlw	13
 11913  003AB8                     i2u917_47:
 11914  003AB8  2EE8               	decfsz	wreg,f,c
 11915  003ABA  D7FE               	bra	i2u917_47
 11916  003ABC  F000               	nop	
 11917                           
 11918                           ;PruevaServosPic.c: 268: LATDbits.LATD3 = (data & 0x08) >> 3;
 11919  003ABE  C002  F001         	movff	i2LCD@data,??i2_LCD
 11920  003AC2  90D8               	bcf	status,0,c
 11921  003AC4  3201               	rrcf	??i2_LCD^0,f,c
 11922  003AC6  90D8               	bcf	status,0,c
 11923  003AC8  3201               	rrcf	??i2_LCD^0,f,c
 11924  003ACA  90D8               	bcf	status,0,c
 11925  003ACC  3201               	rrcf	??i2_LCD^0,f,c
 11926  003ACE  0E01               	movlw	1
 11927  003AD0  1601               	andwf	??i2_LCD^0,f,c
 11928  003AD2  4601               	rlncf	??i2_LCD^0,f,c
 11929  003AD4  4601               	rlncf	??i2_LCD^0,f,c
 11930  003AD6  4601               	rlncf	??i2_LCD^0,f,c
 11931  003AD8  508C               	movf	140,w,c	;volatile
 11932  003ADA  1801               	xorwf	??i2_LCD^0,w,c
 11933  003ADC  0BF7               	andlw	-9
 11934  003ADE  1801               	xorwf	??i2_LCD^0,w,c
 11935  003AE0  6E8C               	movwf	140,c	;volatile
 11936                           
 11937                           ;PruevaServosPic.c: 269: _delay((unsigned long)((10)*(16000000/4000000.0)));
 11938  003AE2  0E0D               	movlw	13
 11939  003AE4                     i2u918_47:
 11940  003AE4  2EE8               	decfsz	wreg,f,c
 11941  003AE6  D7FE               	bra	i2u918_47
 11942  003AE8  F000               	nop	
 11943                           
 11944                           ;PruevaServosPic.c: 270: LATEbits.LATE0 = 0;
 11945  003AEA  908D               	bcf	141,0,c	;volatile
 11946                           
 11947                           ;PruevaServosPic.c: 271: _delay((unsigned long)((10)*(16000000/4000000.0)));
 11948  003AEC  0E0D               	movlw	13
 11949  003AEE                     i2u919_47:
 11950  003AEE  2EE8               	decfsz	wreg,f,c
 11951  003AF0  D7FE               	bra	i2u919_47
 11952  003AF2  F000               	nop	
 11953  003AF4  0012               	return		;funcret
 11954  003AF6                     __end_ofi2_LCD:
 11955                           	callstack 0
 11956                           
 11957 ;; *************** function ___lwtoft *****************
 11958 ;; Defined at:
 11959 ;;		line 28 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\lwtoft.c"
 11960 ;; Parameters:    Size  Location     Type
 11961 ;;  c               2    8[COMRAM] unsigned int 
 11962 ;; Auto vars:     Size  Location     Type
 11963 ;;		None
 11964 ;; Return value:  Size  Location     Type
 11965 ;;                  3    8[COMRAM] float 
 11966 ;; Registers used:
 11967 ;;		wreg, status,2, status,0, cstack
 11968 ;; Tracked objects:
 11969 ;;		On entry : 0/0
 11970 ;;		On exit  : 0/0
 11971 ;;		Unchanged: 0/0
 11972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11973 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11974 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11975 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11976 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11977 ;;Total ram usage:        3 bytes
 11978 ;; Hardware stack levels used: 1
 11979 ;; Hardware stack levels required when called: 1
 11980 ;; This function calls:
 11981 ;;		i2___ftpack
 11982 ;; This function is called by:
 11983 ;;		_TMR1_ISR
 11984 ;; This function uses a non-reentrant model
 11985 ;;
 11986                           
 11987                           	psect	text56
 11988  004490                     __ptext56:
 11989                           	callstack 0
 11990  004490                     ___lwtoft:
 11991                           	callstack 24
 11992                           
 11993                           ;incstack = 0
 11994  004490  C009  F001         	movff	___lwtoft@c,i2___ftpack@arg
 11995  004494  C00A  F002         	movff	___lwtoft@c+1,i2___ftpack@arg+1
 11996  004498  6A03               	clrf	(i2___ftpack@arg+2)^0,c
 11997  00449A  0E8E               	movlw	142
 11998  00449C  6E04               	movwf	i2___ftpack@exp^0,c
 11999  00449E  0E00               	movlw	0
 12000  0044A0  6E05               	movwf	i2___ftpack@sign^0,c
 12001  0044A2  EC7C  F01C         	call	i2___ftpack	;wreg free
 12002  0044A6  C001  F009         	movff	?i2___ftpack,?___lwtoft
 12003  0044AA  C002  F00A         	movff	?i2___ftpack+1,?___lwtoft+1
 12004  0044AE  C003  F00B         	movff	?i2___ftpack+2,?___lwtoft+2
 12005  0044B2  0012               	return		;funcret
 12006  0044B4                     __end_of___lwtoft:
 12007                           	callstack 0
 12008                           
 12009 ;; *************** function ___awtoft *****************
 12010 ;; Defined at:
 12011 ;;		line 32 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\awtoft.c"
 12012 ;; Parameters:    Size  Location     Type
 12013 ;;  c               2    8[COMRAM] int 
 12014 ;; Auto vars:     Size  Location     Type
 12015 ;;  sign            1   11[COMRAM] unsigned char 
 12016 ;; Return value:  Size  Location     Type
 12017 ;;                  3    8[COMRAM] float 
 12018 ;; Registers used:
 12019 ;;		wreg, status,2, status,0, cstack
 12020 ;; Tracked objects:
 12021 ;;		On entry : 3F/0
 12022 ;;		On exit  : 0/0
 12023 ;;		Unchanged: 0/0
 12024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12025 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12026 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12027 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12028 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12029 ;;Total ram usage:        4 bytes
 12030 ;; Hardware stack levels used: 1
 12031 ;; Hardware stack levels required when called: 1
 12032 ;; This function calls:
 12033 ;;		i2___ftpack
 12034 ;; This function is called by:
 12035 ;;		_TMR1_ISR
 12036 ;; This function uses a non-reentrant model
 12037 ;;
 12038                           
 12039                           	psect	text57
 12040  004318                     __ptext57:
 12041                           	callstack 0
 12042  004318                     ___awtoft:
 12043                           	callstack 24
 12044                           
 12045                           ; BSR set to: 0
 12046                           
 12047                           ;incstack = 0
 12048  004318  0E00               	movlw	0
 12049  00431A  6E0C               	movwf	___awtoft@sign^0,c
 12050                           
 12051                           ; BSR set to: 0
 12052  00431C  AE0A               	btfss	(___awtoft@c+1)^0,7,c
 12053  00431E  D006               	goto	i2l6726
 12054                           
 12055                           ; BSR set to: 0
 12056  004320  6C09               	negf	___awtoft@c^0,c
 12057  004322  1E0A               	comf	(___awtoft@c+1)^0,f,c
 12058  004324  B0D8               	btfsc	status,0,c
 12059  004326  2A0A               	incf	(___awtoft@c+1)^0,f,c
 12060                           
 12061                           ; BSR set to: 0
 12062  004328  0E01               	movlw	1
 12063  00432A  6E0C               	movwf	___awtoft@sign^0,c
 12064  00432C                     i2l6726:
 12065                           
 12066                           ; BSR set to: 0
 12067  00432C  C009  F001         	movff	___awtoft@c,i2___ftpack@arg
 12068  004330  C00A  F002         	movff	___awtoft@c+1,i2___ftpack@arg+1
 12069  004334  6A03               	clrf	(i2___ftpack@arg+2)^0,c
 12070  004336  0E8E               	movlw	142
 12071  004338  6E04               	movwf	i2___ftpack@exp^0,c
 12072  00433A  C00C  F005         	movff	___awtoft@sign,i2___ftpack@sign
 12073  00433E  EC7C  F01C         	call	i2___ftpack	;wreg free
 12074  004342  C001  F009         	movff	?i2___ftpack,?___awtoft
 12075  004346  C002  F00A         	movff	?i2___ftpack+1,?___awtoft+1
 12076  00434A  C003  F00B         	movff	?i2___ftpack+2,?___awtoft+2
 12077  00434E  0012               	return		;funcret
 12078  004350                     __end_of___awtoft:
 12079                           	callstack 0
 12080                           
 12081 ;; *************** function i2___ftpack *****************
 12082 ;; Defined at:
 12083 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\float.c"
 12084 ;; Parameters:    Size  Location     Type
 12085 ;;  arg             3    0[COMRAM] unsigned um
 12086 ;;  exp             1    3[COMRAM] unsigned char 
 12087 ;;  sign            1    4[COMRAM] unsigned char 
 12088 ;; Auto vars:     Size  Location     Type
 12089 ;;		None
 12090 ;; Return value:  Size  Location     Type
 12091 ;;                  3    0[COMRAM] float 
 12092 ;; Registers used:
 12093 ;;		wreg, status,2, status,0
 12094 ;; Tracked objects:
 12095 ;;		On entry : 0/0
 12096 ;;		On exit  : 0/0
 12097 ;;		Unchanged: 0/0
 12098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12099 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12100 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12101 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12102 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12103 ;;Total ram usage:        8 bytes
 12104 ;; Hardware stack levels used: 1
 12105 ;; This function calls:
 12106 ;;		Nothing
 12107 ;; This function is called by:
 12108 ;;		___awtoft
 12109 ;;		___lwtoft
 12110 ;;		i2___ftadd
 12111 ;;		i2___ftmul
 12112 ;;		i2___lltoft
 12113 ;; This function uses a non-reentrant model
 12114 ;;
 12115                           
 12116                           	psect	text58
 12117  0038F8                     __ptext58:
 12118                           	callstack 0
 12119  0038F8                     i2___ftpack:
 12120                           	callstack 22
 12121                           
 12122                           ;incstack = 0
 12123  0038F8  5004               	movf	i2___ftpack@exp^0,w,c
 12124  0038FA  B4D8               	btfsc	status,2,c
 12125  0038FC  D005               	goto	i2u614_40
 12126  0038FE  5001               	movf	i2___ftpack@arg^0,w,c
 12127  003900  1002               	iorwf	(i2___ftpack@arg+1)^0,w,c
 12128  003902  1003               	iorwf	(i2___ftpack@arg+2)^0,w,c
 12129  003904  A4D8               	btfss	status,2,c
 12130  003906  D00C               	goto	i2l5152
 12131  003908                     i2u614_40:
 12132  003908  0E00               	movlw	0
 12133  00390A  6E01               	movwf	?i2___ftpack^0,c
 12134  00390C  0E00               	movlw	0
 12135  00390E  6E02               	movwf	(?i2___ftpack+1)^0,c
 12136  003910  0E00               	movlw	0
 12137  003912  6E03               	movwf	(?i2___ftpack+2)^0,c
 12138  003914  0012               	return	
 12139  003916                     i2l5150:
 12140  003916  2A04               	incf	i2___ftpack@exp^0,f,c
 12141  003918  90D8               	bcf	status,0,c
 12142  00391A  3203               	rrcf	(i2___ftpack@arg+2)^0,f,c
 12143  00391C  3202               	rrcf	(i2___ftpack@arg+1)^0,f,c
 12144  00391E  3201               	rrcf	i2___ftpack@arg^0,f,c
 12145  003920                     i2l5152:
 12146  003920  0E00               	movlw	0
 12147  003922  1401               	andwf	i2___ftpack@arg^0,w,c
 12148  003924  6E06               	movwf	??i2___ftpack^0,c
 12149  003926  0E00               	movlw	0
 12150  003928  1402               	andwf	(i2___ftpack@arg+1)^0,w,c
 12151  00392A  6E07               	movwf	(??i2___ftpack+1)^0,c
 12152  00392C  0EFE               	movlw	254
 12153  00392E  1403               	andwf	(i2___ftpack@arg+2)^0,w,c
 12154  003930  6E08               	movwf	(??i2___ftpack+2)^0,c
 12155  003932  5006               	movf	??i2___ftpack^0,w,c
 12156  003934  1007               	iorwf	(??i2___ftpack+1)^0,w,c
 12157  003936  1008               	iorwf	(??i2___ftpack+2)^0,w,c
 12158  003938  B4D8               	btfsc	status,2,c
 12159  00393A  D00C               	goto	i2l5158
 12160  00393C  D7EC               	goto	i2l5150
 12161  00393E                     i2l5154:
 12162  00393E  2A04               	incf	i2___ftpack@exp^0,f,c
 12163  003940  0E01               	movlw	1
 12164  003942  2601               	addwf	i2___ftpack@arg^0,f,c
 12165  003944  0E00               	movlw	0
 12166  003946  2202               	addwfc	(i2___ftpack@arg+1)^0,f,c
 12167  003948  0E00               	movlw	0
 12168  00394A  2203               	addwfc	(i2___ftpack@arg+2)^0,f,c
 12169  00394C  90D8               	bcf	status,0,c
 12170  00394E  3203               	rrcf	(i2___ftpack@arg+2)^0,f,c
 12171  003950  3202               	rrcf	(i2___ftpack@arg+1)^0,f,c
 12172  003952  3201               	rrcf	i2___ftpack@arg^0,f,c
 12173  003954                     i2l5158:
 12174  003954  0E00               	movlw	0
 12175  003956  1401               	andwf	i2___ftpack@arg^0,w,c
 12176  003958  6E06               	movwf	??i2___ftpack^0,c
 12177  00395A  0E00               	movlw	0
 12178  00395C  1402               	andwf	(i2___ftpack@arg+1)^0,w,c
 12179  00395E  6E07               	movwf	(??i2___ftpack+1)^0,c
 12180  003960  0EFF               	movlw	255
 12181  003962  1403               	andwf	(i2___ftpack@arg+2)^0,w,c
 12182  003964  6E08               	movwf	(??i2___ftpack+2)^0,c
 12183  003966  5006               	movf	??i2___ftpack^0,w,c
 12184  003968  1007               	iorwf	(??i2___ftpack+1)^0,w,c
 12185  00396A  1008               	iorwf	(??i2___ftpack+2)^0,w,c
 12186  00396C  B4D8               	btfsc	status,2,c
 12187  00396E  D006               	goto	i2l5162
 12188  003970  D7E6               	goto	i2l5154
 12189  003972                     i2l5160:
 12190  003972  0604               	decf	i2___ftpack@exp^0,f,c
 12191  003974  90D8               	bcf	status,0,c
 12192  003976  3601               	rlcf	i2___ftpack@arg^0,f,c
 12193  003978  3602               	rlcf	(i2___ftpack@arg+1)^0,f,c
 12194  00397A  3603               	rlcf	(i2___ftpack@arg+2)^0,f,c
 12195  00397C                     i2l5162:
 12196  00397C  BE02               	btfsc	(i2___ftpack@arg+1)^0,7,c
 12197  00397E  D003               	goto	i2u618_40
 12198  003980  0E02               	movlw	2
 12199  003982  6004               	cpfslt	i2___ftpack@exp^0,c
 12200  003984  D7F6               	goto	i2l5160
 12201  003986                     i2u618_40:
 12202  003986  A004               	btfss	i2___ftpack@exp^0,0,c
 12203  003988  9E02               	bcf	(i2___ftpack@arg+1)^0,7,c
 12204  00398A  90D8               	bcf	status,0,c
 12205  00398C  3204               	rrcf	i2___ftpack@exp^0,f,c
 12206  00398E  5004               	movf	i2___ftpack@exp^0,w,c
 12207  003990  1203               	iorwf	(i2___ftpack@arg+2)^0,f,c
 12208  003992  5005               	movf	i2___ftpack@sign^0,w,c
 12209  003994  A4D8               	btfss	status,2,c
 12210  003996  8E03               	bsf	(i2___ftpack@arg+2)^0,7,c
 12211  003998  C001  F001         	movff	i2___ftpack@arg,?i2___ftpack
 12212  00399C  C002  F002         	movff	i2___ftpack@arg+1,?i2___ftpack+1
 12213  0039A0  C003  F003         	movff	i2___ftpack@arg+2,?i2___ftpack+2
 12214  0039A4  0012               	return		;funcret
 12215  0039A6                     __end_ofi2___ftpack:
 12216                           	callstack 0
 12217                           
 12218                           	psect	rparam
 12219  0000                     
 12220                           	psect	temp
 12221  00005C                     btemp:
 12222                           	callstack 0
 12223  00005C                     	ds	1
 12224  0000                     int$flags	set	btemp
 12225  0000                     wtemp8	set	btemp+1
 12226  0000                     ttemp5	set	btemp+1
 12227  0000                     ttemp6	set	btemp+4
 12228  0000                     ttemp7	set	btemp+8
 12229                           
 12230                           	psect	idloc
 12231                           
 12232                           ;Config register IDLOC0 @ 0x200000
 12233                           ;	unspecified, using default values
 12234  200000                     	org	2097152
 12235  200000  FF                 	db	255
 12236                           
 12237                           ;Config register IDLOC1 @ 0x200001
 12238                           ;	unspecified, using default values
 12239  200001                     	org	2097153
 12240  200001  FF                 	db	255
 12241                           
 12242                           ;Config register IDLOC2 @ 0x200002
 12243                           ;	unspecified, using default values
 12244  200002                     	org	2097154
 12245  200002  FF                 	db	255
 12246                           
 12247                           ;Config register IDLOC3 @ 0x200003
 12248                           ;	unspecified, using default values
 12249  200003                     	org	2097155
 12250  200003  FF                 	db	255
 12251                           
 12252                           ;Config register IDLOC4 @ 0x200004
 12253                           ;	unspecified, using default values
 12254  200004                     	org	2097156
 12255  200004  FF                 	db	255
 12256                           
 12257                           ;Config register IDLOC5 @ 0x200005
 12258                           ;	unspecified, using default values
 12259  200005                     	org	2097157
 12260  200005  FF                 	db	255
 12261                           
 12262                           ;Config register IDLOC6 @ 0x200006
 12263                           ;	unspecified, using default values
 12264  200006                     	org	2097158
 12265  200006  FF                 	db	255
 12266                           
 12267                           ;Config register IDLOC7 @ 0x200007
 12268                           ;	unspecified, using default values
 12269  200007                     	org	2097159
 12270  200007  FF                 	db	255
 12271                           
 12272                           	psect	config
 12273                           
 12274                           ; Padding undefined space
 12275  300000                     	org	3145728
 12276  300000  FF                 	db	255
 12277                           
 12278                           ;Config register CONFIG1H @ 0x300001
 12279                           ;	Oscillator Selection bits
 12280                           ;	FOSC = INTIO67, Internal oscillator block
 12281                           ;	4X PLL Enable
 12282                           ;	PLLCFG = 0x0, unprogrammed default
 12283                           ;	Primary clock enable bit
 12284                           ;	PRICLKEN = 0x1, unprogrammed default
 12285                           ;	Fail-Safe Clock Monitor Enable bit
 12286                           ;	FCMEN = 0x0, unprogrammed default
 12287                           ;	Internal/External Oscillator Switchover bit
 12288                           ;	IESO = 0x0, unprogrammed default
 12289  300001                     	org	3145729
 12290  300001  28                 	db	40
 12291                           
 12292                           ;Config register CONFIG2L @ 0x300002
 12293                           ;	unspecified, using default values
 12294                           ;	Power-up Timer Enable bit
 12295                           ;	PWRTEN = 0x1, unprogrammed default
 12296                           ;	Brown-out Reset Enable bits
 12297                           ;	BOREN = 0x3, unprogrammed default
 12298                           ;	Brown Out Reset Voltage bits
 12299                           ;	BORV = 0x3, unprogrammed default
 12300  300002                     	org	3145730
 12301  300002  1F                 	db	31
 12302                           
 12303                           ;Config register CONFIG2H @ 0x300003
 12304                           ;	Watchdog Timer Enable bits
 12305                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
 12306                           ;	Watchdog Timer Postscale Select bits
 12307                           ;	WDTPS = 0xF, unprogrammed default
 12308  300003                     	org	3145731
 12309  300003  3C                 	db	60
 12310                           
 12311                           ; Padding undefined space
 12312  300004                     	org	3145732
 12313  300004  FF                 	db	255
 12314                           
 12315                           ;Config register CONFIG3H @ 0x300005
 12316                           ;	unspecified, using default values
 12317                           ;	CCP2 MUX bit
 12318                           ;	CCP2MX = 0x1, unprogrammed default
 12319                           ;	PORTB A/D Enable bit
 12320                           ;	PBADEN = 0x1, unprogrammed default
 12321                           ;	P3A/CCP3 Mux bit
 12322                           ;	CCP3MX = 0x1, unprogrammed default
 12323                           ;	HFINTOSC Fast Start-up
 12324                           ;	HFOFST = 0x1, unprogrammed default
 12325                           ;	Timer3 Clock input mux bit
 12326                           ;	T3CMX = 0x1, unprogrammed default
 12327                           ;	ECCP2 B output mux bit
 12328                           ;	P2BMX = 0x1, unprogrammed default
 12329                           ;	MCLR Pin Enable bit
 12330                           ;	MCLRE = 0x1, unprogrammed default
 12331  300005                     	org	3145733
 12332  300005  BF                 	db	191
 12333                           
 12334                           ;Config register CONFIG4L @ 0x300006
 12335                           ;	Stack Full/Underflow Reset Enable bit
 12336                           ;	STVREN = 0x1, unprogrammed default
 12337                           ;	Single-Supply ICSP Enable bit
 12338                           ;	LVP = OFF, Single-Supply ICSP disabled
 12339                           ;	Extended Instruction Set Enable bit
 12340                           ;	XINST = 0x0, unprogrammed default
 12341                           ;	Background Debug
 12342                           ;	DEBUG = 0x1, unprogrammed default
 12343  300006                     	org	3145734
 12344  300006  81                 	db	129
 12345                           
 12346                           ; Padding undefined space
 12347  300007                     	org	3145735
 12348  300007  FF                 	db	255
 12349                           
 12350                           ;Config register CONFIG5L @ 0x300008
 12351                           ;	unspecified, using default values
 12352                           ;	Code Protection Block 0
 12353                           ;	CP0 = 0x1, unprogrammed default
 12354                           ;	Code Protection Block 1
 12355                           ;	CP1 = 0x1, unprogrammed default
 12356                           ;	Code Protection Block 2
 12357                           ;	CP2 = 0x1, unprogrammed default
 12358                           ;	Code Protection Block 3
 12359                           ;	CP3 = 0x1, unprogrammed default
 12360  300008                     	org	3145736
 12361  300008  0F                 	db	15
 12362                           
 12363                           ;Config register CONFIG5H @ 0x300009
 12364                           ;	unspecified, using default values
 12365                           ;	Boot Block Code Protection bit
 12366                           ;	CPB = 0x1, unprogrammed default
 12367                           ;	Data EEPROM Code Protection bit
 12368                           ;	CPD = 0x1, unprogrammed default
 12369  300009                     	org	3145737
 12370  300009  C0                 	db	192
 12371                           
 12372                           ;Config register CONFIG6L @ 0x30000A
 12373                           ;	unspecified, using default values
 12374                           ;	Write Protection Block 0
 12375                           ;	WRT0 = 0x1, unprogrammed default
 12376                           ;	Write Protection Block 1
 12377                           ;	WRT1 = 0x1, unprogrammed default
 12378                           ;	Write Protection Block 2
 12379                           ;	WRT2 = 0x1, unprogrammed default
 12380                           ;	Write Protection Block 3
 12381                           ;	WRT3 = 0x1, unprogrammed default
 12382  30000A                     	org	3145738
 12383  30000A  0F                 	db	15
 12384                           
 12385                           ;Config register CONFIG6H @ 0x30000B
 12386                           ;	unspecified, using default values
 12387                           ;	Configuration Register Write Protection bit
 12388                           ;	WRTC = 0x1, unprogrammed default
 12389                           ;	Boot Block Write Protection bit
 12390                           ;	WRTB = 0x1, unprogrammed default
 12391                           ;	Data EEPROM Write Protection bit
 12392                           ;	WRTD = 0x1, unprogrammed default
 12393  30000B                     	org	3145739
 12394  30000B  E0                 	db	224
 12395                           
 12396                           ;Config register CONFIG7L @ 0x30000C
 12397                           ;	unspecified, using default values
 12398                           ;	Table Read Protection Block 0
 12399                           ;	EBTR0 = 0x1, unprogrammed default
 12400                           ;	Table Read Protection Block 1
 12401                           ;	EBTR1 = 0x1, unprogrammed default
 12402                           ;	Table Read Protection Block 2
 12403                           ;	EBTR2 = 0x1, unprogrammed default
 12404                           ;	Table Read Protection Block 3
 12405                           ;	EBTR3 = 0x1, unprogrammed default
 12406  30000C                     	org	3145740
 12407  30000C  0F                 	db	15
 12408                           
 12409                           ;Config register CONFIG7H @ 0x30000D
 12410                           ;	unspecified, using default values
 12411                           ;	Boot Block Table Read Protection bit
 12412                           ;	EBTRB = 0x1, unprogrammed default
 12413  30000D                     	org	3145741
 12414  30000D  40                 	db	64
 12415                           tosu	equ	0xFFF
 12416                           tosh	equ	0xFFE
 12417                           tosl	equ	0xFFD
 12418                           stkptr	equ	0xFFC
 12419                           pclatu	equ	0xFFB
 12420                           pclath	equ	0xFFA
 12421                           pcl	equ	0xFF9
 12422                           tblptru	equ	0xFF8
 12423                           tblptrh	equ	0xFF7
 12424                           tblptrl	equ	0xFF6
 12425                           tablat	equ	0xFF5
 12426                           prodh	equ	0xFF4
 12427                           prodl	equ	0xFF3
 12428                           indf0	equ	0xFEF
 12429                           postinc0	equ	0xFEE
 12430                           postdec0	equ	0xFED
 12431                           preinc0	equ	0xFEC
 12432                           plusw0	equ	0xFEB
 12433                           fsr0h	equ	0xFEA
 12434                           fsr0l	equ	0xFE9
 12435                           wreg	equ	0xFE8
 12436                           indf1	equ	0xFE7
 12437                           postinc1	equ	0xFE6
 12438                           postdec1	equ	0xFE5
 12439                           preinc1	equ	0xFE4
 12440                           plusw1	equ	0xFE3
 12441                           fsr1h	equ	0xFE2
 12442                           fsr1l	equ	0xFE1
 12443                           bsr	equ	0xFE0
 12444                           indf2	equ	0xFDF
 12445                           postinc2	equ	0xFDE
 12446                           postdec2	equ	0xFDD
 12447                           preinc2	equ	0xFDC
 12448                           plusw2	equ	0xFDB
 12449                           fsr2h	equ	0xFDA
 12450                           fsr2l	equ	0xFD9
 12451                           status	equ	0xFD8

Data Sizes:
    Strings     46
    Constant    118
    Data        3
    BSS         41
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     90      91
    BANK0           160    110     133
    BANK1           256     31      51
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 20
		 -> text(BANK1[20]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 20
		 -> text(BANK1[20]), 

    sprintf@f	PTR const unsigned char  size(1) Largest target is 13
		 -> STR_5(CODE[11]), STR_4(CODE[11]), STR_3(CODE[11]), STR_2(CODE[11]), 
		 -> STR_1(CODE[13]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 20
		 -> text(BANK1[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _TMR1_ISR in COMRAM

    _TMR1_ISR->i2_sprintf
    i2_sprintf->i2___fttol
    i2_scale->i2___ftmul
    i2___awdiv->i2___awmod
    i2_fround->i2___ftmul
    i2___lbdiv->i2___lbmod
    i2___ftmul->i2___awdiv
    i2___lltoft->i2___ftpack
    i2___llmod->i2___lldiv
    i2___fttol->i2___ftadd
    i2___ftsub->i2___ftadd
    i2___ftadd->i2_fround
    i2_SettingsLCD->i2_LCD
    i2_DataLCD->i2_strlen
    i2_WriteLCD->i2_LCD
    ___lwtoft->i2___ftpack
    ___awtoft->i2___ftpack

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->___fttol
    _scale->___ftmul
    ___awdiv->___awmod
    _fround->___ftmul
    ___lbdiv->___lbmod
    ___ftmul->___awdiv
    ___lltoft->___ftpack
    ___llmod->___lldiv
    _settings->_SettingsLCD
    _SettingsLCD->_LCD
    _deg2time->___fttol
    ___fttol->___ftsub
    ___ftsub->___ftadd
    ___ftadd->_fround
    ___ftdiv->___ftpack
    _DataLCD->_strlen
    _WriteLCD->_LCD

Critical Paths under _TMR1_ISR in BANK0

    _TMR1_ISR->i2_sprintf

Critical Paths under _main in BANK1

    _main->_sprintf

Critical Paths under _TMR1_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _TMR1_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _TMR1_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _TMR1_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _TMR1_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _TMR1_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _TMR1_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _TMR1_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _TMR1_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _TMR1_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _TMR1_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _TMR1_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _TMR1_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _TMR1_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _TMR1_ISR in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0   71652
                                            108 BANK0      2     2      0
                                             28 BANK1      3     3      0
                            _DataLCD
                        _SettingsLCD
                            ___ftmul
                           _deg2time
                           _settings
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             42    36      6   52569
                                            102 BANK0      6     0      6
                                              0 BANK1     28    28      0
                            ___awdiv
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                            ___lldiv
                            ___llmod
                           ___lltoft
                             ___wmul
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               11     8      3   10844
                                             55 BANK0     11     8      3
                            ___awdiv
                            ___awmod
                            ___ftmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4    1513
                                             26 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4    1705
                                             32 BANK0      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              3     3      0      99
                                             26 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              14    11      3    8360
                                             55 BANK0     14    11      3
                            ___ftmul
                            ___lbdiv
                            ___lbmod
 ---------------------------------------------------------------------------------
 (3) ___lbmod                                              4     3      1     502
                                             26 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (3) ___lbdiv                                              4     3      1     511
                                             30 BANK0      4     3      1
                            ___lbmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             15     9      6    6997
                                             40 BANK0     15     9      6
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           ___ftpack
                            ___lbdiv (ARG)
                            ___lbmod (ARG)
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         15     9      6     634
                                             26 BANK0     15     9      6
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          12     6      6     853
                                             26 BANK0     12     6      6
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1032
                                             26 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lltoft                                             9     5      4    3415
                                             34 BANK0      9     5      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___llmod                                              9     1      8     952
                                             39 BANK0      9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     781
                                             26 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (2) ___ftneg                                              3     0      3     155
                                             26 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (2) ___ftge                                               9     3      6     738
                                             26 BANK0      9     3      6
 ---------------------------------------------------------------------------------
 (1) _settings                                             0     0      0     186
                        _SettingsLCD
 ---------------------------------------------------------------------------------
 (2) _SettingsLCD                                          1     1      0     186
                                             28 BANK0      1     1      0
                                _LCD
 ---------------------------------------------------------------------------------
 (1) _deg2time                                             0     0      0   11204
                            ___ftdiv
                            ___ftsub
                            ___fttol
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             15    11      4     931
                                             87 BANK0     15    11      4
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                            ___ftsub (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftsub                                              6     0      6    6124
                                             81 BANK0      6     0      6
                            ___ftadd
                            ___ftdiv (ARG)
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             12     6      6    5168
                                             69 BANK0     12     6      6
                           ___ftpack
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             15     9      6    4149
                                             34 BANK0     15     9      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    3223
                                             26 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (1) _DataLCD                                              2     2      0     476
                                             30 BANK0      2     2      0
                           _WriteLCD
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               4     2      2     290
                                             26 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) _WriteLCD                                             1     1      0     186
                                             28 BANK0      1     1      0
                                _LCD
 ---------------------------------------------------------------------------------
 (3) _LCD                                                  2     2      0     124
                                             26 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _TMR1_ISR                                            12    12      0   34874
                                             82 COMRAM     8     8      0
                                             22 BANK0      4     4      0
                           ___awtoft
                           ___lwtoft
                          i2_DataLCD
                      i2_SettingsLCD
                          i2___ftadd
                          i2___ftmul
                          i2___fttol
                           i2___wmul
                          i2_sprintf
 ---------------------------------------------------------------------------------
 (6) i2_sprintf                                           42    36      6   25434
                                             70 COMRAM    12     6      6
                                              0 BANK0     22    22      0
                          i2___awdiv
                          i2___ftadd
                           i2___ftge
                          i2___ftmul
                          i2___ftneg
                          i2___ftsub
                          i2___fttol
                          i2___lldiv
                          i2___llmod
                         i2___lltoft
                           i2___wmul
                       i2__div_to_l_
                      i2__tdiv_to_l_
                           i2_fround
                          i2_isdigit
                            i2_scale
 ---------------------------------------------------------------------------------
 (7) i2_scale                                             11     8      3    5039
                                             29 COMRAM    11     8      3
                          i2___awdiv
                          i2___awmod
                          i2___ftmul
 ---------------------------------------------------------------------------------
 (8) i2___awmod                                            6     2      4     853
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (8) i2___awdiv                                            8     4      4     935
                                              6 COMRAM     8     4      4
                          i2___awmod (ARG)
 ---------------------------------------------------------------------------------
 (7) i2_isdigit                                            3     3      0      99
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (7) i2_fround                                            14    11      3    3655
                                             29 COMRAM    14    11      3
                          i2___ftmul
                          i2___lbdiv
                          i2___lbmod
 ---------------------------------------------------------------------------------
 (8) i2___lbmod                                            4     3      1     337
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (8) i2___lbdiv                                            4     3      1     346
                                              4 COMRAM     4     3      1
                          i2___lbmod (ARG)
 ---------------------------------------------------------------------------------
 (8) i2___ftmul                                           15     9      6    2622
                                             14 COMRAM    15     9      6
                           ___awtoft (ARG)
                          i2___awdiv (ARG)
                          i2___awmod (ARG)
                         i2___ftpack
                          i2___lbdiv (ARG)
                          i2___lbmod (ARG)
 ---------------------------------------------------------------------------------
 (7) i2__tdiv_to_l_                                       15     9      6     524
                                              0 COMRAM    15     9      6
 ---------------------------------------------------------------------------------
 (7) i2__div_to_l_                                        12     6      6     743
                                              0 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (7) i2___wmul                                             6     2      4     442
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (7) i2___lltoft                                           9     5      4    1005
                                              8 COMRAM     9     5      4
                         i2___ftpack
 ---------------------------------------------------------------------------------
 (7) i2___llmod                                            9     1      8     512
                                             13 COMRAM     9     1      8
                          i2___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (7) i2___lldiv                                           13     5      8     451
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (7) i2___fttol                                           15    11      4     546
                                             55 COMRAM    15    11      4
                           ___awtoft (ARG)
                           ___lwtoft (ARG)
                          i2___ftadd (ARG)
                          i2___ftmul (ARG)
                            i2_scale (ARG)
 ---------------------------------------------------------------------------------
 (7) i2___ftsub                                            6     0      6    2539
                                             55 COMRAM     6     0      6
                          i2___ftadd
                         i2___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (8) i2___ftadd                                           12     6      6    2373
                                             43 COMRAM    12     6      6
                           ___awtoft (ARG)
                           ___lwtoft (ARG)
                          i2___ftmul (ARG)
                         i2___ftpack
                           i2_fround (ARG)
 ---------------------------------------------------------------------------------
 (7) i2___ftneg                                            3     0      3     100
                                              0 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (7) i2___ftge                                             9     3      6     408
                                              0 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (6) i2_SettingsLCD                                        1     1      0     186
                                              2 COMRAM     1     1      0
                              i2_LCD
 ---------------------------------------------------------------------------------
 (6) i2_DataLCD                                            2     2      0     351
                                              4 COMRAM     2     2      0
                         i2_WriteLCD
                           i2_strlen
 ---------------------------------------------------------------------------------
 (7) i2_strlen                                             4     2      2     165
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) i2_WriteLCD                                           1     1      0     186
                                              2 COMRAM     1     1      0
                              i2_LCD
 ---------------------------------------------------------------------------------
 (7) i2_LCD                                                2     2      0     124
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (6) ___lwtoft                                             3     0      3    1079
                                              8 COMRAM     3     0      3
                         i2___ftpack
 ---------------------------------------------------------------------------------
 (6) ___awtoft                                             4     1      3    1181
                                              8 COMRAM     4     1      3
                         i2___ftpack
 ---------------------------------------------------------------------------------
 (9) i2___ftpack                                           8     3      5     868
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DataLCD
     _WriteLCD
       _LCD
     _strlen
   _SettingsLCD
     _LCD
   ___ftmul
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
     ___ftpack (ARG)
     ___lbdiv (ARG)
       ___lbmod (ARG)
     ___lbmod (ARG)
   _deg2time
     ___ftdiv
       ___ftpack
     ___ftsub
       ___ftadd
         ___ftpack
         _fround (ARG)
           ___ftmul
           ___lbdiv
           ___lbmod
       ___ftdiv (ARG)
       ___lltoft (ARG)
         ___ftpack
     ___fttol
       ___ftdiv (ARG)
       ___ftmul (ARG)
       ___ftsub (ARG)
       _scale (ARG)
         ___awdiv
         ___awmod
         ___ftmul
   _settings
     _SettingsLCD
   _sprintf
     ___awdiv
     ___ftadd
     ___ftge
     ___ftmul
     ___ftneg
     ___ftsub
     ___fttol
     ___lldiv
     ___llmod
       ___lldiv (ARG)
     ___lltoft
     ___wmul
     __div_to_l_
     __tdiv_to_l_
     _fround
     _isdigit
     _scale

 _TMR1_ISR (ROOT)
   ___awtoft
     i2___ftpack
   ___lwtoft
     i2___ftpack
   i2_DataLCD
     i2_WriteLCD
       i2_LCD
     i2_strlen
   i2_SettingsLCD
     i2_LCD
   i2___ftadd
     ___awtoft (ARG)
     ___lwtoft (ARG)
     i2___ftmul (ARG)
       ___awtoft (ARG)
       i2___awdiv (ARG)
         i2___awmod (ARG)
       i2___awmod (ARG)
       i2___ftpack (ARG)
       i2___lbdiv (ARG)
         i2___lbmod (ARG)
       i2___lbmod (ARG)
     i2___ftpack (ARG)
     i2_fround (ARG)
       i2___ftmul
       i2___lbdiv
       i2___lbmod
   i2___ftmul
   i2___fttol
     ___awtoft (ARG)
     ___lwtoft (ARG)
     i2___ftadd (ARG)
     i2___ftmul (ARG)
     i2_scale (ARG)
       i2___awdiv
       i2___awmod
       i2___ftmul
   i2___wmul
   i2_sprintf
     i2___awdiv
     i2___ftadd
     i2___ftge
     i2___ftmul
     i2___ftneg
     i2___ftsub
       i2___ftadd
       i2___lltoft (ARG)
         i2___ftpack
     i2___fttol
     i2___lldiv
     i2___llmod
       i2___lldiv (ARG)
     i2___lltoft
     i2___wmul
     i2__div_to_l_
     i2__tdiv_to_l_
     i2_fround
     i2_isdigit
     i2_scale

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      47        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     1F      33       7       19.9%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     6E      85       5       83.1%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5A      5B       1       96.8%
BITBIGSFRlhll       4F      0       0      44        0.0%
BITBANK15           38      0       0      34        0.0%
BANK15              38      0       0      35        0.0%
BITBIGSFRhhl        1E      0       0      37        0.0%
BITBIGSFRlhhh       1D      0       0      39        0.0%
BITBIGSFRhhh         D      0       0      36        0.0%
BITBIGSFRlhhllh      C      0       0      41        0.0%
BITBIGSFRlhlh        6      0       0      43        0.0%
BITBIGSFRlhhlll      6      0       0      42        0.0%
BITBIGSFRhl          3      0       0      38        0.0%
BITBIGSFRll          2      0       0      45        0.0%
BITBIGSFRlhhlh       1      0       0      40        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     113      46        0.0%
DATA                 0      0     113       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Sun Feb 19 10:40:50 2023

                      _a 00DD                        _b 00DB                        _i 00D9  
                     l97 3D08             ___awdiv@sign 0085                       _th 00E1  
                     _tl 00DF      ___wmul@multiplicand 007C               i2___ftpack 38F8  
             i2_WriteLCD 4540             ___ftadd@exp1 00B0             ___ftadd@exp2 00AF  
             i2___lltoft 40DA             ___ftadd@sign 00AE                      l243 15B0  
                    l710 4006                      l615 2CFC                      l295 3BEC  
                    l633 2F96                      l626 3598                      l634 2FBE  
                    l665 4438                      _GIE 007F97                      _LCD 39A6  
           ___awmod@sign 007F                      wreg 000FE8              _sprintf$942 0106  
        i2sprintf@tmpval 0068            i2_SettingsLCD 452A                     ?_LCD 0001  
           ___ftdiv@cntr 008B             ___ftdiv@sign 0090                     l5122 38A6  
                   l5114 3868                     l5210 2C16                     l6002 3DBE  
                   l5124 38C4                     l5116 3872                     l5126 38CE  
                   l5118 3890                     l6022 36D0                     l5302 329A  
                   l5240 2C9A                     l5216 2C3E                     l6040 3726  
                   l6008 3DEA                     l5312 32C2                     l5250 2CCE  
                   l5242 2CA4                     l6050 373E                     l5410 42BC  
                   l5252 2CD8                     l6052 374A                     l6044 3736  
                   l5308 32B2                     l5340 3B30                     l5238 2C90  
                   l5406 42B6                     l5422 42DA                     l5342 3B38  
                   l5334 3B1A                     l6080 4084                     l5360 3B70  
                   l5352 3B58                     l5328 3B0A                     l5258 2D18  
                   l6058 3766                     l6074 3FF8                     l6066 3FC4  
                   l6082 4090                     l5418 42D2                     l5268 2D48  
                   l6068 3FD0                     l5284 3258                     l5436 4374  
                   l5428 435C                     l5356 3B62                     l5380 3E90  
                   l5372 3E76                     l5278 3230                     l5382 3E98  
                   l6510 11AC                     l6502 1166                     l5392 3EBA  
                   l5376 3E82                     l6520 11E8                     l6504 1198  
                   l5802 2F42                     l5298 328A                     l5716 4386  
                   l5396 3EC8                     l5388 3EB0                     l6620 15B4  
                   l5718 438A                     l5910 31F0                     l5902 31DC  
                   l5742 29A8                     l5734 2908                     l6702 1898  
                   l6614 158C                     l6606 1566                     l6712 4192  
                   l6632 1626                     l6608 1572                     l6560 1392  
                   l6552 1348                     l6544 12E2                     l6536 127C  
                   l6472 10AE                     l5850 2FFC                     l5842 2FE8  
                   l5762 2284                     l6650 1734                     l6642 170E  
                   l6716 41AA                     l5924 3B9E                     l5908 31E4  
                   l5780 244C                     l5756 21EC                     l6644 171A  
                   l6628 15D4                     l6564 13BA                     l6548 1308  
                   l6652 173E                     l6492 1140                     l5926 3BAA  
                   l5838 2FD8                     l5774 23B4                     l5766 22AA  
                   l6662 1772                     l6574 1412                     l6486 10F6  
                   l6494 1156                     l6478 10CA                     l5952 3534  
                   l5936 3BDE                     l5848 2FF0                     l5792 44CE  
                   l6584 147C                     l5946 350C                     l5858 3132  
                   l6690 1800                     l6674 178E                     l6578 1478  
                   l6498 1162                     l5972 3572                     l6668 178A  
                   l5990 4238                     l5886 31B0                     l5878 3180  
                   l6694 1818                     l6598 14D4                     l6696 1820  
                   l5898 31CC                     l5998 3D9C                     STR_1 1077  
                   STR_2 1084                     STR_3 109A                     STR_4 108F  
                   STR_5 109A                     _LATD 000F8C                     _LATE 000F8D  
                   u6100 38D8                     u6211 2BD6                     _PEIE 007F96  
                   u6060 385A                     u6221 2BEA                     u6310 2C6E  
                   u6250 2C08                     u6421 3218                     u6350 2CAC  
                   u6510 3B3C                     u8110 1220                     u6280 2C30  
                   u7320 31F6                     u6441 3240                     u7250 3002  
                   u6610 42C0                     u7171 2F26                     u8115 1216  
                   u6380 2CE0                     u7340 3BAE                     u7260 3120  
                   u7180 2F30                     u8220 14B4                     u8150 131A  
                   u7191 2F52                     u7520 3750                     u8160 135A  
                   u7361 34F4                     u6570 3E9C                     u8250 159A  
                   u9107 39EA                     u8340 17C6                     u8260 15AA  
                   u9117 3A12                     u7381 351C                     u7461 36B4  
                   u7470 36BE                     u7550 3FD4                     u8190 1392  
                   u9127 3A40                     u7480 36EE                     u9137 3A4A  
                   u8380 18AA                     u7485 36E6                     u9077 3D68  
                   u8390 18CA                     u9087 39AC                     u9097 39C8  
                   _TMR1 000FCE                     _flag 00E3                     _main 3D04  
           ___ftpack@arg 007A             ___ftpack@exp 007D                     _text 011F  
                   fsr2h 000FDA                     indf2 000FDF                     fsr2l 000FD9  
                   btemp 005C             i2___ftadd@f1 002C             i2___ftadd@f2 002F  
           i2___ftge@ff1 0001             i2___ftge@ff2 0004          __end_of_DataLCD 41D4  
                   prodh 000FF4                     prodl 000FF3                     start 0394  
        __end_ofi2_scale 280A             i2___ftneg@f1 0001             ___ftmul@cntr 0095  
           i2___ftmul@f1 000F             i2___ftmul@f2 0012             ___param_bank 000000  
           ___ftmul@sign 0096             i2___ftsub@f1 0038             i2___ftsub@f2 003B  
           i2___fttol@f1 0038                    ??_LCD 007A             ___fttol@exp1 00C5  
           i2___lltoft@c 0009             ___fttol@lval 00C1                    ?_main 0001  
        __end_of___awdiv 3B7A          __end_of___lbdiv 42DE          __end_of___ftadd 2D6E  
        __end_of___awmod 3ED2          __end_of___lbmod 437C          __end_of___ftdiv 35CA  
        __end_of___ftneg 4446          __end_of___lldiv 3BFE          __end_of___ftmul 32FC  
        ___awdiv@divisor 0082                    _T1CON 000FCD          __end_of___llmod 4018  
        __end_of___ftsub 4262          __end_of___fttol 3778                    _RC1IE 007CED  
                  _RC1IF 007CF5                    _LATD6 007C66                    _LATD7 007C67  
                  i2l110 0048                    i2l113 007E                    i2l114 0070  
                  i2l108 0080                    i2l243 1DC8                    i2l139 0370  
                  i2l710 406C                    i2l615 2EA4                    i2l295 3CF2  
                  i2l633 3094                    i2l634 30BC                    i2l665 4482  
        ___awdiv@counter 0084                    i2_LCD 3A52             i2__div_to_l_ 33F0  
                  _TRISD 000F95                    _TRISE 000F96             ___lltoft@exp 008A  
       __end_of_TMR1_ISR 0394           ?i2_SettingsLCD 0001               i2isdigit@c 0003  
          ___awtoft@sign 000C          __end_of_dpowers 1077               i2scale@scl 0028  
                  _scale 20D6          __end_of_isdigit 44D6            ___ftpack@sign 007E  
                  _servo 005B                    tablat 000FF5         __end_ofi2___ftge 3E62  
       __end_ofi2___wmul 446C                    ttemp5 005D                    ttemp6 0060  
                  ttemp7 0064                    status 000FD8                    wtemp8 005D  
        __end_of_sprintf 18D8            i2___lbmod@rem 0004          ___lbdiv@divisor 007E  
       __end_ofi2_fround 2BC6          ___lbdiv@counter 0080         __end_ofi2_strlen 43FA  
        __initialization 4136        i2___lldiv@divisor 0005             __end_of_main 3D7A  
      i2___lldiv@counter 000D            i2___ftmul@exp 0018              ?i2___ftpack 0001  
            ?i2_WriteLCD 0001              ?i2___lltoft 0009                   ??_main 00CC  
          ___fttol@sign1 00C0            __activetblptr 000002               i2sprintf@c 0075  
             i2sprintf@f 0049                   ?i2_LCD 0001               i2strlen@cp 0003  
       ___llmod@dividend 0087                   ?_scale 0097         ___awdiv@dividend 0080  
       __end_of___awtoft 4350                   _ANSELC 000F3A                   _ANSELD 000F3B  
                 _ANSELE 000F3C         __end_of___ftpack 38F8         __end_of_WriteLCD 452A  
              ??_DataLCD 007E         __end_of_deg2time 36A2         __end_of___lltoft 40DA  
                 i2l5150 3916                   i2l6110 2B84                   i2l6102 2AE4  
                 i2l5160 3972                   i2l5152 3920                   i2l5162 397C  
                 i2l5154 393E                   i2l6130 261C                   i2l6300 3E10  
                 i2l6124 2584                   i2l7020 00A0                   i2l5158 3954  
                 i2l6310 3E5E                   i2l6230 34B8                   i2l6214 348C  
                 i2l6206 345C                   i2l5502 3C6A                   i2l6142 274C  
                 i2l6134 2642                   i2l7006 0056                   i2l6304 3E32  
                 i2l5602 2EC0                   i2l6322 4278                   i2l6226 34A8  
                 i2l5506 3C78                   i2l5522 3EF2                   i2l7050 0142  
                 i2l6412 43DA                   i2l5612 2EF0                   i2l6332 37A4  
                 i2l6164 3CA4                   i2l6236 34C0                   i2l5700 43C8  
                 i2l6148 27E4                   i2l6414 43DE                   i2l6350 37F8  
                 i2l6166 3CB0                   i2l6238 34CC                   i2l6246 3040  
                 i2l5622 3324                   i2l6406 44EC                   i2l5542 3F38  
                 i2l5534 3F20                   i2l5526 3F00                   i2l5518 3EE6  
                 i2l7046 010C                   i2l7062 0242                   i2l5560 2DE6  
                 i2l6360 3810                   i2l6176 3CE4                   i2l5480 3C22  
                 i2l5528 3F08                   i2l7056 01C2                   i2l5554 2DBE  
                 i2l6362 381C                   i2l6354 3808                   i2l6186 340E  
                 i2l6282 30D6                   i2l5642 337E                   i2l5474 3C12  
                 i2l5538 3F2A                   i2l7066 0254                   i2l6292 30EE  
                 i2l5652 33A6                   i2l5628 334C                   i2l5582 2E38  
                 i2l6390 40E0                   i2l6294 30FA                   i2l6286 30E6  
                 i2l5646 338E                   i2l5670 42F0                   i2l5486 3C38  
                 i2l7086 02EE                   i2l5584 2E42                   i2l6368 3838  
                 i2l6384 405E                   i2l6376 402A                   i2l6392 40EC  
                 i2l5656 33B6                   i2l5488 3C40                   i2l7088 02F4  
                 i2l5594 2E76                   i2l5586 2E4C                   i2l6378 4036  
                 i2l5682 430C                   i2l5674 42F6                   i2l5498 3C60  
                 i2l6740 41E0                   i2l5596 2E80                   i2l5692 43B0  
                 i2l6820 1B06                   i2l6812 1AA0                   i2l6726 432C  
                 i2l5686 4314                   i2l6744 41F8                   i2l6920 1F28  
                 i2l6904 1DEA                   i2l6840 1BDC                   i2l6824 1B2C  
                 i2l6850 1C34                   i2l6762 1922                   i2l6770 1980  
                 i2l6754 18FA                   i2l6908 1E3A                   i2l6860 1C9E  
                 i2l6836 1BB6                   i2l6828 1B6C                   i2l6780 19C0  
                 i2l6748 18E0                   i2l6950 1F98                   i2l6926 1F3E  
                 i2l6918 1F1C                   i2l6854 1C9A                   i2l6774 198C  
                 i2l6944 1F94                   i2l6928 1F48                   i2l6768 196A  
                 i2l6970 2022                   i2l6938 1F7C                   i2l6890 1DA4  
                 i2l6874 1CF4                   i2l6882 1D84                   i2l6786 19D4  
                 i2l6778 1990                   i2l6972 2028                   i2l6884 1D8E  
                 i2l6796 1A0E                   i2l6966 200A                   i2l6896 1DCC  
                 i2l6978 209E                   _RCREG1 000FAE                ??i2_scale 0021  
       __end_of___lwtoft 44B4                   _RCSTA1 000FAB                   _OSCCON 000FD3  
                 u676_41 2D7E                   _SPBRG1 000FAF                   _TMR1IE 007CE8  
                 _TMR1IF 007CF0                   u677_41 2D92                   u775_41 3024  
                 _TMR1ON 007E68                   u777_41 3050                   u697_41 330C  
                 u699_41 3334                   u789_41 3788                   _TXSTA1 000FAC  
      __end_ofi2_DataLCD 4222             i2_scale$1140 0025         __end_of__powers_ 1028  
                 ___ftge 3D7A                   ___wmul 43FA                ??___awdiv 0084  
              ??___lbdiv 007F                ??___ftadd 00AB                ??___awmod 007E  
              ??___lbmod 007B                ??___ftdiv 0088                ??___ftneg 007D  
              ??___lldiv 0082                ??___ftmul 008E                ??___llmod 008F  
              ??___ftsub 00B7                ??___fttol 00BB                   _fround 280A  
                 clear_0 4166                   clear_1 4172         ___awdiv@quotient 0086  
        ___awmod@divisor 007C                   isa$std 000001          ___awmod@counter 007E  
                 _strlen 437C           i2___awdiv@sign 000C    ___ftmul@f3_as_product 0092  
           __pdataCOMRAM 005B                ??_isdigit 007A        __end_ofi2___awdiv 3C82  
        ??i2_SettingsLCD 0003        __end_ofi2___lbdiv 4318        __end_ofi2___ftadd 2F16  
      __end_ofi2___awmod 3F42        __end_ofi2___lbmod 43D0           i2___ftadd@exp1 0037  
         i2___ftadd@exp2 0036        __end_ofi2___ftneg 4490        __end_ofi2___lldiv 3D04  
      __end_ofi2___ftmul 33F0        __end_ofi2___llmod 407E        __end_ofi2___ftsub 42A2  
      __end_ofi2___fttol 384A           i2___ftadd@sign 0035             __mediumconst 0000  
          ??_SettingsLCD 007C         __end_of_settings 3FB0                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8           i2___awmod@sign 0006  
              ??_sprintf 0100         ___lbdiv@dividend 007F        __end_ofi2_isdigit 44F4  
        ___lbmod@divisor 007A               __accesstop 0060  __end_of__initialization 4178  
           WriteLCD@word 007C          ___lbmod@counter 007C               ___ftadd@f1 00A5  
             ___ftadd@f2 00A8               ___ftge@ff1 007A               ___ftge@ff2 007D  
          i2sprintf@flag 0064            i2sprintf@eexp 0066            i2sprintf@fval 0072  
          ___rparam_used 000001            i2sprintf@prec 0070               ___ftdiv@f1 0082  
             ___ftdiv@f2 0085               ___ftdiv@f3 008C        __end_ofi2_sprintf 20D6  
             ___ftneg@f1 007A            __end_ofi2_LCD 3AF6               ___awtoft@c 0009  
         i2___ftpack@arg 0001       i2__tdiv_to_l_@exp1 000F        i2___llmod@divisor 0012  
         i2___ftpack@exp 0004       i2__tdiv_to_l_@cntr 000E        i2___llmod@counter 0016  
     i2__tdiv_to_l_@quot 000A               ___ftmul@f1 0088               ___ftmul@f2 008B  
             ___ftsub@f1 00B1               ___ftsub@f2 00B4               ___fttol@f1 00B7  
         __pcstackCOMRAM 0001       i2___lldiv@dividend 0001             __pidataBANK0 4556  
         i2_sprintf$1141 0060                ?_TMR1_ISR 0001               ___lltoft@c 0082  
         i2___ftmul@cntr 001C            __end_of_scale 2472           i2___ftmul@sign 001D  
       ___lbdiv@quotient 0081           i2___fttol@exp1 0046               ___lwtoft@c 0009  
         i2___fttol@lval 0042                ?i2___ftge 0001                ?i2___wmul 0001  
          i2__tdiv_to_l_ 3014               __div_to_l_ 3112                  ??i2_LCD 0001  
              ?i2_fround 001E                ?i2_strlen 0001          __div_to_l_@exp1 0085  
        __div_to_l_@cntr 0084                  ??_scale 009A           i2___lltoft@exp 0011  
        __div_to_l_@quot 0080       i2___lldiv@quotient 0009                  LCD@data 007B  
             __pbssBANK0 00CE               __pbssBANK1 011F              i2sprintf@ap 0063  
            i2sprintf@sp 0047         i2__tdiv_to_l_@f1 0001         i2__tdiv_to_l_@f2 0004  
    __end_of_SettingsLCD 4510            __div_to_l_@f1 007A            __div_to_l_@f2 007D  
                ?___ftge 007A                  ?___wmul 007A               ??_TMR1_ISR 0053  
                ?_fround 0097                ?___awtoft 0009                ?___ftpack 007A  
              ?_WriteLCD 0001                ?_deg2time 0001                ?___lltoft 0082  
         ?i2__tdiv_to_l_ 0001                TMR1_ISR@d 0079               ??i2___ftge 0007  
                ?_strlen 007A                ?___lwtoft 0009               ??i2___wmul 0005  
             ??i2_fround 0021               ??i2_strlen 0003                  _DataLCD 4186  
                i2_scale 2472        __end_of__npowers_ 104F                  __Hparam 0000  
                __Lparam 0000               _incremento 00D7                ?_settings 0001  
                ___awdiv 3AF6                  ___lbdiv 42A2                  ___ftadd 2BC6  
                ___awmod 3E62                  ___lbmod 4350                  ___ftdiv 34E4  
                ___ftneg 4420                  ___lldiv 3B7A                  ___ftmul 3208  
                ___llmod 3FB0                  ___ftsub 4222                  ___fttol 36A2  
             _fround$940 009E               _fround$939 00A1             __psmallconst 1000  
              i2LCD@data 0002                  __pcinit 4136             ??i2___ftpack 0006  
           ??i2_WriteLCD 0003               ??___awtoft 000C               ??___ftpack 007F  
             ??_WriteLCD 007C                  _degrees 00D4  i2___ftmul@f3_as_product 0019  
                __ramtop 1000               ??_deg2time 00C6             ??i2___lltoft 000D  
             ??___lltoft 0086                  __ptext0 3D04                  __ptext1 10A6  
                __ptext2 20D6                  __ptext3 3E62                  __ptext4 3AF6  
                __ptext5 44B4                  __ptext6 280A                  __ptext7 4350  
                __ptext8 42A2                  __ptext9 3208               ??___lwtoft 000C  
          i2_fround$1138 0028            i2_fround$1139 0025              ?__div_to_l_ 007A  
          i2_isdigit$750 0002                  _dpowers 104F             i2fround@prec 002B  
                _isdigit 44B4         ___awmod@dividend 007A              _SettingsLCD 44F4  
                _sprintf 10A6     end_of_initialization 4178            __Lmediumconst 0000  
    i2___wmul@multiplier 0001       __end_ofi2___ftpack 39A6       __end_ofi2_WriteLCD 4556  
     __end_ofi2___lltoft 4136           i2WriteLCD@word 0003          ___lldiv@divisor 007E  
        ___lldiv@counter 0086                  postdec2 000FDD               ??_settings 007D  
                postinc0 000FEE                  postinc2 000FDE           __tdiv_to_l_@f1 007A  
         __tdiv_to_l_@f2 007D                i2_DataLCD 41D4          ??i2__tdiv_to_l_ 0007  
                strlen@s 007A            ??__tdiv_to_l_ 0080         ___lbmod@dividend 007B  
              _TRISCbits 000F94                i2___awdiv 3BFE                i2___lbdiv 42DE  
              i2___ftadd 2D6E                i2___awmod 3ED2                i2___lbmod 43A6  
              i2___ftneg 446C                i2___lldiv 3C82                i2___ftmul 32FC  
              i2___llmod 4018                i2___ftsub 4262                i2___fttol 3778  
            ___lbmod@rem 007D              ___ftdiv@exp 008F       i2___llmod@dividend 000E  
     i2___awdiv@dividend 0007          i2___ftpack@sign 0005                i2_isdigit 44D6  
            ___ftmul@exp 0091                i2_sprintf 18D8           __end_of___ftge 3DEE  
             ?i2_DataLCD 0001           __end_of___wmul 4420            __pidataCOMRAM 4558  
         __end_of_fround 29EA         i2___wmul@product 0005           __end_of_strlen 43A6  
    start_initialization 4136              __end_of_LCD 3A52       i2___awdiv@quotient 000D  
    __end_of__tdiv_to_l_ 3014    __end_ofi2_SettingsLCD 4540          i2___fttol@sign1 0041  
             ?i2___awdiv 0007               ?i2___lbdiv 0005               ?i2___ftadd 002C  
             ?i2___awmod 0001               ?i2___lbmod 0001               ?i2___ftneg 0001  
             ?i2___lldiv 0001               ?i2___ftmul 000F               ?i2___llmod 000E  
             ?i2___ftsub 0038               ?i2___fttol 0038                i2strlen@s 0001  
        ___llmod@divisor 008B          ___llmod@counter 008F       i2___lbdiv@dividend 0006  
             ?i2_isdigit 0001                 ??___ftge 0080                 ??___wmul 007E  
             ?i2_sprintf 0047              __pdataBANK0 00E3                 ??_fround 009A  
          sprintf@tmpval 010E                 ??_strlen 007C               fround@prec 00A4  
          ?i2__div_to_l_ 0001             i2sprintf@val 006C            __pcstackBANK0 0060  
          __pcstackBANK1 0100       i2___lbdiv@quotient 0008        i2SettingsLCD@word 0003  
               ?_DataLCD 0001                 ?i2_scale 001E              sprintf@flag 010A  
            sprintf@eexp 010C              sprintf@fval 0118              sprintf@prec 0116  
              __pintcode 0008            _TMR1_ISR$1137 0076                 ?___awdiv 0080  
               ?___lbdiv 007E                 ?___ftadd 00A5                 ?___awmod 007A  
               ?___lbmod 007A                 ?___ftdiv 0082                 ?___ftneg 007A  
               ?___lldiv 007A                 ?___ftmul 0088                 ?___llmod 0087  
               ?___ftsub 00B1                __npowers_ 1028                 ?___fttol 00B7  
            ??i2_DataLCD 0005              __tdiv_to_l_ 2F16           ??i2__div_to_l_ 0007  
           ??__div_to_l_ 0080              __smallconst 1000                 ?_isdigit 0001  
              _scale$941 009E             ?_SettingsLCD 0001              ??i2___awdiv 000B  
            ??i2___lbdiv 0006              ??i2___ftadd 0032              ??i2___awmod 0005  
               ?_sprintf 00C6              ??i2___lbmod 0002              ??i2___ftneg 0004  
            ??i2___lldiv 0009              ??i2___ftmul 0015              ??i2___llmod 0016  
            ??i2___ftsub 003E              ??i2___fttol 003C           ___wmul@product 007E  
               _LATDbits 000F8C                 _LATEbits 000F8D              ??i2_isdigit 0001  
     __end_of__div_to_l_ 3208                 i2u614_40 3908                 i2u704_40 42FA  
               i2u618_40 3986                 i2u680_40 2DB0                 i2u673_40 3F0C  
               i2u690_40 2E54                 i2u850_40 1A46                 i2u850_45 1A3C  
               i2u914_47 3A58                 i2u683_40 2DD8                 i2u667_40 3C44  
               i2u915_47 3A72                 i2u916_47 3A92                 i2u693_40 2E88  
               i2u861_40 1CD6                 i2u917_47 3AB8                 i2u686_40 2E16  
               i2u790_40 3792                 i2u766_40 3CB4                 i2u774_40 34D2  
               i2u854_40 1B3E                 i2u918_47 3AE4                 i2u791_40 37C2  
               i2u783_40 3100                 i2u855_40 1B7E                 i2u791_45 37BA  
               i2u919_47 3AEE                 i2u768_40 33FC                 i2u776_40 302E  
               i2u864_40 1DB2                 i2u873_40 1FD0                 i2u865_40 1DC2  
               i2u858_40 1BB6                 i2u795_40 3822                 i2u877_40 20AE  
               i2u798_40 403A                 i2u878_40 20C8                 i2u888_40 009A  
               i2u898_40 00F0                _time_high 00D1              ??i2_sprintf 004D  
               _TMR1_ISR 0008          i2__div_to_l_@f1 0001          i2__div_to_l_@f2 0004  
      ___wmul@multiplier 007A                 i2___ftge 3DEE                 i2___wmul 4446  
      i2___awdiv@divisor 0009                 i2_fround 29EA        i2___awdiv@counter 000B  
               i2_strlen 43D0       i2___awmod@dividend 0001                 __Hrparam 0000  
      i2___lbdiv@divisor 0005        i2___lbdiv@counter 0007                 __Lrparam 0000  
  i2___wmul@multiplicand 0003                 ___awtoft 4318                 ___ftpack 384A  
               _WriteLCD 4510                 _deg2time 35CA                 ___lltoft 407E  
  __end_ofi2__tdiv_to_l_ 3112              _isdigit$750 007B                 ___lwtoft 4490  
             sprintf@val 0112                 _main$937 011C                 __ptext10 2F16  
               __ptext11 3112                 __ptext20 35CA                 __ptext12 43FA  
               __ptext21 36A2                 __ptext13 407E                 __ptext22 4222  
               __ptext14 3FB0                 __ptext31 18D8                 __ptext23 2BC6  
               __ptext15 3B7A                 __ptext40 3014                 __ptext32 2472  
               __ptext24 34E4                 __ptext16 4420                 __ptext41 33F0  
               __ptext33 3ED2                 __ptext25 384A                 __ptext17 3D7A  
               __ptext50 3DEE                 __ptext42 4446                 __ptext34 3BFE  
               __ptext26 4186                 __ptext18 3F42                 __ptext51 452A  
               __ptext43 40DA                 __ptext35 44D6                 __ptext27 437C  
               __ptext19 44F4                 __ptext52 41D4                 __ptext44 4018  
               __ptext36 29EA                 __ptext28 4510                 __ptext53 43D0  
               __ptext45 3C82                 __ptext37 43A6                 __ptext29 39A6  
               __ptext54 4540                 __ptext46 3778                 __ptext38 42DE  
               __ptext55 3A52                 __ptext47 4262                 __ptext39 32FC  
               __ptext56 4490                 __ptext48 2D6E                 __ptext57 4318  
               __ptext49 446C                 __ptext58 38F8                 __powers_ 1001  
     i2___lbmod@dividend 0002     __end_ofi2__div_to_l_ 34E4                 isa$xinst 000000  
               _time_low 00CE                 _settings 3F42                 int$flags 005C  
      i2___awmod@divisor 0003        i2___awmod@counter 0005                 isdigit@c 007C  
               scale@scl 00A1                 intlevel2 0000                sprintf@ap 0109  
       __tdiv_to_l_@exp1 0088                sprintf@sp 00C6         __tdiv_to_l_@cntr 0087  
       __tdiv_to_l_@quot 0083         ___lldiv@dividend 007A        i2___lbmod@divisor 0001  
      i2___lbmod@counter 0003             ?__tdiv_to_l_ 007A                 sprintf@c 011B  
               sprintf@f 00C8         ___lldiv@quotient 0082                 strlen@cp 007C  
        SettingsLCD@word 007C        i2__div_to_l_@exp1 000C        i2__div_to_l_@cntr 000B  
      i2__div_to_l_@quot 0007  
